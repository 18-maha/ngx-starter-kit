{"version":3,"sources":["webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/progress-bar/typings/index.ngfactory.js.pre-build-optimizer.js","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/progress-bar/typings/index.d.ts.MatProgressBar.html","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/addLeadingZeros/index.js.pre-build-optimizer.js","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js.pre-build-optimizer.js","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js.pre-build-optimizer.js","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js.pre-build-optimizer.js","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js.pre-build-optimizer.js","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/format/formatters/index.js.pre-build-optimizer.js","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/format/lightFormatters/index.js.pre-build-optimizer.js","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getUTCWeek/index.js.pre-build-optimizer.js","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js.pre-build-optimizer.js","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js.pre-build-optimizer.js","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js.pre-build-optimizer.js","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js.pre-build-optimizer.js","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/format/longFormatters/index.js.pre-build-optimizer.js","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/protectedTokens/index.js.pre-build-optimizer.js","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/format/index.js.pre-build-optimizer.js","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/isValid/index.js.pre-build-optimizer.js","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/subMilliseconds/index.js.pre-build-optimizer.js","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/esm2015/progress-bar.js.pre-build-optimizer.js","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/divider/typings/index.ngfactory.js.pre-build-optimizer.js","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/addMilliseconds/index.js.pre-build-optimizer.js"],"names":["__webpack_require__","d","__webpack_exports__","RenderType_MatProgressBar","View_MatProgressBar_0","_angular_core__WEBPACK_IMPORTED_MODULE_0__","_angular_common__WEBPACK_IMPORTED_MODULE_2__","encapsulation","styles","data","_l","_primaryValueBar","ngStyle","_ck","_v","_co","component","_bufferTransform","_primaryTransform","progressbarId","_rectangleFillValue","addLeadingZeros","number","targetLength","sign","output","Math","abs","toString","length","startOfUTCISOWeek","dirtyDate","arguments","TypeError","date","Object","toDate","day","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","getUTCISOWeekYear","year","getUTCFullYear","fourthOfJanuaryOfNextYear","Date","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","startOfUTCWeek","dirtyOptions","options","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","toInteger","RangeError","getUTCWeekYear","localeFirstWeekContainsDate","firstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","formatTimezoneShort","offset","dirtyDelimiter","absOffset","hours","floor","minutes","String","delimiter","formatTimezoneWithOptionalMinutes","formatTimezone","format_formatters","G","token","localize","era","width","y","signedYear","ordinalNumber","unit","lightFormatters","Y","signedWeekYear","weekYear","R","u","Q","quarter","ceil","getUTCMonth","context","q","M","month","L","w","week","firstWeek","startOfUTCWeekYear","round","getUTCWeek","I","isoWeek","fourthOfJanuary","startOfUTCISOWeekYear","getUTCISOWeek","D","dayOfYear","timestamp","setUTCMonth","startOfYearTimestamp","getUTCDayOfYear","E","dayOfWeek","e","localDayOfWeek","c","i","isoDayOfWeek","a","dayPeriodEnumValue","getUTCHours","dayPeriod","b","B","h","H","K","k","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","pow","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","x","O","z","t","T","dateLongFormatter","pattern","formatLong","timeLongFormatter","time","format_longFormatters","p","P","dateTimeFormat","matchResult","match","datePattern","timePattern","dateTime","replace","protectedTokens","format","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","dirtyFormatStr","formatStr","en_US","originalDate","isNaN","isValid","utcDate","dirtyAmount","amount","addMilliseconds","subMilliseconds","getTimezoneOffsetInMilliseconds","formatterOptions","map","substring","firstCharacter","longFormatter","join","formatter","awareOfUnicodeTokens","indexOf","throwProtectedError","MatProgressBarModule","MAT_PROGRESS_BAR_LOCATION","MatProgressBar","rxjs__WEBPACK_IMPORTED_MODULE_1__","rxjs__WEBPACK_IMPORTED_MODULE_2__","rxjs_operators__WEBPACK_IMPORTED_MODULE_3__","_angular_material_core__WEBPACK_IMPORTED_MODULE_4__","_angular_common__WEBPACK_IMPORTED_MODULE_5__","MatProgressBarBase","[object Object]","_elementRef","this","_MatProgressBarMixinBase","providedIn","factory","_document","_location","location","getPathname","pathname","search","_ngZone","_animationMode","super","_isNoopAnimation","_value","_bufferValue","animationEnd","_animationEndSubscription","EMPTY","mode","path","split","value","v","clamp","_emitAnimationEnd","bufferValue","transform","runOutsideAngular","element","nativeElement","pipe","target","subscribe","run","unsubscribe","next","min","max","RenderType_MatDivider","View_MatDivider_0","_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__","_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"7-es2015.7be895138a031cb17018.js","sourcesContent":["/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/progress-bar\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/cdk/bidi\";\nimport * as i4 from \"@angular/material/core\";\nimport * as i5 from \"@angular/platform-browser\";\nimport * as i6 from \"@angular/platform-browser/animations\";\nvar MatProgressBarModuleNgFactory = i0.ɵcmf(i1.MatProgressBarModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID, [2, i2.ɵangular_packages_common_common_a]]), i0.ɵmpd(1073742336, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(1073742336, i3.BidiModule, i3.BidiModule, []), i0.ɵmpd(1073742336, i4.MatCommonModule, i4.MatCommonModule, [[2, i4.MATERIAL_SANITY_CHECKS], [2, i5.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i1.MatProgressBarModule, i1.MatProgressBarModule, [])]); });\nexport { MatProgressBarModuleNgFactory as MatProgressBarModuleNgFactory };\nvar styles_MatProgressBar = [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}@media (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-background{display:none}}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}@media (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}@media (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:'';display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2s infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2s infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after{animation:none;transition:none}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(.5,0,.70173,.49582);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(.30244,.38135,.55,.95635);transform:translateX(83.67142%)}100%{transform:translateX(200.61106%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(.08)}36.65%{animation-timing-function:cubic-bezier(.33473,.12482,.78584,1);transform:scaleX(.08)}69.15%{animation-timing-function:cubic-bezier(.06,.11,.6,1);transform:scaleX(.66148)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:translateX(37.65191%)}48.35%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:translateX(84.38617%)}100%{transform:translateX(160.27778%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:scaleX(.08)}19.15%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:scaleX(.4571)}44.15%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:scaleX(.72796)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\"];\nvar RenderType_MatProgressBar = i0.ɵcrt({ encapsulation: 2, styles: styles_MatProgressBar, data: {} });\nexport { RenderType_MatProgressBar as RenderType_MatProgressBar };\nexport function View_MatProgressBar_0(_l) { return i0.ɵvid(2, [i0.ɵqud(671088640, 1, { _primaryValueBar: 0 }), (_l()(), i0.ɵeld(1, 0, null, null, 4, \":svg:svg\", [[\"class\", \"mat-progress-bar-background mat-progress-bar-element\"], [\"focusable\", \"false\"], [\"height\", \"4\"], [\"width\", \"100%\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 2, \":svg:defs\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 1, \":svg:pattern\", [[\"height\", \"4\"], [\"patternUnits\", \"userSpaceOnUse\"], [\"width\", \"8\"], [\"x\", \"4\"], [\"y\", \"0\"]], [[8, \"id\", 0]], null, null, null, null)), (_l()(), i0.ɵeld(4, 0, null, null, 0, \":svg:circle\", [[\"cx\", \"2\"], [\"cy\", \"2\"], [\"r\", \"2\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(5, 0, null, null, 0, \":svg:rect\", [[\"height\", \"100%\"], [\"width\", \"100%\"]], [[1, \"fill\", 0]], null, null, null, null)), (_l()(), i0.ɵeld(6, 0, null, null, 2, \"div\", [[\"class\", \"mat-progress-bar-buffer mat-progress-bar-element\"]], null, null, null, null, null)), i0.ɵprd(512, null, i2.ɵNgStyleImpl, i2.ɵNgStyleR2Impl, [i0.ElementRef, i0.KeyValueDiffers, i0.Renderer2]), i0.ɵdid(8, 278528, null, 0, i2.NgStyle, [i2.ɵNgStyleImpl], { ngStyle: [0, \"ngStyle\"] }, null), (_l()(), i0.ɵeld(9, 0, [[1, 0], [\"primaryValueBar\", 1]], null, 2, \"div\", [[\"class\", \"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\"]], null, null, null, null, null)), i0.ɵprd(512, null, i2.ɵNgStyleImpl, i2.ɵNgStyleR2Impl, [i0.ElementRef, i0.KeyValueDiffers, i0.Renderer2]), i0.ɵdid(11, 278528, null, 0, i2.NgStyle, [i2.ɵNgStyleImpl], { ngStyle: [0, \"ngStyle\"] }, null), (_l()(), i0.ɵeld(12, 0, null, null, 0, \"div\", [[\"class\", \"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\"]], null, null, null, null, null))], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co._bufferTransform(); _ck(_v, 8, 0, currVal_2); var currVal_3 = _co._primaryTransform(); _ck(_v, 11, 0, currVal_3); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.progressbarId; _ck(_v, 3, 0, currVal_0); var currVal_1 = _co._rectangleFillValue; _ck(_v, 5, 0, currVal_1); }); }\nexport function View_MatProgressBar_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-progress-bar\", [[\"aria-valuemax\", \"100\"], [\"aria-valuemin\", \"0\"], [\"class\", \"mat-progress-bar\"], [\"role\", \"progressbar\"]], [[1, \"aria-valuenow\", 0], [1, \"mode\", 0], [2, \"_mat-animation-noopable\", null]], null, null, View_MatProgressBar_0, RenderType_MatProgressBar)), i0.ɵdid(1, 4374528, null, 0, i1.MatProgressBar, [i0.ElementRef, i0.NgZone, [2, i6.ANIMATION_MODULE_TYPE], [2, i1.MAT_PROGRESS_BAR_LOCATION]], null, null)], null, function (_ck, _v) { var currVal_0 = (((i0.ɵnov(_v, 1).mode === \"indeterminate\") || (i0.ɵnov(_v, 1).mode === \"query\")) ? null : i0.ɵnov(_v, 1).value); var currVal_1 = i0.ɵnov(_v, 1).mode; var currVal_2 = i0.ɵnov(_v, 1)._isNoopAnimation; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }\nvar MatProgressBarNgFactory = i0.ɵccf(\"mat-progress-bar\", i1.MatProgressBar, View_MatProgressBar_Host_0, { color: \"color\", value: \"value\", bufferValue: \"bufferValue\", mode: \"mode\" }, { animationEnd: \"animationEnd\" }, []);\nexport { MatProgressBarNgFactory as MatProgressBarNgFactory };\n","<svg width=\"100%\" height=\"4\" focusable=\"false\" class=\"mat-progress-bar-background mat-progress-bar-element\"><defs><pattern [id]=\"progressbarId\" x=\"4\" y=\"0\" width=\"8\" height=\"4\" patternUnits=\"userSpaceOnUse\"><circle cx=\"2\" cy=\"2\" r=\"2\"/></pattern></defs><rect [attr.fill]=\"_rectangleFillValue\" width=\"100%\" height=\"100%\"/></svg><div class=\"mat-progress-bar-buffer mat-progress-bar-element\" [ngStyle]=\"_bufferTransform()\"></div><div class=\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\" [ngStyle]=\"_primaryTransform()\" #primaryValueBar></div><div class=\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\"></div>","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : ''\n  var output = Math.abs(number).toString()\n  while (output.length < targetLength) {\n    output = '0' + output\n  }\n  return sign + output\n}\n","import toDate from '../../toDate/index.js'\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nexport default function startOfUTCISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError(\n      '1 argument required, but only ' + arguments.length + ' present'\n    )\n  }\n\n  var weekStartsOn = 1\n\n  var date = toDate(dirtyDate)\n  var day = date.getUTCDay()\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn\n\n  date.setUTCDate(date.getUTCDate() - diff)\n  date.setUTCHours(0, 0, 0, 0)\n  return date\n}\n","import toDate from '../../toDate/index.js'\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js'\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nexport default function getUTCISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError(\n      '1 argument required, but only ' + arguments.length + ' present'\n    )\n  }\n\n  var date = toDate(dirtyDate)\n  var year = date.getUTCFullYear()\n\n  var fourthOfJanuaryOfNextYear = new Date(0)\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4)\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0)\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear)\n\n  var fourthOfJanuaryOfThisYear = new Date(0)\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4)\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0)\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear)\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year\n  } else {\n    return year - 1\n  }\n}\n","import toInteger from '../toInteger/index.js'\nimport toDate from '../../toDate/index.js'\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError(\n      '1 argument required, but only ' + arguments.length + ' present'\n    )\n  }\n\n  var options = dirtyOptions || {}\n  var locale = options.locale\n  var localeWeekStartsOn =\n    locale && locale.options && locale.options.weekStartsOn\n  var defaultWeekStartsOn =\n    localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn)\n  var weekStartsOn =\n    options.weekStartsOn == null\n      ? defaultWeekStartsOn\n      : toInteger(options.weekStartsOn)\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively')\n  }\n\n  var date = toDate(dirtyDate)\n  var day = date.getUTCDay()\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn\n\n  date.setUTCDate(date.getUTCDate() - diff)\n  date.setUTCHours(0, 0, 0, 0)\n  return date\n}\n","import toInteger from '../toInteger/index.js'\nimport toDate from '../../toDate/index.js'\nimport startOfUTCWeek from '../startOfUTCWeek/index.js'\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nexport default function getUTCWeekYear (dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions)\n  var year = date.getUTCFullYear()\n\n  var options = dirtyOptions || {}\n  var locale = options.locale\n  var localeFirstWeekContainsDate = locale &&\n    locale.options &&\n    locale.options.firstWeekContainsDate\n  var defaultFirstWeekContainsDate =\n    localeFirstWeekContainsDate == null\n      ? 1\n      : toInteger(localeFirstWeekContainsDate)\n  var firstWeekContainsDate =\n    options.firstWeekContainsDate == null\n      ? defaultFirstWeekContainsDate\n      : toInteger(options.firstWeekContainsDate)\n\n  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively')\n  }\n\n  var firstWeekOfNextYear = new Date(0)\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate)\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0)\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions)\n\n  var firstWeekOfThisYear = new Date(0)\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate)\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0)\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions)\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year\n  } else {\n    return year - 1\n  }\n}\n","import lightFormatters from '../lightFormatters/index.js'\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js'\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js'\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js'\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js'\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js'\nimport addLeadingZeros from '../../addLeadingZeros/index.js'\n\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n}\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, { width: 'abbreviated' })\n      // A, B\n      case 'GGGGG':\n        return localize.era(era, { width: 'narrow' })\n      // Anno Domini, Before Christ\n      case 'GGGG':\n      default:\n        return localize.era(era, { width: 'wide' })\n    }\n  },\n\n  // Year\n  y: function(date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear()\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      var year = signedYear > 0 ? signedYear : 1 - signedYear\n      return localize.ordinalNumber(year, { unit: 'year' })\n    }\n\n    return lightFormatters.y(date, token)\n  },\n\n  // Local week-numbering year\n  Y: function(date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options)\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear\n\n    // Two digit year\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100\n      return addLeadingZeros(twoDigitYear, 2)\n    }\n\n    // Ordinal number\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, { unit: 'year' })\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length)\n  },\n\n  // ISO week-numbering year\n  R: function(date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date)\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length)\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function(date, token) {\n    var year = date.getUTCFullYear()\n    return addLeadingZeros(year, token.length)\n  },\n\n  // Quarter\n  Q: function(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3)\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter)\n      // 01, 02, 03, 04\n      case 'QQ':\n        return addLeadingZeros(quarter, 2)\n      // 1st, 2nd, 3rd, 4th\n      case 'Qo':\n        return localize.ordinalNumber(quarter, { unit: 'quarter' })\n      // Q1, Q2, Q3, Q4\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        })\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        })\n      // 1st quarter, 2nd quarter, ...\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        })\n    }\n  },\n\n  // Stand-alone quarter\n  q: function(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3)\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter)\n      // 01, 02, 03, 04\n      case 'qq':\n        return addLeadingZeros(quarter, 2)\n      // 1st, 2nd, 3rd, 4th\n      case 'qo':\n        return localize.ordinalNumber(quarter, { unit: 'quarter' })\n      // Q1, Q2, Q3, Q4\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        })\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        })\n      // 1st quarter, 2nd quarter, ...\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        })\n    }\n  },\n\n  // Month\n  M: function(date, token, localize) {\n    var month = date.getUTCMonth()\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token)\n      // 1st, 2nd, ..., 12th\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, { unit: 'month' })\n      // Jan, Feb, ..., Dec\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        })\n      // J, F, ..., D\n      case 'MMMMM':\n        return localize.month(month, { width: 'narrow', context: 'formatting' })\n      // January, February, ..., December\n      case 'MMMM':\n      default:\n        return localize.month(month, { width: 'wide', context: 'formatting' })\n    }\n  },\n\n  // Stand-alone month\n  L: function(date, token, localize) {\n    var month = date.getUTCMonth()\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1)\n      // 01, 02, ..., 12\n      case 'LL':\n        return addLeadingZeros(month + 1, 2)\n      // 1st, 2nd, ..., 12th\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, { unit: 'month' })\n      // Jan, Feb, ..., Dec\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        })\n      // J, F, ..., D\n      case 'LLLLL':\n        return localize.month(month, { width: 'narrow', context: 'standalone' })\n      // January, February, ..., December\n      case 'LLLL':\n      default:\n        return localize.month(month, { width: 'wide', context: 'standalone' })\n    }\n  },\n\n  // Local week of year\n  w: function(date, token, localize, options) {\n    var week = getUTCWeek(date, options)\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, { unit: 'week' })\n    }\n\n    return addLeadingZeros(week, token.length)\n  },\n\n  // ISO week of year\n  I: function(date, token, localize) {\n    var isoWeek = getUTCISOWeek(date)\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, { unit: 'week' })\n    }\n\n    return addLeadingZeros(isoWeek, token.length)\n  },\n\n  // Day of the month\n  d: function(date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), { unit: 'date' })\n    }\n\n    return lightFormatters.d(date, token)\n  },\n\n  // Day of year\n  D: function(date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date)\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, { unit: 'dayOfYear' })\n    }\n\n    return addLeadingZeros(dayOfYear, token.length)\n  },\n\n  // Day of week\n  E: function(date, token, localize) {\n    var dayOfWeek = date.getUTCDay()\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        })\n      // T\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        })\n      // Tu\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        })\n      // Tuesday\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, { width: 'wide', context: 'formatting' })\n    }\n  },\n\n  // Local day of week\n  e: function(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay()\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek)\n      // Padded numerical value\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2)\n      // 1st, 2nd, ..., 7th\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, { unit: 'day' })\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        })\n      // T\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        })\n      // Tu\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        })\n      // Tuesday\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, { width: 'wide', context: 'formatting' })\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay()\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek)\n      // Padded numerical value\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length)\n      // 1st, 2nd, ..., 7th\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, { unit: 'day' })\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        })\n      // T\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        })\n      // Tu\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        })\n      // Tuesday\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, { width: 'wide', context: 'standalone' })\n    }\n  },\n\n  // ISO day of week\n  i: function(date, token, localize) {\n    var dayOfWeek = date.getUTCDay()\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek)\n      // 02\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length)\n      // 2nd\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, { unit: 'day' })\n      // Tue\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        })\n      // T\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        })\n      // Tu\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        })\n      // Tuesday\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, { width: 'wide', context: 'formatting' })\n    }\n  },\n\n  // AM or PM\n  a: function(date, token, localize) {\n    var hours = date.getUTCHours()\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am'\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        })\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        })\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        })\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function(date, token, localize) {\n    var hours = date.getUTCHours()\n    var dayPeriodEnumValue\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am'\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        })\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        })\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        })\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function(date, token, localize) {\n    var hours = date.getUTCHours()\n    var dayPeriodEnumValue\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        })\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        })\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        })\n    }\n  },\n\n  // Hour [1-12]\n  h: function(date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12\n      if (hours === 0) hours = 12\n      return localize.ordinalNumber(hours, { unit: 'hour' })\n    }\n\n    return lightFormatters.h(date, token)\n  },\n\n  // Hour [0-23]\n  H: function(date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), { unit: 'hour' })\n    }\n\n    return lightFormatters.H(date, token)\n  },\n\n  // Hour [0-11]\n  K: function(date, token, localize) {\n    var hours = date.getUTCHours() % 12\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, { unit: 'hour' })\n    }\n\n    return addLeadingZeros(hours, token.length)\n  },\n\n  // Hour [1-24]\n  k: function(date, token, localize) {\n    var hours = date.getUTCHours()\n    if (hours === 0) hours = 24\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, { unit: 'hour' })\n    }\n\n    return addLeadingZeros(hours, token.length)\n  },\n\n  // Minute\n  m: function(date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), { unit: 'minute' })\n    }\n\n    return lightFormatters.m(date, token)\n  },\n\n  // Second\n  s: function(date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), { unit: 'second' })\n    }\n\n    return lightFormatters.s(date, token)\n  },\n\n  // Fraction of second\n  S: function(date, token) {\n    var numberOfDigits = token.length\n    var milliseconds = date.getUTCMilliseconds()\n    var fractionalSeconds = Math.floor(\n      milliseconds * Math.pow(10, numberOfDigits - 3)\n    )\n    return addLeadingZeros(fractionalSeconds, numberOfDigits)\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function(date, token, _localize, options) {\n    var originalDate = options._originalDate || date\n    var timezoneOffset = originalDate.getTimezoneOffset()\n\n    if (timezoneOffset === 0) {\n      return 'Z'\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset)\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case 'XXXX':\n      case 'XX': // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset)\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ':')\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function(date, token, _localize, options) {\n    var originalDate = options._originalDate || date\n    var timezoneOffset = originalDate.getTimezoneOffset()\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset)\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case 'xxxx':\n      case 'xx': // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset)\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ':')\n    }\n  },\n\n  // Timezone (GMT)\n  O: function(date, token, _localize, options) {\n    var originalDate = options._originalDate || date\n    var timezoneOffset = originalDate.getTimezoneOffset()\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':')\n      // Long\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':')\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function(date, token, _localize, options) {\n    var originalDate = options._originalDate || date\n    var timezoneOffset = originalDate.getTimezoneOffset()\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':')\n      // Long\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':')\n    }\n  },\n\n  // Seconds timestamp\n  t: function(date, token, _localize, options) {\n    var originalDate = options._originalDate || date\n    var timestamp = Math.floor(originalDate.getTime() / 1000)\n    return addLeadingZeros(timestamp, token.length)\n  },\n\n  // Milliseconds timestamp\n  T: function(date, token, _localize, options) {\n    var originalDate = options._originalDate || date\n    var timestamp = originalDate.getTime()\n    return addLeadingZeros(timestamp, token.length)\n  }\n}\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+'\n  var absOffset = Math.abs(offset)\n  var hours = Math.floor(absOffset / 60)\n  var minutes = absOffset % 60\n  if (minutes === 0) {\n    return sign + String(hours)\n  }\n  var delimiter = dirtyDelimiter || ''\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2)\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+'\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2)\n  }\n  return formatTimezone(offset, dirtyDelimiter)\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || ''\n  var sign = offset > 0 ? '-' : '+'\n  var absOffset = Math.abs(offset)\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2)\n  var minutes = addLeadingZeros(absOffset % 60, 2)\n  return sign + hours + delimiter + minutes\n}\n\nexport default formatters\n","import addLeadingZeros from '../../addLeadingZeros/index.js'\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Year\n  y: function(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    var signedYear = date.getUTCFullYear()\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    var year = signedYear > 0 ? signedYear : 1 - signedYear\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length)\n  },\n\n  // Month\n  M: function(date, token) {\n    var month = date.getUTCMonth()\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2)\n  },\n\n  // Day of the month\n  d: function(date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length)\n  },\n\n  // AM or PM\n  a: function(date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am'\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return dayPeriodEnumValue.toUpperCase()\n      case 'aaaaa':\n        return dayPeriodEnumValue[0]\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.'\n    }\n  },\n\n  // Hour [1-12]\n  h: function(date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length)\n  },\n\n  // Hour [0-23]\n  H: function(date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length)\n  },\n\n  // Minute\n  m: function(date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length)\n  },\n\n  // Second\n  s: function(date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length)\n  }\n}\n\nexport default formatters\n","import toDate from '../../toDate/index.js'\nimport startOfUTCWeek from '../startOfUTCWeek/index.js'\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js'\n\nvar MILLISECONDS_IN_WEEK = 604800000\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nexport default function getUTCWeek(dirtyDate, options) {\n  if (arguments.length < 1) {\n    throw new TypeError(\n      '1 argument required, but only ' + arguments.length + ' present'\n    )\n  }\n\n  var date = toDate(dirtyDate)\n  var diff =\n    startOfUTCWeek(date, options).getTime() -\n    startOfUTCWeekYear(date, options).getTime()\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1\n}\n","import toInteger from '../toInteger/index.js'\nimport getUTCWeekYear from '../getUTCWeekYear/index.js'\nimport startOfUTCWeek from '../startOfUTCWeek/index.js'\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nexport default function startOfUTCWeekYear (dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')\n  }\n\n  var options = dirtyOptions || {}\n  var locale = options.locale\n  var localeFirstWeekContainsDate = locale &&\n    locale.options &&\n    locale.options.firstWeekContainsDate\n  var defaultFirstWeekContainsDate =\n    localeFirstWeekContainsDate == null\n      ? 1\n      : toInteger(localeFirstWeekContainsDate)\n  var firstWeekContainsDate =\n    options.firstWeekContainsDate == null\n      ? defaultFirstWeekContainsDate\n      : toInteger(options.firstWeekContainsDate)\n\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions)\n  var firstWeek = new Date(0)\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate)\n  firstWeek.setUTCHours(0, 0, 0, 0)\n  var date = startOfUTCWeek(firstWeek, dirtyOptions)\n  return date\n}\n","import toDate from '../../toDate/index.js'\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js'\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js'\n\nvar MILLISECONDS_IN_WEEK = 604800000\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nexport default function getUTCISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError(\n      '1 argument required, but only ' + arguments.length + ' present'\n    )\n  }\n\n  var date = toDate(dirtyDate)\n  var diff =\n    startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime()\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1\n}\n","import getUTCISOWeekYear from '../getUTCISOWeekYear/index.js'\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js'\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError(\n      '1 argument required, but only ' + arguments.length + ' present'\n    )\n  }\n\n  var year = getUTCISOWeekYear(dirtyDate)\n  var fourthOfJanuary = new Date(0)\n  fourthOfJanuary.setUTCFullYear(year, 0, 4)\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0)\n  var date = startOfUTCISOWeek(fourthOfJanuary)\n  return date\n}\n","import toDate from '../../toDate/index.js'\n\nvar MILLISECONDS_IN_DAY = 86400000\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nexport default function getUTCDayOfYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError(\n      '1 argument required, but only ' + arguments.length + ' present'\n    )\n  }\n\n  var date = toDate(dirtyDate)\n  var timestamp = date.getTime()\n  date.setUTCMonth(0, 1)\n  date.setUTCHours(0, 0, 0, 0)\n  var startOfYearTimestamp = date.getTime()\n  var difference = timestamp - startOfYearTimestamp\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1\n}\n","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({ width: 'short' })\n    case 'PP':\n      return formatLong.date({ width: 'medium' })\n    case 'PPP':\n      return formatLong.date({ width: 'long' })\n    case 'PPPP':\n    default:\n      return formatLong.date({ width: 'full' })\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({ width: 'short' })\n    case 'pp':\n      return formatLong.time({ width: 'medium' })\n    case 'ppp':\n      return formatLong.time({ width: 'long' })\n    case 'pppp':\n    default:\n      return formatLong.time({ width: 'full' })\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/)\n  var datePattern = matchResult[1]\n  var timePattern = matchResult[2]\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong)\n  }\n\n  var dateTimeFormat\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({ width: 'short' })\n      break\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({ width: 'medium' })\n      break\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({ width: 'long' })\n      break\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: 'full' })\n      break\n  }\n\n  return dateTimeFormat\n    .replace('{{date}}', dateLongFormatter(datePattern, formatLong))\n    .replace('{{time}}', timeLongFormatter(timePattern, formatLong))\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n}\n\nexport default longFormatters\n","export var protectedTokens = ['D', 'DD', 'YY', 'YYYY']\n\nexport function isProtectedToken(token) {\n  return protectedTokens.indexOf(token) !== -1\n}\n\nexport function throwProtectedError(token) {\n  throw new RangeError(\n    '`options.awareOfUnicodeTokens` must be set to `true` to use `' +\n      token +\n      '` token; see: https://git.io/fxCyr'\n  )\n}\n","import toInteger from '../_lib/toInteger/index.js'\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js'\nimport toDate from '../toDate/index.js'\nimport isValid from '../isValid/index.js'\nimport defaultLocale from '../locale/en-US/index.js'\nimport formatters from '../_lib/format/formatters/index.js'\nimport longFormatters from '../_lib/format/longFormatters/index.js'\nimport subMilliseconds from '../subMilliseconds/index.js'\nimport {\n  isProtectedToken,\n  throwProtectedError\n} from '../_lib/protectedTokens/index.js'\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g\n\nvar escapedStringRegExp = /^'(.*?)'?$/\nvar doubleQuoteRegExp = /''/g\n\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 8     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 8     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. These tokens are often confused with others. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {Boolean} [options.awareOfUnicodeTokens=false] - if true, allows usage of Unicode tokens causes confusion:\n *   - Some of the day of year tokens (`D`, `DD`) that are confused with the day of month tokens (`d`, `dd`).\n *   - Some of the local week-numbering year tokens (`YY`, `YYYY`) that are confused with the calendar year tokens (`yy`, `yyyy`).\n *   See: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.awareOfUnicodeTokens` must be set to `true` to use `XX` token; see: https://git.io/fxCyr\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError(\n      '2 arguments required, but only ' + arguments.length + ' present'\n    )\n  }\n\n  var formatStr = String(dirtyFormatStr)\n  var options = dirtyOptions || {}\n\n  var locale = options.locale || defaultLocale\n\n  var localeFirstWeekContainsDate =\n    locale.options && locale.options.firstWeekContainsDate\n  var defaultFirstWeekContainsDate =\n    localeFirstWeekContainsDate == null\n      ? 1\n      : toInteger(localeFirstWeekContainsDate)\n  var firstWeekContainsDate =\n    options.firstWeekContainsDate == null\n      ? defaultFirstWeekContainsDate\n      : toInteger(options.firstWeekContainsDate)\n\n  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError(\n      'firstWeekContainsDate must be between 1 and 7 inclusively'\n    )\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn\n  var defaultWeekStartsOn =\n    localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn)\n  var weekStartsOn =\n    options.weekStartsOn == null\n      ? defaultWeekStartsOn\n      : toInteger(options.weekStartsOn)\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively')\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property')\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property')\n  }\n\n  var originalDate = toDate(dirtyDate)\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value')\n  }\n\n  // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate)\n  var utcDate = subMilliseconds(originalDate, timezoneOffset)\n\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  }\n\n  var result = formatStr\n    .match(longFormattingTokensRegExp)\n    .map(function(substring) {\n      var firstCharacter = substring[0]\n      if (firstCharacter === 'p' || firstCharacter === 'P') {\n        var longFormatter = longFormatters[firstCharacter]\n        return longFormatter(substring, locale.formatLong, formatterOptions)\n      }\n      return substring\n    })\n    .join('')\n    .match(formattingTokensRegExp)\n    .map(function(substring) {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return \"'\"\n      }\n\n      var firstCharacter = substring[0]\n      if (firstCharacter === \"'\") {\n        return cleanEscapedString(substring)\n      }\n\n      var formatter = formatters[firstCharacter]\n      if (formatter) {\n        if (!options.awareOfUnicodeTokens && isProtectedToken(substring)) {\n          throwProtectedError(substring)\n        }\n        return formatter(utcDate, substring, locale.localize, formatterOptions)\n      }\n\n      return substring\n    })\n    .join('')\n\n  return result\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\")\n}\n","import toDate from '../toDate/index.js'\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `true`        |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\nexport default function isValid(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError(\n      '1 argument required, but only ' + arguments.length + ' present'\n    )\n  }\n\n  var date = toDate(dirtyDate)\n  return !isNaN(date)\n}\n","import toInteger from '../_lib/toInteger/index.js'\nimport addMilliseconds from '../addMilliseconds/index.js'\n\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError(\n      '2 arguments required, but only ' + arguments.length + ' present'\n    )\n  }\n\n  var amount = toInteger(dirtyAmount)\n  return addMilliseconds(dirtyDate, -amount)\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Component, ChangeDetectionStrategy, ElementRef, Inject, Input, Output, EventEmitter, Optional, NgZone, ViewEncapsulation, ViewChild, InjectionToken, inject, NgModule } from '@angular/core';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatProgressBar.\n/**\n * \\@docs-private\n */\nclass MatProgressBarBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/** @type {?} */\nconst _MatProgressBarMixinBase = mixinColor(MatProgressBarBase, 'primary');\n/**\n * Injection token used to provide the current location to `MatProgressBar`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_PROGRESS_BAR_LOCATION = new InjectionToken('mat-progress-bar-location', { providedIn: 'root', factory: MAT_PROGRESS_BAR_LOCATION_FACTORY });\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_PROGRESS_BAR_LOCATION_FACTORY() {\n    /** @type {?} */\n    const _document = inject(DOCUMENT);\n    /** @type {?} */\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: (/**\n         * @return {?}\n         */\n        () => _location ? (_location.pathname + _location.search) : '')\n    };\n}\n/**\n * Counter used to generate unique IDs for progress bars.\n * @type {?}\n */\nlet progressbarId = 0;\n/**\n * `<mat-progress-bar>` component.\n */\nclass MatProgressBar extends _MatProgressBarMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?=} _animationMode\n     * @param {?=} location\n     */\n    constructor(_elementRef, _ngZone, _animationMode, \n    /**\n     * @deprecated `location` parameter to be made required.\n     * @breaking-change 8.0.0\n     */\n    location) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        /**\n         * Flag that indicates whether NoopAnimations mode is set to true.\n         */\n        this._isNoopAnimation = false;\n        this._value = 0;\n        this._bufferValue = 0;\n        /**\n         * Event emitted when animation of the primary progress bar completes. This event will not\n         * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n         * animations (indeterminate and query).\n         */\n        this.animationEnd = new EventEmitter();\n        /**\n         * Reference to animation end subscription to be unsubscribed on destroy.\n         */\n        this._animationEndSubscription = Subscription.EMPTY;\n        /**\n         * Mode of the progress bar.\n         *\n         * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n         * 'determinate'.\n         * Mirrored to mode attribute.\n         */\n        this.mode = 'determinate';\n        /**\n         * ID of the progress bar.\n         */\n        this.progressbarId = `mat-progress-bar-${progressbarId++}`;\n        // We need to prefix the SVG reference with the current path, otherwise they won't work\n        // in Safari if the page has a `<base>` tag. Note that we need quotes inside the `url()`,\n        // because named route URLs can contain parentheses (see #12338). Also we don't use since\n        // we can't tell the difference between whether\n        // the consumer is using the hash location strategy or not, because `Location` normalizes\n        // both `/#/foo/bar` and `/foo/bar` to the same thing.\n        /** @type {?} */\n        const path = location ? location.getPathname().split('#')[0] : '';\n        this._rectangleFillValue = `url('${path}#${this.progressbarId}')`;\n        this._isNoopAnimation = _animationMode === 'NoopAnimations';\n    }\n    /**\n     * Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set value(v) {\n        this._value = clamp(v || 0);\n        // When noop animation is set to true, trigger animationEnd directly.\n        if (this._isNoopAnimation) {\n            this._emitAnimationEnd();\n        }\n    }\n    /**\n     * Buffer value of the progress bar. Defaults to zero.\n     * @return {?}\n     */\n    get bufferValue() { return this._bufferValue; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set bufferValue(v) { this._bufferValue = clamp(v || 0); }\n    /**\n     * Gets the current transform value for the progress bar's primary indicator.\n     * @return {?}\n     */\n    _primaryTransform() {\n        /** @type {?} */\n        const scale = this.value / 100;\n        return { transform: `scaleX(${scale})` };\n    }\n    /**\n     * Gets the current transform value for the progress bar's buffer indicator. Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     * @return {?}\n     */\n    _bufferTransform() {\n        if (this.mode === 'buffer') {\n            /** @type {?} */\n            const scale = this.bufferValue / 100;\n            return { transform: `scaleX(${scale})` };\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!this._isNoopAnimation) {\n            // Run outside angular so change detection didn't get triggered on every transition end\n            // instead only on the animation that we care about (primary value bar's transitionend)\n            this._ngZone.runOutsideAngular(((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const element = this._primaryValueBar.nativeElement;\n                this._animationEndSubscription =\n                    ((/** @type {?} */ (fromEvent(element, 'transitionend'))))\n                        .pipe(filter(((/**\n                     * @param {?} e\n                     * @return {?}\n                     */\n                    (e) => e.target === element))))\n                        .subscribe((/**\n                     * @return {?}\n                     */\n                    () => this._ngZone.run((/**\n                     * @return {?}\n                     */\n                    () => this._emitAnimationEnd()))));\n            })));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._animationEndSubscription.unsubscribe();\n    }\n    /**\n     * Emit an animationEnd event if in determinate or buffer mode.\n     * @private\n     * @return {?}\n     */\n    _emitAnimationEnd() {\n        if (this.mode === 'determinate' || this.mode === 'buffer') {\n            this.animationEnd.next({ value: this.value });\n        }\n    }\n}\nMatProgressBar.decorators = [\n    { type: Component, args: [{selector: 'mat-progress-bar',\n                exportAs: 'matProgressBar',\n                host: {\n                    'role': 'progressbar',\n                    'aria-valuemin': '0',\n                    'aria-valuemax': '100',\n                    '[attr.aria-valuenow]': '(mode === \"indeterminate\" || mode === \"query\") ? null : value',\n                    '[attr.mode]': 'mode',\n                    'class': 'mat-progress-bar',\n                    '[class._mat-animation-noopable]': '_isNoopAnimation',\n                },\n                inputs: ['color'],\n                template: \"<svg width=\\\"100%\\\" height=\\\"4\\\" focusable=\\\"false\\\" class=\\\"mat-progress-bar-background mat-progress-bar-element\\\"><defs><pattern [id]=\\\"progressbarId\\\" x=\\\"4\\\" y=\\\"0\\\" width=\\\"8\\\" height=\\\"4\\\" patternUnits=\\\"userSpaceOnUse\\\"><circle cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"2\\\"/></pattern></defs><rect [attr.fill]=\\\"_rectangleFillValue\\\" width=\\\"100%\\\" height=\\\"100%\\\"/></svg><div class=\\\"mat-progress-bar-buffer mat-progress-bar-element\\\" [ngStyle]=\\\"_bufferTransform()\\\"></div><div class=\\\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\\\" [ngStyle]=\\\"_primaryTransform()\\\" #primaryValueBar></div><div class=\\\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\\\"></div>\",\n                styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}@media (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-background{display:none}}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}@media (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}@media (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:'';display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2s infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2s infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after{animation:none;transition:none}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(.5,0,.70173,.49582);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(.30244,.38135,.55,.95635);transform:translateX(83.67142%)}100%{transform:translateX(200.61106%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(.08)}36.65%{animation-timing-function:cubic-bezier(.33473,.12482,.78584,1);transform:scaleX(.08)}69.15%{animation-timing-function:cubic-bezier(.06,.11,.6,1);transform:scaleX(.66148)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:translateX(37.65191%)}48.35%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:translateX(84.38617%)}100%{transform:translateX(160.27778%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:scaleX(.08)}19.15%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:scaleX(.4571)}44.15%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:scaleX(.72796)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\"],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n            },] },\n];\n/** @nocollapse */\nMatProgressBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PROGRESS_BAR_LOCATION,] }] }\n];\nMatProgressBar.propDecorators = {\n    value: [{ type: Input }],\n    bufferValue: [{ type: Input }],\n    _primaryValueBar: [{ type: ViewChild, args: ['primaryValueBar', { static: false },] }],\n    animationEnd: [{ type: Output }],\n    mode: [{ type: Input }]\n};\n/**\n * Clamps a value to be between two numbers, by default 0 and 100.\n * @param {?} v\n * @param {?=} min\n * @param {?=} max\n * @return {?}\n */\nfunction clamp(v, min = 0, max = 100) {\n    return Math.max(min, Math.min(max, v));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatProgressBarModule {\n}\nMatProgressBarModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatProgressBar, MatCommonModule],\n                declarations: [MatProgressBar],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatProgressBarModule, MAT_PROGRESS_BAR_LOCATION_FACTORY, MAT_PROGRESS_BAR_LOCATION, MatProgressBar };\n//# sourceMappingURL=progress-bar.js.map\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/divider\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/cdk/bidi\";\nimport * as i4 from \"@angular/material/core\";\nimport * as i5 from \"@angular/platform-browser\";\nvar MatDividerModuleNgFactory = i0.ɵcmf(i1.MatDividerModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID, [2, i2.ɵangular_packages_common_common_a]]), i0.ɵmpd(1073742336, i3.BidiModule, i3.BidiModule, []), i0.ɵmpd(1073742336, i4.MatCommonModule, i4.MatCommonModule, [[2, i4.MATERIAL_SANITY_CHECKS], [2, i5.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(1073742336, i1.MatDividerModule, i1.MatDividerModule, [])]); });\nexport { MatDividerModuleNgFactory as MatDividerModuleNgFactory };\nvar styles_MatDivider = [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"];\nvar RenderType_MatDivider = i0.ɵcrt({ encapsulation: 2, styles: styles_MatDivider, data: {} });\nexport { RenderType_MatDivider as RenderType_MatDivider };\nexport function View_MatDivider_0(_l) { return i0.ɵvid(2, [], null, null); }\nexport function View_MatDivider_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-divider\", [[\"class\", \"mat-divider\"], [\"role\", \"separator\"]], [[1, \"aria-orientation\", 0], [2, \"mat-divider-vertical\", null], [2, \"mat-divider-horizontal\", null], [2, \"mat-divider-inset\", null]], null, null, View_MatDivider_0, RenderType_MatDivider)), i0.ɵdid(1, 49152, null, 0, i1.MatDivider, [], null, null)], null, function (_ck, _v) { var currVal_0 = (i0.ɵnov(_v, 1).vertical ? \"vertical\" : \"horizontal\"); var currVal_1 = i0.ɵnov(_v, 1).vertical; var currVal_2 = !i0.ɵnov(_v, 1).vertical; var currVal_3 = i0.ɵnov(_v, 1).inset; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3); }); }\nvar MatDividerNgFactory = i0.ɵccf(\"mat-divider\", i1.MatDivider, View_MatDivider_Host_0, { vertical: \"vertical\", inset: \"inset\" }, {}, []);\nexport { MatDividerNgFactory as MatDividerNgFactory };\n","import toInteger from '../_lib/toInteger/index.js'\nimport toDate from '../toDate/index.js'\n\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError(\n      '2 arguments required, but only ' + arguments.length + ' present'\n    )\n  }\n\n  var timestamp = toDate(dirtyDate).getTime()\n  var amount = toInteger(dirtyAmount)\n  return new Date(timestamp + amount)\n}\n"],"sourceRoot":""}