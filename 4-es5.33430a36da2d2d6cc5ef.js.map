{"version":3,"sources":["//Developer/Work/SPA/ngx-starter-kit/libs/breadcrumbs/src/lib/breadcrumbs.module.ts","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/esm5/badge.es5.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/esm5/progress-bar.es5.js","//Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/containers/entity/entity-form.component.ts","//Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/containers/entity/entity.component.ts","//Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/containers/entity/entity.service.ts","//Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/containers/entity/entity.model.ts","//Developer/Work/SPA/ngx-starter-kit/libs/shared/src/index.ts","//Developer/Work/SPA/ngx-starter-kit/libs/quickpanel/src/lib/quickpanel.component.ts","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/progress-bar/typings/index.d.ts.MatProgressBar.html","//Developer/Work/SPA/ngx-starter-kit/node_modules/ngx-perfect-scrollbar/dist/ngx-perfect-scrollbar.d.ts.PerfectScrollbarComponent.html","//Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/toolbar.component.ts","//Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/toolbar.module.ts","//Developer/Work/SPA/ngx-starter-kit/libs/breadcrumbs/src/lib/breadcrumbs.component.ts","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/esm5/select.es5.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/tabs/typings/index.d.ts.MatTabGroup.html","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/tabs/typings/index.d.ts.MatTabBody.html","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/tabs/typings/index.d.ts.MatTabHeader.html","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/tabs/typings/index.d.ts.MatTab.html","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/tabs/typings/index.d.ts.MatTabNav.html","//Developer/Work/SPA/ngx-starter-kit/libs/quickpanel/src/lib/quickpanel.component.html","//Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getUTCWeek/index.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/format/formatters/index.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/format/longFormatters/index.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/protectedTokens/index.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/format/index.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/isValid/index.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/subMilliseconds/index.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/esm5/table.es5.js","//Developer/Work/SPA/ngx-starter-kit/libs/notifications/src/lib/app-notification.model.ts","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/cdk/esm5/drag-drop.es5.js","//Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/shared-material-date.module.ts","//Developer/Work/SPA/ngx-starter-kit/node_modules/rxjs/_esm5/internal/operators/retry.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/esm5/datepicker.es5.js","//Developer/Work/SPA/ngx-starter-kit/libs/notifications/src/lib/notifications.service.ts","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/esm5/sidenav.es5.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/addMilliseconds/index.js","//Developer/Work/SPA/ngx-starter-kit/libs/notifications/src/lib/notifications.handler.ts","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/cdk/esm5/table.es5.js","//Developer/Work/SPA/ngx-starter-kit/libs/notifications/src/lib/notifications.actions.ts","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/esm5/radio.es5.js","//Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/components/sidenav-toggle/sidenav-toggle.component.ts","//Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/components/sidenav-toggle/sidenav-toggle.component.html","//Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/click-outside/click-outside.directive.ts","//Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/components/search-bar/search-bar.component.ts","//Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/components/search-bar/search-bar.component.html","//Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/components/fullscreen-toggle/fullscreen-toggle.component.ts","//Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/components/fullscreen-toggle/fullscreen-toggle.component.html","//Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/components/search/search.component.ts","//Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/components/search/search.component.html","//Developer/Work/SPA/ngx-starter-kit/libs/notifications/src/lib/notifications.component.ts","//Developer/Work/SPA/ngx-starter-kit/libs/notifications/src/lib/notifications.component.html","//Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/components/user-menu/user-menu.component.ts","//Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/components/user-menu/user-menu.component.html","//Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/components/quickpanel-toggle/quickpanel-toggle.component.ts","//Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/components/quickpanel-toggle/quickpanel-toggle.component.html","//Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/toolbar.component.html","//Developer/Work/SPA/ngx-starter-kit/libs/notifications/src/lib/notifications.state.ts","//Developer/Work/SPA/ngx-starter-kit/libs/notifications/src/lib/notifications.module.ts","//Developer/Work/SPA/ngx-starter-kit/node_modules/immer/dist/immer.module.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/@ngxs-labs/immer-adapter/fesm5/ngxs-labs-immer-adapter.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/screenfull/dist/screenfull.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/sidenav/typings/index.d.ts.MatDrawerContent.html","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/sidenav/typings/index.d.ts.MatDrawer.html","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/sidenav/typings/index.d.ts.MatDrawerContainer.html","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/sidenav/typings/index.d.ts.MatSidenavContent.html","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/sidenav/typings/index.d.ts.MatSidenav.html","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/sidenav/typings/index.d.ts.MatSidenavContainer.html","//Developer/Work/SPA/ngx-starter-kit/libs/breadcrumbs/src/lib/breadcrumbs.component.html","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/select/typings/index.d.ts.MatSelect.html","//Developer/Work/SPA/ngx-starter-kit/libs/quickpanel/src/lib/quickpanel.module.ts","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/esm5/tabs.es5.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/radio/typings/index.d.ts.MatRadioButton.html"],"names":["__webpack_require__","d","__webpack_exports__","BreadcrumbsModule","MatBadgeModule","MatBadge","tslib__WEBPACK_IMPORTED_MODULE_0__","_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_1__","_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_2__","_angular_core__WEBPACK_IMPORTED_MODULE_3__","_angular_material_core__WEBPACK_IMPORTED_MODULE_4__","_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_5__","nextId","MatBadgeBase","_super","_ngZone","_elementRef","_ariaDescriber","_renderer","_animationMode","_this","call","this","_hasContent","_color","_overlap","position","size","_id","Object","nativeElement","nodeType","ELEMENT_NODE","Error","defineProperty","prototype","get","set","value","_setColor","enumerable","configurable","val","_description","newDescription","badgeElement","_badgeElement","_updateHostAriaDescription","setAttribute","removeAttribute","_hidden","isAbove","indexOf","isAfter","ngOnChanges","changes","contentChange","currentValue","trim","length","_updateTextContent","ngOnDestroy","description","removeDescription","destroyNode","getBadgeElement","textContent","content","_createBadgeElement","createElement","_clearExistingBadges","classList","add","appendChild","requestAnimationFrame","runOutsideAngular","oldDescription","describe","colorPalette","remove","cssClass","element","childCount","children","currentChild","contains","removeChild","decorators","type","args","selector","inputs","host","class","[class.mat-badge-overlap]","[class.mat-badge-above]","[class.mat-badge-below]","[class.mat-badge-before]","[class.mat-badge-after]","[class.mat-badge-small]","[class.mat-badge-medium]","[class.mat-badge-large]","[class.mat-badge-hidden]","[class.mat-badge-disabled]","ctorParameters","String","propDecorators","color","overlap","hidden","imports","exports","declarations","MatProgressBarModule","MAT_PROGRESS_BAR_LOCATION","MatProgressBar","_angular_core__WEBPACK_IMPORTED_MODULE_1__","rxjs__WEBPACK_IMPORTED_MODULE_2__","rxjs__WEBPACK_IMPORTED_MODULE_3__","rxjs_operators__WEBPACK_IMPORTED_MODULE_4__","_angular_material_core__WEBPACK_IMPORTED_MODULE_6__","_angular_common__WEBPACK_IMPORTED_MODULE_7__","MatProgressBarBase","_MatProgressBarMixinBase","providedIn","factory","_document","_location","location","getPathname","pathname","search","progressbarId","_isNoopAnimation","_value","_bufferValue","animationEnd","_animationEndSubscription","EMPTY","mode","path","split","_rectangleFillValue","v","clamp","_emitAnimationEnd","_primaryTransform","transform","_bufferTransform","bufferValue","ngAfterViewInit","_primaryValueBar","pipe","e","target","subscribe","run","unsubscribe","next","exportAs","role","aria-valuemin","aria-valuemax","[attr.aria-valuenow]","[attr.mode]","[class._mat-animation-noopable]","template","styles","changeDetection","OnPush","encapsulation","None","undefined","static","min","max","Math","EntityFormComponent","data","dialogRef","title","entity","payload","ngOnInit","buildForm","submit","close","entityForm","entity_component_EntitiesComponent","EntitiesComponent","entityService","dataSource","table_es5","selection","collections_es5","showToolbar","showColumnFilter","showActionColumn","maxSelectable","actionColumn","selectColumn","loading$","update","filterPredicate","changed","operators_filter","sc","added","_","selected","src","deselect","shift","sort","paginator","getById","id","delete","item","concatMap","updateOrCreate","put","post","getData","getAll","map","result","isAllFilteredRowsSelected","filteredData","every","isSelected","isMasterToggleChecked","hasValue","isMasterToggleIndeterminate","masterToggle","clear","forEach","select","applyFilter","filterValue","toLowerCase","filter","displayedColumns","columns","column","visible","x","property","unshift","concat","selectRow","toggle","showDetails","getRouteAnimation","outlet","activatedRouteData","depth","toggleColumnVisibility","event","stopPropagation","stopImmediatePropagation","stringToDate","date","s","parseISO","entity_service_EntityService","EntityService","httpClient","baseUrl","environment","API_BASE_URL","loadingSubject","BehaviorSubject","asObservable","entityPath","catchError","handleError","findAll","order","skip","take","params","http","toString","retry","finalize","console","log","error","errorMessage","ErrorEvent","message","status","throwError","convertToJson","body","temporalFunctionToJson","Date","toJSON","format","jsonBody","JSON","stringify","Entity","init","assign","EntityColumnDef","header","displayFn","QuickpanelComponent","today","now","events","time","state","todolists","messages","from","img","subject","_l","_angular_core__WEBPACK_IMPORTED_MODULE_0__","_angular_common__WEBPACK_IMPORTED_MODULE_2__","ngStyle","_ck","_v","_co","component","states","top","left","right","bottom","indicatorY","interaction","indicatorX","ngx_perfect_scrollbar__WEBPACK_IMPORTED_MODULE_1__","disabled","config","View_PerfectScrollbarComponent_1","ngIf","scrollIndicators","usePSClass","ToolbarComponent","isFullscreen","_ngxs_store__WEBPACK_IMPORTED_MODULE_1__","_ngx_starter_kit_auth__WEBPACK_IMPORTED_MODULE_3__","profile","ToolbarModule","_angular_material_button__WEBPACK_IMPORTED_MODULE_0__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_1__","_angular_material_icon__WEBPACK_IMPORTED_MODULE_2__","_angular_material_input__WEBPACK_IMPORTED_MODULE_3__","_angular_material_list__WEBPACK_IMPORTED_MODULE_4__","BreadcrumbsComponent","MatSelectModule","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_SELECT_SCROLL_STRATEGY","MatSelect","_angular_animations__WEBPACK_IMPORTED_MODULE_0__","tslib__WEBPACK_IMPORTED_MODULE_1__","_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_2__","_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_3__","_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_4__","_angular_cdk_collections__WEBPACK_IMPORTED_MODULE_5__","_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_6__","_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_7__","_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__","_angular_core__WEBPACK_IMPORTED_MODULE_9__","_angular_forms__WEBPACK_IMPORTED_MODULE_10__","_angular_material_core__WEBPACK_IMPORTED_MODULE_11__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_12__","rxjs__WEBPACK_IMPORTED_MODULE_13__","rxjs__WEBPACK_IMPORTED_MODULE_14__","rxjs__WEBPACK_IMPORTED_MODULE_15__","rxjs_operators__WEBPACK_IMPORTED_MODULE_16__","rxjs_operators__WEBPACK_IMPORTED_MODULE_17__","rxjs_operators__WEBPACK_IMPORTED_MODULE_18__","rxjs_operators__WEBPACK_IMPORTED_MODULE_19__","rxjs_operators__WEBPACK_IMPORTED_MODULE_20__","rxjs_operators__WEBPACK_IMPORTED_MODULE_21__","rxjs_operators__WEBPACK_IMPORTED_MODULE_22__","_angular_common__WEBPACK_IMPORTED_MODULE_23__","matSelectAnimations","transformPanelWrap","optional","transformPanel","minWidth","opacity","fadeInContent","nextUniqueId","SELECT_MULTIPLE_PANEL_PADDING_X","overlay","scrollStrategies","reposition","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","provide","deps","useFactory","MatSelectChange","source","MatSelectBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatSelectMixinBase","MatSelectTrigger","_viewportRuler","_changeDetectorRef","elementRef","_dir","_parentFormField","tabIndex","scrollStrategyFactory","_liveAnnouncer","_panelOpen","_required","_scrollTop","_multiple","_compareWith","o1","o2","_uid","_destroy","_triggerFontSize","_onChange","_onTouched","_optionIds","_transformOrigin","_panelDoneAnimatingStream","_offsetY","_positions","originX","originY","overlayX","overlayY","_disableOptionCentering","_focused","controlType","ariaLabel","optionSelectionChanges","options","apply","option","onSelectionChange","onStable","openedChange","_openedStream","o","_closedStream","selectionChange","valueChange","valueAccessor","_scrollStrategyFactory","_scrollStrategy","parseInt","_placeholder","stateChanges","_selectionModel","fn","_initializeSelection","newValue","writeValue","multiple","panelOpen","emit","overlayDir","offsetX","markForCheck","change","_triggerRect","trigger","getBoundingClientRect","ngAfterContentInit","_initKeyManager","onChange","removed","_resetOptions","ngDoCheck","updateErrorState","complete","open","getComputedStyle","fontSize","_keyManager","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","overlayRef","overlayElement","style","_isRtl","_setSelectionByValue","registerOnChange","registerOnTouched","setDisabledState","isDisabled","empty","selectedOptions","viewValue","reverse","join","_handleKeydown","_handleOpenKeydown","_handleClosedKeydown","keyCode","isArrowKey","isOpenKey","manager","altKey","preventDefault","previouslySelectedOption","setFirstItemActive","setLastItemActive","onKeydown","selectedOption","announce","activeItem","ctrlKey","hasDeselectedOptions_1","some","opt","previouslyFocusedIndex","activeItemIndex","shiftKey","_selectViaInteraction","_onFocus","_onBlur","_onAttached","positionChange","_setPseudoCheckboxPaddingSize","detectChanges","_calculateOverlayOffsetX","panel","scrollTop","_getPanelTheme","pseudoCheckbox","querySelector","SELECT_PANEL_PADDING_X","offsetWidth","isEmpty","Promise","resolve","then","Array","isArray","_selectValue","_sortValues","correspondingOption","setActiveItem","find","warn","withTypeAhead","withVerticalOrientation","withAllowedModifierKeys","tabOut","focus","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","_setOptionIds","wasSelected","_propagateChanges","options_1","toArray","a","b","sortComparator","fallbackValue","valueToEmit","activeOptionIndex","labelCount","optionGroups","_getItemHeight","_getOptionIndex","reduce","current","index","itemHeight","items","_getItemCount","panelHeight","maxScroll","selectedOptionOffset","scrollBuffer","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","selectedIndex","optimalScrollPosition","_getAriaLabel","ariaLabelledby","placeholder","_getAriaLabelledby","_hasFloatingLabel","_labelId","_getAriaActiveDescendant","overlayRect","viewportSize","getViewportSize","isRtl","paddingWidth","first","group","leftOverflow","rightOverflow","width","round","updatePosition","optionOffsetFromPanelTop","optionHeightAdjustment","height","maxOptionsDisplayed","floor","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","abs","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","setDescribedByIds","ids","_ariaDescribedby","onContainerClick","[attr.id]","[attr.tabindex]","[attr.aria-label]","[attr.aria-labelledby]","[attr.aria-required]","[attr.aria-disabled]","[attr.aria-invalid]","[attr.aria-owns]","[attr.aria-multiselectable]","[attr.aria-describedby]","[attr.aria-activedescendant]","[class.mat-select-disabled]","[class.mat-select-invalid]","[class.mat-select-required]","[class.mat-select-empty]","(keydown)","(focus)","(blur)","animations","providers","useExisting","descendants","panelClass","customTrigger","required","disableOptionCentering","compareWith","errorStateMatcher","core","View_MatTabGroup_3","portal_es5","portal","parent","context","$implicit","templateLabel","textLabel","en","$event","ad","esm5_core_es5","platform_es5","a11y_es5","tabs_es5","View_MatTabGroup_2","common","View_MatTabGroup_4","disableRipple","_getTabLabelId","_getTabIndex","_tabs","_getTabContentId","unbounded","View_MatTabBody_0","RenderType_MatTabBody","bidi_es5","_content","origin","animationDuration","_onCentering","_onCentered","View_MatTabHeader_0","RenderType_MatTabHeader","scrolling_es5","selectFocusedIndex","indexFocused","_items","View_MatTabGroup_1","ngForOf","View_MatTabGroup_5","_showPaginationControls","_getLayoutDirection","View_MatTabBody_1","currVal_0","_position","observers_es5","_disableScrollBefore","_disableScrollAfter","View_MatTab_1","index_ngfactory","list_es5","_lines","_avatar","_icon","flex_es5","core_es5","fxLayout","fxLayoutAlign","View_MatTabGroup_0","RenderType_MatTabGroup","View_MatTab_0","RenderType_MatTab","_explicitContent","typings_index_ngfactory","divider_es5","View_QuickpanelComponent_1","View_QuickpanelComponent_2","View_QuickpanelComponent_3","progress_bar_typings_index_ngfactory","progress_bar_es5","dynamicHeight","headerPosition","currVal_5","currVal_6","currVal_7","currVal_8","vertical","inset","addLeadingZeros","number","targetLength","sign","output","lightFormatters","y","token","signedYear","getUTCFullYear","year","M","month","getUTCMonth","getUTCDate","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","pow","MILLISECONDS_IN_DAY","startOfUTCISOWeek","dirtyDate","arguments","TypeError","toDate","day","getUTCDay","diff","setUTCDate","setUTCHours","getUTCISOWeekYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","MILLISECONDS_IN_WEEK","getUTCISOWeek","fourthOfJanuary","startOfUTCISOWeekYear","startOfUTCWeek","dirtyOptions","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","toInteger","RangeError","getUTCWeekYear","localeFirstWeekContainsDate","firstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","getUTCWeek_MILLISECONDS_IN_WEEK","getUTCWeek","firstWeek","startOfUTCWeekYear","dayPeriodEnum","formatTimezoneShort","offset","dirtyDelimiter","absOffset","hours","minutes","delimiter","formatTimezoneWithOptionalMinutes","formatTimezone","format_formatters","G","localize","era","ordinalNumber","unit","Y","signedWeekYear","weekYear","R","u","Q","quarter","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","timestamp","setUTCMonth","difference","getUTCDayOfYear","E","dayOfWeek","localDayOfWeek","c","i","isoDayOfWeek","dayPeriod","B","K","k","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","O","z","t","originalDate","T","dateLongFormatter","pattern","formatLong","timeLongFormatter","format_longFormatters","p","P","dateTimeFormat","matchResult","match","datePattern","timePattern","dateTime","replace","protectedDayOfYearTokens","protectedWeekYearTokens","throwProtectedError","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","en_US","isNaN","isValid","utcDate","dirtyAmount","amount","addMilliseconds","subMilliseconds","getTimezoneOffsetInMilliseconds","formatterOptions","substring","firstCharacter","longFormatter","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","MatTableModule","MatCellDef","MatHeaderCellDef","MatColumnDef","MatHeaderCell","MatCell","MatTable","MatHeaderRowDef","MatRowDef","MatHeaderRow","MatFooterRow","MatRow","MatTableDataSource","MatTextColumn","_angular_cdk_table__WEBPACK_IMPORTED_MODULE_1__","_angular_cdk_table__WEBPACK_IMPORTED_MODULE_2__","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_material_core__WEBPACK_IMPORTED_MODULE_5__","_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_6__","rxjs__WEBPACK_IMPORTED_MODULE_7__","rxjs__WEBPACK_IMPORTED_MODULE_8__","rxjs__WEBPACK_IMPORTED_MODULE_9__","rxjs__WEBPACK_IMPORTED_MODULE_10__","rxjs__WEBPACK_IMPORTED_MODULE_11__","rxjs__WEBPACK_IMPORTED_MODULE_12__","rxjs_operators__WEBPACK_IMPORTED_MODULE_13__","stickyCssClass","Default","MatFooterCellDef","name","sticky","stickyEnd","columnDef","cssClassFriendlyName","MatFooterCell","MatFooterRowDef","EXPORTED_DECLARATIONS","MAX_SAFE_INTEGER","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","sortingDataAccessor","sortHeaderId","numberValue","Number","sortData","active","direction","valueA","valueB","comparatorResult","dataStr","keys","currentTerm","key","transformedFilter","_data","_updateChangeSubscription","_sort","_paginator","sortChange","initialized","pageChange","page","dataStream","_a","_filterData","orderedData","_orderData","paginatedData","_pageData","obj","_updatePaginator","slice","startIndex","pageIndex","pageSize","splice","filteredDataLength","lastPageIndex","newPageIndex","connect","disconnect","TargetType","NotificationColor","NotificationIcon","AppNotification","_ngx_starter_kit_shared__WEBPACK_IMPORTED_MODULE_1__","DragDrop","CdkDropList","CDK_DROP_LIST","moveItemInArray","DragDropModule","DragDropRegistry","CdkDropListGroup","CDK_DRAG_CONFIG","CdkDrag","CdkDragHandle","CDK_DRAG_PARENT","_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_0__","_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__","rxjs__WEBPACK_IMPORTED_MODULE_4__","rxjs__WEBPACK_IMPORTED_MODULE_5__","rxjs__WEBPACK_IMPORTED_MODULE_6__","rxjs_operators__WEBPACK_IMPORTED_MODULE_8__","rxjs_operators__WEBPACK_IMPORTED_MODULE_9__","rxjs_operators__WEBPACK_IMPORTED_MODULE_10__","rxjs_operators__WEBPACK_IMPORTED_MODULE_11__","rxjs_operators__WEBPACK_IMPORTED_MODULE_12__","_angular_core__WEBPACK_IMPORTED_MODULE_14__","_angular_common__WEBPACK_IMPORTED_MODULE_15__","_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_16__","_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_17__","extendStyles","dest","hasOwnProperty","toggleNativeDragInteractions","enable","userSelect","touchAction","webkitUserDrag","webkitTapHighlightColor","msUserSelect","webkitUserSelect","MozUserSelect","parseCssTimeUnitsToMs","multiplier","parseFloat","parseCssPropertyValue","computedStyle","getPropertyValue","part","passiveEventListenerOptions","passive","activeEventListenerOptions","DragRef","_config","_dragDropRegistry","_passiveTransform","_activeTransform","_moveEvents","_pointerMoveSubscription","_pointerUpSubscription","_scrollSubscription","_boundaryElement","_nativeInteractionsEnabled","_handles","_disabledHandles","Set","_direction","dragStartDelay","_disabled","beforeStarted","started","released","ended","entered","exited","dropped","moved","_pointerDown","targetHandle","handle","has","_initializeDragSequence","_rootElement","_pointerMove","_hasStartedDragging","_previewRect","_preview","constrainedPointerPosition","_getConstrainedPointerPosition","_hasMoved","_updatePointerDirectionDelta","_dropContainer","_updateActiveDropContainer","activeTransform","_pickupPositionOnPage","_applyRootElementTransform","SVGElement","appliedTransform","observers","pointerPosition","distance","_getDragDistance","delta","_pointerDirectionDelta","_getPointerPositionOnPage","dragStartThreshold","_dragStartTime","_endDragSequence","isDragging","_startDragSequence","_pointerUp","withRootElement","registerDragItem","_toggleNativeDragInteractions","getPlaceholderElement","getRootElement","withHandles","handles","withPreviewTemplate","_previewTemplate","withPlaceholderTemplate","_placeholderTemplate","rootElement","_removeRootElementListeners","addEventListener","_initialTransform","withBoundaryElement","boundaryElement","dispose","removeElement","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeSubscriptions","_nextSibling","reset","disableHandle","enableHandle","withDirection","_withDropContainer","container","getFreeDragPosition","setFreeDragPosition","_sortFromLastPointerPosition","_pointerPositionAtLastDirectionChange","_previewRef","destroy","_placeholderRef","stopDragging","_rootElementTapHighlight","_stopScrolling","_animatePreviewToPlaceholder","_cleanupDragArtifacts","isTouchEvent","_lastTouchEventTime","nextSibling","preview","_createPreviewElement","_createPlaceholderElement","display","replaceChild","documentRef","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","start","referenceElement","isTouchSequence","isAuxiliaryMouseButton","button","isSyntheticEvent","draggable","_initialContainer","pointerMove","pointerUp","scroll","_scrollPosition","getViewportScrollPosition","_boundaryRect","_pickupPositionInElement","_getPointerPositionInElement","startDragging","insertBefore","currentIndex","getItemIndex","isPointerOverContainer","_isOverContainer","previousIndex","previousContainer","drop","newContainer","_getSiblingContainerFromPosition","exit","enter","_startScrollingIfNecessary","_sortItem","getTransform","previewConfig","previewTemplate","viewRef","viewContainer","createEmbeddedView","rootNodes","elementRect","deepCloneNode","pointerEvents","zIndex","placeholderRect","duration","transitionedProperties","prop","propertyIndex","rawDurations","rawDelays","getTransformTransitionDurationInMs","handler","propertyName","removeEventListener","clearTimeout","timeout","setTimeout","placeholderConfig","placeholderTemplate","handleElement","referenceRect","point","targetTouches","pageX","pageY","touches","changedTouches","constrainedPoint","constrainPosition","dropContainerLock","lockAxis","pickupX","pickupY","boundaryRect","previewRect","minY","maxY","minX","maxX","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","currentPosition","pickupPosition","node","clone","cloneNode","descendantsWithId","querySelectorAll","descendantCanvases","cloneCanvases","correspondingCloneContext","getContext","drawImage","parentNode","array","fromIndex","toIndex","clamp$1","to","_uniqueIdCounter","SCROLL_PROXIMITY_THRESHOLD","AUTO_SCROLL_STEP","DropListRef","sortingDisabled","autoScrollDisabled","enterPredicate","sorted","_isDragging","_itemPositions","_viewportScrollPosition","_previousSwap","drag","_siblings","_orientation","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","_horizontalScrollDirection","_stopScrollTimers","_handleScroll","_updateAfterScroll","scrollLeft","_startScrollInterval","_scrollNode","incrementVerticalScroll","incrementHorizontalScroll","registerDropContainer","_removeListeners","removeDropContainer","_cacheItems","sibling","_startReceiving","newPosition","_clientRect","pointerX","pointerY","newIndex","_draggables","_getItemIndexFromPointerPosition","activeDraggables","_activeDraggables","newPositionReference","push","_cacheItemPositions","_reset","withItems","connectedTo","withOrientation","orientation","findIndex","currentItem","isReceiving","pointerDelta","_isPointerNearDropContainer","siblings","isHorizontal","siblingAtNewPosition","clientRect","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","isDraggedItem","elementToOffset","adjustClientRect","scrollNode","verticalScrollDirection","horizontalScrollDirection","getVerticalScrollDirection","getHorizontalScrollDirection","window","_cacheOwnPosition","getMutableClientRect","elementToMeasure","_stopReceiving","immediateSibling","end","xThreshold","yThreshold","scrollPosition","newTop","newLeft","extraClientRect","topDifference","leftDifference","isInsideClientRect","_canReceive","elementFromPoint","activeSiblings","predicate","scrollBy","activeCapturingEventOptions","capture","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","Map","_preventDefaultWhileDragging","getDropContainer","startsWith","moveEvent","upEvent","_clearGlobalListeners","instance","ngInjectableDef","DEFAULT_CONFIG","createDrag","createDropList","CDK_DROP_LIST_CONTAINER","parentDrag","_parentDrag","CdkDragPlaceholder","templateRef","CdkDragPreview","dropContainer","_viewContainerRef","dragDrop","_destroyed","observer","subscription","_dragRef","movedEvent","_syncInputs","_handleEvents","_updateRootElement","childHandleElements","handleInstance","dragRef","freeDragPosition","rootSelectorChange","firstChange","rootElementSelector","getClosestMatchingAncestor","nodeName","_getBoundaryElement","boundary","ref","dir","[class.cdk-drag-disabled]","[class.cdk-drag-dragging]","currentElement","matches","msMatchesSelector","parentElement","_uniqueIdCounter$1","_group","_sortingDisabled","_dropListRef","_dropLists","list","useValue","[id]","[class.cdk-drop-list-disabled]","[class.cdk-drop-list-dragging]","[class.cdk-drop-list-receiving]","SharedMaterialDateModule","ɵ0","_angular_material_core__WEBPACK_IMPORTED_MODULE_0__","parse","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","_Subscriber__WEBPACK_IMPORTED_MODULE_1__","count","lift","RetryOperator","subscriber","RetrySubscriber","destination","err","isStopped","_unsubscribeAndRecycle","MatMultiYearView","MatDatepickerModule","MatCalendarHeader","MatCalendar","MatCalendarBody","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY","MAT_DATEPICKER_SCROLL_STRATEGY","MatDatepickerContent","MatDatepicker","MatDatepickerInput","MatDatepickerIntl","MatDatepickerToggle","MatMonthView","MatYearView","rxjs__WEBPACK_IMPORTED_MODULE_1__","rxjs_operators__WEBPACK_IMPORTED_MODULE_5__","rxjs_operators__WEBPACK_IMPORTED_MODULE_6__","_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_7__","_angular_material_core__WEBPACK_IMPORTED_MODULE_8__","_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_9__","_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_10__","_angular_animations__WEBPACK_IMPORTED_MODULE_11__","tslib__WEBPACK_IMPORTED_MODULE_12__","_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__","_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_14__","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_16__","_angular_forms__WEBPACK_IMPORTED_MODULE_17__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_18__","_angular_material_input__WEBPACK_IMPORTED_MODULE_19__","_angular_material_button__WEBPACK_IMPORTED_MODULE_20__","_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_21__","createMissingDateImplError","provider","calendarLabel","openCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","MatCalendarCell","displayValue","enabled","cssClasses","numCols","activeCell","cellAspectRatio","selectedValueChange","_cellClicked","cell","columnChanges","rows","_firstRowOffset","_cellPadding","_cellWidth","_isActiveCell","rowIndex","colIndex","cellNumber","_focusActiveCell","aria-readonly","label","todayValue","selectedValue","labelMinRequiredCells","_dateFormats","_dateAdapter","selectedChange","_userSelection","activeDateChange","firstDayOfWeek","getFirstDayOfWeek","narrowWeekdays","getDayOfWeekNames","weekdays","long","narrow","_weekdays","_activeDate","oldActiveDate","validDate","_getValidDateOrNull","deserialize","clampDate","minDate","maxDate","_hasSameMonthAndYear","_init","_selected","_selectedDate","_getDateInCurrentMonth","_minDate","_maxDate","_dateSelected","selectedYear","getYear","activeDate","selectedMonth","getMonth","selectedDate","createDate","_handleCalendarBodyKeydown","addCalendarDays","getDate","getNumDaysInMonth","addCalendarYears","addCalendarMonths","dateFilter","compareDate","_todayDate","_monthLabel","getMonthNames","toLocaleUpperCase","firstOfMonth","_firstWeekOffset","getDayOfWeek","_createWeekCells","_matCalendarBody","daysInMonth","dateNames","getDateNames","_weeks","_shouldEnableDate","cellClasses","dateClass","d1","d2","isDateInstance","yearsPerPage","yearSelected","isSameMultiYearView","_selectedYear","_todayYear","minYearOfPage","getActiveOffset","_years","row","_createCellForYear","_yearSelected","_getActiveCell","yearName","getYearName","_shouldEnableYear","dateAdapter","date1","date2","year1","year2","startingYear","getStartingYear","activeYear","monthSelected","_selectedMonth","_getMonthInCurrentYear","_monthSelected","normalizedDate","_todayMonth","_yearLabel","monthNames","_months","_createCellForMonth","monthName","_shouldEnableMonth","_isYearAndMonthAfterMaxDate","_isYearAndMonthBeforeMinDate","maxYear","maxMonth","minYear","minMonth","_intl","calendar","changeDetectorRef","currentView","multi-year","currentPeriodClicked","previousClicked","nextClicked","previousEnabled","_isSameView","nextEnabled","_moveFocusOnNextTick","startView","_intlChanges","_startAt","_clampedActiveDate","_currentView","_calendarHeaderPortal","headerComponent","startAt","ngAfterViewChecked","focusActiveCell","view","_getCurrentViewComponent","updateTodaysDate","monthView","yearView","multiYearView","sameDate","_yearSelectedInMultiYearView","normalizedYear","_monthSelectedInYearView","normalizedMonth","_userSelected","_goToDateInView","matDatepickerAnimations","fadeInCalendar","datepickerUid","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","MatDatepickerContentBase","_calendar","[@transformPanel]","[class.mat-datepicker-content-touch]","_dialog","_overlay","scrollStrategy","_touchUi","openedStream","closedStream","_opened","_validSelected","_focusedElementBeforeOpen","_inputSubscription","_disabledChange","_selectedChanged","_datepickerInput","_getThemePalette","_dateFilter","_popupRef","_popupComponentRef","oldValue","_selectYear","_selectMonth","_registerInput","input","_valueChange","activeElement","touchUi","_openAsDialog","_openAsPopup","hasAttached","detach","_dialogRef","_calendarPortal","isAttached","completeClose","viewContainerRef","afterClosed","componentInstance","datepicker","_createPopup","attach","overlayConfig","positionStrategy","_createPopupPositionStrategy","hasBackdrop","backdropClass","create","backdropClick","detachments","keydownEvents","flexibleConnectedTo","getConnectedOverlayOrigin","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withLockedPosition","withPositions","calendarHeaderComponent","opened","MAT_DATEPICKER_VALUE_ACCESSOR","multi","MAT_DATEPICKER_VALIDATORS","MatDatepickerInputEvent","targetElement","_formField","dateChange","_cvaOnChange","_validatorOnChange","_datepickerSubscription","_localeSubscription","_parseValidator","_lastValueValid","matDatepickerParse","text","_minValidator","control","controlValue","matDatepickerMin","actual","_maxValidator","matDatepickerMax","_filterValidator","matDatepickerFilter","_validator","compose","localeChanges","_datepicker","oldDate","_formatValue","_min","_max","blur","registerOnValidatorChange","validate","getPopupConnectionElementRef","_onKeydown","isAltDownArrow","readOnly","_onInput","aria-haspopup","[attr.min]","[attr.max]","[disabled]","(input)","(change)","matDatepicker","MatDatepickerToggleIcon","defaultTabIndex","parsedTabIndex","_watchStateChanges","_open","datepickerDisabled","inputDisabled","datepickerToggled","[class.mat-datepicker-toggle-active]","[class.mat-accent]","[class.mat-warn]","_customIcon","_button","entryComponents","NotificationsService","featureService","apiBaseUrl","_env_environment__WEBPACK_IMPORTED_MODULE_1__","rxjs_operators__WEBPACK_IMPORTED_MODULE_3__","showNativeNotification","noti","detectFeature","_ngx_starter_kit_core__WEBPACK_IMPORTED_MODULE_7__","NotificationsAPI","supported","isMobileAndroid","Notification","requestPermission","sent","onclick","_ngx_starter_kit_shared__WEBPACK_IMPORTED_MODULE_2__","MatSidenavModule","MAT_DRAWER_DEFAULT_AUTOSIZE","MatDrawerContent","MatDrawer","MatDrawerContainer","MatSidenavContent","MatSidenav","MatSidenavContainer","_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_5__","_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_6__","_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_7__","_angular_common__WEBPACK_IMPORTED_MODULE_8__","rxjs_operators__WEBPACK_IMPORTED_MODULE_14__","rxjs_operators__WEBPACK_IMPORTED_MODULE_15__","_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_20__","_angular_material_core__WEBPACK_IMPORTED_MODULE_21__","matDrawerAnimations","transformDrawer","visibility","box-shadow","throwMatDuplicatedDrawerError","_container","scrollDispatcher","ngZone","_contentMarginChanges","[style.margin-left.px]","[style.margin-right.px]","_focusTrapFactory","_focusMonitor","_platform","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_mode","_disableClose","_autoFocus","_animationStarted","_animationEnd","_animationState","onPositionChanged","_modeChanged","_isFocusTrapEnabled","_focusTrap","_trapFocus","_restoreFocus","disableClose","fromState","toState","autoFocus","focusInitialElementWhenReady","hasMovedFocus","activeEl","HTMLElement","focusVia","_openedVia","ngAfterContentChecked","isBrowser","openedVia","isOpen","_animationStartListener","_animationDoneListener","[attr.align]","[class.mat-drawer-end]","[class.mat-drawer-over]","[class.mat-drawer-push]","[class.mat-drawer-side]","openedStart","closedStart","_element","viewportRuler","defaultAutosize","_doCheckSubject","_contentMargins","_validateDrawers","updateContentMargins","_autosize","_start","_end","_backdropOverride","_userContent","_drawers","drawer","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","_isDrawerOpen","_left","_width","_right","_isPushed","_setContainerClass","onMicrotaskEmpty","isAdd","_onBackdropClicked","_closeModalDrawer","_canHaveBackdrop","_isShowingBackdrop","[class.mat-drawer-container-explicit-backdrop]","autosize","_fixedInViewport","_fixedTopGap","_fixedBottomGap","[class.mat-sidenav-fixed]","[style.top.px]","[style.bottom.px]","fixedInViewport","fixedTopGap","fixedBottomGap","_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__","_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__","NotificationsHandler","actions$","store","swPush","_notifications_actions__WEBPACK_IMPORTED_MODULE_2__","action","dispatch","_ngx_starter_kit_socketio_plugin__WEBPACK_IMPORTED_MODULE_3__","isEnabled","notification","targetType","_app_notification_model__WEBPACK_IMPORTED_MODULE_4__","notificationClicks","_b","DataRowOutlet","HeaderRowOutlet","FooterRowOutlet","CDK_TABLE_TEMPLATE","CdkTable","CdkCellDef","CdkHeaderCellDef","CdkFooterCellDef","CdkColumnDef","CdkHeaderCell","CdkFooterCell","CdkCell","CDK_ROW_TEMPLATE","CdkHeaderRowDef","CdkFooterRowDef","CdkRowDef","CdkCellOutlet","CdkHeaderRow","CdkFooterRow","CdkRow","CdkTableModule","TEXT_COLUMN_OPTIONS","CdkTextColumn","_angular_core__WEBPACK_IMPORTED_MODULE_2__","_angular_cdk_collections__WEBPACK_IMPORTED_MODULE_4__","_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_5__","_angular_common__WEBPACK_IMPORTED_MODULE_6__","mixinHasStickyInput","base","class_1","_i","_sticky","_hasStickyChanged","prevValue","hasStickyChanged","resetStickyChanged","_stickyEnd","_name","headerCell","footerCell","BaseCdkCell","columnClassName","BaseRowDef","_differs","_columnsDiffer","getColumnsDiff","extractCellTemplate","CdkHeaderRowDefBase","CdkFooterRowDefBase","_viewContainer","mostRecentCellOutlet","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","_isBrowser","clearStickyPositioning","stickyDirections","rows_1","_removeStickyStyle","updateStickyColumns","stickyStartStates","stickyEndStates","hasStickyColumns","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","rows_2","_addStickyStyle","stickRows","rowsToStick","stickyStates","stickyHeight","j","updateStickyFooterContainer","tableElement","tfoot","stickyDirections_1","_getCalculatedZIndex","dirValue","cssText","zIndexIncrements","STICKY_DIRECTIONS_1","firstRowCells","widths","positions","nextPosition","getTableUnknownColumnError","RowViewRef","_onDestroy","_columnDefsByName","_customColumnDefs","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_cachedRenderRowsMap","_multiTemplateDataRows","viewChange","MAX_VALUE","_trackByFn","_dataSource","_switchDataSource","_rowOutlet","_forceRenderDataRows","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","dataRow","trackBy","dataIndex","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","_renderUpdatedColumns","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_headerRowOutlet","_footerRowOutlet","renderRows","_renderRows","_getAllRenderRows","forEachOperation","record","prevIndex","_insertRow","move","_updateRowIndexContext","forEachIdentityChange","updateStickyColumnStyles","setHeaderRowDef","headerRowDef","setFooterRowDef","footerRowDef","addColumnDef","removeColumnDef","addRowDef","rowDef","removeRowDef","addHeaderRowDef","removeHeaderRowDef","addFooterRowDef","removeFooterRowDef","updateStickyHeaderRowStyles","headerRows","_getRenderedRows","thead","def","_stickyStyler","updateStickyFooterRowStyles","footerRows","dataRows","headerRow","_addStickyColumnStyles","footerRow","values","prevCachedRenderRows","renderRowsForData","_getRenderRowsForData","WeakMap","renderRow","cache","_getRowDefs","cachedRenderRows","mergeQueryListAndSet","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","when","multiTemplateDataRows","_defaultRowDef","columnsDiffReducer","acc","_renderRow","columnDefs","columnName","rowOutlet","renderedRows","rowDefs","getTableMissingMatchingRowDefError","renderIndex","_getCellTemplates","cellTemplate","last","even","odd","columnId","documentFragment","createDocumentFragment","sections_1","tag","section","stickyCheckReducer","queryList","_table","_options","justify","_syncColumnDefName","headerText","_createDefaultHeaderText","dataAccessor","defaultDataAccessor","defaultHeaderTextTransform","FetchNotifications","AddNotification","DeleteNotification","MarkAsRead","MarkAllAsRead","MatRadioModule","MAT_RADIO_DEFAULT_OPTIONS","MatRadioGroup","MatRadioButton","_angular_cdk_collections__WEBPACK_IMPORTED_MODULE_3__","_angular_core__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_7__","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","MatRadioChange","_changeDetector","_isInitialized","_labelPosition","_controlValueAccessorChangeFn","onTouched","_updateRadioButtonNames","_markRadiosForCheck","_updateSelectedRadioFromValue","_checkSelectedRadioButton","checked","_touch","_radios","radio","_markForCheck","isAlreadySelected","_emitChangeEvent","labelPosition","MatRadioButtonBase","radioGroup","_radioDispatcher","_providerOverride","_uniqueId","_checked","_removeUniqueSelectionListener","listen","newCheckedState","notify","newDisabledState","_inputElement","monitor","focusOrigin","stopMonitoring","_isRippleDisabled","_onInputClick","_onInputChange","groupValueChanged","[class.mat-radio-checked]","[class.mat-radio-disabled]","[class.mat-primary]","ariaDescribedby","SidenavToggleComponent","openSidenav","sidenav","button_es5","extended_es5","fxHide.gt-md","icon_typings_index_ngfactory","icon_es5","inline","click_outside_directive_ClickOutsideDirective","ClickOutsideDirective","ngxClickOutside","onClick","search_bar_component_SearchBarComponent","SearchBarComponent","router","sidenavService","recentlyVisited","getItemByRoute","urlAfterRedirects","pop","openDropdown","focused","closeDropdown","routerLink","route","fxFlex","View_SearchBarComponent_3","fxFlexOffset","currVal_15","currVal_16","currVal_17","currVal_18","currVal_19","currVal_20","klass","ngClass","has-input","View_SearchBarComponent_1","View_SearchBarComponent_2","currVal_1","currVal_4","fullscreen_toggle_component_FullscreenToggleComponent","FullscreenToggleComponent","toggleFullscreen","screenfull","View_FullscreenToggleComponent_1","View_FullscreenToggleComponent_2","SearchComponent","form_field_typings_index_ngfactory","form_field_es5","_controlNonStatic","_controlStatic","_labelChildNonStatic","_labelChildStatic","_placeholderChild","_errorChildren","_hintChildren","_prefixChildren","_suffixChildren","input_es5","fesm5_forms","text_field_es5","appearance","_control","errorState","_canLabelFloat","_shouldLabelFloat","_hideControlPlaceholder","autofilled","_shouldForward","_animationsEnabled","_isServer","readonly","_isNativeSelect","notifications_component_NotificationsComponent","NotificationsComponent","notifications_actions","markAsRead","dismiss","toggleDropdown","onClickOutside","markAllAsRead","trackById","tslib_es6","ngxs_store","notifications_state","Observable","unReadCount","badge_es5","unReadCount$","format_time_in_words_pipe","View_NotificationsComponent_8","read","icon","createdAt","ngx_perfect_scrollbar_ngfactory","ngx_perfect_scrollbar_es5","View_NotificationsComponent_7","ngForTrackBy","ngLet","autoPropagation","View_NotificationsComponent_5","ngIfThen","ngIfElse","View_NotificationsComponent_6","View_NotificationsComponent_9","View_NotificationsComponent_1","View_NotificationsComponent_2","View_NotificationsComponent_3","View_NotificationsComponent_4","ng_let_directive","notifications$","user_menu_component_UserMenuComponent","UserMenuComponent","currentUser","given_name","photoURL","logout","auth_src","fxShow.gt-sm","fxHide","list_typings_index_ngfactory","divider_typings_index_ngfactory","currVal_27","currVal_36","href","QuickpanelToggleComponent","openQuickpanel","quickpanel","toolbar_es5","_toolbarRows","View_SidenavToggleComponent_0","RenderType_SidenavToggleComponent","View_SearchBarComponent_0","RenderType_SearchBarComponent","fxShow.gt-md","menu_service","View_FullscreenToggleComponent_0","RenderType_FullscreenToggleComponent","View_SearchComponent_0","RenderType_SearchComponent","View_NotificationsComponent_0","RenderType_NotificationsComponent","View_UserMenuComponent_0","RenderType_UserMenuComponent","View_QuickpanelToggleComponent_0","RenderType_QuickpanelToggleComponent","currVal_9","profile$","NotificationsState","notificationsService","note","ngxsAfterBootstrap","ctx","setState","fetchNotifications","getState","patchState","res","_ngxs_store_operators__WEBPACK_IMPORTED_MODULE_3__","_ngxs_labs_immer_adapter__WEBPACK_IMPORTED_MODULE_2__","_notifications_actions__WEBPACK_IMPORTED_MODULE_6__","cancelUncompleted","defaults","_notifications_service__WEBPACK_IMPORTED_MODULE_5__","NotificationsModule","_angular_material_badge__WEBPACK_IMPORTED_MODULE_1__","_angular_material_button__WEBPACK_IMPORTED_MODULE_2__","_angular_material_icon__WEBPACK_IMPORTED_MODULE_3__","notificationsHandler","NOTHING","Symbol","DRAFTABLE","for","DRAFT_STATE","isDraft","isDraftable","proto","getPrototypeOf","constructor","immer_module_assign","ownKeys","Reflect","getOwnPropertySymbols","getOwnPropertyNames","shallowCopy","invokeGetters","desc","getOwnPropertyDescriptor","writable","each","cb","isEnumerable","thing","is","ImmerScope","drafts","canAutoFreeze","patches","revoke","draft","usePatches","patchListener","inversePatches","leave","descriptors","createProxy","clonePotentialDraft","assertUnrevoked","peek","finalizing","prepareCopy","copy","assigned","modified","markChanged","proxyProperty","scope","finalized","revoke$1","revoked","markChangesSweep","hasArrayChanges","hasObjectChanges","baseValue","state$1","descriptor","legacyProxy","freeze","willFinalize","isReplaced","markChangesRecursively","object","i$1","i$2","createProxy$1","Proxy","revocable","arrayTraps","objectTraps","proxy","source$1","peek$1","isUnchanged","markChanged$1","deleteProperty","owner","setPrototypeOf","modernProxy","generatePatches","basePath","assign$1","op","useRemove","replaceCount","path$1","generateArrayPatches","assignedValue","origValue","generateObjectPatches","applyPatches","patch","configDefaults","useProxies","autoFreeze","process","onAssign","onDelete","onCopy","Immer","setUseProxies","produce","bind","recipe","this$1","defaultBase","self","len","hasError","processResult","createDraft","isManual","finishDraft","setAutoFreeze","baseDraft","isFrozen","finalizeTree","root","rootPath","needPatches","finalizeProperty","isDraftProp","immer","ImmutableContext","ngxs_labs_immer_adapter_ImmutableStateContext","ImmutableStateContext","frozenState","autobindStateContext","e_1","_c","done","e_1_1","return","newState","oldState","mutatedOldState","actions","_target","_key","method","document","isCommonjs","module","keyboardAllowed","Element","fnMap","l","ret","eventNameMap","fullscreenchange","fullscreenerror","request","elem","reject","promise","requestFullscreen","onFullScreenEntered","off","on","documentElement","test","navigator","userAgent","ALLOW_KEYBOARD_INPUT","catch","onFullScreenExit","exitFullscreen","onchange","callback","onerror","eventName","raw","defineProperties","Boolean","fullscreenEnabled","default","View_MatDrawerContent_0","RenderType_MatDrawerContent","_angular_material_sidenav__WEBPACK_IMPORTED_MODULE_1__","View_MatDrawerContainer_1","View_MatDrawerContainer_2","View_MatSidenavContent_0","RenderType_MatSidenavContent","View_MatSidenavContainer_1","View_MatSidenavContainer_2","currVal_2","link","ngSwitch","View_BreadcrumbsComponent_2","ngSwitchCase","View_BreadcrumbsComponent_3","View_BreadcrumbsComponent_4","View_BreadcrumbsComponent_1","crumbs","triggerValue","View_MatSelect_3","View_MatSelect_4","_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_3__","View_MatSelect_1","View_MatSelect_2","View_MatSelect_5","_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_4__","offsetY","lockPosition","QuickpanelModule","_angular_material_list__WEBPACK_IMPORTED_MODULE_0__","_angular_material_progress_bar__WEBPACK_IMPORTED_MODULE_1__","_angular_material_sidenav__WEBPACK_IMPORTED_MODULE_2__","_angular_material_tabs__WEBPACK_IMPORTED_MODULE_3__","MatInkBar","_MAT_INK_BAR_POSITIONER","MatTabBody","MatTabBodyPortal","MatTabHeader","MatTabLabelWrapper","MatTab","MatTabNav","MatTabsModule","MAT_TABS_CONFIG","MatTabGroup","_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_1__","tslib__WEBPACK_IMPORTED_MODULE_2__","_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_3__","_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_12__","_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_16__","_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_17__","_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_18__","_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_19__","_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_20__","_angular_cdk_observers__WEBPACK_IMPORTED_MODULE_21__","_angular_common__WEBPACK_IMPORTED_MODULE_22__","offsetLeft","_inkBarPositioner","alignToElement","show","_setStyles","hide","inkBar","MatTabContent","MatTabLabel","MatTabBase","_contentPortal","isActive","_implicitContent","matTabsAnimations","translateTab","minHeight","componentFactoryResolver","_host","_centeringSub","_leavingSub","_beforeCentering","_isCenterPosition","isCentering","_afterLeavingCenter","_dirChangeSubscription","_translateTabComplete","_computePositionAnimationState","_positionIndex","_computePositionFromOrigin","_onTranslateTabStarted","clientHeight","_portalHost","MatTabLabelWrapperBase","getOffsetLeft","getOffsetWidth","[class.mat-tab-disabled]","MatPaginatedTabHeader","_scrollDistance","_selectedIndexChanged","_selectedIndex","_stopInterval","updateActiveItemIndex","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","resize","realign","updatePagination","_alignInkBarToSelectedTab","withWrap","updateActiveItem","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","focusIndex","_itemSelected","_onContentChanges","_currentTextContent","_checkPaginationEnabled","_isValidIndex","tab","containerEl","_tabListContainer","scrollWidth","scrollDistance","platform","translateX","_tabList","TRIDENT","EDGE","_scrollTo","_scrollHeader","scrollAmount","_handlePaginatorClick","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","viewLength","beforeVisiblePos","afterVisiblePos","_getMaxScrollDistance","selectedItem","selectedLabelWrapper","_inkBar","maxScrollDistance","animationMode","_disableRipple","outputs","[class.mat-tab-header-pagination-controls-enabled]","[class.mat-tab-header-rtl]","MatTabChangeEvent","MatTabGroupBase","defaultConfig","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","_animationDuration","_backgroundColor","backgroundColor","indexToSelect","_clampTabIndex","isFirstRun_1","_createChangeEvent","_subscribeToTabLabels","tabs","realignInkBar","_tabHeader","_focusChanged","_setTabBodyWrapperHeight","tabHeight","wrapper","_tabBodyWrapper","offsetHeight","_removeTabBodyWrapperHeight","_handleClick","tabHeader","idx","[class.mat-tab-group-dynamic-height]","[class.mat-tab-group-inverted-header]","updateActiveLink","MatTabLink","MatTabLinkBase","_tabNavBar","globalRippleOptions","_isActive","_tabLinkRipple","setupTriggerEvents","rippleConfig","animation","enterDuration","exitDuration","_removeTriggerEvents","[attr.aria-current]","[attr.tabIndex]","[class.mat-tab-label-active]","centered","radius","inputId"],"mappings":"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","file":"4-es5.33430a36da2d2d6cc5ef.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BreadcrumbsComponent } from './breadcrumbs.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterModule } from '@angular/router';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  imports: [MatIconModule, FlexLayoutModule, RouterModule, CommonModule],\n  exports: [BreadcrumbsComponent],\n  declarations: [BreadcrumbsComponent],\n})\nexport class BreadcrumbsModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { __extends } from 'tslib';\nimport { AriaDescriber, A11yModule } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, Inject, Input, NgZone, Optional, Renderer2, isDevMode, NgModule } from '@angular/core';\nimport { mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar nextId = 0;\n// Boilerplate for applying mixins to MatBadge.\n/**\n * \\@docs-private\n */\nvar \n// Boilerplate for applying mixins to MatBadge.\n/**\n * \\@docs-private\n */\nMatBadgeBase = /** @class */ (function () {\n    function MatBadgeBase() {\n    }\n    return MatBadgeBase;\n}());\n/** @type {?} */\nvar _MatBadgeMixinBase = mixinDisabled(MatBadgeBase);\n/**\n * Directive to display a text badge.\n */\nvar MatBadge = /** @class */ (function (_super) {\n    __extends(MatBadge, _super);\n    function MatBadge(_ngZone, _elementRef, _ariaDescriber, _renderer, _animationMode) {\n        var _this = _super.call(this) || this;\n        _this._ngZone = _ngZone;\n        _this._elementRef = _elementRef;\n        _this._ariaDescriber = _ariaDescriber;\n        _this._renderer = _renderer;\n        _this._animationMode = _animationMode;\n        /**\n         * Whether the badge has any content.\n         */\n        _this._hasContent = false;\n        _this._color = 'primary';\n        _this._overlap = true;\n        /**\n         * Position the badge should reside.\n         * Accepts any combination of 'above'|'below' and 'before'|'after'\n         */\n        _this.position = 'above after';\n        /**\n         * Size of the badge. Can be 'small', 'medium', or 'large'.\n         */\n        _this.size = 'medium';\n        /**\n         * Unique id for the badge\n         */\n        _this._id = nextId++;\n        if (isDevMode()) {\n            /** @type {?} */\n            var nativeElement = _elementRef.nativeElement;\n            if (nativeElement.nodeType !== nativeElement.ELEMENT_NODE) {\n                throw Error('matBadge must be attached to an element node.');\n            }\n        }\n        return _this;\n    }\n    Object.defineProperty(MatBadge.prototype, \"color\", {\n        /** The color of the badge. Can be `primary`, `accent`, or `warn`. */\n        get: /**\n         * The color of the badge. Can be `primary`, `accent`, or `warn`.\n         * @return {?}\n         */\n        function () { return this._color; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._setColor(value);\n            this._color = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatBadge.prototype, \"overlap\", {\n        /** Whether the badge should overlap its contents or not */\n        get: /**\n         * Whether the badge should overlap its contents or not\n         * @return {?}\n         */\n        function () { return this._overlap; },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._overlap = coerceBooleanProperty(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatBadge.prototype, \"description\", {\n        /** Message used to describe the decorated element via aria-describedby */\n        get: /**\n         * Message used to describe the decorated element via aria-describedby\n         * @return {?}\n         */\n        function () { return this._description; },\n        set: /**\n         * @param {?} newDescription\n         * @return {?}\n         */\n        function (newDescription) {\n            if (newDescription !== this._description) {\n                /** @type {?} */\n                var badgeElement = this._badgeElement;\n                this._updateHostAriaDescription(newDescription, this._description);\n                this._description = newDescription;\n                if (badgeElement) {\n                    newDescription ? badgeElement.setAttribute('aria-label', newDescription) :\n                        badgeElement.removeAttribute('aria-label');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatBadge.prototype, \"hidden\", {\n        /** Whether the badge is hidden. */\n        get: /**\n         * Whether the badge is hidden.\n         * @return {?}\n         */\n        function () { return this._hidden; },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._hidden = coerceBooleanProperty(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Whether the badge is above the host or not */\n    /**\n     * Whether the badge is above the host or not\n     * @return {?}\n     */\n    MatBadge.prototype.isAbove = /**\n     * Whether the badge is above the host or not\n     * @return {?}\n     */\n    function () {\n        return this.position.indexOf('below') === -1;\n    };\n    /** Whether the badge is after the host or not */\n    /**\n     * Whether the badge is after the host or not\n     * @return {?}\n     */\n    MatBadge.prototype.isAfter = /**\n     * Whether the badge is after the host or not\n     * @return {?}\n     */\n    function () {\n        return this.position.indexOf('before') === -1;\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MatBadge.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        /** @type {?} */\n        var contentChange = changes['content'];\n        if (contentChange) {\n            /** @type {?} */\n            var value = contentChange.currentValue;\n            this._hasContent = value != null && (\"\" + value).trim().length > 0;\n            this._updateTextContent();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatBadge.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var badgeElement = this._badgeElement;\n        if (badgeElement) {\n            if (this.description) {\n                this._ariaDescriber.removeDescription(badgeElement, this.description);\n            }\n            // When creating a badge through the Renderer, Angular will keep it in an index.\n            // We have to destroy it ourselves, otherwise it'll be retained in memory.\n            if (this._renderer.destroyNode) {\n                this._renderer.destroyNode(badgeElement);\n            }\n        }\n    };\n    /**\n     * Gets the element into which the badge's content is being rendered.\n     * Undefined if the element hasn't been created (e.g. if the badge doesn't have content).\n     */\n    /**\n     * Gets the element into which the badge's content is being rendered.\n     * Undefined if the element hasn't been created (e.g. if the badge doesn't have content).\n     * @return {?}\n     */\n    MatBadge.prototype.getBadgeElement = /**\n     * Gets the element into which the badge's content is being rendered.\n     * Undefined if the element hasn't been created (e.g. if the badge doesn't have content).\n     * @return {?}\n     */\n    function () {\n        return this._badgeElement;\n    };\n    /** Injects a span element into the DOM with the content. */\n    /**\n     * Injects a span element into the DOM with the content.\n     * @private\n     * @return {?}\n     */\n    MatBadge.prototype._updateTextContent = /**\n     * Injects a span element into the DOM with the content.\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (!this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n        }\n        else {\n            this._badgeElement.textContent = this.content;\n        }\n        return this._badgeElement;\n    };\n    /** Creates the badge element */\n    /**\n     * Creates the badge element\n     * @private\n     * @return {?}\n     */\n    MatBadge.prototype._createBadgeElement = /**\n     * Creates the badge element\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var badgeElement = this._renderer.createElement('span');\n        /** @type {?} */\n        var activeClass = 'mat-badge-active';\n        /** @type {?} */\n        var contentClass = 'mat-badge-content';\n        // Clear any existing badges which may have persisted from a server-side render.\n        this._clearExistingBadges(contentClass);\n        badgeElement.setAttribute('id', \"mat-badge-content-\" + this._id);\n        badgeElement.classList.add(contentClass);\n        badgeElement.textContent = this.content;\n        if (this._animationMode === 'NoopAnimations') {\n            badgeElement.classList.add('_mat-animation-noopable');\n        }\n        if (this.description) {\n            badgeElement.setAttribute('aria-label', this.description);\n        }\n        this._elementRef.nativeElement.appendChild(badgeElement);\n        // animate in after insertion\n        if (typeof requestAnimationFrame === 'function' && this._animationMode !== 'NoopAnimations') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                function () {\n                    badgeElement.classList.add(activeClass);\n                }));\n            }));\n        }\n        else {\n            badgeElement.classList.add(activeClass);\n        }\n        return badgeElement;\n    };\n    /** Sets the aria-label property on the element */\n    /**\n     * Sets the aria-label property on the element\n     * @private\n     * @param {?} newDescription\n     * @param {?} oldDescription\n     * @return {?}\n     */\n    MatBadge.prototype._updateHostAriaDescription = /**\n     * Sets the aria-label property on the element\n     * @private\n     * @param {?} newDescription\n     * @param {?} oldDescription\n     * @return {?}\n     */\n    function (newDescription, oldDescription) {\n        // ensure content available before setting label\n        /** @type {?} */\n        var content = this._updateTextContent();\n        if (oldDescription) {\n            this._ariaDescriber.removeDescription(content, oldDescription);\n        }\n        if (newDescription) {\n            this._ariaDescriber.describe(content, newDescription);\n        }\n    };\n    /** Adds css theme class given the color to the component host */\n    /**\n     * Adds css theme class given the color to the component host\n     * @private\n     * @param {?} colorPalette\n     * @return {?}\n     */\n    MatBadge.prototype._setColor = /**\n     * Adds css theme class given the color to the component host\n     * @private\n     * @param {?} colorPalette\n     * @return {?}\n     */\n    function (colorPalette) {\n        if (colorPalette !== this._color) {\n            if (this._color) {\n                this._elementRef.nativeElement.classList.remove(\"mat-badge-\" + this._color);\n            }\n            if (colorPalette) {\n                this._elementRef.nativeElement.classList.add(\"mat-badge-\" + colorPalette);\n            }\n        }\n    };\n    /** Clears any existing badges that might be left over from server-side rendering. */\n    /**\n     * Clears any existing badges that might be left over from server-side rendering.\n     * @private\n     * @param {?} cssClass\n     * @return {?}\n     */\n    MatBadge.prototype._clearExistingBadges = /**\n     * Clears any existing badges that might be left over from server-side rendering.\n     * @private\n     * @param {?} cssClass\n     * @return {?}\n     */\n    function (cssClass) {\n        /** @type {?} */\n        var element = this._elementRef.nativeElement;\n        /** @type {?} */\n        var childCount = element.children.length;\n        // Use a reverse while, because we'll be removing elements from the list as we're iterating.\n        while (childCount--) {\n            /** @type {?} */\n            var currentChild = element.children[childCount];\n            if (currentChild.classList.contains(cssClass)) {\n                element.removeChild(currentChild);\n            }\n        }\n    };\n    MatBadge.decorators = [\n        { type: Directive, args: [{\n                    selector: '[matBadge]',\n                    inputs: ['disabled: matBadgeDisabled'],\n                    host: {\n                        'class': 'mat-badge',\n                        '[class.mat-badge-overlap]': 'overlap',\n                        '[class.mat-badge-above]': 'isAbove()',\n                        '[class.mat-badge-below]': '!isAbove()',\n                        '[class.mat-badge-before]': '!isAfter()',\n                        '[class.mat-badge-after]': 'isAfter()',\n                        '[class.mat-badge-small]': 'size === \"small\"',\n                        '[class.mat-badge-medium]': 'size === \"medium\"',\n                        '[class.mat-badge-large]': 'size === \"large\"',\n                        '[class.mat-badge-hidden]': 'hidden || !_hasContent',\n                        '[class.mat-badge-disabled]': 'disabled',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatBadge.ctorParameters = function () { return [\n        { type: NgZone },\n        { type: ElementRef },\n        { type: AriaDescriber },\n        { type: Renderer2 },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatBadge.propDecorators = {\n        color: [{ type: Input, args: ['matBadgeColor',] }],\n        overlap: [{ type: Input, args: ['matBadgeOverlap',] }],\n        position: [{ type: Input, args: ['matBadgePosition',] }],\n        content: [{ type: Input, args: ['matBadge',] }],\n        description: [{ type: Input, args: ['matBadgeDescription',] }],\n        size: [{ type: Input, args: ['matBadgeSize',] }],\n        hidden: [{ type: Input, args: ['matBadgeHidden',] }]\n    };\n    return MatBadge;\n}(_MatBadgeMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatBadgeModule = /** @class */ (function () {\n    function MatBadgeModule() {\n    }\n    MatBadgeModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        A11yModule,\n                        MatCommonModule\n                    ],\n                    exports: [MatBadge],\n                    declarations: [MatBadge],\n                },] },\n    ];\n    return MatBadgeModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatBadgeModule, MatBadge };\n//# sourceMappingURL=badge.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { __extends } from 'tslib';\nimport { Component, ChangeDetectionStrategy, ElementRef, Inject, Input, Output, EventEmitter, Optional, NgZone, ViewEncapsulation, ViewChild, InjectionToken, inject, NgModule } from '@angular/core';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatProgressBar.\n/**\n * \\@docs-private\n */\nvar \n// Boilerplate for applying mixins to MatProgressBar.\n/**\n * \\@docs-private\n */\nMatProgressBarBase = /** @class */ (function () {\n    function MatProgressBarBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatProgressBarBase;\n}());\n/** @type {?} */\nvar _MatProgressBarMixinBase = mixinColor(MatProgressBarBase, 'primary');\n/**\n * Injection token used to provide the current location to `MatProgressBar`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * \\@docs-private\n * @type {?}\n */\nvar MAT_PROGRESS_BAR_LOCATION = new InjectionToken('mat-progress-bar-location', { providedIn: 'root', factory: MAT_PROGRESS_BAR_LOCATION_FACTORY });\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_PROGRESS_BAR_LOCATION_FACTORY() {\n    /** @type {?} */\n    var _document = inject(DOCUMENT);\n    /** @type {?} */\n    var _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: (/**\n         * @return {?}\n         */\n        function () { return _location ? (_location.pathname + _location.search) : ''; })\n    };\n}\n/**\n * Counter used to generate unique IDs for progress bars.\n * @type {?}\n */\nvar progressbarId = 0;\n/**\n * `<mat-progress-bar>` component.\n */\nvar MatProgressBar = /** @class */ (function (_super) {\n    __extends(MatProgressBar, _super);\n    function MatProgressBar(_elementRef, _ngZone, _animationMode, \n    /**\n     * @deprecated `location` parameter to be made required.\n     * @breaking-change 8.0.0\n     */\n    location) {\n        var _this = _super.call(this, _elementRef) || this;\n        _this._elementRef = _elementRef;\n        _this._ngZone = _ngZone;\n        _this._animationMode = _animationMode;\n        /**\n         * Flag that indicates whether NoopAnimations mode is set to true.\n         */\n        _this._isNoopAnimation = false;\n        _this._value = 0;\n        _this._bufferValue = 0;\n        /**\n         * Event emitted when animation of the primary progress bar completes. This event will not\n         * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n         * animations (indeterminate and query).\n         */\n        _this.animationEnd = new EventEmitter();\n        /**\n         * Reference to animation end subscription to be unsubscribed on destroy.\n         */\n        _this._animationEndSubscription = Subscription.EMPTY;\n        /**\n         * Mode of the progress bar.\n         *\n         * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n         * 'determinate'.\n         * Mirrored to mode attribute.\n         */\n        _this.mode = 'determinate';\n        /**\n         * ID of the progress bar.\n         */\n        _this.progressbarId = \"mat-progress-bar-\" + progressbarId++;\n        // We need to prefix the SVG reference with the current path, otherwise they won't work\n        // in Safari if the page has a `<base>` tag. Note that we need quotes inside the `url()`,\n        // because named route URLs can contain parentheses (see #12338). Also we don't use since\n        // we can't tell the difference between whether\n        // the consumer is using the hash location strategy or not, because `Location` normalizes\n        // both `/#/foo/bar` and `/foo/bar` to the same thing.\n        /** @type {?} */\n        var path = location ? location.getPathname().split('#')[0] : '';\n        _this._rectangleFillValue = \"url('\" + path + \"#\" + _this.progressbarId + \"')\";\n        _this._isNoopAnimation = _animationMode === 'NoopAnimations';\n        return _this;\n    }\n    Object.defineProperty(MatProgressBar.prototype, \"value\", {\n        /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n        get: /**\n         * Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow.\n         * @return {?}\n         */\n        function () { return this._value; },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this._value = clamp(v || 0);\n            // When noop animation is set to true, trigger animationEnd directly.\n            if (this._isNoopAnimation) {\n                this._emitAnimationEnd();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatProgressBar.prototype, \"bufferValue\", {\n        /** Buffer value of the progress bar. Defaults to zero. */\n        get: /**\n         * Buffer value of the progress bar. Defaults to zero.\n         * @return {?}\n         */\n        function () { return this._bufferValue; },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) { this._bufferValue = clamp(v || 0); },\n        enumerable: true,\n        configurable: true\n    });\n    /** Gets the current transform value for the progress bar's primary indicator. */\n    /**\n     * Gets the current transform value for the progress bar's primary indicator.\n     * @return {?}\n     */\n    MatProgressBar.prototype._primaryTransform = /**\n     * Gets the current transform value for the progress bar's primary indicator.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var scale = this.value / 100;\n        return { transform: \"scaleX(\" + scale + \")\" };\n    };\n    /**\n     * Gets the current transform value for the progress bar's buffer indicator. Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     */\n    /**\n     * Gets the current transform value for the progress bar's buffer indicator. Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     * @return {?}\n     */\n    MatProgressBar.prototype._bufferTransform = /**\n     * Gets the current transform value for the progress bar's buffer indicator. Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     * @return {?}\n     */\n    function () {\n        if (this.mode === 'buffer') {\n            /** @type {?} */\n            var scale = this.bufferValue / 100;\n            return { transform: \"scaleX(\" + scale + \")\" };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatProgressBar.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this._isNoopAnimation) {\n            // Run outside angular so change detection didn't get triggered on every transition end\n            // instead only on the animation that we care about (primary value bar's transitionend)\n            this._ngZone.runOutsideAngular(((/**\n             * @return {?}\n             */\n            function () {\n                /** @type {?} */\n                var element = _this._primaryValueBar.nativeElement;\n                _this._animationEndSubscription =\n                    ((/** @type {?} */ (fromEvent(element, 'transitionend'))))\n                        .pipe(filter(((/**\n                     * @param {?} e\n                     * @return {?}\n                     */\n                    function (e) { return e.target === element; }))))\n                        .subscribe((/**\n                     * @return {?}\n                     */\n                    function () { return _this._ngZone.run((/**\n                     * @return {?}\n                     */\n                    function () { return _this._emitAnimationEnd(); })); }));\n            })));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatProgressBar.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._animationEndSubscription.unsubscribe();\n    };\n    /** Emit an animationEnd event if in determinate or buffer mode. */\n    /**\n     * Emit an animationEnd event if in determinate or buffer mode.\n     * @private\n     * @return {?}\n     */\n    MatProgressBar.prototype._emitAnimationEnd = /**\n     * Emit an animationEnd event if in determinate or buffer mode.\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this.mode === 'determinate' || this.mode === 'buffer') {\n            this.animationEnd.next({ value: this.value });\n        }\n    };\n    MatProgressBar.decorators = [\n        { type: Component, args: [{selector: 'mat-progress-bar',\n                    exportAs: 'matProgressBar',\n                    host: {\n                        'role': 'progressbar',\n                        'aria-valuemin': '0',\n                        'aria-valuemax': '100',\n                        '[attr.aria-valuenow]': '(mode === \"indeterminate\" || mode === \"query\") ? null : value',\n                        '[attr.mode]': 'mode',\n                        'class': 'mat-progress-bar',\n                        '[class._mat-animation-noopable]': '_isNoopAnimation',\n                    },\n                    inputs: ['color'],\n                    template: \"<svg width=\\\"100%\\\" height=\\\"4\\\" focusable=\\\"false\\\" class=\\\"mat-progress-bar-background mat-progress-bar-element\\\"><defs><pattern [id]=\\\"progressbarId\\\" x=\\\"4\\\" y=\\\"0\\\" width=\\\"8\\\" height=\\\"4\\\" patternUnits=\\\"userSpaceOnUse\\\"><circle cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"2\\\"/></pattern></defs><rect [attr.fill]=\\\"_rectangleFillValue\\\" width=\\\"100%\\\" height=\\\"100%\\\"/></svg><div class=\\\"mat-progress-bar-buffer mat-progress-bar-element\\\" [ngStyle]=\\\"_bufferTransform()\\\"></div><div class=\\\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\\\" [ngStyle]=\\\"_primaryTransform()\\\" #primaryValueBar></div><div class=\\\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\\\"></div>\",\n                    styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}@media (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-background{display:none}}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}@media (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}@media (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:'';display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2s infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2s infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after{animation:none;transition:none}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(.5,0,.70173,.49582);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(.30244,.38135,.55,.95635);transform:translateX(83.67142%)}100%{transform:translateX(200.61106%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(.08)}36.65%{animation-timing-function:cubic-bezier(.33473,.12482,.78584,1);transform:scaleX(.08)}69.15%{animation-timing-function:cubic-bezier(.06,.11,.6,1);transform:scaleX(.66148)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:translateX(37.65191%)}48.35%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:translateX(84.38617%)}100%{transform:translateX(160.27778%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:scaleX(.08)}19.15%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:scaleX(.4571)}44.15%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:scaleX(.72796)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\"],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                },] },\n    ];\n    /** @nocollapse */\n    MatProgressBar.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: NgZone },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PROGRESS_BAR_LOCATION,] }] }\n    ]; };\n    MatProgressBar.propDecorators = {\n        value: [{ type: Input }],\n        bufferValue: [{ type: Input }],\n        _primaryValueBar: [{ type: ViewChild, args: ['primaryValueBar', { static: false },] }],\n        animationEnd: [{ type: Output }],\n        mode: [{ type: Input }]\n    };\n    return MatProgressBar;\n}(_MatProgressBarMixinBase));\n/**\n * Clamps a value to be between two numbers, by default 0 and 100.\n * @param {?} v\n * @param {?=} min\n * @param {?=} max\n * @return {?}\n */\nfunction clamp(v, min, max) {\n    if (min === void 0) { min = 0; }\n    if (max === void 0) { max = 100; }\n    return Math.max(min, Math.min(max, v));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatProgressBarModule = /** @class */ (function () {\n    function MatProgressBarModule() {\n    }\n    MatProgressBarModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule, MatCommonModule],\n                    exports: [MatProgressBar, MatCommonModule],\n                    declarations: [MatProgressBar],\n                },] },\n    ];\n    return MatProgressBarModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatProgressBarModule, MAT_PROGRESS_BAR_LOCATION_FACTORY, MAT_PROGRESS_BAR_LOCATION, MatProgressBar };\n//# sourceMappingURL=progress-bar.es5.js.map\n","import { Inject, OnInit } from '@angular/core';\nimport { Entity } from './entity.model';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nexport abstract class EntityFormComponent<TEntity extends Entity> implements OnInit {\n  title: string;\n  entity: TEntity;\n  entityForm: FormGroup;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) protected data: { title: string; payload: TEntity },\n    protected dialogRef: MatDialogRef<EntityFormComponent<TEntity>>,\n  ) {\n    this.title = data.title;\n    this.entity = data.payload;\n  }\n\n  abstract buildForm(entity: TEntity);\n\n  ngOnInit() {\n    this.buildForm(this.entity);\n  }\n\n  submit() {\n    this.dialogRef.close(this.entityForm.value as Partial<TEntity>);\n  }\n}\n","import { AfterViewInit, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { EntityService } from './entity.service';\nimport { Entity, EntityColumnDef } from './entity.model';\nimport { concatMap, filter, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { EntityFormComponent } from './entity-form.component';\nimport { ComponentType } from '@angular/cdk/portal/typings/portal';\nimport { SelectionChange, SelectionModel } from '@angular/cdk/collections';\nimport { untilDestroy } from '@ngx-starter-kit/ngx-utils';\nimport { parseISO } from 'date-fns/esm';\n\nexport abstract class EntitiesComponent<TEntity extends Entity, TService extends EntityService<TEntity>>\n  implements OnInit, OnDestroy, AfterViewInit {\n  dataSource = new MatTableDataSource<TEntity>([]);\n  selection = new SelectionModel<TEntity>(false, []);\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild('filter', { static: true }) filterRef: ElementRef;\n\n  readonly loading$;\n  readonly columns: Array<EntityColumnDef<TEntity>>;\n  readonly title?: string = null;\n  readonly showToolbar?: boolean = false;\n  readonly showColumnFilter?: boolean = false;\n  readonly showActionColumn?: boolean = false;\n  readonly maxSelectable?: number = 1;\n  readonly actionColumn?: string = 'Actions';\n  readonly selectColumn?: string = 'select';\n  // TODO: make them optional abstract\n  readonly formRef?: ComponentType<EntityFormComponent<TEntity>>;\n  getNewEntity?(): TEntity;\n  filterPredicate?(entity: TEntity, filter: string): boolean;\n  // TODO: make them optional abstract end\n\n  constructor(protected entityService: TService) {\n    this.loading$ = entityService.loading$;\n  }\n\n  ngOnInit() {\n    this.selection = new SelectionModel<TEntity>(this.maxSelectable > 1, []);\n\n    this.update().subscribe();\n    if (this.filterPredicate) {\n      this.dataSource.filterPredicate = this.filterPredicate;\n    }\n\n    // remove first selected entity if more then max selected.\n    if (this.maxSelectable > 1) {\n      // is multi select mode?\n      this.selection.changed\n        .pipe(\n          // tap(console.log),\n          filter((sc: SelectionChange<TEntity>) => sc.added.length > 0),\n          filter(_ => this.selection.selected.length > this.maxSelectable),\n          untilDestroy(this),\n        )\n        .subscribe(_ => this.selection.deselect(this.selection.selected.shift()));\n    }\n\n    // fromEvent(this.filterRef.nativeElement, 'keyup')\n    //   .pipe(\n    //     debounceTime(150),\n    //     distinctUntilChanged()\n    //   ).subscribe(() => {\n    //   this.paginator.pageIndex = 0;\n    //   this.applyFilter(this.filterRef.nativeElement.value)\n    // });\n  }\n\n  ngOnDestroy() {}\n\n  ngAfterViewInit() {\n    // Needs to be set up after the view is initialized since the data source will look at the sort\n    // and paginator's initial values to know what data should be rendered.\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  getById(id: number) {\n    return this.entityService.getById(id);\n  }\n\n  delete(item: TEntity) {\n    return this.entityService.delete(item.id).pipe(concatMap(_ => this.update()));\n  }\n\n  updateOrCreate(entity: TEntity, id: number) {\n    if (id) {\n      return this.entityService.put(id, entity).pipe(concatMap(_ => this.update()));\n    } else {\n      return this.entityService.post(entity).pipe(concatMap(_ => this.update()));\n    }\n  }\n\n  /**\n   * Overwrite this method, to get the data your way.\n   */\n  getData(): Observable<TEntity[]> {\n    return this.entityService.getAll();\n  }\n\n  protected update() {\n    return this.getData().pipe(\n      map(result => {\n        this.dataSource = new MatTableDataSource<TEntity>(result);\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n        // return nothing as we don't need.\n        // return result\n      }),\n    );\n  }\n\n  /** Whether all filtered rows are selected. */\n  isAllFilteredRowsSelected() {\n    return this.dataSource.filteredData.every(data => this.selection.isSelected(data));\n  }\n\n  /** Whether the selection it totally matches the filtered rows. */\n  isMasterToggleChecked() {\n    return (\n      this.selection.hasValue() &&\n      this.isAllFilteredRowsSelected() &&\n      this.selection.selected.length >= this.dataSource.filteredData.length\n    );\n  }\n\n  /**\n   * Whether there is a selection that doesn't capture all the\n   * filtered rows there are no filtered rows displayed.\n   */\n  isMasterToggleIndeterminate() {\n    return this.selection.hasValue() && (!this.isAllFilteredRowsSelected() || !this.dataSource.filteredData.length);\n  }\n\n  /** Selects all filtered rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isMasterToggleChecked()) {\n      this.selection.clear();\n    } else {\n      this.dataSource.filteredData.forEach(data => this.selection.select(data));\n    }\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  get displayedColumns(): string[] {\n    // prettier-ignore\n    let displayedColumns = this.columns\n      .filter(column => column.visible)\n      .map(x => x.property);\n\n    if (this.maxSelectable > 0) {\n      displayedColumns.unshift(this.selectColumn);\n    }\n    if (this.showActionColumn) {\n      displayedColumns = displayedColumns.concat(this.actionColumn);\n    }\n    return displayedColumns;\n  }\n\n  selectRow(entity: TEntity) {\n    if (this.maxSelectable > 0) {\n      this.selection.toggle(entity);\n      if (this.selection.isSelected(entity)) {\n        this.showDetails(entity);\n      } else {\n        this.showDetails(undefined);\n      }\n    }\n  }\n\n  getRouteAnimation(outlet) {\n    return outlet.activatedRouteData.depth || 5;\n    // return outlet.isActivated ? outlet.activatedRoute : ''\n  }\n\n  /**\n   * will be called with entity or undefined\n   */\n  showDetails(entity: TEntity) {}\n\n  toggleColumnVisibility(column, event) {\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    column.visible = !column.visible;\n  }\n\n  protected stringToDate(date: string | number | Date): number | Date {\n    const isString = s => typeof s === 'string' || s instanceof String;\n    return isString(date) ? parseISO(date) : date;\n  }\n}\n","import { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { environment } from '@env/environment';\nimport { Entity } from './entity.model';\nimport { catchError, finalize, retry } from 'rxjs/operators';\nimport { format } from 'date-fns/esm';\nimport { IPagination } from './pagination';\n\nexport interface Filter {\n  [name: string]: string | string[];\n}\n\nexport abstract class EntityService<T extends Entity> {\n  protected readonly baseUrl = environment.API_BASE_URL;\n  protected loadingSubject = new BehaviorSubject<boolean>(false);\n  public loading$ = this.loadingSubject.asObservable();\n\n  protected abstract entityPath: string;\n\n  constructor(protected httpClient: HttpClient) {}\n\n  getById(id: number | string) {\n    // this.loadingSubject.next(true);\n    return this.httpClient.get<T>(`${this.baseUrl}/${this.entityPath}/${id}`).pipe(\n      catchError(this.handleError),\n      // finalize(() => this.loadingSubject.next(false))\n    );\n  }\n\n  // findAll(filter: Filter, order = 'DESC', skip = 0, take = 100): Observable<IPagination<T>> | Observable<never> {\n  findAll(filter: Filter, order = 'DESC', skip = 0, take = 100): Observable<T[]> | Observable<never> {\n    this.loadingSubject.next(true);\n    return this.httpClient\n      .get<T[]>(`${this.baseUrl}/${this.entityPath}`, {\n        params: new HttpParams()\n          .set('filter', 'filter TODO')\n          .set('order', order)\n          .set('skip', skip.toString())\n          .set('take', take.toString()),\n      })\n      .pipe(\n        retry(3), // retry a failed request up to 3 times\n        catchError(this.handleError),\n        finalize(() => this.loadingSubject.next(false)),\n      );\n  }\n\n  // getAll(): Observable<IPagination<T>> {\n  getAll(): Observable<T[]> {\n    this.loadingSubject.next(true);\n    return this.httpClient.get<T[]>(`${this.baseUrl}/${this.entityPath}`).pipe(\n      retry(3), // retry a failed request up to 3 times\n      catchError(this.handleError),\n      finalize(() => this.loadingSubject.next(false)),\n    );\n  }\n\n  delete(id: number | string) {\n    this.loadingSubject.next(true);\n    return this.httpClient.delete(`${this.baseUrl}/${this.entityPath}/${id}`).pipe(\n      catchError(this.handleError),\n      finalize(() => this.loadingSubject.next(false)),\n    );\n  }\n\n  post(entity: T) {\n    this.loadingSubject.next(true);\n    return this.httpClient.post(`${this.baseUrl}/${this.entityPath}`, entity).pipe(\n      catchError(this.handleError),\n      finalize(() => this.loadingSubject.next(false)),\n    );\n  }\n\n  put(id: number | string, entity: T) {\n    console.log(entity);\n    this.loadingSubject.next(true);\n    return this.httpClient.put(`${this.baseUrl}/${this.entityPath}/${id}`, entity).pipe(\n      catchError(this.handleError),\n      finalize(() => this.loadingSubject.next(false)),\n    );\n  }\n\n  protected handleError(error: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage: string;\n    if (typeof error === 'string') {\n      errorMessage = error;\n    } else {\n      if (error.error instanceof ErrorEvent) {\n        // A client-side or network error occurred. Handle it accordingly.\n        errorMessage = `An error occurred: ${error.error.message}`;\n      } else {\n        // The backend returned an unsuccessful response code.\n        // The response body may contain clues as to what went wrong,\n        errorMessage = `Backend returned code ${error.status}, with body ${error.message}`;\n      }\n    }\n    console.error(error);\n    // return an ErrorObservable with a user-facing error message\n    return throwError(errorMessage);\n  }\n\n  protected convertToJson(body: any) {\n    const temporalFunctionToJson = Date.prototype.toJSON;\n    Date.prototype.toJSON = function() {\n      return format(this, 'YYYY-MM-DD');\n    };\n\n    const jsonBody = JSON.stringify(body);\n\n    Date.prototype.toJSON = temporalFunctionToJson;\n    return jsonBody;\n  }\n}\n","import { TemplateRef } from '@angular/core';\n\nexport abstract class Entity {\n  abstract get id(): number | string;\n  [key: string]: any;\n  constructor(init?: Partial<Entity>) {\n    Object.assign(this, init);\n  }\n}\n\nexport class EntityColumnDef<T> {\n  readonly property: string;\n  readonly header = this.property;\n  public visible = true;\n  readonly sticky?: 'start' | 'end';\n  readonly template?: TemplateRef<any>;\n  readonly displayFn = (entity: T) => entity[this.property];\n\n  public constructor(init?: Partial<EntityColumnDef<T>>) {\n    Object.assign(this, init);\n  }\n}\n","export * from './lib/shared.module';\nexport * from './lib/shared-flex-layout.module';\nexport * from './lib/shared-perfect-scrollbar.module';\nexport * from './lib/shared-material-date.module';\n\nexport * from './lib/containers/entity/entity-form.component';\nexport * from './lib/containers/entity/entity.component';\nexport * from './lib/containers/entity/entity.service';\nexport * from './lib/containers/entity/entity.model';\nexport * from './lib/containers/entity/pagination';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-quickpanel',\n  templateUrl: './quickpanel.component.html',\n  styleUrls: ['./quickpanel.component.scss'],\n})\nexport class QuickpanelComponent implements OnInit {\n  today: number = Date.now();\n\n  events = [\n    {\n      id: 'id',\n      title: 'Business Meeting',\n      time: '05:00 PM',\n      state: 'state',\n    },\n    {\n      id: 'id',\n      title: 'Ask for a Vacation',\n      time: '05:00 PM',\n      state: 'state',\n    },\n    {\n      id: 'id',\n      title: 'Dinner with Micheal',\n      time: '05:00 PM',\n      state: 'state',\n    },\n    {\n      id: 'id',\n      title: 'Deadline for Project ABC',\n      time: '05:00 PM',\n      state: 'state',\n    },\n  ];\n\n  todolists = [\n    {\n      id: 'id',\n      title: 'Get to know Angular more',\n      time: 'Added:4 days ago',\n    },\n    {\n      id: 'id',\n      title: 'Configure new Router',\n      time: 'Added:4 days ago',\n    },\n    {\n      id: 'id',\n      title: 'Invite Joy to play Carroms',\n      time: 'Added:4 days ago',\n    },\n    {\n      id: 'id',\n      title: 'Check SRS of Project X',\n      time: 'Added:4 days ago',\n    },\n  ];\n\n  messages = [\n    { from: 'Catherin', img: 'assets/img/avatars/4.jpg', subject: 'Shopping', content: 'hi there??' },\n    { from: 'Jack', img: 'assets/img/avatars/16.jpg', subject: 'Function', content: 'yes' },\n    { from: 'Karina', img: 'assets/img/avatars/1.jpg', subject: 'Get together', content: 'nice' },\n    { from: 'Micheal', img: 'assets/img/avatars/11.jpg', subject: 'Trip', content: 'ya.. I will' },\n    { from: 'Ashik', img: 'assets/img/avatars/19.jpg', subject: 'Meeting', content: 'Time??' },\n    { from: 'Joy', img: 'assets/img/avatars/10.jpg', subject: 'Party', content: 'Lets enjoy' },\n  ];\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<svg width=\"100%\" height=\"4\" focusable=\"false\" class=\"mat-progress-bar-background mat-progress-bar-element\"><defs><pattern [id]=\"progressbarId\" x=\"4\" y=\"0\" width=\"8\" height=\"4\" patternUnits=\"userSpaceOnUse\"><circle cx=\"2\" cy=\"2\" r=\"2\"/></pattern></defs><rect [attr.fill]=\"_rectangleFillValue\" width=\"100%\" height=\"100%\"/></svg><div class=\"mat-progress-bar-buffer mat-progress-bar-element\" [ngStyle]=\"_bufferTransform()\"></div><div class=\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\" [ngStyle]=\"_primaryTransform()\" #primaryValueBar></div><div class=\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\"></div>","<div style=\"position: static;\" [class.ps]=\"usePSClass\" [perfectScrollbar]=\"config\" [disabled]=\"disabled\">\n  <div class=\"ps-content\">\n    <ng-content></ng-content>\n  </div>\n\n  <div *ngIf=\"scrollIndicators\" class=\"ps-overlay\" [class.ps-at-top]=\"states.top\" [class.ps-at-left]=\"states.left\" [class.ps-at-right]=\"states.right\" [class.ps-at-bottom]=\"states.bottom\">\n    <div class=\"ps-indicator-top\" [class.ps-indicator-show]=\"indicatorY && interaction\"></div>\n    <div class=\"ps-indicator-left\" [class.ps-indicator-show]=\"indicatorX && interaction\"></div>\n    <div class=\"ps-indicator-right\" [class.ps-indicator-show]=\"indicatorX && interaction\"></div>\n    <div class=\"ps-indicator-bottom\" [class.ps-indicator-show]=\"indicatorY && interaction\"></div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { AuthState } from '@ngx-starter-kit/auth';\n// import { AuthState } from '@ngx-starter-kit/oidc';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'ngx-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss'],\n})\nexport class ToolbarComponent implements OnInit {\n  @Select(AuthState.profile) profile$: Observable<any>;\n  @Input() quickpanel: MatSidenav;\n  @Input() sidenav: MatSidenav;\n  isFullscreen = false;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { ThemePickerModule } from '@ngx-starter-kit/theme-picker';\nimport { NotificationsModule } from '@ngx-starter-kit/notifications';\n\nimport { ToolbarComponent } from './toolbar.component';\nimport { SearchComponent } from './components/search/search.component';\nimport { SearchBarComponent } from './components/search-bar/search-bar.component';\nimport { UserMenuComponent } from './components/user-menu/user-menu.component';\nimport { FullscreenToggleComponent } from './components/fullscreen-toggle/fullscreen-toggle.component';\nimport { SidenavToggleComponent } from './components/sidenav-toggle/sidenav-toggle.component';\nimport { QuickpanelToggleComponent } from './components/quickpanel-toggle/quickpanel-toggle.component';\nimport { SharedFlexLayoutModule } from '@ngx-starter-kit/shared';\nimport { ClickOutsideModule } from '@ngx-starter-kit/ngx-utils';\n\nconst matModules = [\n  MatToolbarModule,\n  MatButtonModule,\n  MatIconModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatListModule,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    [...matModules],\n    ClickOutsideModule,\n    SharedFlexLayoutModule,\n    ThemePickerModule,\n    RouterModule,\n    NotificationsModule,\n  ],\n  exports: [ToolbarComponent],\n  declarations: [\n    ToolbarComponent,\n    SearchComponent,\n    SearchBarComponent,\n    UserMenuComponent,\n    FullscreenToggleComponent,\n    SidenavToggleComponent,\n    QuickpanelToggleComponent,\n  ],\n})\nexport class ToolbarModule {}\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nexport interface Crumb {\n  name: string;\n  link?: string;\n}\n@Component({\n  selector: 'ngx-breadcrumbs',\n  templateUrl: './breadcrumbs.component.html',\n  styleUrls: ['./breadcrumbs.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BreadcrumbsComponent implements OnInit {\n  @Input()\n  readonly title: string;\n  @Input()\n  crumbs: ReadonlyArray<Crumb>;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { animate, animateChild, query, state, style, transition, trigger } from '@angular/animations';\nimport { __extends } from 'tslib';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { A, DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, RIGHT_ARROW, SPACE, UP_ARROW, hasModifierKey } from '@angular/cdk/keycodes';\nimport { CdkConnectedOverlay, Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { Attribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, Directive, ElementRef, EventEmitter, Inject, InjectionToken, Input, isDevMode, NgZone, Optional, Output, Self, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { _countGroupLabelsBeforeOption, _getOptionScrollPosition, ErrorStateMatcher, MAT_OPTION_PARENT_COMPONENT, MatOptgroup, MatOption, mixinDisabled, mixinDisableRipple, mixinErrorState, mixinTabIndex, MatCommonModule, MatOptionModule } from '@angular/material/core';\nimport { MatFormField, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { defer, merge, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, startWith, switchMap, take, takeUntil } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * \\@docs-private\n * @type {?}\n */\nvar matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            // 32px = 2 * 16px padding\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            // 64px = 48px padding on the left + 16px padding on the right\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     * @deprecated Not used anymore. To be removed.\n     * \\@breaking-change 8.0.0\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nvar transformPanel = matSelectAnimations.transformPanel;\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nvar fadeInContent = matSelectAnimations.fadeInContent;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar nextUniqueId = 0;\n/**\n * The max height of the select's overlay panel\n * @type {?}\n */\nvar SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis\n * @type {?}\n */\nvar SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @type {?}\n */\nvar SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @type {?}\n */\nvar SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 20 = 44\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n * @type {?}\n */\nvar SELECT_MULTIPLE_PANEL_PADDING_X = 0;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n * @type {?}\n */\nvar SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Injection token that determines the scroll handling while a select is open.\n * @type {?}\n */\nvar MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    function () { return overlay.scrollStrategies.reposition(); });\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nvar MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nvar  /**\n * Change event object that is emitted when the select value has changed.\n */\nMatSelectChange = /** @class */ (function () {\n    function MatSelectChange(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n    return MatSelectChange;\n}());\n// Boilerplate for applying mixins to MatSelect.\n/**\n * \\@docs-private\n */\nvar \n// Boilerplate for applying mixins to MatSelect.\n/**\n * \\@docs-private\n */\nMatSelectBase = /** @class */ (function () {\n    function MatSelectBase(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n    return MatSelectBase;\n}());\n/** @type {?} */\nvar _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nvar MatSelectTrigger = /** @class */ (function () {\n    function MatSelectTrigger() {\n    }\n    MatSelectTrigger.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-select-trigger'\n                },] },\n    ];\n    return MatSelectTrigger;\n}());\nvar MatSelect = /** @class */ (function (_super) {\n    __extends(MatSelect, _super);\n    function MatSelect(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer) {\n        var _this = _super.call(this, elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) || this;\n        _this._viewportRuler = _viewportRuler;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._ngZone = _ngZone;\n        _this._dir = _dir;\n        _this._parentFormField = _parentFormField;\n        _this.ngControl = ngControl;\n        _this._liveAnnouncer = _liveAnnouncer;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        _this._panelOpen = false;\n        /**\n         * Whether filling out the select is required in the form.\n         */\n        _this._required = false;\n        /**\n         * The scroll position of the overlay panel, calculated to center the selected option.\n         */\n        _this._scrollTop = 0;\n        /**\n         * Whether the component is in multiple selection mode.\n         */\n        _this._multiple = false;\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        _this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        function (o1, o2) { return o1 === o2; });\n        /**\n         * Unique id for this input.\n         */\n        _this._uid = \"mat-select-\" + nextUniqueId++;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        _this._destroy = new Subject();\n        /**\n         * The cached font-size of the trigger element.\n         */\n        _this._triggerFontSize = 0;\n        /**\n         * `View -> model callback called when value changes`\n         */\n        _this._onChange = (/**\n         * @return {?}\n         */\n        function () { });\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        _this._onTouched = (/**\n         * @return {?}\n         */\n        function () { });\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        _this._optionIds = '';\n        /**\n         * The value of the select panel's transform-origin property.\n         */\n        _this._transformOrigin = 'top';\n        /**\n         * Emits when the panel element is finished transforming in.\n         */\n        _this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        _this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        _this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /**\n         * Whether the component is disabling centering of the active option over the trigger.\n         */\n        _this._disableOptionCentering = false;\n        _this._focused = false;\n        /**\n         * A name for this control that can be used by `mat-form-field`.\n         */\n        _this.controlType = 'mat-select';\n        /**\n         * Aria label of the select. If not specified, the placeholder will be used as label.\n         */\n        _this.ariaLabel = '';\n        /**\n         * Combined stream of all of the child options' change events.\n         */\n        _this.optionSelectionChanges = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var options = _this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap((/**\n                 * @return {?}\n                 */\n                function () { return merge.apply(void 0, options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                function (option) { return option.onSelectionChange; }))); })));\n            }\n            return _this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            function () { return _this.optionSelectionChanges; })));\n        }))));\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        _this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        _this._openedStream = _this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        function (o) { return o; })), map((/**\n         * @return {?}\n         */\n        function () { })));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        _this._closedStream = _this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        function (o) { return !o; })), map((/**\n         * @return {?}\n         */\n        function () { })));\n        /**\n         * Event emitted when the selected value has been changed by the user.\n         */\n        _this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        _this.valueChange = new EventEmitter();\n        if (_this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            _this.ngControl.valueAccessor = _this;\n        }\n        _this._scrollStrategyFactory = scrollStrategyFactory;\n        _this._scrollStrategy = _this._scrollStrategyFactory();\n        _this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        _this.id = _this.id;\n        return _this;\n    }\n    Object.defineProperty(MatSelect.prototype, \"focused\", {\n        /** Whether the select is focused. */\n        get: /**\n         * Whether the select is focused.\n         * @return {?}\n         */\n        function () {\n            return this._focused || this._panelOpen;\n        },\n        /**\n         * @deprecated Setter to be removed as this property is intended to be readonly.\n         * @breaking-change 8.0.0\n         */\n        set: /**\n         * @deprecated Setter to be removed as this property is intended to be readonly.\n         * \\@breaking-change 8.0.0\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._focused = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"placeholder\", {\n        /** Placeholder to be shown if no value has been selected. */\n        get: /**\n         * Placeholder to be shown if no value has been selected.\n         * @return {?}\n         */\n        function () { return this._placeholder; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._placeholder = value;\n            this.stateChanges.next();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"required\", {\n        /** Whether the component is required. */\n        get: /**\n         * Whether the component is required.\n         * @return {?}\n         */\n        function () { return this._required; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._required = coerceBooleanProperty(value);\n            this.stateChanges.next();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"multiple\", {\n        /** Whether the user should be allowed to select multiple options. */\n        get: /**\n         * Whether the user should be allowed to select multiple options.\n         * @return {?}\n         */\n        function () { return this._multiple; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (this._selectionModel) {\n                throw getMatSelectDynamicMultipleError();\n            }\n            this._multiple = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"disableOptionCentering\", {\n        /** Whether to center the active option over the trigger. */\n        get: /**\n         * Whether to center the active option over the trigger.\n         * @return {?}\n         */\n        function () { return this._disableOptionCentering; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disableOptionCentering = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"compareWith\", {\n        /**\n         * Function to compare the option values with the selected values. The first argument\n         * is a value from an option. The second is a value from the selection. A boolean\n         * should be returned.\n         */\n        get: /**\n         * Function to compare the option values with the selected values. The first argument\n         * is a value from an option. The second is a value from the selection. A boolean\n         * should be returned.\n         * @return {?}\n         */\n        function () { return this._compareWith; },\n        set: /**\n         * @param {?} fn\n         * @return {?}\n         */\n        function (fn) {\n            if (typeof fn !== 'function') {\n                throw getMatSelectNonFunctionValueError();\n            }\n            this._compareWith = fn;\n            if (this._selectionModel) {\n                // A different comparator means the selection could change.\n                this._initializeSelection();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"value\", {\n        /** Value of the select control. */\n        get: /**\n         * Value of the select control.\n         * @return {?}\n         */\n        function () { return this._value; },\n        set: /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        function (newValue) {\n            if (newValue !== this._value) {\n                this.writeValue(newValue);\n                this._value = newValue;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"id\", {\n        /** Unique id of the element. */\n        get: /**\n         * Unique id of the element.\n         * @return {?}\n         */\n        function () { return this._id; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._id = value || this._uid;\n            this.stateChanges.next();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatSelect.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        function () {\n            if (_this.panelOpen) {\n                _this._scrollTop = 0;\n                _this.openedChange.emit(true);\n            }\n            else {\n                _this.openedChange.emit(false);\n                _this.overlayDir.offsetX = 0;\n                _this._changeDetectorRef.markForCheck();\n            }\n        }));\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        function () {\n            if (_this._panelOpen) {\n                _this._triggerRect = _this.trigger.nativeElement.getBoundingClientRect();\n                _this._changeDetectorRef.markForCheck();\n            }\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    MatSelect.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._initKeyManager();\n        this._selectionModel.onChange.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            event.added.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            function (option) { return option.select(); }));\n            event.removed.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            function (option) { return option.deselect(); }));\n        }));\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this._resetOptions();\n            _this._initializeSelection();\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    MatSelect.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MatSelect.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatSelect.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    };\n    /** Toggles the overlay panel open or closed. */\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    MatSelect.prototype.toggle = /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    function () {\n        this.panelOpen ? this.close() : this.open();\n    };\n    /** Opens the overlay panel. */\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    MatSelect.prototype.open = /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        function () {\n            if (_this._triggerFontSize && _this.overlayDir.overlayRef &&\n                _this.overlayDir.overlayRef.overlayElement) {\n                _this.overlayDir.overlayRef.overlayElement.style.fontSize = _this._triggerFontSize + \"px\";\n            }\n        }));\n    };\n    /** Closes the overlay panel and focuses the host element. */\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    MatSelect.prototype.close = /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    function () {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    };\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    MatSelect.prototype.writeValue = /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    function (value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    };\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    MatSelect.prototype.registerOnChange = /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    function (fn) {\n        this._onChange = fn;\n    };\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    MatSelect.prototype.registerOnTouched = /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    function (fn) {\n        this._onTouched = fn;\n    };\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    MatSelect.prototype.setDisabledState = /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    function (isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    };\n    Object.defineProperty(MatSelect.prototype, \"panelOpen\", {\n        /** Whether or not the overlay panel is open. */\n        get: /**\n         * Whether or not the overlay panel is open.\n         * @return {?}\n         */\n        function () {\n            return this._panelOpen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"selected\", {\n        /** The currently selected option. */\n        get: /**\n         * The currently selected option.\n         * @return {?}\n         */\n        function () {\n            return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"triggerValue\", {\n        /** The value displayed in the trigger. */\n        get: /**\n         * The value displayed in the trigger.\n         * @return {?}\n         */\n        function () {\n            if (this.empty) {\n                return '';\n            }\n            if (this._multiple) {\n                /** @type {?} */\n                var selectedOptions = this._selectionModel.selected.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                function (option) { return option.viewValue; }));\n                if (this._isRtl()) {\n                    selectedOptions.reverse();\n                }\n                // TODO(crisbeto): delimiter should be configurable for proper localization.\n                return selectedOptions.join(', ');\n            }\n            return this._selectionModel.selected[0].viewValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Whether the element is in RTL mode. */\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    MatSelect.prototype._isRtl = /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    function () {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    };\n    /** Handles all keydown events on the select. */\n    /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    MatSelect.prototype._handleKeydown = /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    };\n    /** Handles keyboard events while the select is closed. */\n    /**\n     * Handles keyboard events while the select is closed.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    MatSelect.prototype._handleClosedKeydown = /**\n     * Handles keyboard events while the select is closed.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        /** @type {?} */\n        var keyCode = event.keyCode;\n        /** @type {?} */\n        var isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        /** @type {?} */\n        var isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        /** @type {?} */\n        var manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if ((isOpenKey && !hasModifierKey(event)) || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            /** @type {?} */\n            var previouslySelectedOption = this.selected;\n            if (keyCode === HOME || keyCode === END) {\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n            /** @type {?} */\n            var selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            // @breaking-change 8.0.0 remove null check for _liveAnnouncer.\n            if (this._liveAnnouncer && selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(((/** @type {?} */ (selectedOption))).viewValue, 10000);\n            }\n        }\n    };\n    /** Handles keyboard events when the selected is open. */\n    /**\n     * Handles keyboard events when the selected is open.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    MatSelect.prototype._handleOpenKeydown = /**\n     * Handles keyboard events when the selected is open.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        /** @type {?} */\n        var keyCode = event.keyCode;\n        /** @type {?} */\n        var isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        /** @type {?} */\n        var manager = this._keyManager;\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        }\n        else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            /** @type {?} */\n            var hasDeselectedOptions_1 = this.options.some((/**\n             * @param {?} opt\n             * @return {?}\n             */\n            function (opt) { return !opt.disabled && !opt.selected; }));\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            function (option) {\n                if (!option.disabled) {\n                    hasDeselectedOptions_1 ? option.select() : option.deselect();\n                }\n            }));\n        }\n        else {\n            /** @type {?} */\n            var previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatSelect.prototype._onFocus = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    };\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    MatSelect.prototype._onBlur = /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    function () {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    };\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    MatSelect.prototype._onAttached = /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.overlayDir.positionChange.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this._setPseudoCheckboxPaddingSize();\n            _this._changeDetectorRef.detectChanges();\n            _this._calculateOverlayOffsetX();\n            _this.panel.nativeElement.scrollTop = _this._scrollTop;\n        }));\n    };\n    /** Returns the theme to be used on the panel. */\n    /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    MatSelect.prototype._getPanelTheme = /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    function () {\n        return this._parentFormField ? \"mat-\" + this._parentFormField.color : '';\n    };\n    // TODO(josephperrott): Remove after 2018 spec updates are fully merged.\n    /** Sets the pseudo checkbox padding size based on the width of the pseudo checkbox. */\n    // TODO(josephperrott): Remove after 2018 spec updates are fully merged.\n    /**\n     * Sets the pseudo checkbox padding size based on the width of the pseudo checkbox.\n     * @private\n     * @return {?}\n     */\n    MatSelect.prototype._setPseudoCheckboxPaddingSize = \n    // TODO(josephperrott): Remove after 2018 spec updates are fully merged.\n    /**\n     * Sets the pseudo checkbox padding size based on the width of the pseudo checkbox.\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (!SELECT_MULTIPLE_PANEL_PADDING_X && this.multiple) {\n            /** @type {?} */\n            var pseudoCheckbox = this.panel.nativeElement.querySelector('.mat-pseudo-checkbox');\n            if (pseudoCheckbox) {\n                SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + pseudoCheckbox.offsetWidth;\n            }\n        }\n    };\n    Object.defineProperty(MatSelect.prototype, \"empty\", {\n        /** Whether the select has a value. */\n        get: /**\n         * Whether the select has a value.\n         * @return {?}\n         */\n        function () {\n            return !this._selectionModel || this._selectionModel.isEmpty();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @private\n     * @return {?}\n     */\n    MatSelect.prototype._initializeSelection = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        function () {\n            _this._setSelectionByValue(_this.ngControl ? _this.ngControl.value : _this._value);\n            _this.stateChanges.next();\n        }));\n    };\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    MatSelect.prototype._setSelectionByValue = /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var _this = this;\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            function (currentValue) { return _this._selectValue(currentValue); }));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            /** @type {?} */\n            var correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    MatSelect.prototype._selectValue = /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    function (value) {\n        var _this = this;\n        /** @type {?} */\n        var correspondingOption = this.options.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        function (option) {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && _this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        }));\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    };\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    MatSelect.prototype._initKeyManager = /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        function () {\n            // Restore focus to the trigger before closing. Ensures that the focus\n            // position won't be lost if the user got focus into the overlay.\n            _this.focus();\n            _this.close();\n        }));\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        function () {\n            if (_this._panelOpen && _this.panel) {\n                _this._scrollActiveOptionIntoView();\n            }\n            else if (!_this._panelOpen && !_this.multiple && _this._keyManager.activeItem) {\n                _this._keyManager.activeItem._selectViaInteraction();\n            }\n        }));\n    };\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @private\n     * @return {?}\n     */\n    MatSelect.prototype._resetOptions = /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            _this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !_this.multiple && _this._panelOpen) {\n                _this.close();\n                _this.focus();\n            }\n        }));\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge.apply(void 0, this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        function (option) { return option._stateChanges; }))).pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this._changeDetectorRef.markForCheck();\n            _this.stateChanges.next();\n        }));\n        this._setOptionIds();\n    };\n    /** Invoked when an option is clicked. */\n    /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    MatSelect.prototype._onSelect = /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    function (option, isUserInput) {\n        /** @type {?} */\n        var wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            option.selected ? this._selectionModel.select(option) : this._selectionModel.deselect(option);\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    };\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    MatSelect.prototype._sortValues = /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.multiple) {\n            /** @type {?} */\n            var options_1 = this.options.toArray();\n            this._selectionModel.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            function (a, b) {\n                return _this.sortComparator ? _this.sortComparator(a, b, options_1) :\n                    options_1.indexOf(a) - options_1.indexOf(b);\n            }));\n            this.stateChanges.next();\n        }\n    };\n    /** Emits change event to set the model value. */\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    MatSelect.prototype._propagateChanges = /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    function (fallbackValue) {\n        /** @type {?} */\n        var valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = ((/** @type {?} */ (this.selected))).map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            function (option) { return option.value; }));\n        }\n        else {\n            valueToEmit = this.selected ? ((/** @type {?} */ (this.selected))).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    };\n    /** Records option IDs to pass to the aria-owns property. */\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    MatSelect.prototype._setOptionIds = /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    function () {\n        this._optionIds = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        function (option) { return option.id; })).join(' ');\n    };\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    MatSelect.prototype._highlightCorrectOption = /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    };\n    /** Scrolls the active option into view. */\n    /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    MatSelect.prototype._scrollActiveOptionIntoView = /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        var labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    };\n    /** Focuses the select element. */\n    /**\n     * Focuses the select element.\n     * @return {?}\n     */\n    MatSelect.prototype.focus = /**\n     * Focuses the select element.\n     * @return {?}\n     */\n    function () {\n        this._elementRef.nativeElement.focus();\n    };\n    /** Gets the index of the provided option in the option list. */\n    /**\n     * Gets the index of the provided option in the option list.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    MatSelect.prototype._getOptionIndex = /**\n     * Gets the index of the provided option in the option list.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    function (option) {\n        return this.options.reduce((/**\n         * @param {?} result\n         * @param {?} current\n         * @param {?} index\n         * @return {?}\n         */\n        function (result, current, index) {\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }), undefined);\n    };\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    MatSelect.prototype._calculateOverlayPosition = /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var itemHeight = this._getItemHeight();\n        /** @type {?} */\n        var items = this._getItemCount();\n        /** @type {?} */\n        var panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        var scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        /** @type {?} */\n        var maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        /** @type {?} */\n        var selectedOptionOffset = this.empty ? 0 : (/** @type {?} */ (this._getOptionIndex(this._selectionModel.selected[0])));\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /** @type {?} */\n        var scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    };\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    MatSelect.prototype._calculateOverlayScroll = /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    function (selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        var itemHeight = this._getItemHeight();\n        /** @type {?} */\n        var optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        /** @type {?} */\n        var halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        /** @type {?} */\n        var optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    };\n    /** Returns the aria-label of the select component. */\n    /**\n     * Returns the aria-label of the select component.\n     * @return {?}\n     */\n    MatSelect.prototype._getAriaLabel = /**\n     * Returns the aria-label of the select component.\n     * @return {?}\n     */\n    function () {\n        // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n        // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n        return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n    };\n    /** Returns the aria-labelledby of the select component. */\n    /**\n     * Returns the aria-labelledby of the select component.\n     * @return {?}\n     */\n    MatSelect.prototype._getAriaLabelledby = /**\n     * Returns the aria-labelledby of the select component.\n     * @return {?}\n     */\n    function () {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n        // computed label. `this.ariaLabel` is only the user-specified label.\n        if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n            this._getAriaLabel()) {\n            return null;\n        }\n        return this._parentFormField._labelId || null;\n    };\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    MatSelect.prototype._getAriaActiveDescendant = /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    function () {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    };\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @private\n     * @return {?}\n     */\n    MatSelect.prototype._calculateOverlayOffsetX = /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        /** @type {?} */\n        var viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        var isRtl = this._isRtl();\n        /** @type {?} */\n        var paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        /** @type {?} */\n        var offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            /** @type {?} */\n            var selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        /** @type {?} */\n        var leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        /** @type {?} */\n        var rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    };\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @private\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    MatSelect.prototype._calculateOverlayOffsetY = /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @private\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    function (selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        var itemHeight = this._getItemHeight();\n        /** @type {?} */\n        var optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        var maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        /** @type {?} */\n        var optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            /** @type {?} */\n            var firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            /** @type {?} */\n            var selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            /** @type {?} */\n            var partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    };\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @private\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    MatSelect.prototype._checkOverlayWithinViewport = /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @private\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    function (maxScroll) {\n        /** @type {?} */\n        var itemHeight = this._getItemHeight();\n        /** @type {?} */\n        var viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        var topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        var bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        var panelHeightTop = Math.abs(this._offsetY);\n        /** @type {?} */\n        var totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        var panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    };\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @private\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    MatSelect.prototype._adjustPanelUp = /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @private\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    function (panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        var distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = \"50% bottom 0px\";\n        }\n    };\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @private\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    MatSelect.prototype._adjustPanelDown = /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @private\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    function (panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        var distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = \"50% top 0px\";\n            return;\n        }\n    };\n    /** Sets the transform origin point based on the selected option. */\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @private\n     * @return {?}\n     */\n    MatSelect.prototype._getOriginBasedOnOption = /**\n     * Sets the transform origin point based on the selected option.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var itemHeight = this._getItemHeight();\n        /** @type {?} */\n        var optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        var originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return \"50% \" + originY + \"px 0px\";\n    };\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @private\n     * @return {?}\n     */\n    MatSelect.prototype._getItemCount = /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @private\n     * @return {?}\n     */\n    function () {\n        return this.options.length + this.optionGroups.length;\n    };\n    /** Calculates the height of the select's options. */\n    /**\n     * Calculates the height of the select's options.\n     * @private\n     * @return {?}\n     */\n    MatSelect.prototype._getItemHeight = /**\n     * Calculates the height of the select's options.\n     * @private\n     * @return {?}\n     */\n    function () {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    };\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    MatSelect.prototype.setDescribedByIds = /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) {\n        this._ariaDescribedby = ids.join(' ');\n    };\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    MatSelect.prototype.onContainerClick = /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    function () {\n        this.focus();\n        this.open();\n    };\n    Object.defineProperty(MatSelect.prototype, \"shouldLabelFloat\", {\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        get: /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         * @return {?}\n         */\n        function () {\n            return this._panelOpen || !this.empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MatSelect.decorators = [\n        { type: Component, args: [{selector: 'mat-select',\n                    exportAs: 'matSelect',\n                    template: \"<div cdk-overlay-origin class=\\\"mat-select-trigger\\\" aria-hidden=\\\"true\\\" (click)=\\\"toggle()\\\" #origin=\\\"cdkOverlayOrigin\\\" #trigger><div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\"><span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\u00A0'}}</span> <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\"><span *ngSwitchDefault>{{triggerValue || '\\u00A0'}}</span><ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content></span></div><div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div></div><ng-template cdk-connected-overlay cdkConnectedOverlayLockPosition cdkConnectedOverlayHasBackdrop cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\" [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\" [cdkConnectedOverlayOrigin]=\\\"origin\\\" [cdkConnectedOverlayOpen]=\\\"panelOpen\\\" [cdkConnectedOverlayPositions]=\\\"_positions\\\" [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\" [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\" (backdropClick)=\\\"close()\\\" (attach)=\\\"_onAttached()\\\" (detach)=\\\"close()\\\"><div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]><div #panel class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\" [ngClass]=\\\"panelClass\\\" [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\" (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\" [style.transformOrigin]=\\\"_transformOrigin\\\" [style.font-size.px]=\\\"_triggerFontSize\\\" (keydown)=\\\"_handleKeydown($event)\\\"><ng-content></ng-content></div></div></ng-template>\",\n                    styles: [\".mat-select{display:inline-block;width:100%;outline:0}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform .4s cubic-bezier(.25,.8,.25,1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}@media (-ms-high-contrast:active){.mat-select-panel{outline:solid 1px}}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\"],\n                    inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        'role': 'listbox',\n                        '[attr.id]': 'id',\n                        '[attr.tabindex]': 'tabIndex',\n                        '[attr.aria-label]': '_getAriaLabel()',\n                        '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                        '[attr.aria-required]': 'required.toString()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                        '[attr.aria-multiselectable]': 'multiple',\n                        '[attr.aria-describedby]': '_ariaDescribedby || null',\n                        '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                        '[class.mat-select-disabled]': 'disabled',\n                        '[class.mat-select-invalid]': 'errorState',\n                        '[class.mat-select-required]': 'required',\n                        '[class.mat-select-empty]': 'empty',\n                        'class': 'mat-select',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(focus)': '_onFocus()',\n                        '(blur)': '_onBlur()',\n                    },\n                    animations: [\n                        matSelectAnimations.transformPanelWrap,\n                        matSelectAnimations.transformPanel\n                    ],\n                    providers: [\n                        { provide: MatFormFieldControl, useExisting: MatSelect },\n                        { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                    ],\n                },] },\n    ];\n    /** @nocollapse */\n    MatSelect.ctorParameters = function () { return [\n        { type: ViewportRuler },\n        { type: ChangeDetectorRef },\n        { type: NgZone },\n        { type: ErrorStateMatcher },\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgForm, decorators: [{ type: Optional }] },\n        { type: FormGroupDirective, decorators: [{ type: Optional }] },\n        { type: MatFormField, decorators: [{ type: Optional }] },\n        { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n        { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n        { type: LiveAnnouncer }\n    ]; };\n    MatSelect.propDecorators = {\n        trigger: [{ type: ViewChild, args: ['trigger', { static: false },] }],\n        panel: [{ type: ViewChild, args: ['panel', { static: false },] }],\n        overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay, { static: false },] }],\n        options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n        optionGroups: [{ type: ContentChildren, args: [MatOptgroup,] }],\n        panelClass: [{ type: Input }],\n        customTrigger: [{ type: ContentChild, args: [MatSelectTrigger, { static: false },] }],\n        placeholder: [{ type: Input }],\n        required: [{ type: Input }],\n        multiple: [{ type: Input }],\n        disableOptionCentering: [{ type: Input }],\n        compareWith: [{ type: Input }],\n        value: [{ type: Input }],\n        ariaLabel: [{ type: Input, args: ['aria-label',] }],\n        ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n        errorStateMatcher: [{ type: Input }],\n        sortComparator: [{ type: Input }],\n        id: [{ type: Input }],\n        openedChange: [{ type: Output }],\n        _openedStream: [{ type: Output, args: ['opened',] }],\n        _closedStream: [{ type: Output, args: ['closed',] }],\n        selectionChange: [{ type: Output }],\n        valueChange: [{ type: Output }]\n    };\n    return MatSelect;\n}(_MatSelectMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatSelectModule = /** @class */ (function () {\n    function MatSelectModule() {\n    }\n    MatSelectModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        CommonModule,\n                        OverlayModule,\n                        MatOptionModule,\n                        MatCommonModule,\n                    ],\n                    exports: [MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule],\n                    declarations: [MatSelect, MatSelectTrigger],\n                    providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n                },] },\n    ];\n    return MatSelectModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatSelectModule, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MatSelectChange, MatSelectTrigger, MatSelect, matSelectAnimations, transformPanel, fadeInContent };\n//# sourceMappingURL=select.es5.js.map\n","<mat-tab-header #tabHeader [selectedIndex]=\"selectedIndex\" [disableRipple]=\"disableRipple\" (indexFocused)=\"_focusChanged($event)\" (selectFocusedIndex)=\"selectedIndex = $event\"><div class=\"mat-tab-label\" role=\"tab\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus *ngFor=\"let tab of _tabs; let i = index\" [id]=\"_getTabLabelId(i)\" [attr.tabIndex]=\"_getTabIndex(tab, i)\" [attr.aria-posinset]=\"i + 1\" [attr.aria-setsize]=\"_tabs.length\" [attr.aria-controls]=\"_getTabContentId(i)\" [attr.aria-selected]=\"selectedIndex == i\" [attr.aria-label]=\"tab.ariaLabel || null\" [attr.aria-labelledby]=\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\" [class.mat-tab-label-active]=\"selectedIndex == i\" [disabled]=\"tab.disabled\" [matRippleDisabled]=\"tab.disabled || disableRipple\" (click)=\"_handleClick(tab, tabHeader, i)\"><div class=\"mat-tab-label-content\"><ng-template [ngIf]=\"tab.templateLabel\"><ng-template [cdkPortalOutlet]=\"tab.templateLabel\"></ng-template></ng-template><ng-template [ngIf]=\"!tab.templateLabel\">{{tab.textLabel}}</ng-template></div></div></mat-tab-header><div class=\"mat-tab-body-wrapper\" [class._mat-animation-noopable]=\"_animationMode === 'NoopAnimations'\" #tabBodyWrapper><mat-tab-body role=\"tabpanel\" *ngFor=\"let tab of _tabs; let i = index\" [id]=\"_getTabContentId(i)\" [attr.aria-labelledby]=\"_getTabLabelId(i)\" [class.mat-tab-body-active]=\"selectedIndex == i\" [content]=\"tab.content\" [position]=\"tab.position\" [origin]=\"tab.origin\" [animationDuration]=\"animationDuration\" (_onCentered)=\"_removeTabBodyWrapperHeight()\" (_onCentering)=\"_setTabBodyWrapperHeight($event)\"></mat-tab-body></div>","<div class=\"mat-tab-body-content\" #content [@translateTab]=\"{\n        value: _position,\n        params: {animationDuration: animationDuration}\n     }\" (@translateTab.start)=\"_onTranslateTabStarted($event)\" (@translateTab.done)=\"_translateTabComplete.next($event)\"><ng-template matTabBodyHost></ng-template></div>","<div class=\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\" #previousPaginator aria-hidden=\"true\" mat-ripple [matRippleDisabled]=\"_disableScrollBefore || disableRipple\" [class.mat-tab-header-pagination-disabled]=\"_disableScrollBefore\" (click)=\"_handlePaginatorClick('before')\" (mousedown)=\"_handlePaginatorPress('before')\" (touchend)=\"_stopInterval()\"><div class=\"mat-tab-header-pagination-chevron\"></div></div><div class=\"mat-tab-label-container\" #tabListContainer (keydown)=\"_handleKeydown($event)\"><div #tabList class=\"mat-tab-list\" [class._mat-animation-noopable]=\"_animationMode === 'NoopAnimations'\" role=\"tablist\" (cdkObserveContent)=\"_onContentChanges()\"><div class=\"mat-tab-labels\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\" #nextPaginator aria-hidden=\"true\" mat-ripple [matRippleDisabled]=\"_disableScrollAfter || disableRipple\" [class.mat-tab-header-pagination-disabled]=\"_disableScrollAfter\" (mousedown)=\"_handlePaginatorPress('after')\" (click)=\"_handlePaginatorClick('after')\" (touchend)=\"_stopInterval()\"><div class=\"mat-tab-header-pagination-chevron\"></div></div>","<ng-template><ng-content></ng-content></ng-template>","<div class=\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\" #previousPaginator aria-hidden=\"true\" mat-ripple [matRippleDisabled]=\"_disableScrollBefore || disableRipple\" [class.mat-tab-header-pagination-disabled]=\"_disableScrollBefore\" (click)=\"_handlePaginatorClick('before')\" (mousedown)=\"_handlePaginatorPress('before')\" (touchend)=\"_stopInterval()\"><div class=\"mat-tab-header-pagination-chevron\"></div></div><div class=\"mat-tab-link-container\" #tabListContainer (keydown)=\"_handleKeydown($event)\"><div class=\"mat-tab-list\" #tabList (cdkObserveContent)=\"_onContentChanges()\"><div class=\"mat-tab-links\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\" #nextPaginator aria-hidden=\"true\" mat-ripple [matRippleDisabled]=\"_disableScrollAfter || disableRipple\" [class.mat-tab-header-pagination-disabled]=\"_disableScrollAfter\" (mousedown)=\"_handlePaginatorPress('after')\" (click)=\"_handlePaginatorClick('after')\" (touchend)=\"_stopInterval()\"><div class=\"mat-tab-header-pagination-chevron\"></div></div>","<mat-tab-group>\n  <mat-tab label=\"Overview\">\n    <div class=\"sidebar\">\n      <div\n        fxLayout=\"column\"\n        fxLayoutAlign=\"center center\"\n        style=\"padding: 30px 0; background: url('assets/img/bg/city1.jpg');\"\n      >\n        <div style=\"width: 100%; height: 22%; position: absolute;background: #17161642;z-index: 1\"></div>\n        <div class=\"mat-display-2\" style=\"margin: 0; color: white;z-index: 2\">{{ today | date: 'shortTime' }}</div>\n        <div class=\"mat-subheading-2\" style=\"margin: 0;color: white;z-index: 2\">\n          {{ today | date: 'EEEE' }}, {{ today | date: 'MMMM' }} {{ today | date: 'dd' }}\n        </div>\n      </div>\n\n      <mat-divider></mat-divider>\n\n      <h3 class=\"mat-subheading-2\" style=\"margin: 10px 14px 0;\">Upcoming Events</h3>\n      <mat-nav-list>\n        <div *ngFor=\"let event of events\">\n          <mat-list-item>\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" mat-ripple>\n              <div fxLayout=\"column\">\n                <div class=\"mat-ubheading-2\" style=\"margin: 0; font-weight: bold;\">{{ event.title }}</div>\n                <div style=\"font-size: 12px;\">{{ event.time }}</div>\n              </div>\n            </div>\n          </mat-list-item>\n        </div>\n      </mat-nav-list>\n\n      <mat-divider></mat-divider>\n\n      <mat-nav-list>\n        <h3 class=\"mat-subheading-2\" style=\"margin: 10px 14px 0;\">Todo-List</h3>\n        <div *ngFor=\"let todolist of todolists\">\n          <mat-list-item>\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" mat-ripple>\n              <div class=\"title\" fxLayout=\"column\">\n                <div class=\"mat-ubheading-2\" style=\"margin: 0; font-weight: bold;\">{{ todolist.title }}</div>\n                <div style=\"font-size: 12px;\">{{ todolist.time }}</div>\n              </div>\n            </div>\n          </mat-list-item>\n        </div>\n      </mat-nav-list>\n\n      <mat-divider></mat-divider>\n    </div>\n  </mat-tab>\n\n  <mat-tab label=\"Notifications\">\n    <div class=\"sidebar\">\n      <div>\n        <h3 style=\"margin: 10px 14px 0;\">Friends</h3>\n\n        <mat-list>\n          <mat-list-item *ngFor=\"let message of messages\">\n            <img matListAvatar [src]=\"message.img\" alt=\"...\" />\n            <h3 matLine style=\"margin: 0; font-weight: bold;\">{{ message.from }}</h3>\n            <p matLine>\n              <span> {{ message.subject }} </span> <span> -- {{ message.content }} </span>\n            </p>\n          </mat-list-item>\n        </mat-list>\n      </div>\n    </div>\n  </mat-tab>\n</mat-tab-group>\n\n<mat-divider></mat-divider>\n\n<mat-nav-list>\n  <div>\n    <h3 class=\"mat-subheading-2\" style=\"margin: 10px 14px 0;\">Server Statistics</h3>\n    <div>\n      <mat-list-item>\n        <h5>CPU Load</h5>\n        <mat-progress-bar [color]=\"'accent'\" [mode]=\"'buffer'\" [value]=\"'70'\" [bufferValue]=\"100\">></mat-progress-bar>\n      </mat-list-item>\n    </div>\n\n    <div>\n      <mat-list-item>\n        <h5>RAM Usage</h5>\n        <mat-progress-bar [color]=\"'primary'\" [mode]=\"'buffer'\" [value]=\"'47'\" [bufferValue]=\"100\"></mat-progress-bar>\n      </mat-list-item>\n    </div>\n\n    <div>\n      <mat-list-item>\n        <h5>CPU Temp</h5>\n        <mat-progress-bar [color]=\"'warn'\" [mode]=\"'buffer'\" [value]=\"'43'\" [bufferValue]=\"100\"></mat-progress-bar>\n      </mat-list-item>\n    </div>\n  </div>\n</mat-nav-list>\n","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from '../../addLeadingZeros/index.js';\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from '../../toDate/index.js';\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getUTCISOWeekYear from '../getUTCISOWeekYear/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from '../toInteger/index.js';\nimport getUTCWeekYear from '../getUTCWeekYear/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import lightFormatters from '../lightFormatters/index.js';\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js';\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js';\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js';\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js';\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport addLeadingZeros from '../../addLeadingZeros/index.js';\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token) {\n  if (token === 'YYYY') {\n    throw new RangeError('Use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'YY') {\n    throw new RangeError('Use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'D') {\n    throw new RangeError('Use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr');\n  } else if (token === 'DD') {\n    throw new RangeError('Use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr');\n  }\n}","import isValid from '../isValid/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/formatters/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js'; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'(.*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from '../toDate/index.js';\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `true`        |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { __extends } from 'tslib';\nimport { CDK_TABLE_TEMPLATE, CdkTable, CdkCell, CdkCellDef, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkHeaderCell, CdkHeaderCellDef, CDK_ROW_TEMPLATE, CdkFooterRow, CdkFooterRowDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation, Directive, ElementRef, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, combineLatest, merge, of, Subscription, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n * @template T\n */\nvar MatTable = /** @class */ (function (_super) {\n    __extends(MatTable, _super);\n    function MatTable() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Overrides the sticky CSS class set by the `CdkTable`.\n         */\n        _this.stickyCssClass = 'mat-table-sticky';\n        return _this;\n    }\n    MatTable.decorators = [\n        { type: Component, args: [{selector: 'mat-table, table[mat-table]',\n                    exportAs: 'matTable',\n                    template: CDK_TABLE_TEMPLATE,\n                    styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-footer-row,mat-row{min-height:48px}mat-footer-row,mat-header-row,mat-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-footer-row::after,mat-header-row::after,mat-row::after{display:inline-block;min-height:inherit;content:''}mat-cell:first-of-type,mat-footer-cell:first-of-type,mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-footer-cell:last-of-type,mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-footer-cell,mat-header-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-footer-row,tr.mat-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}td.mat-cell,td.mat-footer-cell,th.mat-header-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type,th.mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type,[dir=rtl] th.mat-header-cell:first-of-type{padding-left:0;padding-right:24px}td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type,th.mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type,[dir=rtl] th.mat-header-cell:last-of-type{padding-right:0;padding-left:24px}\"],\n                    host: {\n                        'class': 'mat-table',\n                    },\n                    providers: [{ provide: CdkTable, useExisting: MatTable }],\n                    encapsulation: ViewEncapsulation.None,\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                },] },\n    ];\n    return MatTable;\n}(CdkTable));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nvar MatCellDef = /** @class */ (function (_super) {\n    __extends(MatCellDef, _super);\n    function MatCellDef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MatCellDef.decorators = [\n        { type: Directive, args: [{\n                    selector: '[matCellDef]',\n                    providers: [{ provide: CdkCellDef, useExisting: MatCellDef }]\n                },] },\n    ];\n    return MatCellDef;\n}(CdkCellDef));\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nvar MatHeaderCellDef = /** @class */ (function (_super) {\n    __extends(MatHeaderCellDef, _super);\n    function MatHeaderCellDef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MatHeaderCellDef.decorators = [\n        { type: Directive, args: [{\n                    selector: '[matHeaderCellDef]',\n                    providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]\n                },] },\n    ];\n    return MatHeaderCellDef;\n}(CdkHeaderCellDef));\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nvar MatFooterCellDef = /** @class */ (function (_super) {\n    __extends(MatFooterCellDef, _super);\n    function MatFooterCellDef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MatFooterCellDef.decorators = [\n        { type: Directive, args: [{\n                    selector: '[matFooterCellDef]',\n                    providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]\n                },] },\n    ];\n    return MatFooterCellDef;\n}(CdkFooterCellDef));\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nvar MatColumnDef = /** @class */ (function (_super) {\n    __extends(MatColumnDef, _super);\n    function MatColumnDef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MatColumnDef.decorators = [\n        { type: Directive, args: [{\n                    selector: '[matColumnDef]',\n                    providers: [\n                        { provide: CdkColumnDef, useExisting: MatColumnDef },\n                        { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n                    ],\n                },] },\n    ];\n    MatColumnDef.propDecorators = {\n        name: [{ type: Input, args: ['matColumnDef',] }],\n        sticky: [{ type: Input }],\n        stickyEnd: [{ type: Input }]\n    };\n    return MatColumnDef;\n}(CdkColumnDef));\n/**\n * Header cell template container that adds the right classes and role.\n */\nvar MatHeaderCell = /** @class */ (function (_super) {\n    __extends(MatHeaderCell, _super);\n    function MatHeaderCell(columnDef, elementRef) {\n        var _this = _super.call(this, columnDef, elementRef) || this;\n        elementRef.nativeElement.classList.add(\"mat-column-\" + columnDef.cssClassFriendlyName);\n        return _this;\n    }\n    MatHeaderCell.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-header-cell, th[mat-header-cell]',\n                    host: {\n                        'class': 'mat-header-cell',\n                        'role': 'columnheader',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatHeaderCell.ctorParameters = function () { return [\n        { type: CdkColumnDef },\n        { type: ElementRef }\n    ]; };\n    return MatHeaderCell;\n}(CdkHeaderCell));\n/**\n * Footer cell template container that adds the right classes and role.\n */\nvar MatFooterCell = /** @class */ (function (_super) {\n    __extends(MatFooterCell, _super);\n    function MatFooterCell(columnDef, elementRef) {\n        var _this = _super.call(this, columnDef, elementRef) || this;\n        elementRef.nativeElement.classList.add(\"mat-column-\" + columnDef.cssClassFriendlyName);\n        return _this;\n    }\n    MatFooterCell.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-footer-cell, td[mat-footer-cell]',\n                    host: {\n                        'class': 'mat-footer-cell',\n                        'role': 'gridcell',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatFooterCell.ctorParameters = function () { return [\n        { type: CdkColumnDef },\n        { type: ElementRef }\n    ]; };\n    return MatFooterCell;\n}(CdkFooterCell));\n/**\n * Cell template container that adds the right classes and role.\n */\nvar MatCell = /** @class */ (function (_super) {\n    __extends(MatCell, _super);\n    function MatCell(columnDef, elementRef) {\n        var _this = _super.call(this, columnDef, elementRef) || this;\n        elementRef.nativeElement.classList.add(\"mat-column-\" + columnDef.cssClassFriendlyName);\n        return _this;\n    }\n    MatCell.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-cell, td[mat-cell]',\n                    host: {\n                        'class': 'mat-cell',\n                        'role': 'gridcell',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatCell.ctorParameters = function () { return [\n        { type: CdkColumnDef },\n        { type: ElementRef }\n    ]; };\n    return MatCell;\n}(CdkCell));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nvar MatHeaderRowDef = /** @class */ (function (_super) {\n    __extends(MatHeaderRowDef, _super);\n    function MatHeaderRowDef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MatHeaderRowDef.decorators = [\n        { type: Directive, args: [{\n                    selector: '[matHeaderRowDef]',\n                    providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                    inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky'],\n                },] },\n    ];\n    return MatHeaderRowDef;\n}(CdkHeaderRowDef));\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nvar MatFooterRowDef = /** @class */ (function (_super) {\n    __extends(MatFooterRowDef, _super);\n    function MatFooterRowDef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MatFooterRowDef.decorators = [\n        { type: Directive, args: [{\n                    selector: '[matFooterRowDef]',\n                    providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                    inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky'],\n                },] },\n    ];\n    return MatFooterRowDef;\n}(CdkFooterRowDef));\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nvar MatRowDef = /** @class */ (function (_super) {\n    __extends(MatRowDef, _super);\n    function MatRowDef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MatRowDef.decorators = [\n        { type: Directive, args: [{\n                    selector: '[matRowDef]',\n                    providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                    inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen'],\n                },] },\n    ];\n    return MatRowDef;\n}(CdkRowDef));\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nvar MatHeaderRow = /** @class */ (function (_super) {\n    __extends(MatHeaderRow, _super);\n    function MatHeaderRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MatHeaderRow.decorators = [\n        { type: Component, args: [{selector: 'mat-header-row, tr[mat-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matHeaderRow',\n                    providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }],\n                },] },\n    ];\n    return MatHeaderRow;\n}(CdkHeaderRow));\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nvar MatFooterRow = /** @class */ (function (_super) {\n    __extends(MatFooterRow, _super);\n    function MatFooterRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MatFooterRow.decorators = [\n        { type: Component, args: [{selector: 'mat-footer-row, tr[mat-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matFooterRow',\n                    providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }],\n                },] },\n    ];\n    return MatFooterRow;\n}(CdkFooterRow));\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nvar MatRow = /** @class */ (function (_super) {\n    __extends(MatRow, _super);\n    function MatRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MatRow.decorators = [\n        { type: Component, args: [{selector: 'mat-row, tr[mat-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matRow',\n                    providers: [{ provide: CdkRow, useExisting: MatRow }],\n                },] },\n    ];\n    return MatRow;\n}(CdkRow));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nvar MatTextColumn = /** @class */ (function (_super) {\n    __extends(MatTextColumn, _super);\n    function MatTextColumn() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MatTextColumn.decorators = [\n        { type: Component, args: [{selector: 'mat-text-column',\n                    template: \"\\n    <ng-container matColumnDef>\\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\\\"justify\\\">\\n        {{headerText}}\\n      </th>\\n      <td mat-cell *matCellDef=\\\"let data\\\" [style.text-align]=\\\"justify\\\">\\n        {{dataAccessor(data, name)}}\\n      </td>\\n    </ng-container>\\n  \",\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                },] },\n    ];\n    return MatTextColumn;\n}(CdkTextColumn));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatTextColumn,\n];\nvar MatTableModule = /** @class */ (function () {\n    function MatTableModule() {\n    }\n    MatTableModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        CdkTableModule,\n                        CommonModule,\n                        MatCommonModule,\n                    ],\n                    exports: EXPORTED_DECLARATIONS,\n                    declarations: EXPORTED_DECLARATIONS,\n                },] },\n    ];\n    return MatTableModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n * @type {?}\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n * @template T\n */\nvar  /**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n * @template T\n */\nMatTableDataSource = /** @class */ (function (_super) {\n    __extends(MatTableDataSource, _super);\n    function MatTableDataSource(initialData) {\n        if (initialData === void 0) { initialData = []; }\n        var _this = _super.call(this) || this;\n        /**\n         * Stream emitting render data to the table (depends on ordered data changes).\n         */\n        _this._renderData = new BehaviorSubject([]);\n        /**\n         * Stream that emits when a new filter string is set on the data source.\n         */\n        _this._filter = new BehaviorSubject('');\n        /**\n         * Used to react to internal changes of the paginator that are made by the data source itself.\n         */\n        _this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        _this._renderChangesSubscription = Subscription.EMPTY;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        _this.sortingDataAccessor = (/**\n         * @param {?} data\n         * @param {?} sortHeaderId\n         * @return {?}\n         */\n        function (data, sortHeaderId) {\n            /** @type {?} */\n            var value = ((/** @type {?} */ (data)))[sortHeaderId];\n            if (_isNumberValue(value)) {\n                /** @type {?} */\n                var numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        });\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        _this.sortData = (/**\n         * @param {?} data\n         * @param {?} sort\n         * @return {?}\n         */\n        function (data, sort) {\n            /** @type {?} */\n            var active = sort.active;\n            /** @type {?} */\n            var direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            function (a, b) {\n                /** @type {?} */\n                var valueA = _this.sortingDataAccessor(a, active);\n                /** @type {?} */\n                var valueB = _this.sortingDataAccessor(b, active);\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come first.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                /** @type {?} */\n                var comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            }));\n        });\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @return Whether the filter matches against the data\n         */\n        _this.filterPredicate = (/**\n         * @param {?} data\n         * @param {?} filter\n         * @return {?}\n         */\n        function (data, filter) {\n            // Transform the data into a lowercase string of all property values.\n            /** @type {?} */\n            var dataStr = Object.keys(data).reduce((/**\n             * @param {?} currentTerm\n             * @param {?} key\n             * @return {?}\n             */\n            function (currentTerm, key) {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + ((/** @type {?} */ (data)))[key] + '◬';\n            }), '').toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            /** @type {?} */\n            var transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        });\n        _this._data = new BehaviorSubject(initialData);\n        _this._updateChangeSubscription();\n        return _this;\n    }\n    Object.defineProperty(MatTableDataSource.prototype, \"data\", {\n        /** Array of data that should be rendered by the table, where each object represents one row. */\n        get: /**\n         * Array of data that should be rendered by the table, where each object represents one row.\n         * @return {?}\n         */\n        function () { return this._data.value; },\n        set: /**\n         * @param {?} data\n         * @return {?}\n         */\n        function (data) { this._data.next(data); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTableDataSource.prototype, \"filter\", {\n        /**\n         * Filter term that should be used to filter out objects from the data array. To override how\n         * data objects match to this filter string, provide a custom function for filterPredicate.\n         */\n        get: /**\n         * Filter term that should be used to filter out objects from the data array. To override how\n         * data objects match to this filter string, provide a custom function for filterPredicate.\n         * @return {?}\n         */\n        function () { return this._filter.value; },\n        set: /**\n         * @param {?} filter\n         * @return {?}\n         */\n        function (filter) { this._filter.next(filter); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTableDataSource.prototype, \"sort\", {\n        /**\n         * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n         * emitted by the MatSort will trigger an update to the table's rendered data.\n         */\n        get: /**\n         * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n         * emitted by the MatSort will trigger an update to the table's rendered data.\n         * @return {?}\n         */\n        function () { return this._sort; },\n        set: /**\n         * @param {?} sort\n         * @return {?}\n         */\n        function (sort) {\n            this._sort = sort;\n            this._updateChangeSubscription();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTableDataSource.prototype, \"paginator\", {\n        /**\n         * Instance of the MatPaginator component used by the table to control what page of the data is\n         * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n         * table's rendered data.\n         *\n         * Note that the data source uses the paginator's properties to calculate which page of data\n         * should be displayed. If the paginator receives its properties as template inputs,\n         * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n         * initialized before assigning it to this data source.\n         */\n        get: /**\n         * Instance of the MatPaginator component used by the table to control what page of the data is\n         * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n         * table's rendered data.\n         *\n         * Note that the data source uses the paginator's properties to calculate which page of data\n         * should be displayed. If the paginator receives its properties as template inputs,\n         * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n         * initialized before assigning it to this data source.\n         * @return {?}\n         */\n        function () { return this._paginator; },\n        set: /**\n         * @param {?} paginator\n         * @return {?}\n         */\n        function (paginator) {\n            this._paginator = paginator;\n            this._updateChangeSubscription();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     */\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     * @return {?}\n     */\n    MatTableDataSource.prototype._updateChangeSubscription = /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        /** @type {?} */\n        var sortChange = this._sort ?\n            (/** @type {?} */ (merge(this._sort.sortChange, this._sort.initialized))) :\n            of(null);\n        /** @type {?} */\n        var pageChange = this._paginator ?\n            (/** @type {?} */ (merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized))) :\n            of(null);\n        /** @type {?} */\n        var dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        /** @type {?} */\n        var filteredData = combineLatest(dataStream, this._filter)\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        function (_a) {\n            var data = _a[0];\n            return _this._filterData(data);\n        })));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        /** @type {?} */\n        var orderedData = combineLatest(filteredData, sortChange)\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        function (_a) {\n            var data = _a[0];\n            return _this._orderData(data);\n        })));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        /** @type {?} */\n        var paginatedData = combineLatest(orderedData, pageChange)\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        function (_a) {\n            var data = _a[0];\n            return _this._pageData(data);\n        })));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        function (data) { return _this._renderData.next(data); }));\n    };\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     */\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    MatTableDataSource.prototype._filterData = /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var _this = this;\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            !this.filter ? data : data.filter((/**\n             * @param {?} obj\n             * @return {?}\n             */\n            function (obj) { return _this.filterPredicate(obj, _this.filter); }));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    };\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     */\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     * @param {?} data\n     * @return {?}\n     */\n    MatTableDataSource.prototype._orderData = /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    };\n    /**\n     * Returns a paged splice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     */\n    /**\n     * Returns a paged splice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    MatTableDataSource.prototype._pageData = /**\n     * Returns a paged splice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        if (!this.paginator) {\n            return data;\n        }\n        /** @type {?} */\n        var startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice().splice(startIndex, this.paginator.pageSize);\n    };\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     */\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     * @param {?} filteredDataLength\n     * @return {?}\n     */\n    MatTableDataSource.prototype._updatePaginator = /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     * @param {?} filteredDataLength\n     * @return {?}\n     */\n    function (filteredDataLength) {\n        var _this = this;\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var paginator = _this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                /** @type {?} */\n                var lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                /** @type {?} */\n                var newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    _this._internalPageChanges.next();\n                }\n            }\n        }));\n    };\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * @docs-private\n     */\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * \\@docs-private\n     * @return {?}\n     */\n    MatTableDataSource.prototype.connect = /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * \\@docs-private\n     * @return {?}\n     */\n    function () { return this._renderData; };\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * @docs-private\n     */\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * \\@docs-private\n     * @return {?}\n     */\n    MatTableDataSource.prototype.disconnect = /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * \\@docs-private\n     * @return {?}\n     */\n    function () { };\n    return MatTableDataSource;\n}(DataSource));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatTableModule, MatCellDef, MatHeaderCellDef, MatFooterCellDef, MatColumnDef, MatHeaderCell, MatFooterCell, MatCell, MatTable, MatHeaderRowDef, MatFooterRowDef, MatRowDef, MatHeaderRow, MatFooterRow, MatRow, MatTableDataSource, MatTextColumn };\n//# sourceMappingURL=table.es5.js.map\n","import { Entity } from '@ngx-starter-kit/shared';\n\nexport enum TargetType {\n  ALL = 'all',\n  USER = 'user',\n  TOPIC = 'topic',\n}\nexport enum NotificationColor {\n  WARN = 'warn',\n  ACCENT = 'accent',\n  PRIMARY = 'primary',\n}\n\nexport enum NotificationIcon {\n  NOTIFICATIONS = 'notifications',\n  NOTIFICATIONS_ACTIVE = 'notifications_active',\n  SHOPPING_BASKET = 'shopping_basket',\n  EJECT = 'eject',\n  CACHED = 'cached',\n  CODE = 'code',\n}\n\nexport class AppNotification extends Entity {\n  public id: number;\n  public title: string;\n  public body: string;\n  public target: string;\n  public targetType: TargetType;\n  public icon: NotificationIcon;\n  public color: NotificationColor;\n  public read: boolean;\n  public native: boolean;\n  public isActive: boolean;\n  public createdAt: Date;\n  public updatedAt?: Date;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceNumberProperty, coerceArray } from '@angular/cdk/coercion';\nimport { Subscription, Subject, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { startWith, takeUntil, take, map, switchMap, tap } from 'rxjs/operators';\nimport { ElementRef, Injectable, NgZone, Inject, InjectionToken, NgModule, ContentChildren, EventEmitter, forwardRef, Input, Output, Optional, Directive, ChangeDetectorRef, SkipSelf, ContentChild, ViewContainerRef, isDevMode, TemplateRef, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * \\@docs-private\n * @param {?} dest\n * @param {?} source\n * @return {?}\n */\nfunction extendStyles(dest, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n            dest[(/** @type {?} */ (key))] = source[(/** @type {?} */ (key))];\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * \\@docs-private\n * @param {?} element Element on which to toggle the drag interactions.\n * @param {?} enable Whether the drag interactions should be enabled.\n * @return {?}\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    /** @type {?} */\n    var userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        touchAction: enable ? '' : 'none',\n        webkitUserDrag: enable ? '' : 'none',\n        webkitTapHighlightColor: enable ? '' : 'transparent',\n        userSelect: userSelect,\n        msUserSelect: userSelect,\n        webkitUserSelect: userSelect,\n        MozUserSelect: userSelect\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Parses a CSS time value to milliseconds.\n * @param {?} value\n * @return {?}\n */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    /** @type {?} */\n    var multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/**\n * Gets the transform transition duration, including the delay, of an element in milliseconds.\n * @param {?} element\n * @return {?}\n */\nfunction getTransformTransitionDurationInMs(element) {\n    /** @type {?} */\n    var computedStyle = getComputedStyle(element);\n    /** @type {?} */\n    var transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    /** @type {?} */\n    var property = transitionedProperties.find((/**\n     * @param {?} prop\n     * @return {?}\n     */\n    function (prop) { return prop === 'transform' || prop === 'all'; }));\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    /** @type {?} */\n    var propertyIndex = transitionedProperties.indexOf(property);\n    /** @type {?} */\n    var rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    /** @type {?} */\n    var rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/**\n * Parses out multiple values from a computed style into an array.\n * @param {?} computedStyle\n * @param {?} name\n * @return {?}\n */\nfunction parseCssPropertyValue(computedStyle, name) {\n    /** @type {?} */\n    var value = computedStyle.getPropertyValue(name);\n    return value.split(',').map((/**\n     * @param {?} part\n     * @return {?}\n     */\n    function (part) { return part.trim(); }));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options that can be used to bind a passive event listener.\n * @type {?}\n */\nvar passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Options that can be used to bind an active event listener.\n * @type {?}\n */\nvar activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n * @type {?}\n */\nvar MOUSE_EVENT_IGNORE_TIME = 800;\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n * \\@docs-private\n * @template T\n */\nvar  /**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n * \\@docs-private\n * @template T\n */\nDragRef = /** @class */ (function () {\n    function DragRef(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        var _this = this;\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /**\n         * CSS `transform` that is applied to the element while it's being dragged.\n         */\n        this._activeTransform = { x: 0, y: 0 };\n        /**\n         * Emits when the item is being moved.\n         */\n        this._moveEvents = new Subject();\n        /**\n         * Subscription to pointer movement events.\n         */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the event that is dispatched when the user lifts their pointer.\n         */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the viewport being scrolled.\n         */\n        this._scrollSubscription = Subscription.EMPTY;\n        /**\n         * Cached reference to the boundary element.\n         */\n        this._boundaryElement = null;\n        /**\n         * Whether the native dragging interactions have been enabled on the root element.\n         */\n        this._nativeInteractionsEnabled = true;\n        /**\n         * Elements that can be used to drag the draggable item.\n         */\n        this._handles = [];\n        /**\n         * Registered handles that are currently disabled.\n         */\n        this._disabledHandles = new Set();\n        /**\n         * Layout direction of the item.\n         */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /**\n         * Emits as the drag sequence is being prepared.\n         */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user starts dragging the item.\n         */\n        this.started = new Subject();\n        /**\n         * Emits when the user has released a drag item, before any animations have started.\n         */\n        this.released = new Subject();\n        /**\n         * Emits when the user stops dragging an item in the container.\n         */\n        this.ended = new Subject();\n        /**\n         * Emits when the user has moved the item into a new container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes the item its container by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /**\n         * Emits when the user drops the item inside a container.\n         */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents.asObservable();\n        /**\n         * Handler for the `mousedown`/`touchstart` events.\n         */\n        this._pointerDown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            _this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (_this._handles.length) {\n                /** @type {?} */\n                var targetHandle = _this._handles.find((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                function (handle) {\n                    /** @type {?} */\n                    var target = event.target;\n                    return !!target && (target === handle || handle.contains((/** @type {?} */ (target))));\n                }));\n                if (targetHandle && !_this._disabledHandles.has(targetHandle) && !_this.disabled) {\n                    _this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!_this.disabled) {\n                _this._initializeDragSequence(_this._rootElement, event);\n            }\n        });\n        /**\n         * Handler that is invoked when the user moves their pointer after they've initiated a drag.\n         */\n        this._pointerMove = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            if (!_this._hasStartedDragging) {\n                /** @type {?} */\n                var pointerPosition = _this._getPointerPositionOnPage(event);\n                /** @type {?} */\n                var distanceX = Math.abs(pointerPosition.x - _this._pickupPositionOnPage.x);\n                /** @type {?} */\n                var distanceY = Math.abs(pointerPosition.y - _this._pickupPositionOnPage.y);\n                /** @type {?} */\n                var isOverThreshold = distanceX + distanceY >= _this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    /** @type {?} */\n                    var isDelayElapsed = Date.now() >= _this._dragStartTime + (_this.dragStartDelay || 0);\n                    if (!isDelayElapsed) {\n                        _this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!_this._dropContainer || !_this._dropContainer.isDragging()) {\n                        _this._hasStartedDragging = true;\n                        _this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        function () { return _this._startDragSequence(event); }));\n                    }\n                }\n                return;\n            }\n            // We only need the preview dimensions if we have a boundary element.\n            if (_this._boundaryElement) {\n                // Cache the preview element rect if we haven't cached it already or if\n                // we cached it too early before the element dimensions were computed.\n                if (!_this._previewRect || (!_this._previewRect.width && !_this._previewRect.height)) {\n                    _this._previewRect = (_this._preview || _this._rootElement).getBoundingClientRect();\n                }\n            }\n            /** @type {?} */\n            var constrainedPointerPosition = _this._getConstrainedPointerPosition(event);\n            _this._hasMoved = true;\n            event.preventDefault();\n            _this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (_this._dropContainer) {\n                _this._updateActiveDropContainer(constrainedPointerPosition);\n            }\n            else {\n                /** @type {?} */\n                var activeTransform = _this._activeTransform;\n                activeTransform.x =\n                    constrainedPointerPosition.x - _this._pickupPositionOnPage.x + _this._passiveTransform.x;\n                activeTransform.y =\n                    constrainedPointerPosition.y - _this._pickupPositionOnPage.y + _this._passiveTransform.y;\n                _this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n                // Apply transform as attribute if dragging and svg element to work for IE\n                if (typeof SVGElement !== 'undefined' && _this._rootElement instanceof SVGElement) {\n                    /** @type {?} */\n                    var appliedTransform = \"translate(\" + activeTransform.x + \" \" + activeTransform.y + \")\";\n                    _this._rootElement.setAttribute('transform', appliedTransform);\n                }\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (_this._moveEvents.observers.length) {\n                _this._ngZone.run((/**\n                 * @return {?}\n                 */\n                function () {\n                    _this._moveEvents.next({\n                        source: _this,\n                        pointerPosition: constrainedPointerPosition,\n                        event: event,\n                        distance: _this._getDragDistance(constrainedPointerPosition),\n                        delta: _this._pointerDirectionDelta\n                    });\n                }));\n            }\n        });\n        /**\n         * Handler that is invoked when the user lifts their pointer up, after initiating a drag.\n         */\n        this._pointerUp = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            _this._endDragSequence(event);\n        });\n        this.withRootElement(element);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    Object.defineProperty(DragRef.prototype, \"disabled\", {\n        /** Whether starting to drag this element is disabled. */\n        get: /**\n         * Whether starting to drag this element is disabled.\n         * @return {?}\n         */\n        function () {\n            return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var newValue = coerceBooleanProperty(value);\n            if (newValue !== this._disabled) {\n                this._disabled = newValue;\n                this._toggleNativeDragInteractions();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    DragRef.prototype.getPlaceholderElement = /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    function () {\n        return this._placeholder;\n    };\n    /** Returns the root draggable element. */\n    /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    DragRef.prototype.getRootElement = /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    function () {\n        return this._rootElement;\n    };\n    /** Registers the handles that can be used to drag the element. */\n    /**\n     * Registers the handles that can be used to drag the element.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} handles\n     * @return {THIS}\n     */\n    DragRef.prototype.withHandles = /**\n     * Registers the handles that can be used to drag the element.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} handles\n     * @return {THIS}\n     */\n    function (handles) {\n        (/** @type {?} */ (this))._handles = handles.map((/**\n         * @param {?} handle\n         * @return {?}\n         */\n        function (handle) { return coerceElement(handle); }));\n        (/** @type {?} */ (this))._handles.forEach((/**\n         * @param {?} handle\n         * @return {?}\n         */\n        function (handle) { return toggleNativeDragInteractions(handle, false); }));\n        (/** @type {?} */ (this))._toggleNativeDragInteractions();\n        return (/** @type {?} */ (this));\n    };\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @param template Template that from which to stamp out the preview.\n     */\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} template Template that from which to stamp out the preview.\n     * @return {THIS}\n     */\n    DragRef.prototype.withPreviewTemplate = /**\n     * Registers the template that should be used for the drag preview.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} template Template that from which to stamp out the preview.\n     * @return {THIS}\n     */\n    function (template) {\n        (/** @type {?} */ (this))._previewTemplate = template;\n        return (/** @type {?} */ (this));\n    };\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @param template Template that from which to stamp out the placeholder.\n     */\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} template Template that from which to stamp out the placeholder.\n     * @return {THIS}\n     */\n    DragRef.prototype.withPlaceholderTemplate = /**\n     * Registers the template that should be used for the drag placeholder.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} template Template that from which to stamp out the placeholder.\n     * @return {THIS}\n     */\n    function (template) {\n        (/** @type {?} */ (this))._placeholderTemplate = template;\n        return (/** @type {?} */ (this));\n    };\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     */\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} rootElement\n     * @return {THIS}\n     */\n    DragRef.prototype.withRootElement = /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} rootElement\n     * @return {THIS}\n     */\n    function (rootElement) {\n        /** @type {?} */\n        var element = coerceElement(rootElement);\n        if (element !== (/** @type {?} */ (this))._rootElement) {\n            if ((/** @type {?} */ (this))._rootElement) {\n                (/** @type {?} */ (this))._removeRootElementListeners((/** @type {?} */ (this))._rootElement);\n            }\n            element.addEventListener('mousedown', (/** @type {?} */ (this))._pointerDown, activeEventListenerOptions);\n            element.addEventListener('touchstart', (/** @type {?} */ (this))._pointerDown, passiveEventListenerOptions);\n            (/** @type {?} */ (this))._initialTransform = undefined;\n            (/** @type {?} */ (this))._rootElement = element;\n        }\n        return (/** @type {?} */ (this));\n    };\n    /**\n     * Element to which the draggable's position will be constrained.\n     */\n    /**\n     * Element to which the draggable's position will be constrained.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} boundaryElement\n     * @return {THIS}\n     */\n    DragRef.prototype.withBoundaryElement = /**\n     * Element to which the draggable's position will be constrained.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} boundaryElement\n     * @return {THIS}\n     */\n    function (boundaryElement) {\n        (/** @type {?} */ (this))._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        return (/** @type {?} */ (this));\n    };\n    /** Removes the dragging functionality from the DOM element. */\n    /**\n     * Removes the dragging functionality from the DOM element.\n     * @return {?}\n     */\n    DragRef.prototype.dispose = /**\n     * Removes the dragging functionality from the DOM element.\n     * @return {?}\n     */\n    function () {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            removeElement(this._rootElement);\n        }\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._boundaryElement = this._rootElement = this._placeholderTemplate =\n            this._previewTemplate = this._nextSibling = (/** @type {?} */ (null));\n    };\n    /** Checks whether the element is currently being dragged. */\n    /**\n     * Checks whether the element is currently being dragged.\n     * @return {?}\n     */\n    DragRef.prototype.isDragging = /**\n     * Checks whether the element is currently being dragged.\n     * @return {?}\n     */\n    function () {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    };\n    /** Resets a standalone drag item to its initial position. */\n    /**\n     * Resets a standalone drag item to its initial position.\n     * @return {?}\n     */\n    DragRef.prototype.reset = /**\n     * Resets a standalone drag item to its initial position.\n     * @return {?}\n     */\n    function () {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    };\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param handle Handle element that should be disabled.\n     */\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param {?} handle Handle element that should be disabled.\n     * @return {?}\n     */\n    DragRef.prototype.disableHandle = /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param {?} handle Handle element that should be disabled.\n     * @return {?}\n     */\n    function (handle) {\n        if (this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n        }\n    };\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param handle Handle element to be enabled.\n     */\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param {?} handle Handle element to be enabled.\n     * @return {?}\n     */\n    DragRef.prototype.enableHandle = /**\n     * Enables a handle, if it has been disabled.\n     * @param {?} handle Handle element to be enabled.\n     * @return {?}\n     */\n    function (handle) {\n        this._disabledHandles.delete(handle);\n    };\n    /** Sets the layout direction of the draggable item. */\n    /**\n     * Sets the layout direction of the draggable item.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction\n     * @return {THIS}\n     */\n    DragRef.prototype.withDirection = /**\n     * Sets the layout direction of the draggable item.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction\n     * @return {THIS}\n     */\n    function (direction) {\n        (/** @type {?} */ (this))._direction = direction;\n        return (/** @type {?} */ (this));\n    };\n    /** Sets the container that the item is part of. */\n    /**\n     * Sets the container that the item is part of.\n     * @param {?} container\n     * @return {?}\n     */\n    DragRef.prototype._withDropContainer = /**\n     * Sets the container that the item is part of.\n     * @param {?} container\n     * @return {?}\n     */\n    function (container) {\n        this._dropContainer = container;\n    };\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     */\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     * @return {?}\n     */\n    DragRef.prototype.getFreeDragPosition = /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    };\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} value New position to be set.\n     * @return {THIS}\n     */\n    DragRef.prototype.setFreeDragPosition = /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} value New position to be set.\n     * @return {THIS}\n     */\n    function (value) {\n        (/** @type {?} */ (this))._activeTransform = { x: 0, y: 0 };\n        (/** @type {?} */ (this))._passiveTransform.x = value.x;\n        (/** @type {?} */ (this))._passiveTransform.y = value.y;\n        if (!(/** @type {?} */ (this))._dropContainer) {\n            (/** @type {?} */ (this))._applyRootElementTransform(value.x, value.y);\n        }\n        return (/** @type {?} */ (this));\n    };\n    /** Updates the item's sort order based on the last-known pointer position. */\n    /**\n     * Updates the item's sort order based on the last-known pointer position.\n     * @return {?}\n     */\n    DragRef.prototype._sortFromLastPointerPosition = /**\n     * Updates the item's sort order based on the last-known pointer position.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var position = this._pointerPositionAtLastDirectionChange;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(position);\n        }\n    };\n    /** Unsubscribes from the global subscriptions. */\n    /**\n     * Unsubscribes from the global subscriptions.\n     * @private\n     * @return {?}\n     */\n    DragRef.prototype._removeSubscriptions = /**\n     * Unsubscribes from the global subscriptions.\n     * @private\n     * @return {?}\n     */\n    function () {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    };\n    /** Destroys the preview element and its ViewRef. */\n    /**\n     * Destroys the preview element and its ViewRef.\n     * @private\n     * @return {?}\n     */\n    DragRef.prototype._destroyPreview = /**\n     * Destroys the preview element and its ViewRef.\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this._preview) {\n            removeElement(this._preview);\n        }\n        if (this._previewRef) {\n            this._previewRef.destroy();\n        }\n        this._preview = this._previewRef = (/** @type {?} */ (null));\n    };\n    /** Destroys the placeholder element and its ViewRef. */\n    /**\n     * Destroys the placeholder element and its ViewRef.\n     * @private\n     * @return {?}\n     */\n    DragRef.prototype._destroyPlaceholder = /**\n     * Destroys the placeholder element and its ViewRef.\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this._placeholder) {\n            removeElement(this._placeholder);\n        }\n        if (this._placeholderRef) {\n            this._placeholderRef.destroy();\n        }\n        this._placeholder = this._placeholderRef = (/** @type {?} */ (null));\n    };\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @param event Browser event object that ended the sequence.\n     */\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @private\n     * @param {?} event Browser event object that ended the sequence.\n     * @return {?}\n     */\n    DragRef.prototype._endDragSequence = /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @private\n     * @param {?} event Browser event object that ended the sequence.\n     * @return {?}\n     */\n    function (event) {\n        var _this = this;\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then((/**\n             * @return {?}\n             */\n            function () {\n                _this._cleanupDragArtifacts(event);\n                _this._dragDropRegistry.stopDragging(_this);\n            }));\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            function () {\n                _this.ended.next({\n                    source: _this,\n                    distance: _this._getDragDistance(_this._getPointerPositionOnPage(event))\n                });\n            }));\n            this._dragDropRegistry.stopDragging(this);\n        }\n    };\n    /** Starts the dragging sequence. */\n    /**\n     * Starts the dragging sequence.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    DragRef.prototype._startDragSequence = /**\n     * Starts the dragging sequence.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // Emit the event on the item before the one on the container.\n        this.started.next({ source: this });\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        if (this._dropContainer) {\n            /** @type {?} */\n            var element = this._rootElement;\n            // Grab the `nextSibling` before the preview and placeholder\n            // have been created so we don't get the preview by accident.\n            this._nextSibling = element.nextSibling;\n            /** @type {?} */\n            var preview = this._preview = this._createPreviewElement();\n            /** @type {?} */\n            var placeholder = this._placeholder = this._createPlaceholderElement();\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            element.style.display = 'none';\n            this._document.body.appendChild((/** @type {?} */ (element.parentNode)).replaceChild(placeholder, element));\n            getPreviewInsertionPoint(this._document).appendChild(preview);\n            this._dropContainer.start();\n        }\n    };\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param referenceElement Element that started the drag sequence.\n     * @param event Browser event object that started the sequence.\n     */\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @private\n     * @param {?} referenceElement Element that started the drag sequence.\n     * @param {?} event Browser event object that started the sequence.\n     * @return {?}\n     */\n    DragRef.prototype._initializeDragSequence = /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @private\n     * @param {?} referenceElement Element that started the drag sequence.\n     * @param {?} event Browser event object that started the sequence.\n     * @return {?}\n     */\n    function (referenceElement, event) {\n        var _this = this;\n        // Always stop propagation for the event that initializes\n        // the dragging sequence, in order to prevent it from potentially\n        // starting another sequence for a draggable parent somewhere up the DOM tree.\n        event.stopPropagation();\n        /** @type {?} */\n        var isDragging = this.isDragging();\n        /** @type {?} */\n        var isTouchSequence = isTouchEvent(event);\n        /** @type {?} */\n        var isAuxiliaryMouseButton = !isTouchSequence && ((/** @type {?} */ (event))).button !== 0;\n        /** @type {?} */\n        var rootElement = this._rootElement;\n        /** @type {?} */\n        var isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (event.target && ((/** @type {?} */ (event.target))).draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            this._rootElementTapHighlight = rootElement.style.webkitTapHighlightColor;\n            rootElement.style.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        this._initialContainer = (/** @type {?} */ (this._dropContainer));\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry.scroll.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this._scrollPosition = _this._viewportRuler.getViewportScrollPosition();\n        }));\n        if (this._boundaryElement) {\n            this._boundaryRect = this._boundaryElement.getBoundingClientRect();\n        }\n        // If we have a custom preview template, the element won't be visible anyway so we avoid the\n        // extra `getBoundingClientRect` calls and just move the preview next to the cursor.\n        this._pickupPositionInElement = this._previewTemplate && this._previewTemplate.template ?\n            { x: 0, y: 0 } :\n            this._getPointerPositionInElement(referenceElement, event);\n        /** @type {?} */\n        var pointerPosition = this._pickupPositionOnPage = this._getPointerPositionOnPage(event);\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    };\n    /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n    /**\n     * Cleans up the DOM artifacts that were added to facilitate the element being dragged.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    DragRef.prototype._cleanupDragArtifacts = /**\n     * Cleans up the DOM artifacts that were added to facilitate the element being dragged.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var _this = this;\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        this._rootElement.style.display = '';\n        if (this._nextSibling) {\n            (/** @type {?} */ (this._nextSibling.parentNode)).insertBefore(this._rootElement, this._nextSibling);\n        }\n        else {\n            coerceElement(this._initialContainer.element).appendChild(this._rootElement);\n        }\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._boundaryRect = this._previewRect = undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run((/**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var container = (/** @type {?} */ (_this._dropContainer));\n            /** @type {?} */\n            var currentIndex = container.getItemIndex(_this);\n            /** @type {?} */\n            var pointerPosition = _this._getPointerPositionOnPage(event);\n            /** @type {?} */\n            var distance = _this._getDragDistance(_this._getPointerPositionOnPage(event));\n            /** @type {?} */\n            var isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            _this.ended.next({ source: _this, distance: distance });\n            _this.dropped.next({\n                item: _this,\n                currentIndex: currentIndex,\n                previousIndex: _this._initialContainer.getItemIndex(_this),\n                container: container,\n                previousContainer: _this._initialContainer,\n                isPointerOverContainer: isPointerOverContainer,\n                distance: distance\n            });\n            container.drop(_this, currentIndex, _this._initialContainer, isPointerOverContainer, distance);\n            _this._dropContainer = _this._initialContainer;\n        }));\n    };\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     */\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     * @private\n     * @param {?} __0\n     * @return {?}\n     */\n    DragRef.prototype._updateActiveDropContainer = /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     * @private\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var _this = this;\n        var x = _a.x, y = _a.y;\n        // Drop container that draggable has been moved into.\n        /** @type {?} */\n        var newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left it's\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer && this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            function () {\n                // Notify the old container that the item has left.\n                _this.exited.next({ item: _this, container: (/** @type {?} */ (_this._dropContainer)) });\n                (/** @type {?} */ (_this._dropContainer)).exit(_this);\n                // Notify the new container that the item has entered.\n                _this._dropContainer = (/** @type {?} */ (newContainer));\n                _this._dropContainer.enter(_this, x, y);\n                _this.entered.next({\n                    item: _this,\n                    container: (/** @type {?} */ (newContainer)),\n                    currentIndex: (/** @type {?} */ (newContainer)).getItemIndex(_this)\n                });\n            }));\n        }\n        (/** @type {?} */ (this._dropContainer))._startScrollingIfNecessary(x, y);\n        (/** @type {?} */ (this._dropContainer))._sortItem(this, x, y, this._pointerDirectionDelta);\n        this._preview.style.transform =\n            getTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n    };\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     */\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     * @private\n     * @return {?}\n     */\n    DragRef.prototype._createPreviewElement = /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var previewConfig = this._previewTemplate;\n        /** @type {?} */\n        var previewTemplate = previewConfig ? previewConfig.template : null;\n        /** @type {?} */\n        var preview;\n        if (previewTemplate) {\n            /** @type {?} */\n            var viewRef = (/** @type {?} */ (previewConfig)).viewContainer.createEmbeddedView(previewTemplate, (/** @type {?} */ (previewConfig)).context);\n            preview = viewRef.rootNodes[0];\n            this._previewRef = viewRef;\n            preview.style.transform =\n                getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n        }\n        else {\n            /** @type {?} */\n            var element = this._rootElement;\n            /** @type {?} */\n            var elementRect = element.getBoundingClientRect();\n            preview = deepCloneNode(element);\n            preview.style.width = elementRect.width + \"px\";\n            preview.style.height = elementRect.height + \"px\";\n            preview.style.transform = getTransform(elementRect.left, elementRect.top);\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            pointerEvents: 'none',\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            zIndex: '1000'\n        });\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        return preview;\n    };\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @returns Promise that resolves when the animation completes.\n     */\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @private\n     * @return {?} Promise that resolves when the animation completes.\n     */\n    DragRef.prototype._animatePreviewToPlaceholder = /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @private\n     * @return {?} Promise that resolves when the animation completes.\n     */\n    function () {\n        var _this = this;\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        /** @type {?} */\n        var placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._preview.style.transform = getTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        /** @type {?} */\n        var duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        function () {\n            return new Promise((/**\n             * @param {?} resolve\n             * @return {?}\n             */\n            function (resolve) {\n                /** @type {?} */\n                var handler = (/** @type {?} */ (((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                function (event) {\n                    if (!event || (event.target === _this._preview && event.propertyName === 'transform')) {\n                        _this._preview.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                }))));\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                /** @type {?} */\n                var timeout = setTimeout((/** @type {?} */ (handler)), duration * 1.5);\n                _this._preview.addEventListener('transitionend', handler);\n            }));\n        }));\n    };\n    /** Creates an element that will be shown instead of the current element while dragging. */\n    /**\n     * Creates an element that will be shown instead of the current element while dragging.\n     * @private\n     * @return {?}\n     */\n    DragRef.prototype._createPlaceholderElement = /**\n     * Creates an element that will be shown instead of the current element while dragging.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var placeholderConfig = this._placeholderTemplate;\n        /** @type {?} */\n        var placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        /** @type {?} */\n        var placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = (/** @type {?} */ (placeholderConfig)).viewContainer.createEmbeddedView(placeholderTemplate, (/** @type {?} */ (placeholderConfig)).context);\n            placeholder = this._placeholderRef.rootNodes[0];\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    };\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param referenceElement Element that initiated the dragging.\n     * @param event Event that initiated the dragging.\n     */\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @private\n     * @param {?} referenceElement Element that initiated the dragging.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    DragRef.prototype._getPointerPositionInElement = /**\n     * Figures out the coordinates at which an element was picked up.\n     * @private\n     * @param {?} referenceElement Element that initiated the dragging.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    function (referenceElement, event) {\n        /** @type {?} */\n        var elementRect = this._rootElement.getBoundingClientRect();\n        /** @type {?} */\n        var handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        /** @type {?} */\n        var referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        /** @type {?} */\n        var point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        /** @type {?} */\n        var x = point.pageX - referenceRect.left - this._scrollPosition.left;\n        /** @type {?} */\n        var y = point.pageY - referenceRect.top - this._scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y\n        };\n    };\n    /** Determines the point of the page that was touched by the user. */\n    /**\n     * Determines the point of the page that was touched by the user.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    DragRef.prototype._getPointerPositionOnPage = /**\n     * Determines the point of the page that was touched by the user.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n        /** @type {?} */\n        var point = isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\n        return {\n            x: point.pageX - this._scrollPosition.left,\n            y: point.pageY - this._scrollPosition.top\n        };\n    };\n    /** Gets the pointer position on the page, accounting for any position constraints. */\n    /**\n     * Gets the pointer position on the page, accounting for any position constraints.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    DragRef.prototype._getConstrainedPointerPosition = /**\n     * Gets the pointer position on the page, accounting for any position constraints.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        /** @type {?} */\n        var point = this._getPointerPositionOnPage(event);\n        /** @type {?} */\n        var constrainedPoint = this.constrainPosition ? this.constrainPosition(point, this) : point;\n        /** @type {?} */\n        var dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            constrainedPoint.y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            constrainedPoint.x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            var _a = this._pickupPositionInElement, pickupX = _a.x, pickupY = _a.y;\n            /** @type {?} */\n            var boundaryRect = this._boundaryRect;\n            /** @type {?} */\n            var previewRect = (/** @type {?} */ (this._previewRect));\n            /** @type {?} */\n            var minY = boundaryRect.top + pickupY;\n            /** @type {?} */\n            var maxY = boundaryRect.bottom - (previewRect.height - pickupY);\n            /** @type {?} */\n            var minX = boundaryRect.left + pickupX;\n            /** @type {?} */\n            var maxX = boundaryRect.right - (previewRect.width - pickupX);\n            constrainedPoint.x = clamp(constrainedPoint.x, minX, maxX);\n            constrainedPoint.y = clamp(constrainedPoint.y, minY, maxY);\n        }\n        return constrainedPoint;\n    };\n    /** Updates the current drag delta, based on the user's current pointer position on the page. */\n    /**\n     * Updates the current drag delta, based on the user's current pointer position on the page.\n     * @private\n     * @param {?} pointerPositionOnPage\n     * @return {?}\n     */\n    DragRef.prototype._updatePointerDirectionDelta = /**\n     * Updates the current drag delta, based on the user's current pointer position on the page.\n     * @private\n     * @param {?} pointerPositionOnPage\n     * @return {?}\n     */\n    function (pointerPositionOnPage) {\n        var x = pointerPositionOnPage.x, y = pointerPositionOnPage.y;\n        /** @type {?} */\n        var delta = this._pointerDirectionDelta;\n        /** @type {?} */\n        var positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        /** @type {?} */\n        var changeX = Math.abs(x - positionSinceLastChange.x);\n        /** @type {?} */\n        var changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    };\n    /** Toggles the native drag interactions, based on how many handles are registered. */\n    /**\n     * Toggles the native drag interactions, based on how many handles are registered.\n     * @private\n     * @return {?}\n     */\n    DragRef.prototype._toggleNativeDragInteractions = /**\n     * Toggles the native drag interactions, based on how many handles are registered.\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        /** @type {?} */\n        var shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    };\n    /** Removes the manually-added event listeners from the root element. */\n    /**\n     * Removes the manually-added event listeners from the root element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    DragRef.prototype._removeRootElementListeners = /**\n     * Removes the manually-added event listeners from the root element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n    };\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @private\n     * @param {?} x New transform value along the X axis.\n     * @param {?} y New transform value along the Y axis.\n     * @return {?}\n     */\n    DragRef.prototype._applyRootElementTransform = /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @private\n     * @param {?} x New transform value along the X axis.\n     * @param {?} y New transform value along the Y axis.\n     * @return {?}\n     */\n    function (x, y) {\n        /** @type {?} */\n        var transform = getTransform(x, y);\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        if (this._initialTransform == null) {\n            this._initialTransform = this._rootElement.style.transform || '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        this._rootElement.style.transform = this._initialTransform ?\n            transform + ' ' + this._initialTransform : transform;\n    };\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @param currentPosition Current position of the user's pointer.\n     */\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @private\n     * @param {?} currentPosition Current position of the user's pointer.\n     * @return {?}\n     */\n    DragRef.prototype._getDragDistance = /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @private\n     * @param {?} currentPosition Current position of the user's pointer.\n     * @return {?}\n     */\n    function (currentPosition) {\n        /** @type {?} */\n        var pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    };\n    return DragRef;\n}());\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param {?} x Desired position of the element along the X axis.\n * @param {?} y Desired position of the element along the Y axis.\n * @return {?}\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return \"translate3d(\" + Math.round(x) + \"px, \" + Math.round(y) + \"px, 0)\";\n}\n/**\n * Creates a deep clone of an element.\n * @param {?} node\n * @return {?}\n */\nfunction deepCloneNode(node) {\n    /** @type {?} */\n    var clone = (/** @type {?} */ (node.cloneNode(true)));\n    /** @type {?} */\n    var descendantsWithId = clone.querySelectorAll('[id]');\n    /** @type {?} */\n    var descendantCanvases = node.querySelectorAll('canvas');\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (var i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    // `cloneNode` won't transfer the content of `canvas` elements so we have to do it ourselves.\n    // We match up the cloned canvas to their sources using their index in the DOM.\n    if (descendantCanvases.length) {\n        /** @type {?} */\n        var cloneCanvases = clone.querySelectorAll('canvas');\n        for (var i = 0; i < descendantCanvases.length; i++) {\n            /** @type {?} */\n            var correspondingCloneContext = cloneCanvases[i].getContext('2d');\n            if (correspondingCloneContext) {\n                correspondingCloneContext.drawImage(descendantCanvases[i], 0, 0);\n            }\n        }\n    }\n    return clone;\n}\n/**\n * Clamps a value between a minimum and a maximum.\n * @param {?} value\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nfunction clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * Helper to remove an element from the DOM and to do all the necessary null checks.\n * @param {?} element Element to be removed.\n * @return {?}\n */\nfunction removeElement(element) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n/**\n * Determines whether an event is a touch event.\n * @param {?} event\n * @return {?}\n */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/**\n * Gets the element into which the drag preview should be inserted.\n * @param {?} documentRef\n * @return {?}\n */\nfunction getPreviewInsertionPoint(documentRef) {\n    // We can't use the body if the user is in fullscreen mode,\n    // because the preview will render under the fullscreen element.\n    // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n    return documentRef.fullscreenElement ||\n        documentRef.webkitFullscreenElement ||\n        documentRef.mozFullScreenElement ||\n        documentRef.msFullscreenElement ||\n        documentRef.body;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Moves an item one index in an array to another.\n * @template T\n * @param {?} array Array in which to move the item.\n * @param {?} fromIndex Starting index of the item.\n * @param {?} toIndex Index to which the item should be moved.\n * @return {?}\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    /** @type {?} */\n    var from = clamp$1(fromIndex, array.length - 1);\n    /** @type {?} */\n    var to = clamp$1(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    /** @type {?} */\n    var target = array[from];\n    /** @type {?} */\n    var delta = to < from ? -1 : 1;\n    for (var i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @template T\n * @param {?} currentArray Array from which to transfer the item.\n * @param {?} targetArray Array into which to put the item.\n * @param {?} currentIndex Index of the item in its current array.\n * @param {?} targetIndex Index at which to insert the item.\n * @return {?}\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    /** @type {?} */\n    var from = clamp$1(currentIndex, currentArray.length - 1);\n    /** @type {?} */\n    var to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @template T\n * @param {?} currentArray Array from which to copy the item.\n * @param {?} targetArray Array into which is copy the item.\n * @param {?} currentIndex Index of the item in its current array.\n * @param {?} targetIndex Index at which to insert the item.\n *\n * @return {?}\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    /** @type {?} */\n    var to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/**\n * Clamps a number between zero and a maximum.\n * @param {?} value\n * @param {?} max\n * @return {?}\n */\nfunction clamp$1(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique ids for drop refs.\n * @type {?}\n */\nvar _uniqueIdCounter = 0;\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n * @type {?}\n */\nvar DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n * @type {?}\n */\nvar SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Number of pixels to scroll for each frame when auto-scrolling an element.\n * The value comes from trying it out manually until it feels right.\n * @type {?}\n */\nvar AUTO_SCROLL_STEP = 2;\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n * \\@docs-private\n * @template T\n */\nvar  /**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n * \\@docs-private\n * @template T\n */\nDropListRef = /** @class */ (function () {\n    function DropListRef(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        var _this = this;\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /**\n         * Unique ID for the drop list.\n         * @deprecated No longer being used. To be removed.\n         * \\@breaking-change 8.0.0\n         */\n        this.id = \"cdk-drop-list-ref-\" + _uniqueIdCounter++;\n        /**\n         * Whether starting a dragging sequence from this container is disabled.\n         */\n        this.disabled = false;\n        /**\n         * Whether sorting items within the list is disabled.\n         */\n        this.sortingDisabled = true;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = (/**\n         * @return {?}\n         */\n        function () { return true; });\n        /**\n         * Emits right before dragging has started.\n         */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /**\n         * Emits when the user drops an item inside the container.\n         */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is swapping items while actively dragging.\n         */\n        this.sorted = new Subject();\n        /**\n         * Whether an item in the list is being dragged.\n         */\n        this._isDragging = false;\n        /**\n         * Cache of the dimensions of all the items inside the container.\n         */\n        this._itemPositions = [];\n        /**\n         * Keeps track of the container's scroll position.\n         */\n        this._scrollPosition = { top: 0, left: 0 };\n        /**\n         * Keeps track of the scroll position of the viewport.\n         */\n        this._viewportScrollPosition = { top: 0, left: 0 };\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as\n         * well as what direction the pointer was moving in when the swap occured.\n         */\n        this._previousSwap = { drag: (/** @type {?} */ (null)), delta: 0 };\n        /**\n         * Drop lists that are connected to the current one.\n         */\n        this._siblings = [];\n        /**\n         * Direction in which the list is oriented.\n         */\n        this._orientation = 'vertical';\n        /**\n         * Connected siblings that currently have a dragged item.\n         */\n        this._activeSiblings = new Set();\n        /**\n         * Layout direction of the drop list.\n         */\n        this._direction = 'ltr';\n        /**\n         * Subscription to the window being scrolled.\n         */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /**\n         * Vertical direction in which the list is currently scrolling.\n         */\n        this._verticalScrollDirection = 0 /* NONE */;\n        /**\n         * Horizontal direction in which the list is currently scrolling.\n         */\n        this._horizontalScrollDirection = 0 /* NONE */;\n        /**\n         * Used to signal to the current auto-scroll sequence when to stop.\n         */\n        this._stopScrollTimers = new Subject();\n        /**\n         * Handles the container being scrolled. Has to be an arrow function to preserve the context.\n         */\n        this._handleScroll = (/**\n         * @return {?}\n         */\n        function () {\n            if (!_this.isDragging()) {\n                return;\n            }\n            /** @type {?} */\n            var element = coerceElement(_this.element);\n            _this._updateAfterScroll(_this._scrollPosition, element.scrollTop, element.scrollLeft);\n        });\n        /**\n         * Starts the interval that'll auto-scroll the element.\n         */\n        this._startScrollInterval = (/**\n         * @return {?}\n         */\n        function () {\n            _this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(_this._stopScrollTimers))\n                .subscribe((/**\n             * @return {?}\n             */\n            function () {\n                /** @type {?} */\n                var node = _this._scrollNode;\n                if (_this._verticalScrollDirection === 1 /* UP */) {\n                    incrementVerticalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (_this._verticalScrollDirection === 2 /* DOWN */) {\n                    incrementVerticalScroll(node, AUTO_SCROLL_STEP);\n                }\n                if (_this._horizontalScrollDirection === 1 /* LEFT */) {\n                    incrementHorizontalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (_this._horizontalScrollDirection === 2 /* RIGHT */) {\n                    incrementHorizontalScroll(node, AUTO_SCROLL_STEP);\n                }\n            }));\n        });\n        _dragDropRegistry.registerDropContainer(this);\n        this._document = _document;\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n    /** Removes the drop list functionality from the DOM element. */\n    /**\n     * Removes the drop list functionality from the DOM element.\n     * @return {?}\n     */\n    DropListRef.prototype.dispose = /**\n     * Removes the drop list functionality from the DOM element.\n     * @return {?}\n     */\n    function () {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._removeListeners();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = (/** @type {?} */ (null));\n        this._dragDropRegistry.removeDropContainer(this);\n    };\n    /** Whether an item from this list is currently being dragged. */\n    /**\n     * Whether an item from this list is currently being dragged.\n     * @return {?}\n     */\n    DropListRef.prototype.isDragging = /**\n     * Whether an item from this list is currently being dragged.\n     * @return {?}\n     */\n    function () {\n        return this._isDragging;\n    };\n    /** Starts dragging an item. */\n    /**\n     * Starts dragging an item.\n     * @return {?}\n     */\n    DropListRef.prototype.start = /**\n     * Starts dragging an item.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var element = coerceElement(this.element);\n        this.beforeStarted.next();\n        this._isDragging = true;\n        this._cacheItems();\n        this._siblings.forEach((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        function (sibling) { return sibling._startReceiving(_this); }));\n        this._removeListeners();\n        // @breaking-change 9.0.0 Remove check for _ngZone once it's marked as a required param.\n        if (this._ngZone) {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () { return element.addEventListener('scroll', _this._handleScroll); }));\n        }\n        else {\n            element.addEventListener('scroll', this._handleScroll);\n        }\n        // @breaking-change 9.0.0 Remove check for _viewportRuler once it's marked as a required param.\n        if (this._viewportRuler) {\n            this._viewportScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            this._viewportScrollSubscription = this._dragDropRegistry.scroll.subscribe((/**\n             * @return {?}\n             */\n            function () {\n                if (_this.isDragging()) {\n                    /** @type {?} */\n                    var newPosition = (/** @type {?} */ (_this._viewportRuler)).getViewportScrollPosition();\n                    _this._updateAfterScroll(_this._viewportScrollPosition, newPosition.top, newPosition.left, _this._clientRect);\n                }\n            }));\n        }\n    };\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     */\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @return {?}\n     */\n    DropListRef.prototype.enter = /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @return {?}\n     */\n    function (item, pointerX, pointerY) {\n        this.start();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        /** @type {?} */\n        var newIndex = this.sortingDisabled ? this._draggables.indexOf(item) : -1;\n        if (newIndex === -1) {\n            // We use the coordinates of where the item entered the drop\n            // zone to figure out at which index it should be inserted.\n            newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n        }\n        /** @type {?} */\n        var activeDraggables = this._activeDraggables;\n        /** @type {?} */\n        var currentIndex = activeDraggables.indexOf(item);\n        /** @type {?} */\n        var placeholder = item.getPlaceholderElement();\n        /** @type {?} */\n        var newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            /** @type {?} */\n            var element = newPositionReference.getRootElement();\n            (/** @type {?} */ (element.parentElement)).insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else {\n            coerceElement(this.element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that the positions were already cached when we called `start` above,\n        // but we need to refresh them since the amount of items has changed.\n        this._cacheItemPositions();\n        this.entered.next({ item: item, container: this, currentIndex: this.getItemIndex(item) });\n    };\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    DropListRef.prototype.exit = /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    function (item) {\n        this._reset();\n        this.exited.next({ item: item, container: this });\n    };\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param distance Distance the user has dragged since the start of the dragging sequence.\n     * @breaking-change 9.0.0 `distance` parameter to become required.\n     */\n    /**\n     * Drops an item into this container.\n     * \\@breaking-change 9.0.0 `distance` parameter to become required.\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @param {?} isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param {?=} distance Distance the user has dragged since the start of the dragging sequence.\n     * @return {?}\n     */\n    DropListRef.prototype.drop = /**\n     * Drops an item into this container.\n     * \\@breaking-change 9.0.0 `distance` parameter to become required.\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @param {?} isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param {?=} distance Distance the user has dragged since the start of the dragging sequence.\n     * @return {?}\n     */\n    function (item, currentIndex, previousContainer, isPointerOverContainer, distance) {\n        if (distance === void 0) { distance = { x: 0, y: 0 }; }\n        this._reset();\n        this.dropped.next({\n            item: item,\n            currentIndex: currentIndex,\n            previousIndex: previousContainer.getItemIndex(item),\n            container: this,\n            previousContainer: previousContainer,\n            isPointerOverContainer: isPointerOverContainer,\n            distance: distance\n        });\n    };\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @param items Items that are a part of this list.\n     */\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} items Items that are a part of this list.\n     * @return {THIS}\n     */\n    DropListRef.prototype.withItems = /**\n     * Sets the draggable items that are a part of this list.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} items Items that are a part of this list.\n     * @return {THIS}\n     */\n    function (items) {\n        var _this = this;\n        (/** @type {?} */ (this))._draggables = items;\n        items.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) { return item._withDropContainer((/** @type {?} */ (_this))); }));\n        if ((/** @type {?} */ (this)).isDragging()) {\n            (/** @type {?} */ (this))._cacheItems();\n        }\n        return (/** @type {?} */ (this));\n    };\n    /** Sets the layout direction of the drop list. */\n    /**\n     * Sets the layout direction of the drop list.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction\n     * @return {THIS}\n     */\n    DropListRef.prototype.withDirection = /**\n     * Sets the layout direction of the drop list.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction\n     * @return {THIS}\n     */\n    function (direction) {\n        (/** @type {?} */ (this))._direction = direction;\n        return (/** @type {?} */ (this));\n    };\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @param connectedTo Other containers that the current containers should be connected to.\n     */\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} connectedTo Other containers that the current containers should be connected to.\n     * @return {THIS}\n     */\n    DropListRef.prototype.connectedTo = /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} connectedTo Other containers that the current containers should be connected to.\n     * @return {THIS}\n     */\n    function (connectedTo) {\n        (/** @type {?} */ (this))._siblings = connectedTo.slice();\n        return (/** @type {?} */ (this));\n    };\n    /**\n     * Sets the orientation of the container.\n     * @param orientation New orientation for the container.\n     */\n    /**\n     * Sets the orientation of the container.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} orientation New orientation for the container.\n     * @return {THIS}\n     */\n    DropListRef.prototype.withOrientation = /**\n     * Sets the orientation of the container.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} orientation New orientation for the container.\n     * @return {THIS}\n     */\n    function (orientation) {\n        (/** @type {?} */ (this))._orientation = orientation;\n        return (/** @type {?} */ (this));\n    };\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    /**\n     * Figures out the index of an item in the container.\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    DropListRef.prototype.getItemIndex = /**\n     * Figures out the index of an item in the container.\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    function (item) {\n        if (!this._isDragging) {\n            return this._draggables.indexOf(item);\n        }\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        /** @type {?} */\n        var items = this._orientation === 'horizontal' && this._direction === 'rtl' ?\n            this._itemPositions.slice().reverse() : this._itemPositions;\n        return findIndex(items, (/**\n         * @param {?} currentItem\n         * @return {?}\n         */\n        function (currentItem) { return currentItem.drag === item; }));\n    };\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     */\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     * @return {?}\n     */\n    DropListRef.prototype.isReceiving = /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     * @return {?}\n     */\n    function () {\n        return this._activeSiblings.size > 0;\n    };\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param {?} item Item to be sorted.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?} pointerDelta Direction in which the pointer is moving along each axis.\n     * @return {?}\n     */\n    DropListRef.prototype._sortItem = /**\n     * Sorts an item inside the container based on its position.\n     * @param {?} item Item to be sorted.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?} pointerDelta Direction in which the pointer is moving along each axis.\n     * @return {?}\n     */\n    function (item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled || !this._isPointerNearDropContainer(pointerX, pointerY)) {\n            return;\n        }\n        /** @type {?} */\n        var siblings = this._itemPositions;\n        /** @type {?} */\n        var newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return;\n        }\n        /** @type {?} */\n        var isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        var currentIndex = findIndex(siblings, (/**\n         * @param {?} currentItem\n         * @return {?}\n         */\n        function (currentItem) { return currentItem.drag === item; }));\n        /** @type {?} */\n        var siblingAtNewPosition = siblings[newIndex];\n        /** @type {?} */\n        var currentPosition = siblings[currentIndex].clientRect;\n        /** @type {?} */\n        var newPosition = siblingAtNewPosition.clientRect;\n        /** @type {?} */\n        var delta = currentIndex > newIndex ? 1 : -1;\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n        // How many pixels the item's placeholder should be offset.\n        /** @type {?} */\n        var itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        /** @type {?} */\n        var siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        /** @type {?} */\n        var oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        this.sorted.next({\n            previousIndex: currentIndex,\n            currentIndex: newIndex,\n            container: this,\n            item: item\n        });\n        siblings.forEach((/**\n         * @param {?} sibling\n         * @param {?} index\n         * @return {?}\n         */\n        function (sibling, index) {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            /** @type {?} */\n            var isDraggedItem = sibling.drag === item;\n            /** @type {?} */\n            var offset = isDraggedItem ? itemOffset : siblingOffset;\n            /** @type {?} */\n            var elementToOffset = isDraggedItem ? item.getPlaceholderElement() :\n                sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = \"translate3d(\" + Math.round(sibling.offset) + \"px, 0, 0)\";\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = \"translate3d(0, \" + Math.round(sibling.offset) + \"px, 0)\";\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        }));\n    };\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param pointerX User's pointer position along the x axis.\n     * @param pointerY User's pointer position along the y axis.\n     */\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param {?} pointerX User's pointer position along the x axis.\n     * @param {?} pointerY User's pointer position along the y axis.\n     * @return {?}\n     */\n    DropListRef.prototype._startScrollingIfNecessary = /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param {?} pointerX User's pointer position along the x axis.\n     * @param {?} pointerY User's pointer position along the y axis.\n     * @return {?}\n     */\n    function (pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        /** @type {?} */\n        var scrollNode;\n        /** @type {?} */\n        var verticalScrollDirection = 0 /* NONE */;\n        /** @type {?} */\n        var horizontalScrollDirection = 0 /* NONE */;\n        // @breaking-change 9.0.0 Remove null check for _viewportRuler once it's a required parameter.\n        // Check whether we're in range to scroll the viewport.\n        if (this._viewportRuler) {\n            var _a = this._viewportRuler.getViewportSize(), width = _a.width, height = _a.height;\n            /** @type {?} */\n            var clientRect = { width: width, height: height, top: 0, right: width, bottom: height, left: 0 };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        // If we couldn't find a scroll direction based on the\n        // window, try with the container, if the pointer is close by.\n        if (!verticalScrollDirection && !horizontalScrollDirection &&\n            this._isPointerNearDropContainer(pointerX, pointerY)) {\n            verticalScrollDirection = getVerticalScrollDirection(this._clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(this._clientRect, pointerX);\n            scrollNode = coerceElement(this.element);\n        }\n        // TODO(crisbeto): we also need to account for whether the view or element are scrollable in\n        // the first place. With the current approach we'll still try to scroll them, but it just\n        // won't do anything. The only case where this is relevant is that if we have a scrollable\n        // list close to the viewport edge where the viewport isn't scrollable. In this case the\n        // we'll be trying to scroll the viewport rather than the list.\n        if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection ||\n            horizontalScrollDirection !== this._horizontalScrollDirection ||\n            scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                // @breaking-change 9.0.0 Remove null check for `_ngZone` once it is made required.\n                if (this._ngZone) {\n                    this._ngZone.runOutsideAngular(this._startScrollInterval);\n                }\n                else {\n                    this._startScrollInterval();\n                }\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    };\n    /** Stops any currently-running auto-scroll sequences. */\n    /**\n     * Stops any currently-running auto-scroll sequences.\n     * @return {?}\n     */\n    DropListRef.prototype._stopScrolling = /**\n     * Stops any currently-running auto-scroll sequences.\n     * @return {?}\n     */\n    function () {\n        this._stopScrollTimers.next();\n    };\n    /** Caches the position of the drop list. */\n    /**\n     * Caches the position of the drop list.\n     * @private\n     * @return {?}\n     */\n    DropListRef.prototype._cacheOwnPosition = /**\n     * Caches the position of the drop list.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var element = coerceElement(this.element);\n        this._clientRect = getMutableClientRect(element);\n        this._scrollPosition = { top: element.scrollTop, left: element.scrollLeft };\n    };\n    /** Refreshes the position cache of the items and sibling containers. */\n    /**\n     * Refreshes the position cache of the items and sibling containers.\n     * @private\n     * @return {?}\n     */\n    DropListRef.prototype._cacheItemPositions = /**\n     * Refreshes the position cache of the items and sibling containers.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var isHorizontal = this._orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables.map((/**\n         * @param {?} drag\n         * @return {?}\n         */\n        function (drag) {\n            /** @type {?} */\n            var elementToMeasure = _this._dragDropRegistry.isDragging(drag) ?\n                // If the element is being dragged, we have to measure the\n                // placeholder, because the element is hidden.\n                drag.getPlaceholderElement() :\n                drag.getRootElement();\n            return { drag: drag, offset: 0, clientRect: getMutableClientRect(elementToMeasure) };\n        })).sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        function (a, b) {\n            return isHorizontal ? a.clientRect.left - b.clientRect.left :\n                a.clientRect.top - b.clientRect.top;\n        }));\n    };\n    /** Resets the container to its initial state. */\n    /**\n     * Resets the container to its initial state.\n     * @private\n     * @return {?}\n     */\n    DropListRef.prototype._reset = /**\n     * Resets the container to its initial state.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._isDragging = false;\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) { return item.getRootElement().style.transform = ''; }));\n        this._siblings.forEach((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        function (sibling) { return sibling._stopReceiving(_this); }));\n        this._activeDraggables = [];\n        this._itemPositions = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._stopScrolling();\n        this._removeListeners();\n    };\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @param currentIndex Index of the item currently being dragged.\n     * @param siblings All of the items in the list.\n     * @param delta Direction in which the user is moving.\n     */\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @private\n     * @param {?} currentIndex Index of the item currently being dragged.\n     * @param {?} siblings All of the items in the list.\n     * @param {?} delta Direction in which the user is moving.\n     * @return {?}\n     */\n    DropListRef.prototype._getSiblingOffsetPx = /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @private\n     * @param {?} currentIndex Index of the item currently being dragged.\n     * @param {?} siblings All of the items in the list.\n     * @param {?} delta Direction in which the user is moving.\n     * @return {?}\n     */\n    function (currentIndex, siblings, delta) {\n        /** @type {?} */\n        var isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        var currentPosition = siblings[currentIndex].clientRect;\n        /** @type {?} */\n        var immediateSibling = siblings[currentIndex + delta * -1];\n        /** @type {?} */\n        var siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            /** @type {?} */\n            var start = isHorizontal ? 'left' : 'top';\n            /** @type {?} */\n            var end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    };\n    /**\n     * Checks whether the pointer coordinates are close to the drop container.\n     * @param pointerX Coordinates along the X axis.\n     * @param pointerY Coordinates along the Y axis.\n     */\n    /**\n     * Checks whether the pointer coordinates are close to the drop container.\n     * @private\n     * @param {?} pointerX Coordinates along the X axis.\n     * @param {?} pointerY Coordinates along the Y axis.\n     * @return {?}\n     */\n    DropListRef.prototype._isPointerNearDropContainer = /**\n     * Checks whether the pointer coordinates are close to the drop container.\n     * @private\n     * @param {?} pointerX Coordinates along the X axis.\n     * @param {?} pointerY Coordinates along the Y axis.\n     * @return {?}\n     */\n    function (pointerX, pointerY) {\n        var _a = this._clientRect, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;\n        /** @type {?} */\n        var xThreshold = width * DROP_PROXIMITY_THRESHOLD;\n        /** @type {?} */\n        var yThreshold = height * DROP_PROXIMITY_THRESHOLD;\n        return pointerY > top - yThreshold && pointerY < bottom + yThreshold &&\n            pointerX > left - xThreshold && pointerX < right + xThreshold;\n    };\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @param currentPosition Current position of the item.\n     * @param newPosition Position of the item where the current item should be moved.\n     * @param delta Direction in which the user is moving.\n     */\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @private\n     * @param {?} currentPosition Current position of the item.\n     * @param {?} newPosition Position of the item where the current item should be moved.\n     * @param {?} delta Direction in which the user is moving.\n     * @return {?}\n     */\n    DropListRef.prototype._getItemOffsetPx = /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @private\n     * @param {?} currentPosition Current position of the item.\n     * @param {?} newPosition Position of the item where the current item should be moved.\n     * @param {?} delta Direction in which the user is moving.\n     * @return {?}\n     */\n    function (currentPosition, newPosition, delta) {\n        /** @type {?} */\n        var isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        var itemOffset = isHorizontal ? newPosition.left - currentPosition.left :\n            newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal ? newPosition.width - currentPosition.width :\n                newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    };\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @private\n     * @param {?} item Item that is being sorted.\n     * @param {?} pointerX Position of the user's pointer along the X axis.\n     * @param {?} pointerY Position of the user's pointer along the Y axis.\n     * @param {?=} delta Direction in which the user is moving their pointer.\n     * @return {?}\n     */\n    DropListRef.prototype._getItemIndexFromPointerPosition = /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @private\n     * @param {?} item Item that is being sorted.\n     * @param {?} pointerX Position of the user's pointer along the X axis.\n     * @param {?} pointerY Position of the user's pointer along the Y axis.\n     * @param {?=} delta Direction in which the user is moving their pointer.\n     * @return {?}\n     */\n    function (item, pointerX, pointerY, delta) {\n        var _this = this;\n        /** @type {?} */\n        var isHorizontal = this._orientation === 'horizontal';\n        return findIndex(this._itemPositions, (/**\n         * @param {?} __0\n         * @param {?} _\n         * @param {?} array\n         * @return {?}\n         */\n        function (_a, _, array) {\n            var drag = _a.drag, clientRect = _a.clientRect;\n            if (drag === item) {\n                // If there's only one item left in the container, it must be\n                // the dragged item itself so we use it as a reference.\n                return array.length < 2;\n            }\n            if (delta) {\n                /** @type {?} */\n                var direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, and they didn't change\n                // the direction in which they're dragging, we don't consider it a direction swap.\n                if (drag === _this._previousSwap.drag && direction === _this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal ?\n                // Round these down since most browsers report client rects with\n                // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                pointerX >= Math.floor(clientRect.left) && pointerX <= Math.floor(clientRect.right) :\n                pointerY >= Math.floor(clientRect.top) && pointerY <= Math.floor(clientRect.bottom);\n        }));\n    };\n    /** Caches the current items in the list and their positions. */\n    /**\n     * Caches the current items in the list and their positions.\n     * @private\n     * @return {?}\n     */\n    DropListRef.prototype._cacheItems = /**\n     * Caches the current items in the list and their positions.\n     * @private\n     * @return {?}\n     */\n    function () {\n        this._activeDraggables = this._draggables.slice();\n        this._cacheItemPositions();\n        this._cacheOwnPosition();\n    };\n    /**\n     * Updates the internal state of the container after a scroll event has happened.\n     * @param scrollPosition Object that is keeping track of the scroll position.\n     * @param newTop New top scroll position.\n     * @param newLeft New left scroll position.\n     * @param extraClientRect Extra `ClientRect` object that should be updated, in addition to the\n     *  ones of the drag items. Useful when the viewport has been scrolled and we also need to update\n     *  the `ClientRect` of the list.\n     */\n    /**\n     * Updates the internal state of the container after a scroll event has happened.\n     * @private\n     * @param {?} scrollPosition Object that is keeping track of the scroll position.\n     * @param {?} newTop New top scroll position.\n     * @param {?} newLeft New left scroll position.\n     * @param {?=} extraClientRect Extra `ClientRect` object that should be updated, in addition to the\n     *  ones of the drag items. Useful when the viewport has been scrolled and we also need to update\n     *  the `ClientRect` of the list.\n     * @return {?}\n     */\n    DropListRef.prototype._updateAfterScroll = /**\n     * Updates the internal state of the container after a scroll event has happened.\n     * @private\n     * @param {?} scrollPosition Object that is keeping track of the scroll position.\n     * @param {?} newTop New top scroll position.\n     * @param {?} newLeft New left scroll position.\n     * @param {?=} extraClientRect Extra `ClientRect` object that should be updated, in addition to the\n     *  ones of the drag items. Useful when the viewport has been scrolled and we also need to update\n     *  the `ClientRect` of the list.\n     * @return {?}\n     */\n    function (scrollPosition, newTop, newLeft, extraClientRect) {\n        var _this = this;\n        /** @type {?} */\n        var topDifference = scrollPosition.top - newTop;\n        /** @type {?} */\n        var leftDifference = scrollPosition.left - newLeft;\n        if (extraClientRect) {\n            adjustClientRect(extraClientRect, topDifference, leftDifference);\n        }\n        // Since we know the amount that the user has scrolled we can shift all of the client rectangles\n        // ourselves. This is cheaper than re-measuring everything and we can avoid inconsistent\n        // behavior where we might be measuring the element before its position has changed.\n        this._itemPositions.forEach((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        function (_a) {\n            var clientRect = _a.clientRect;\n            adjustClientRect(clientRect, topDifference, leftDifference);\n        }));\n        // We need two loops for this, because we want all of the cached\n        // positions to be up-to-date before we re-sort the item.\n        this._itemPositions.forEach((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        function (_a) {\n            var drag = _a.drag;\n            if (_this._dragDropRegistry.isDragging(drag)) {\n                // We need to re-sort the item manually, because the pointer move\n                // events won't be dispatched while the user is scrolling.\n                drag._sortFromLastPointerPosition();\n            }\n        }));\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n    };\n    /** Removes the event listeners associated with this drop list. */\n    /**\n     * Removes the event listeners associated with this drop list.\n     * @private\n     * @return {?}\n     */\n    DropListRef.prototype._removeListeners = /**\n     * Removes the event listeners associated with this drop list.\n     * @private\n     * @return {?}\n     */\n    function () {\n        coerceElement(this.element).removeEventListener('scroll', this._handleScroll);\n        this._viewportScrollSubscription.unsubscribe();\n    };\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param {?} x Pointer position along the X axis.\n     * @param {?} y Pointer position along the Y axis.\n     * @return {?}\n     */\n    DropListRef.prototype._isOverContainer = /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param {?} x Pointer position along the X axis.\n     * @param {?} y Pointer position along the Y axis.\n     * @return {?}\n     */\n    function (x, y) {\n        return isInsideClientRect(this._clientRect, x, y);\n    };\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param {?} item Drag item that is being moved.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    DropListRef.prototype._getSiblingContainerFromPosition = /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param {?} item Drag item that is being moved.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    function (item, x, y) {\n        return this._siblings.find((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        function (sibling) { return sibling._canReceive(item, x, y); }));\n    };\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param item Item that is being dragged into the list.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param {?} item Item that is being dragged into the list.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    DropListRef.prototype._canReceive = /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param {?} item Item that is being dragged into the list.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    function (item, x, y) {\n        if (!this.enterPredicate(item, this) || !isInsideClientRect(this._clientRect, x, y)) {\n            return false;\n        }\n        /** @type {?} */\n        var elementFromPoint = (/** @type {?} */ (this._document.elementFromPoint(x, y)));\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        /** @type {?} */\n        var nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    };\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param sibling Sibling in which dragging has started.\n     */\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param {?} sibling Sibling in which dragging has started.\n     * @return {?}\n     */\n    DropListRef.prototype._startReceiving = /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param {?} sibling Sibling in which dragging has started.\n     * @return {?}\n     */\n    function (sibling) {\n        /** @type {?} */\n        var activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling)) {\n            activeSiblings.add(sibling);\n            this._cacheOwnPosition();\n        }\n    };\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param sibling Sibling whose dragging has stopped.\n     */\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param {?} sibling Sibling whose dragging has stopped.\n     * @return {?}\n     */\n    DropListRef.prototype._stopReceiving = /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param {?} sibling Sibling whose dragging has stopped.\n     * @return {?}\n     */\n    function (sibling) {\n        this._activeSiblings.delete(sibling);\n    };\n    return DropListRef;\n}());\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param {?} clientRect `ClientRect` that should be updated.\n * @param {?} top Amount to add to the `top` position.\n * @param {?} left Amount to add to the `left` position.\n * @return {?}\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Finds the index of an item that matches a predicate function. Used as an equivalent\n * of `Array.prototype.findIndex` which isn't part of the standard Google typings.\n * @template T\n * @param {?} array Array in which to look for matches.\n * @param {?} predicate Function used to determine whether an item is a match.\n * @return {?}\n */\nfunction findIndex(array, predicate) {\n    for (var i = 0; i < array.length; i++) {\n        if (predicate(array[i], i, array)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param {?} clientRect ClientRect that is being checked.\n * @param {?} x Coordinates along the X axis.\n * @param {?} y Coordinates along the Y axis.\n * @return {?}\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    var top = clientRect.top, bottom = clientRect.bottom, left = clientRect.left, right = clientRect.right;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Gets a mutable version of an element's bounding `ClientRect`.\n * @param {?} element\n * @return {?}\n */\nfunction getMutableClientRect(element) {\n    /** @type {?} */\n    var clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height\n    };\n}\n/**\n * Increments the vertical scroll position of a node.\n * @param {?} node Node whose scroll position should change.\n * @param {?} amount Amount of pixels that the `node` should be scrolled.\n * @return {?}\n */\nfunction incrementVerticalScroll(node, amount) {\n    if (node === window) {\n        ((/** @type {?} */ (node))).scrollBy(0, amount);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        ((/** @type {?} */ (node))).scrollTop += amount;\n    }\n}\n/**\n * Increments the horizontal scroll position of a node.\n * @param {?} node Node whose scroll position should change.\n * @param {?} amount Amount of pixels that the `node` should be scrolled.\n * @return {?}\n */\nfunction incrementHorizontalScroll(node, amount) {\n    if (node === window) {\n        ((/** @type {?} */ (node))).scrollBy(amount, 0);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        ((/** @type {?} */ (node))).scrollLeft += amount;\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param {?} clientRect Dimensions of the node.\n * @param {?} pointerY Position of the user's pointer along the y axis.\n * @return {?}\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    var top = clientRect.top, bottom = clientRect.bottom, height = clientRect.height;\n    /** @type {?} */\n    var yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* DOWN */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param {?} clientRect Dimensions of the node.\n * @param {?} pointerX Position of the user's pointer along the x axis.\n * @return {?}\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    var left = clientRect.left, right = clientRect.right, width = clientRect.width;\n    /** @type {?} */\n    var xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* RIGHT */;\n    }\n    return 0 /* NONE */;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Event options that can be used to bind an active, capturing event.\n * @type {?}\n */\nvar activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * \\@docs-private\n * @template I, C\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nvar DragDropRegistry = /** @class */ (function () {\n    function DragDropRegistry(_ngZone, _document) {\n        var _this = this;\n        this._ngZone = _ngZone;\n        /**\n         * Registered drop container instances.\n         */\n        this._dropInstances = new Set();\n        /**\n         * Registered drag item instances.\n         */\n        this._dragInstances = new Set();\n        /**\n         * Drag item instances that are currently being dragged.\n         */\n        this._activeDragInstances = new Set();\n        /**\n         * Keeps track of the event listeners that we've bound to the `document`.\n         */\n        this._globalListeners = new Map();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /**\n         * Emits when the viewport has been scrolled while the user is dragging an item.\n         */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            if (_this._activeDragInstances.size) {\n                event.preventDefault();\n            }\n        });\n        this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    /**\n     * Adds a drop container to the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    DragDropRegistry.prototype.registerDropContainer = /**\n     * Adds a drop container to the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    function (drop) {\n        if (!this._dropInstances.has(drop)) {\n            if (this.getDropContainer(drop.id)) {\n                throw Error(\"Drop instance with id \\\"\" + drop.id + \"\\\" has already been registered.\");\n            }\n            this._dropInstances.add(drop);\n        }\n    };\n    /** Adds a drag item instance to the registry. */\n    /**\n     * Adds a drag item instance to the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    DragDropRegistry.prototype.registerDragItem = /**\n     * Adds a drag item instance to the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    function (drag) {\n        var _this = this;\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                _this._document.addEventListener('touchmove', _this._preventDefaultWhileDragging, activeCapturingEventOptions);\n            }));\n        }\n    };\n    /** Removes a drop container from the registry. */\n    /**\n     * Removes a drop container from the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    DragDropRegistry.prototype.removeDropContainer = /**\n     * Removes a drop container from the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    function (drop) {\n        this._dropInstances.delete(drop);\n    };\n    /** Removes a drag item instance from the registry. */\n    /**\n     * Removes a drag item instance from the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    DragDropRegistry.prototype.removeDragItem = /**\n     * Removes a drag item instance from the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    function (drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n        }\n    };\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param {?} drag Drag instance which is being dragged.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    DragDropRegistry.prototype.startDragging = /**\n     * Starts the dragging sequence for a drag instance.\n     * @param {?} drag Drag instance which is being dragged.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    function (drag, event) {\n        var _this = this;\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.has(drag)) {\n            return;\n        }\n        this._activeDragInstances.add(drag);\n        if (this._activeDragInstances.size === 1) {\n            /** @type {?} */\n            var isTouchEvent = event.type.startsWith('touch');\n            /** @type {?} */\n            var moveEvent = isTouchEvent ? 'touchmove' : 'mousemove';\n            /** @type {?} */\n            var upEvent = isTouchEvent ? 'touchend' : 'mouseup';\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(moveEvent, {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                function (e) { return _this.pointerMove.next((/** @type {?} */ (e))); }),\n                options: activeCapturingEventOptions\n            })\n                .set(upEvent, {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                function (e) { return _this.pointerUp.next((/** @type {?} */ (e))); }),\n                options: true\n            })\n                .set('scroll', {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                function (e) { return _this.scroll.next(e); })\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions\n            });\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () {\n                _this._globalListeners.forEach((/**\n                 * @param {?} config\n                 * @param {?} name\n                 * @return {?}\n                 */\n                function (config, name) {\n                    _this._document.addEventListener(name, config.handler, config.options);\n                }));\n            }));\n        }\n    };\n    /** Stops dragging a drag item instance. */\n    /**\n     * Stops dragging a drag item instance.\n     * @param {?} drag\n     * @return {?}\n     */\n    DragDropRegistry.prototype.stopDragging = /**\n     * Stops dragging a drag item instance.\n     * @param {?} drag\n     * @return {?}\n     */\n    function (drag) {\n        this._activeDragInstances.delete(drag);\n        if (this._activeDragInstances.size === 0) {\n            this._clearGlobalListeners();\n        }\n    };\n    /** Gets whether a drag item instance is currently being dragged. */\n    /**\n     * Gets whether a drag item instance is currently being dragged.\n     * @param {?} drag\n     * @return {?}\n     */\n    DragDropRegistry.prototype.isDragging = /**\n     * Gets whether a drag item instance is currently being dragged.\n     * @param {?} drag\n     * @return {?}\n     */\n    function (drag) {\n        return this._activeDragInstances.has(drag);\n    };\n    /**\n     * Gets a drop container by its id.\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 8.0.0\n     */\n    /**\n     * Gets a drop container by its id.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 8.0.0\n     * @param {?} id\n     * @return {?}\n     */\n    DragDropRegistry.prototype.getDropContainer = /**\n     * Gets a drop container by its id.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 8.0.0\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        return Array.from(this._dropInstances).find((/**\n         * @param {?} instance\n         * @return {?}\n         */\n        function (instance) { return instance.id === id; }));\n    };\n    /**\n     * @return {?}\n     */\n    DragDropRegistry.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._dragInstances.forEach((/**\n         * @param {?} instance\n         * @return {?}\n         */\n        function (instance) { return _this.removeDragItem(instance); }));\n        this._dropInstances.forEach((/**\n         * @param {?} instance\n         * @return {?}\n         */\n        function (instance) { return _this.removeDropContainer(instance); }));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    };\n    /** Clears out the global event listeners from the `document`. */\n    /**\n     * Clears out the global event listeners from the `document`.\n     * @private\n     * @return {?}\n     */\n    DragDropRegistry.prototype._clearGlobalListeners = /**\n     * Clears out the global event listeners from the `document`.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._globalListeners.forEach((/**\n         * @param {?} config\n         * @param {?} name\n         * @return {?}\n         */\n        function (config, name) {\n            _this._document.removeEventListener(name, config.handler, config.options);\n        }));\n        this._globalListeners.clear();\n    };\n    DragDropRegistry.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    DragDropRegistry.ctorParameters = function () { return [\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    /** @nocollapse */ DragDropRegistry.ngInjectableDef = ɵɵdefineInjectable({ factory: function DragDropRegistry_Factory() { return new DragDropRegistry(ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: DragDropRegistry, providedIn: \"root\" });\n    return DragDropRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default configuration to be used when creating a `DragRef`.\n * @type {?}\n */\nvar DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nvar DragDrop = /** @class */ (function () {\n    function DragDrop(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    /**\n     * Turns an element into a draggable item.\n     * @template T\n     * @param {?} element Element to which to attach the dragging functionality.\n     * @param {?=} config Object used to configure the dragging behavior.\n     * @return {?}\n     */\n    DragDrop.prototype.createDrag = /**\n     * Turns an element into a draggable item.\n     * @template T\n     * @param {?} element Element to which to attach the dragging functionality.\n     * @param {?=} config Object used to configure the dragging behavior.\n     * @return {?}\n     */\n    function (element, config) {\n        if (config === void 0) { config = DEFAULT_CONFIG; }\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    };\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    /**\n     * Turns an element into a drop list.\n     * @template T\n     * @param {?} element Element to which to attach the drop list functionality.\n     * @return {?}\n     */\n    DragDrop.prototype.createDropList = /**\n     * Turns an element into a drop list.\n     * @template T\n     * @param {?} element Element to which to attach the drop list functionality.\n     * @return {?}\n     */\n    function (element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    };\n    DragDrop.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    DragDrop.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: NgZone },\n        { type: ViewportRuler },\n        { type: DragDropRegistry }\n    ]; };\n    /** @nocollapse */ DragDrop.ngInjectableDef = ɵɵdefineInjectable({ factory: function DragDrop_Factory() { return new DragDrop(ɵɵinject(DOCUMENT), ɵɵinject(NgZone), ɵɵinject(ViewportRuler), ɵɵinject(DragDropRegistry)); }, token: DragDrop, providedIn: \"root\" });\n    return DragDrop;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that is used to provide a CdkDropList instance to CdkDrag.\n * Used for avoiding circular imports.\n * @type {?}\n */\nvar CDK_DROP_LIST = new InjectionToken('CDK_DROP_LIST');\n/**\n * Injection token that is used to provide a CdkDropList instance to CdkDrag.\n * Used for avoiding circular imports.\n * @deprecated Use `CDK_DROP_LIST` instead.\n * \\@breaking-change 8.0.0\n * @type {?}\n */\nvar CDK_DROP_LIST_CONTAINER = CDK_DROP_LIST;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nvar CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Handle that can be used to drag and CdkDrag instance.\n */\nvar CdkDragHandle = /** @class */ (function () {\n    function CdkDragHandle(element, parentDrag) {\n        this.element = element;\n        /**\n         * Emits when the state of the handle has changed.\n         */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        this._parentDrag = parentDrag;\n        toggleNativeDragInteractions(element.nativeElement, false);\n    }\n    Object.defineProperty(CdkDragHandle.prototype, \"disabled\", {\n        /** Whether starting to drag through this handle is disabled. */\n        get: /**\n         * Whether starting to drag through this handle is disabled.\n         * @return {?}\n         */\n        function () { return this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n            this._stateChanges.next(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkDragHandle.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._stateChanges.complete();\n    };\n    CdkDragHandle.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkDragHandle]',\n                    host: {\n                        'class': 'cdk-drag-handle'\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    CdkDragHandle.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: undefined, decorators: [{ type: Inject, args: [CDK_DRAG_PARENT,] }, { type: Optional }] }\n    ]; };\n    CdkDragHandle.propDecorators = {\n        disabled: [{ type: Input, args: ['cdkDragHandleDisabled',] }]\n    };\n    return CdkDragHandle;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n * @template T\n */\nvar CdkDragPlaceholder = /** @class */ (function () {\n    function CdkDragPlaceholder(templateRef) {\n        this.templateRef = templateRef;\n    }\n    CdkDragPlaceholder.decorators = [\n        { type: Directive, args: [{\n                    selector: 'ng-template[cdkDragPlaceholder]'\n                },] },\n    ];\n    /** @nocollapse */\n    CdkDragPlaceholder.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    CdkDragPlaceholder.propDecorators = {\n        data: [{ type: Input }]\n    };\n    return CdkDragPlaceholder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n * @template T\n */\nvar CdkDragPreview = /** @class */ (function () {\n    function CdkDragPreview(templateRef) {\n        this.templateRef = templateRef;\n    }\n    CdkDragPreview.decorators = [\n        { type: Directive, args: [{\n                    selector: 'ng-template[cdkDragPreview]'\n                },] },\n    ];\n    /** @nocollapse */\n    CdkDragPreview.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    CdkDragPreview.propDecorators = {\n        data: [{ type: Input }]\n    };\n    return CdkDragPreview;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to configure the behavior of `CdkDrag`.\n * @type {?}\n */\nvar CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG', {\n    providedIn: 'root',\n    factory: CDK_DRAG_CONFIG_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction CDK_DRAG_CONFIG_FACTORY() {\n    return { dragStartThreshold: 5, pointerDirectionChangeThreshold: 5 };\n}\n/**\n * Element that can be moved inside a CdkDropList container.\n * @template T\n */\nvar CdkDrag = /** @class */ (function () {\n    function CdkDrag(element, dropContainer, _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef) {\n        var _this = this;\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._destroyed = new Subject();\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /**\n         * Emits when the user starts dragging the item.\n         */\n        this.started = new EventEmitter();\n        /**\n         * Emits when the user has released a drag item, before any animations have started.\n         */\n        this.released = new EventEmitter();\n        /**\n         * Emits when the user stops dragging an item in the container.\n         */\n        this.ended = new EventEmitter();\n        /**\n         * Emits when the user has moved the item into a new container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes the item its container by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /**\n         * Emits when the user drops the item inside a container.\n         */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        function (observer) {\n            /** @type {?} */\n            var subscription = _this._dragRef.moved.pipe(map((/**\n             * @param {?} movedEvent\n             * @return {?}\n             */\n            function (movedEvent) { return ({\n                source: _this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance\n            }); }))).subscribe(observer);\n            return (/**\n             * @return {?}\n             */\n            function () {\n                subscription.unsubscribe();\n            });\n        }));\n        this._dragRef = dragDrop.createDrag(element, config);\n        this._dragRef.data = this;\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    Object.defineProperty(CdkDrag.prototype, \"boundaryElementSelector\", {\n        /**\n         * Selector that will be used to determine the element to which the draggable's position will\n         * be constrained. Matching starts from the element's parent and goes up the DOM until a matching\n         * element has been found\n         * @deprecated Use `boundaryElement` instead.\n         * @breaking-change 9.0.0\n         */\n        get: /**\n         * Selector that will be used to determine the element to which the draggable's position will\n         * be constrained. Matching starts from the element's parent and goes up the DOM until a matching\n         * element has been found\n         * @deprecated Use `boundaryElement` instead.\n         * \\@breaking-change 9.0.0\n         * @return {?}\n         */\n        function () {\n            return typeof this.boundaryElement === 'string' ? this.boundaryElement : (/** @type {?} */ (undefined));\n        },\n        set: /**\n         * @param {?} selector\n         * @return {?}\n         */\n        function (selector) {\n            this.boundaryElement = selector;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkDrag.prototype, \"disabled\", {\n        /** Whether starting to drag this element is disabled. */\n        get: /**\n         * Whether starting to drag this element is disabled.\n         * @return {?}\n         */\n        function () {\n            return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n            this._dragRef.disabled = this._disabled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    CdkDrag.prototype.getPlaceholderElement = /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    function () {\n        return this._dragRef.getPlaceholderElement();\n    };\n    /** Returns the root draggable element. */\n    /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    CdkDrag.prototype.getRootElement = /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    function () {\n        return this._dragRef.getRootElement();\n    };\n    /** Resets a standalone drag item to its initial position. */\n    /**\n     * Resets a standalone drag item to its initial position.\n     * @return {?}\n     */\n    CdkDrag.prototype.reset = /**\n     * Resets a standalone drag item to its initial position.\n     * @return {?}\n     */\n    function () {\n        this._dragRef.reset();\n    };\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     * @return {?}\n     */\n    CdkDrag.prototype.getFreeDragPosition = /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     * @return {?}\n     */\n    function () {\n        return this._dragRef.getFreeDragPosition();\n    };\n    /**\n     * @return {?}\n     */\n    CdkDrag.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // We need to wait for the zone to stabilize, in order for the reference\n        // element to be in the proper place in the DOM. This is mostly relevant\n        // for draggable elements inside portals since they get stamped out in\n        // their original DOM position and then they get transferred to the portal.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this._updateRootElement();\n            // Listen for any newly-added handles.\n            _this._handles.changes.pipe(startWith(_this._handles), \n            // Sync the new handles with the DragRef.\n            tap((/**\n             * @param {?} handles\n             * @return {?}\n             */\n            function (handles) {\n                /** @type {?} */\n                var childHandleElements = handles\n                    .filter((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                function (handle) { return handle._parentDrag === _this; }))\n                    .map((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                function (handle) { return handle.element; }));\n                _this._dragRef.withHandles(childHandleElements);\n            })), \n            // Listen if the state of any of the handles changes.\n            switchMap((/**\n             * @param {?} handles\n             * @return {?}\n             */\n            function (handles) {\n                return merge.apply(void 0, handles.map((/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                function (item) { return item._stateChanges; })));\n            })), takeUntil(_this._destroyed)).subscribe((/**\n             * @param {?} handleInstance\n             * @return {?}\n             */\n            function (handleInstance) {\n                // Enabled/disable the handle that changed in the DragRef.\n                /** @type {?} */\n                var dragRef = _this._dragRef;\n                /** @type {?} */\n                var handle = handleInstance.element.nativeElement;\n                handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n            }));\n            if (_this.freeDragPosition) {\n                _this._dragRef.setFreeDragPosition(_this.freeDragPosition);\n            }\n        }));\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    CdkDrag.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        /** @type {?} */\n        var rootSelectorChange = changes['rootElementSelector'];\n        /** @type {?} */\n        var positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CdkDrag.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._dragRef.dispose();\n    };\n    /** Syncs the root element with the `DragRef`. */\n    /**\n     * Syncs the root element with the `DragRef`.\n     * @private\n     * @return {?}\n     */\n    CdkDrag.prototype._updateRootElement = /**\n     * Syncs the root element with the `DragRef`.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var element = this.element.nativeElement;\n        /** @type {?} */\n        var rootElement = this.rootElementSelector ?\n            getClosestMatchingAncestor(element, this.rootElementSelector) : element;\n        if (rootElement && rootElement.nodeType !== this._document.ELEMENT_NODE) {\n            throw Error(\"cdkDrag must be attached to an element node. \" +\n                (\"Currently attached to \\\"\" + rootElement.nodeName + \"\\\".\"));\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    };\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    /**\n     * Gets the boundary element, based on the `boundaryElement` value.\n     * @private\n     * @return {?}\n     */\n    CdkDrag.prototype._getBoundaryElement = /**\n     * Gets the boundary element, based on the `boundaryElement` value.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return getClosestMatchingAncestor(this.element.nativeElement, boundary);\n        }\n        /** @type {?} */\n        var element = coerceElement(boundary);\n        if (isDevMode() && !element.contains(this.element.nativeElement)) {\n            throw Error('Draggable element is not inside of the node passed into cdkDragBoundary.');\n        }\n        return element;\n    };\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    /**\n     * Syncs the inputs of the CdkDrag with the options of the underlying DragRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    CdkDrag.prototype._syncInputs = /**\n     * Syncs the inputs of the CdkDrag with the options of the underlying DragRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) {\n        var _this = this;\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            if (!ref.isDragging()) {\n                /** @type {?} */\n                var dir = _this._dir;\n                /** @type {?} */\n                var placeholder = _this._placeholderTemplate ? {\n                    template: _this._placeholderTemplate.templateRef,\n                    context: _this._placeholderTemplate.data,\n                    viewContainer: _this._viewContainerRef\n                } : null;\n                /** @type {?} */\n                var preview = _this._previewTemplate ? {\n                    template: _this._previewTemplate.templateRef,\n                    context: _this._previewTemplate.data,\n                    viewContainer: _this._viewContainerRef\n                } : null;\n                ref.disabled = _this.disabled;\n                ref.lockAxis = _this.lockAxis;\n                ref.dragStartDelay = coerceNumberProperty(_this.dragStartDelay);\n                ref.constrainPosition = _this.constrainPosition;\n                ref\n                    .withBoundaryElement(_this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview);\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        }));\n    };\n    /** Handles the events from the underlying `DragRef`. */\n    /**\n     * Handles the events from the underlying `DragRef`.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    CdkDrag.prototype._handleEvents = /**\n     * Handles the events from the underlying `DragRef`.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) {\n        var _this = this;\n        ref.started.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this.started.emit({ source: _this });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            _this._changeDetectorRef.markForCheck();\n        }));\n        ref.released.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this.released.emit({ source: _this });\n        }));\n        ref.ended.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            _this.ended.emit({ source: _this, distance: event.distance });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            _this._changeDetectorRef.markForCheck();\n        }));\n        ref.entered.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            _this.entered.emit({\n                container: event.container.data,\n                item: _this,\n                currentIndex: event.currentIndex\n            });\n        }));\n        ref.exited.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            _this.exited.emit({\n                container: event.container.data,\n                item: _this\n            });\n        }));\n        ref.dropped.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            _this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                item: _this,\n                distance: event.distance\n            });\n        }));\n    };\n    CdkDrag.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkDrag]',\n                    exportAs: 'cdkDrag',\n                    host: {\n                        'class': 'cdk-drag',\n                        '[class.cdk-drag-disabled]': 'disabled',\n                        '[class.cdk-drag-dragging]': '_dragRef.isDragging()',\n                    },\n                    providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]\n                },] },\n    ];\n    /** @nocollapse */\n    CdkDrag.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: undefined, decorators: [{ type: Inject, args: [CDK_DROP_LIST,] }, { type: Optional }, { type: SkipSelf }] },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: NgZone },\n        { type: ViewContainerRef },\n        { type: undefined, decorators: [{ type: Inject, args: [CDK_DRAG_CONFIG,] }] },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: DragDrop },\n        { type: ChangeDetectorRef }\n    ]; };\n    CdkDrag.propDecorators = {\n        _handles: [{ type: ContentChildren, args: [CdkDragHandle, { descendants: true },] }],\n        _previewTemplate: [{ type: ContentChild, args: [CdkDragPreview, { static: false },] }],\n        _placeholderTemplate: [{ type: ContentChild, args: [CdkDragPlaceholder, { static: false },] }],\n        data: [{ type: Input, args: ['cdkDragData',] }],\n        lockAxis: [{ type: Input, args: ['cdkDragLockAxis',] }],\n        rootElementSelector: [{ type: Input, args: ['cdkDragRootElement',] }],\n        boundaryElement: [{ type: Input, args: ['cdkDragBoundary',] }],\n        dragStartDelay: [{ type: Input, args: ['cdkDragStartDelay',] }],\n        freeDragPosition: [{ type: Input, args: ['cdkDragFreeDragPosition',] }],\n        disabled: [{ type: Input, args: ['cdkDragDisabled',] }],\n        constrainPosition: [{ type: Input, args: ['cdkDragConstrainPosition',] }],\n        started: [{ type: Output, args: ['cdkDragStarted',] }],\n        released: [{ type: Output, args: ['cdkDragReleased',] }],\n        ended: [{ type: Output, args: ['cdkDragEnded',] }],\n        entered: [{ type: Output, args: ['cdkDragEntered',] }],\n        exited: [{ type: Output, args: ['cdkDragExited',] }],\n        dropped: [{ type: Output, args: ['cdkDragDropped',] }],\n        moved: [{ type: Output, args: ['cdkDragMoved',] }]\n    };\n    return CdkDrag;\n}());\n/**\n * Gets the closest ancestor of an element that matches a selector.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction getClosestMatchingAncestor(element, selector) {\n    /** @type {?} */\n    var currentElement = (/** @type {?} */ (element.parentElement));\n    while (currentElement) {\n        // IE doesn't support `matches` so we have to fall back to `msMatchesSelector`.\n        if (currentElement.matches ? currentElement.matches(selector) :\n            ((/** @type {?} */ (currentElement))).msMatchesSelector(selector)) {\n            return currentElement;\n        }\n        currentElement = currentElement.parentElement;\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n * @template T\n */\nvar CdkDropListGroup = /** @class */ (function () {\n    function CdkDropListGroup() {\n        /**\n         * Drop lists registered inside the group.\n         */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    Object.defineProperty(CdkDropListGroup.prototype, \"disabled\", {\n        /** Whether starting a dragging sequence from inside this group is disabled. */\n        get: /**\n         * Whether starting a dragging sequence from inside this group is disabled.\n         * @return {?}\n         */\n        function () { return this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkDropListGroup.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._items.clear();\n    };\n    CdkDropListGroup.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkDropListGroup]',\n                    exportAs: 'cdkDropListGroup',\n                },] },\n    ];\n    CdkDropListGroup.propDecorators = {\n        disabled: [{ type: Input, args: ['cdkDropListGroupDisabled',] }]\n    };\n    return CdkDropListGroup;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique ids for drop zones.\n * @type {?}\n */\nvar _uniqueIdCounter$1 = 0;\nvar ɵ0 = undefined;\n// @breaking-change 8.0.0 `CdkDropList` implements `CdkDropListContainer` for backwards\n// compatiblity. The implements clause, as well as all the methods that it enforces can\n// be removed when `CdkDropListContainer` is deleted.\n/**\n * Container that wraps a set of draggable items.\n * @template T\n */\nvar CdkDropList = /** @class */ (function () {\n    function CdkDropList(element, dragDrop, _changeDetectorRef, _dir, _group) {\n        var _this = this;\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._group = _group;\n        /**\n         * Emits when the list has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Direction in which the list is oriented.\n         */\n        this.orientation = 'vertical';\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = \"cdk-drop-list-\" + _uniqueIdCounter$1++;\n        this._disabled = false;\n        this._sortingDisabled = false;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = (/**\n         * @return {?}\n         */\n        function () { return true; });\n        /**\n         * Whether to auto-scroll the view when the user moves their pointer close to the edges.\n         */\n        this.autoScrollDisabled = false;\n        /**\n         * Emits when the user drops an item inside the container.\n         */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /**\n         * Emits as the user is swapping items while actively dragging.\n         */\n        this.sorted = new EventEmitter();\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        this._dropListRef.enterPredicate = (/**\n         * @param {?} drag\n         * @param {?} drop\n         * @return {?}\n         */\n        function (drag, drop) {\n            return _this.enterPredicate(drag.data, drop.data);\n        });\n        this._syncInputs(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    Object.defineProperty(CdkDropList.prototype, \"disabled\", {\n        /** Whether starting a dragging sequence from this container is disabled. */\n        get: /**\n         * Whether starting a dragging sequence from this container is disabled.\n         * @return {?}\n         */\n        function () {\n            return this._disabled || (!!this._group && this._group.disabled);\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkDropList.prototype, \"sortingDisabled\", {\n        /** Whether sorting within this drop list is disabled. */\n        get: /**\n         * Whether sorting within this drop list is disabled.\n         * @return {?}\n         */\n        function () { return this._sortingDisabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._sortingDisabled = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkDropList.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._draggables.changes\n            .pipe(startWith(this._draggables), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} items\n         * @return {?}\n         */\n        function (items) {\n            _this._dropListRef.withItems(items.map((/**\n             * @param {?} drag\n             * @return {?}\n             */\n            function (drag) { return drag._dragRef; })));\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    CdkDropList.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    };\n    /** Starts dragging an item. */\n    /**\n     * Starts dragging an item.\n     * @return {?}\n     */\n    CdkDropList.prototype.start = /**\n     * Starts dragging an item.\n     * @return {?}\n     */\n    function () {\n        this._dropListRef.start();\n    };\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     */\n    /**\n     * Drops an item into this container.\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @param {?} isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @return {?}\n     */\n    CdkDropList.prototype.drop = /**\n     * Drops an item into this container.\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @param {?} isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @return {?}\n     */\n    function (item, currentIndex, previousContainer, isPointerOverContainer) {\n        this._dropListRef.drop(item._dragRef, currentIndex, ((/** @type {?} */ (previousContainer)))._dropListRef, isPointerOverContainer);\n    };\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     */\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @return {?}\n     */\n    CdkDropList.prototype.enter = /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @return {?}\n     */\n    function (item, pointerX, pointerY) {\n        this._dropListRef.enter(item._dragRef, pointerX, pointerY);\n    };\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    CdkDropList.prototype.exit = /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    function (item) {\n        this._dropListRef.exit(item._dragRef);\n    };\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    /**\n     * Figures out the index of an item in the container.\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    CdkDropList.prototype.getItemIndex = /**\n     * Figures out the index of an item in the container.\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    function (item) {\n        return this._dropListRef.getItemIndex(item._dragRef);\n    };\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param {?} item Item to be sorted.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?} pointerDelta Direction in which the pointer is moving along each axis.\n     * @return {?}\n     */\n    CdkDropList.prototype._sortItem = /**\n     * Sorts an item inside the container based on its position.\n     * @param {?} item Item to be sorted.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?} pointerDelta Direction in which the pointer is moving along each axis.\n     * @return {?}\n     */\n    function (item, pointerX, pointerY, pointerDelta) {\n        return this._dropListRef._sortItem(item._dragRef, pointerX, pointerY, pointerDelta);\n    };\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param {?} item Drag item that is being moved.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    CdkDropList.prototype._getSiblingContainerFromPosition = /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param {?} item Drag item that is being moved.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    function (item, x, y) {\n        /** @type {?} */\n        var result = this._dropListRef._getSiblingContainerFromPosition(item._dragRef, x, y);\n        return result ? result.data : null;\n    };\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param {?} x Pointer position along the X axis.\n     * @param {?} y Pointer position along the Y axis.\n     * @return {?}\n     */\n    CdkDropList.prototype._isOverContainer = /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param {?} x Pointer position along the X axis.\n     * @param {?} y Pointer position along the Y axis.\n     * @return {?}\n     */\n    function (x, y) {\n        return this._dropListRef._isOverContainer(x, y);\n    };\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    /**\n     * Syncs the inputs of the CdkDropList with the options of the underlying DropListRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    CdkDropList.prototype._syncInputs = /**\n     * Syncs the inputs of the CdkDropList with the options of the underlying DropListRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) {\n        var _this = this;\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            function (value) { return ref.withDirection(value); }));\n        }\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var siblings = coerceArray(_this.connectedTo).map((/**\n             * @param {?} drop\n             * @return {?}\n             */\n            function (drop) {\n                return typeof drop === 'string' ?\n                    (/** @type {?} */ (CdkDropList._dropLists.find((/**\n                     * @param {?} list\n                     * @return {?}\n                     */\n                    function (list) { return list.id === drop; })))) : drop;\n            }));\n            if (_this._group) {\n                _this._group._items.forEach((/**\n                 * @param {?} drop\n                 * @return {?}\n                 */\n                function (drop) {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                }));\n            }\n            ref.disabled = _this.disabled;\n            ref.lockAxis = _this.lockAxis;\n            ref.sortingDisabled = _this.sortingDisabled;\n            ref.autoScrollDisabled = _this.autoScrollDisabled;\n            ref\n                .connectedTo(siblings.filter((/**\n             * @param {?} drop\n             * @return {?}\n             */\n            function (drop) { return drop && drop !== _this; })).map((/**\n             * @param {?} list\n             * @return {?}\n             */\n            function (list) { return list._dropListRef; })))\n                .withOrientation(_this.orientation);\n        }));\n    };\n    /** Handles events from the underlying DropListRef. */\n    /**\n     * Handles events from the underlying DropListRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    CdkDropList.prototype._handleEvents = /**\n     * Handles events from the underlying DropListRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) {\n        var _this = this;\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this._changeDetectorRef.markForCheck();\n        }));\n        ref.entered.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            _this.entered.emit({\n                container: _this,\n                item: event.item.data,\n                currentIndex: event.currentIndex\n            });\n        }));\n        ref.exited.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            _this.exited.emit({\n                container: _this,\n                item: event.item.data\n            });\n            _this._changeDetectorRef.markForCheck();\n        }));\n        ref.sorted.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            _this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: _this,\n                item: event.item.data\n            });\n        }));\n        ref.dropped.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            _this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                item: event.item.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                distance: event.distance\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            _this._changeDetectorRef.markForCheck();\n        }));\n    };\n    /**\n     * Keeps track of the drop lists that are currently on the page.\n     */\n    CdkDropList._dropLists = [];\n    CdkDropList.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkDropList], cdk-drop-list',\n                    exportAs: 'cdkDropList',\n                    providers: [\n                        // Prevent child drop lists from picking up the same group as their parent.\n                        { provide: CdkDropListGroup, useValue: ɵ0 },\n                        { provide: CDK_DROP_LIST_CONTAINER, useExisting: CdkDropList },\n                    ],\n                    host: {\n                        'class': 'cdk-drop-list',\n                        '[id]': 'id',\n                        '[class.cdk-drop-list-disabled]': 'disabled',\n                        '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                        '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()',\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    CdkDropList.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: DragDrop },\n        { type: ChangeDetectorRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: CdkDropListGroup, decorators: [{ type: Optional }, { type: SkipSelf }] }\n    ]; };\n    CdkDropList.propDecorators = {\n        _draggables: [{ type: ContentChildren, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    function () { return CdkDrag; })), {\n                        // Explicitly set to false since some of the logic below makes assumptions about it.\n                        // The `.withItems` call below should be updated if we ever need to switch this to `true`.\n                        descendants: false\n                    },] }],\n        connectedTo: [{ type: Input, args: ['cdkDropListConnectedTo',] }],\n        data: [{ type: Input, args: ['cdkDropListData',] }],\n        orientation: [{ type: Input, args: ['cdkDropListOrientation',] }],\n        id: [{ type: Input }],\n        lockAxis: [{ type: Input, args: ['cdkDropListLockAxis',] }],\n        disabled: [{ type: Input, args: ['cdkDropListDisabled',] }],\n        sortingDisabled: [{ type: Input, args: ['cdkDropListSortingDisabled',] }],\n        enterPredicate: [{ type: Input, args: ['cdkDropListEnterPredicate',] }],\n        autoScrollDisabled: [{ type: Input, args: ['cdkDropListAutoScrollDisabled',] }],\n        dropped: [{ type: Output, args: ['cdkDropListDropped',] }],\n        entered: [{ type: Output, args: ['cdkDropListEntered',] }],\n        exited: [{ type: Output, args: ['cdkDropListExited',] }],\n        sorted: [{ type: Output, args: ['cdkDropListSorted',] }]\n    };\n    return CdkDropList;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DragDropModule = /** @class */ (function () {\n    function DragDropModule() {\n    }\n    DragDropModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [\n                        CdkDropList,\n                        CdkDropListGroup,\n                        CdkDrag,\n                        CdkDragHandle,\n                        CdkDragPreview,\n                        CdkDragPlaceholder,\n                    ],\n                    exports: [\n                        CdkDropList,\n                        CdkDropListGroup,\n                        CdkDrag,\n                        CdkDragHandle,\n                        CdkDragPreview,\n                        CdkDragPlaceholder,\n                    ],\n                    providers: [\n                        DragDrop,\n                    ]\n                },] },\n    ];\n    return DragDropModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DragDrop, DragRef, DropListRef, CdkDropList, CDK_DROP_LIST, CDK_DROP_LIST_CONTAINER, moveItemInArray, transferArrayItem, copyArrayItem, DragDropModule, DragDropRegistry, CdkDropListGroup, CDK_DRAG_CONFIG_FACTORY, CDK_DRAG_CONFIG, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder, CDK_DRAG_PARENT as ɵb };\n//# sourceMappingURL=drag-drop.es5.js.map\n","import { NgModule } from '@angular/core';\n\nimport { MAT_DATE_FORMATS, MAT_DATE_LOCALE, MatDateFormats, MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\n\nconst MODULE_EXPORTS = [MatDatepickerModule, MatNativeDateModule];\n\nconst DATE_FORMATS: MatDateFormats = {\n  parse: {\n    dateInput: 'LL',\n  },\n  display: {\n    dateInput: 'LL',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n@NgModule({\n  exports: MODULE_EXPORTS,\n  providers: [{ provide: MAT_DATE_FORMATS, useValue: DATE_FORMATS }, { provide: MAT_DATE_LOCALE, useValue: 'en-GB' }],\n})\nexport class SharedMaterialDateModule {}\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function retry(count) {\n    if (count === void 0) {\n        count = -1;\n    }\n    return function (source) { return source.lift(new RetryOperator(count, source)); };\n}\nvar RetryOperator = /*@__PURE__*/ (function () {\n    function RetryOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RetryOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    };\n    return RetryOperator;\n}());\nvar RetrySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RetrySubscriber, _super);\n    function RetrySubscriber(destination, count, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.count = count;\n        _this.source = source;\n        return _this;\n    }\n    RetrySubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.error.call(this, err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RetrySubscriber;\n}(Subscriber));\n//# sourceMappingURL=retry.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable, NgModule, ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, forwardRef, Inject, Input, Optional, Output, ViewChild, ViewEncapsulation, ElementRef, NgZone, InjectionToken, ViewContainerRef, Directive, Attribute, ContentChild, ɵɵdefineInjectable } from '@angular/core';\nimport { Subject, merge, Subscription, of } from 'rxjs';\nimport { take, filter } from 'rxjs/operators';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW, SPACE, ESCAPE } from '@angular/cdk/keycodes';\nimport { DateAdapter, MAT_DATE_FORMATS, mixinColor } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ComponentPortal, PortalModule } from '@angular/cdk/portal';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { __extends } from 'tslib';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { MatFormField } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { A11yModule } from '@angular/cdk/a11y';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @param {?} provider\n * @return {?}\n */\nfunction createMissingDateImplError(provider) {\n    return Error(\"MatDatepicker: No provider found for \" + provider + \". You must import one of the following \" +\n        \"modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a \" +\n        \"custom implementation.\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Datepicker data that requires internationalization.\n */\nvar MatDatepickerIntl = /** @class */ (function () {\n    function MatDatepickerIntl() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * A label for the calendar popup (used by screen readers).\n         */\n        this.calendarLabel = 'Calendar';\n        /**\n         * A label for the button used to open the calendar popup (used by screen readers).\n         */\n        this.openCalendarLabel = 'Open calendar';\n        /**\n         * A label for the previous month button (used by screen readers).\n         */\n        this.prevMonthLabel = 'Previous month';\n        /**\n         * A label for the next month button (used by screen readers).\n         */\n        this.nextMonthLabel = 'Next month';\n        /**\n         * A label for the previous year button (used by screen readers).\n         */\n        this.prevYearLabel = 'Previous year';\n        /**\n         * A label for the next year button (used by screen readers).\n         */\n        this.nextYearLabel = 'Next year';\n        /**\n         * A label for the previous multi-year button (used by screen readers).\n         */\n        this.prevMultiYearLabel = 'Previous 20 years';\n        /**\n         * A label for the next multi-year button (used by screen readers).\n         */\n        this.nextMultiYearLabel = 'Next 20 years';\n        /**\n         * A label for the 'switch to month view' button (used by screen readers).\n         */\n        this.switchToMonthViewLabel = 'Choose date';\n        /**\n         * A label for the 'switch to year view' button (used by screen readers).\n         */\n        this.switchToMultiYearViewLabel = 'Choose month and year';\n    }\n    MatDatepickerIntl.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */ MatDatepickerIntl.ngInjectableDef = ɵɵdefineInjectable({ factory: function MatDatepickerIntl_Factory() { return new MatDatepickerIntl(); }, token: MatDatepickerIntl, providedIn: \"root\" });\n    return MatDatepickerIntl;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * \\@docs-private\n */\nvar  /**\n * An internal class that represents the data corresponding to a single calendar cell.\n * \\@docs-private\n */\nMatCalendarCell = /** @class */ (function () {\n    function MatCalendarCell(value, displayValue, ariaLabel, enabled, cssClasses) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n        this.cssClasses = cssClasses;\n    }\n    return MatCalendarCell;\n}());\n/**\n * An internal component used to display calendar data in a table.\n * \\@docs-private\n */\nvar MatCalendarBody = /** @class */ (function () {\n    function MatCalendarBody(_elementRef, _ngZone) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * The number of columns in the table.\n         */\n        this.numCols = 7;\n        /**\n         * The cell number of the active cell in the table.\n         */\n        this.activeCell = 0;\n        /**\n         * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n         * maintained even as the table resizes.\n         */\n        this.cellAspectRatio = 1;\n        /**\n         * Emits when a new value is selected.\n         */\n        this.selectedValueChange = new EventEmitter();\n    }\n    /**\n     * @param {?} cell\n     * @return {?}\n     */\n    MatCalendarBody.prototype._cellClicked = /**\n     * @param {?} cell\n     * @return {?}\n     */\n    function (cell) {\n        if (cell.enabled) {\n            this.selectedValueChange.emit(cell.value);\n        }\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MatCalendarBody.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        /** @type {?} */\n        var columnChanges = changes['numCols'];\n        var _a = this, rows = _a.rows, numCols = _a.numCols;\n        if (changes['rows'] || columnChanges) {\n            this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n        if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n            this._cellPadding = 50 * this.cellAspectRatio / numCols + \"%\";\n        }\n        if (columnChanges || !this._cellWidth) {\n            this._cellWidth = 100 / numCols + \"%\";\n        }\n    };\n    /**\n     * @param {?} rowIndex\n     * @param {?} colIndex\n     * @return {?}\n     */\n    MatCalendarBody.prototype._isActiveCell = /**\n     * @param {?} rowIndex\n     * @param {?} colIndex\n     * @return {?}\n     */\n    function (rowIndex, colIndex) {\n        /** @type {?} */\n        var cellNumber = rowIndex * this.numCols + colIndex;\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n        return cellNumber == this.activeCell;\n    };\n    /** Focuses the active cell after the microtask queue is empty. */\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    MatCalendarBody.prototype._focusActiveCell = /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        function () {\n            _this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            function () {\n                /** @type {?} */\n                var activeCell = _this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n                if (activeCell) {\n                    activeCell.focus();\n                }\n            }));\n        }));\n    };\n    MatCalendarBody.decorators = [\n        { type: Component, args: [{selector: '[mat-calendar-body]',\n                    template: \"<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\"><td class=\\\"mat-calendar-body-label\\\" [attr.colspan]=\\\"numCols\\\" [style.paddingTop]=\\\"_cellPadding\\\" [style.paddingBottom]=\\\"_cellPadding\\\">{{label}}</td></tr><tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\"><td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\" aria-hidden=\\\"true\\\" class=\\\"mat-calendar-body-label\\\" [attr.colspan]=\\\"_firstRowOffset\\\" [style.paddingTop]=\\\"_cellPadding\\\" [style.paddingBottom]=\\\"_cellPadding\\\">{{_firstRowOffset >= labelMinRequiredCells ? label : ''}}</td><td *ngFor=\\\"let item of row; let colIndex = index\\\" role=\\\"gridcell\\\" class=\\\"mat-calendar-body-cell\\\" [ngClass]=\\\"item.cssClasses\\\" [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\" [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\" [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\" [attr.aria-label]=\\\"item.ariaLabel\\\" [attr.aria-disabled]=\\\"!item.enabled || null\\\" [attr.aria-selected]=\\\"selectedValue === item.value\\\" (click)=\\\"_cellClicked(item)\\\" [style.width]=\\\"_cellWidth\\\" [style.paddingTop]=\\\"_cellPadding\\\" [style.paddingBottom]=\\\"_cellPadding\\\"><div class=\\\"mat-calendar-body-cell-content\\\" [class.mat-calendar-body-selected]=\\\"selectedValue === item.value\\\" [class.mat-calendar-body-today]=\\\"todayValue === item.value\\\">{{item.displayValue}}</div></td></tr>\",\n                    styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.71429%;padding-right:4.71429%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:0;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}@media (-ms-high-contrast:active){.mat-calendar-body-cell-content{border:none}}@media (-ms-high-contrast:active){.mat-calendar-body-selected,.mat-datepicker-popup:not(:empty){outline:solid 1px}.mat-calendar-body-today{outline:dotted 1px}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}}[dir=rtl] .mat-calendar-body-label{text-align:right}\"],\n                    host: {\n                        'class': 'mat-calendar-body',\n                        'role': 'grid',\n                        'aria-readonly': 'true'\n                    },\n                    exportAs: 'matCalendarBody',\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                },] },\n    ];\n    /** @nocollapse */\n    MatCalendarBody.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: NgZone }\n    ]; };\n    MatCalendarBody.propDecorators = {\n        label: [{ type: Input }],\n        rows: [{ type: Input }],\n        todayValue: [{ type: Input }],\n        selectedValue: [{ type: Input }],\n        labelMinRequiredCells: [{ type: Input }],\n        numCols: [{ type: Input }],\n        activeCell: [{ type: Input }],\n        cellAspectRatio: [{ type: Input }],\n        selectedValueChange: [{ type: Output }]\n    };\n    return MatCalendarBody;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * \\@docs-private\n * @template D\n */\nvar MatMonthView = /** @class */ (function () {\n    function MatMonthView(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        /**\n         * Emits when a new date is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        /** @type {?} */\n        var firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        /** @type {?} */\n        var narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n        /** @type {?} */\n        var longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        /** @type {?} */\n        var weekdays = longWeekdays.map((/**\n         * @param {?} long\n         * @param {?} i\n         * @return {?}\n         */\n        function (long, i) {\n            return { long: long, narrow: narrowWeekdays[i] };\n        }));\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n        this._activeDate = this._dateAdapter.today();\n    }\n    Object.defineProperty(MatMonthView.prototype, \"activeDate\", {\n        /**\n         * The date to display in this month view (everything other than the month and year is ignored).\n         */\n        get: /**\n         * The date to display in this month view (everything other than the month and year is ignored).\n         * @return {?}\n         */\n        function () { return this._activeDate; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var oldActiveDate = this._activeDate;\n            /** @type {?} */\n            var validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n            this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n            if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n                this._init();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatMonthView.prototype, \"selected\", {\n        /** The currently selected date. */\n        get: /**\n         * The currently selected date.\n         * @return {?}\n         */\n        function () { return this._selected; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n            this._selectedDate = this._getDateInCurrentMonth(this._selected);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatMonthView.prototype, \"minDate\", {\n        /** The minimum selectable date. */\n        get: /**\n         * The minimum selectable date.\n         * @return {?}\n         */\n        function () { return this._minDate; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatMonthView.prototype, \"maxDate\", {\n        /** The maximum selectable date. */\n        get: /**\n         * The maximum selectable date.\n         * @return {?}\n         */\n        function () { return this._maxDate; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatMonthView.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        this._init();\n    };\n    /** Handles when a new date is selected. */\n    /**\n     * Handles when a new date is selected.\n     * @param {?} date\n     * @return {?}\n     */\n    MatMonthView.prototype._dateSelected = /**\n     * Handles when a new date is selected.\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        if (this._selectedDate != date) {\n            /** @type {?} */\n            var selectedYear = this._dateAdapter.getYear(this.activeDate);\n            /** @type {?} */\n            var selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n            /** @type {?} */\n            var selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n            this.selectedChange.emit(selectedDate);\n        }\n        this._userSelection.emit();\n    };\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    /**\n     * Handles keydown events on the calendar body when calendar is in month view.\n     * @param {?} event\n     * @return {?}\n     */\n    MatMonthView.prototype._handleCalendarBodyKeydown = /**\n     * Handles keydown events on the calendar body when calendar is in month view.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        var oldActiveDate = this._activeDate;\n        /** @type {?} */\n        var isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                    this._dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this._dateSelected(this._dateAdapter.getDate(this._activeDate));\n                    this._userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    };\n    /** Initializes this month view. */\n    /**\n     * Initializes this month view.\n     * @return {?}\n     */\n    MatMonthView.prototype._init = /**\n     * Initializes this month view.\n     * @return {?}\n     */\n    function () {\n        this._selectedDate = this._getDateInCurrentMonth(this.selected);\n        this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n        this._monthLabel =\n            this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n                .toLocaleUpperCase();\n        /** @type {?} */\n        var firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    };\n    /** Focuses the active cell after the microtask queue is empty. */\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    MatMonthView.prototype._focusActiveCell = /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    function () {\n        this._matCalendarBody._focusActiveCell();\n    };\n    /** Creates MatCalendarCells for the dates in this month. */\n    /**\n     * Creates MatCalendarCells for the dates in this month.\n     * @private\n     * @return {?}\n     */\n    MatMonthView.prototype._createWeekCells = /**\n     * Creates MatCalendarCells for the dates in this month.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        /** @type {?} */\n        var dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (var i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell == DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            /** @type {?} */\n            var date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n            /** @type {?} */\n            var enabled = this._shouldEnableDate(date);\n            /** @type {?} */\n            var ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            /** @type {?} */\n            var cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n            this._weeks[this._weeks.length - 1]\n                .push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n        }\n    };\n    /** Date filter for the month */\n    /**\n     * Date filter for the month\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    MatMonthView.prototype._shouldEnableDate = /**\n     * Date filter for the month\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return !!date &&\n            (!this.dateFilter || this.dateFilter(date)) &&\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0);\n    };\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    MatMonthView.prototype._getDateInCurrentMonth = /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n            this._dateAdapter.getDate(date) : null;\n    };\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    /**\n     * Checks whether the 2 dates are non-null and fall within the same month of the same year.\n     * @private\n     * @param {?} d1\n     * @param {?} d2\n     * @return {?}\n     */\n    MatMonthView.prototype._hasSameMonthAndYear = /**\n     * Checks whether the 2 dates are non-null and fall within the same month of the same year.\n     * @private\n     * @param {?} d1\n     * @param {?} d2\n     * @return {?}\n     */\n    function (d1, d2) {\n        return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    };\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    MatMonthView.prototype._getValidDateOrNull = /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    function (obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    };\n    /** Determines whether the user has the RTL layout direction. */\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    MatMonthView.prototype._isRtl = /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    function () {\n        return this._dir && this._dir.value === 'rtl';\n    };\n    MatMonthView.decorators = [\n        { type: Component, args: [{selector: 'mat-month-view',\n                    template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">{{day.narrow}}</th></tr><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\" aria-hidden=\\\"true\\\"></th></tr></thead><tbody mat-calendar-body [label]=\\\"_monthLabel\\\" [rows]=\\\"_weeks\\\" [todayValue]=\\\"_todayDate\\\" [selectedValue]=\\\"_selectedDate\\\" [labelMinRequiredCells]=\\\"3\\\" [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\" (selectedValueChange)=\\\"_dateSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n                    exportAs: 'matMonthView',\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                },] },\n    ];\n    /** @nocollapse */\n    MatMonthView.ctorParameters = function () { return [\n        { type: ChangeDetectorRef },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n        { type: DateAdapter, decorators: [{ type: Optional }] },\n        { type: Directionality, decorators: [{ type: Optional }] }\n    ]; };\n    MatMonthView.propDecorators = {\n        activeDate: [{ type: Input }],\n        selected: [{ type: Input }],\n        minDate: [{ type: Input }],\n        maxDate: [{ type: Input }],\n        dateFilter: [{ type: Input }],\n        dateClass: [{ type: Input }],\n        selectedChange: [{ type: Output }],\n        _userSelection: [{ type: Output }],\n        activeDateChange: [{ type: Output }],\n        _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody, { static: false },] }]\n    };\n    return MatMonthView;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar yearsPerPage = 24;\n/** @type {?} */\nvar yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * \\@docs-private\n * @template D\n */\nvar MatMultiYearView = /** @class */ (function () {\n    function MatMultiYearView(_changeDetectorRef, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        /**\n         * Emits when a new year is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected year. This doesn't imply a change on the selected date\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    Object.defineProperty(MatMultiYearView.prototype, \"activeDate\", {\n        /** The date to display in this multi-year view (everything other than the year is ignored). */\n        get: /**\n         * The date to display in this multi-year view (everything other than the year is ignored).\n         * @return {?}\n         */\n        function () { return this._activeDate; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var oldActiveDate = this._activeDate;\n            /** @type {?} */\n            var validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n            this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n            if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n                this._init();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatMultiYearView.prototype, \"selected\", {\n        /** The currently selected date. */\n        get: /**\n         * The currently selected date.\n         * @return {?}\n         */\n        function () { return this._selected; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n            this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatMultiYearView.prototype, \"minDate\", {\n        /** The minimum selectable date. */\n        get: /**\n         * The minimum selectable date.\n         * @return {?}\n         */\n        function () { return this._minDate; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatMultiYearView.prototype, \"maxDate\", {\n        /** The maximum selectable date. */\n        get: /**\n         * The maximum selectable date.\n         * @return {?}\n         */\n        function () { return this._maxDate; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatMultiYearView.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        this._init();\n    };\n    /** Initializes this multi-year view. */\n    /**\n     * Initializes this multi-year view.\n     * @return {?}\n     */\n    MatMultiYearView.prototype._init = /**\n     * Initializes this multi-year view.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n        // We want a range years such that we maximize the number of\n        // enabled dates visible at once. This prevents issues where the minimum year\n        // is the last item of a page OR the maximum year is the first item of a page.\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view.\n        /** @type {?} */\n        var activeYear = this._dateAdapter.getYear(this._activeDate);\n        /** @type {?} */\n        var minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n        this._years = [];\n        for (var i = 0, row = []; i < yearsPerPage; i++) {\n            row.push(minYearOfPage + i);\n            if (row.length == yearsPerRow) {\n                this._years.push(row.map((/**\n                 * @param {?} year\n                 * @return {?}\n                 */\n                function (year) { return _this._createCellForYear(year); })));\n                row = [];\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    };\n    /** Handles when a new year is selected. */\n    /**\n     * Handles when a new year is selected.\n     * @param {?} year\n     * @return {?}\n     */\n    MatMultiYearView.prototype._yearSelected = /**\n     * Handles when a new year is selected.\n     * @param {?} year\n     * @return {?}\n     */\n    function (year) {\n        this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n        /** @type {?} */\n        var month = this._dateAdapter.getMonth(this.activeDate);\n        /** @type {?} */\n        var daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    };\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    /**\n     * Handles keydown events on the calendar body when calendar is in multi-year view.\n     * @param {?} event\n     * @return {?}\n     */\n    MatMultiYearView.prototype._handleCalendarBodyKeydown = /**\n     * Handles keydown events on the calendar body when calendar is in multi-year view.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        /** @type {?} */\n        var oldActiveDate = this._activeDate;\n        /** @type {?} */\n        var isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this._yearSelected(this._dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    };\n    /**\n     * @return {?}\n     */\n    MatMultiYearView.prototype._getActiveCell = /**\n     * @return {?}\n     */\n    function () {\n        return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    };\n    /** Focuses the active cell after the microtask queue is empty. */\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    MatMultiYearView.prototype._focusActiveCell = /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    function () {\n        this._matCalendarBody._focusActiveCell();\n    };\n    /** Creates an MatCalendarCell for the given year. */\n    /**\n     * Creates an MatCalendarCell for the given year.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    MatMultiYearView.prototype._createCellForYear = /**\n     * Creates an MatCalendarCell for the given year.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    function (year) {\n        /** @type {?} */\n        var yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\n        return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n    };\n    /** Whether the given year is enabled. */\n    /**\n     * Whether the given year is enabled.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    MatMultiYearView.prototype._shouldEnableYear = /**\n     * Whether the given year is enabled.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    function (year) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n        /** @type {?} */\n        var firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n        // If any date in the year is enabled count the year as enabled.\n        for (var date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    MatMultiYearView.prototype._getValidDateOrNull = /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    function (obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    };\n    /** Determines whether the user has the RTL layout direction. */\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    MatMultiYearView.prototype._isRtl = /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    function () {\n        return this._dir && this._dir.value === 'rtl';\n    };\n    MatMultiYearView.decorators = [\n        { type: Component, args: [{selector: 'mat-multi-year-view',\n                    template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr></thead><tbody mat-calendar-body [rows]=\\\"_years\\\" [todayValue]=\\\"_todayYear\\\" [selectedValue]=\\\"_selectedYear\\\" [numCols]=\\\"4\\\" [cellAspectRatio]=\\\"4 / 7\\\" [activeCell]=\\\"_getActiveCell()\\\" (selectedValueChange)=\\\"_yearSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n                    exportAs: 'matMultiYearView',\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                },] },\n    ];\n    /** @nocollapse */\n    MatMultiYearView.ctorParameters = function () { return [\n        { type: ChangeDetectorRef },\n        { type: DateAdapter, decorators: [{ type: Optional }] },\n        { type: Directionality, decorators: [{ type: Optional }] }\n    ]; };\n    MatMultiYearView.propDecorators = {\n        activeDate: [{ type: Input }],\n        selected: [{ type: Input }],\n        minDate: [{ type: Input }],\n        maxDate: [{ type: Input }],\n        dateFilter: [{ type: Input }],\n        selectedChange: [{ type: Output }],\n        yearSelected: [{ type: Output }],\n        activeDateChange: [{ type: Output }],\n        _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody, { static: false },] }]\n    };\n    return MatMultiYearView;\n}());\n/**\n * @template D\n * @param {?} dateAdapter\n * @param {?} date1\n * @param {?} date2\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n    /** @type {?} */\n    var year1 = dateAdapter.getYear(date1);\n    /** @type {?} */\n    var year2 = dateAdapter.getYear(date2);\n    /** @type {?} */\n    var startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n    return Math.floor((year1 - startingYear) / yearsPerPage) ===\n        Math.floor((year2 - startingYear) / yearsPerPage);\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n * @template D\n * @param {?} dateAdapter\n * @param {?} activeDate\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n    /** @type {?} */\n    var activeYear = dateAdapter.getYear(activeDate);\n    return euclideanModulo((activeYear - getStartingYear(dateAdapter, minDate, maxDate)), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n * @template D\n * @param {?} dateAdapter\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n    /** @type {?} */\n    var startingYear = 0;\n    if (maxDate) {\n        /** @type {?} */\n        var maxYear = dateAdapter.getYear(maxDate);\n        startingYear = maxYear - yearsPerPage + 1;\n    }\n    else if (minDate) {\n        startingYear = dateAdapter.getYear(minDate);\n    }\n    return startingYear;\n}\n/**\n * Gets remainder that is non-negative, even if first number is negative\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction euclideanModulo(a, b) {\n    return (a % b + b) % b;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An internal component used to display a single year in the datepicker.\n * \\@docs-private\n * @template D\n */\nvar MatYearView = /** @class */ (function () {\n    function MatYearView(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        /**\n         * Emits when a new month is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected month. This doesn't imply a change on the selected date\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    Object.defineProperty(MatYearView.prototype, \"activeDate\", {\n        /** The date to display in this year view (everything other than the year is ignored). */\n        get: /**\n         * The date to display in this year view (everything other than the year is ignored).\n         * @return {?}\n         */\n        function () { return this._activeDate; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var oldActiveDate = this._activeDate;\n            /** @type {?} */\n            var validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n            this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n            if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n                this._init();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatYearView.prototype, \"selected\", {\n        /** The currently selected date. */\n        get: /**\n         * The currently selected date.\n         * @return {?}\n         */\n        function () { return this._selected; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n            this._selectedMonth = this._getMonthInCurrentYear(this._selected);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatYearView.prototype, \"minDate\", {\n        /** The minimum selectable date. */\n        get: /**\n         * The minimum selectable date.\n         * @return {?}\n         */\n        function () { return this._minDate; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatYearView.prototype, \"maxDate\", {\n        /** The maximum selectable date. */\n        get: /**\n         * The maximum selectable date.\n         * @return {?}\n         */\n        function () { return this._maxDate; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatYearView.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        this._init();\n    };\n    /** Handles when a new month is selected. */\n    /**\n     * Handles when a new month is selected.\n     * @param {?} month\n     * @return {?}\n     */\n    MatYearView.prototype._monthSelected = /**\n     * Handles when a new month is selected.\n     * @param {?} month\n     * @return {?}\n     */\n    function (month) {\n        /** @type {?} */\n        var normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        this.monthSelected.emit(normalizedDate);\n        /** @type {?} */\n        var daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n        this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    };\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    /**\n     * Handles keydown events on the calendar body when calendar is in year view.\n     * @param {?} event\n     * @return {?}\n     */\n    MatYearView.prototype._handleCalendarBodyKeydown = /**\n     * Handles keydown events on the calendar body when calendar is in year view.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        var oldActiveDate = this._activeDate;\n        /** @type {?} */\n        var isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this._monthSelected(this._dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    };\n    /** Initializes this year view. */\n    /**\n     * Initializes this year view.\n     * @return {?}\n     */\n    MatYearView.prototype._init = /**\n     * Initializes this year view.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n        /** @type {?} */\n        var monthNames = this._dateAdapter.getMonthNames('short');\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map((/**\n         * @param {?} row\n         * @return {?}\n         */\n        function (row) { return row.map((/**\n         * @param {?} month\n         * @return {?}\n         */\n        function (month) { return _this._createCellForMonth(month, monthNames[month]); })); }));\n        this._changeDetectorRef.markForCheck();\n    };\n    /** Focuses the active cell after the microtask queue is empty. */\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    MatYearView.prototype._focusActiveCell = /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    function () {\n        this._matCalendarBody._focusActiveCell();\n    };\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    MatYearView.prototype._getMonthInCurrentYear = /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n            this._dateAdapter.getMonth(date) : null;\n    };\n    /** Creates an MatCalendarCell for the given month. */\n    /**\n     * Creates an MatCalendarCell for the given month.\n     * @private\n     * @param {?} month\n     * @param {?} monthName\n     * @return {?}\n     */\n    MatYearView.prototype._createCellForMonth = /**\n     * Creates an MatCalendarCell for the given month.\n     * @private\n     * @param {?} month\n     * @param {?} monthName\n     * @return {?}\n     */\n    function (month, monthName) {\n        /** @type {?} */\n        var ariaLabel = this._dateAdapter.format(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1), this._dateFormats.display.monthYearA11yLabel);\n        return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month));\n    };\n    /** Whether the given month is enabled. */\n    /**\n     * Whether the given month is enabled.\n     * @private\n     * @param {?} month\n     * @return {?}\n     */\n    MatYearView.prototype._shouldEnableMonth = /**\n     * Whether the given month is enabled.\n     * @private\n     * @param {?} month\n     * @return {?}\n     */\n    function (month) {\n        /** @type {?} */\n        var activeYear = this._dateAdapter.getYear(this.activeDate);\n        if (month === undefined || month === null ||\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n        if (!this.dateFilter) {\n            return true;\n        }\n        /** @type {?} */\n        var firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n        // If any date in the month is enabled count the month as enabled.\n        for (var date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    MatYearView.prototype._isYearAndMonthAfterMaxDate = /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    function (year, month) {\n        if (this.maxDate) {\n            /** @type {?} */\n            var maxYear = this._dateAdapter.getYear(this.maxDate);\n            /** @type {?} */\n            var maxMonth = this._dateAdapter.getMonth(this.maxDate);\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n        return false;\n    };\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    MatYearView.prototype._isYearAndMonthBeforeMinDate = /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    function (year, month) {\n        if (this.minDate) {\n            /** @type {?} */\n            var minYear = this._dateAdapter.getYear(this.minDate);\n            /** @type {?} */\n            var minMonth = this._dateAdapter.getMonth(this.minDate);\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n        return false;\n    };\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    MatYearView.prototype._getValidDateOrNull = /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    function (obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    };\n    /** Determines whether the user has the RTL layout direction. */\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    MatYearView.prototype._isRtl = /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    function () {\n        return this._dir && this._dir.value === 'rtl';\n    };\n    MatYearView.decorators = [\n        { type: Component, args: [{selector: 'mat-year-view',\n                    template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr></thead><tbody mat-calendar-body [label]=\\\"_yearLabel\\\" [rows]=\\\"_months\\\" [todayValue]=\\\"_todayMonth\\\" [selectedValue]=\\\"_selectedMonth\\\" [labelMinRequiredCells]=\\\"2\\\" [numCols]=\\\"4\\\" [cellAspectRatio]=\\\"4 / 7\\\" [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\" (selectedValueChange)=\\\"_monthSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n                    exportAs: 'matYearView',\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                },] },\n    ];\n    /** @nocollapse */\n    MatYearView.ctorParameters = function () { return [\n        { type: ChangeDetectorRef },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n        { type: DateAdapter, decorators: [{ type: Optional }] },\n        { type: Directionality, decorators: [{ type: Optional }] }\n    ]; };\n    MatYearView.propDecorators = {\n        activeDate: [{ type: Input }],\n        selected: [{ type: Input }],\n        minDate: [{ type: Input }],\n        maxDate: [{ type: Input }],\n        dateFilter: [{ type: Input }],\n        selectedChange: [{ type: Output }],\n        monthSelected: [{ type: Output }],\n        activeDateChange: [{ type: Output }],\n        _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody, { static: false },] }]\n    };\n    return MatYearView;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default header for MatCalendar\n * @template D\n */\nvar MatCalendarHeader = /** @class */ (function () {\n    function MatCalendarHeader(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n        this._intl = _intl;\n        this.calendar = calendar;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this.calendar.stateChanges.subscribe((/**\n         * @return {?}\n         */\n        function () { return changeDetectorRef.markForCheck(); }));\n    }\n    Object.defineProperty(MatCalendarHeader.prototype, \"periodButtonText\", {\n        /** The label for the current calendar view. */\n        get: /**\n         * The label for the current calendar view.\n         * @return {?}\n         */\n        function () {\n            if (this.calendar.currentView == 'month') {\n                return this._dateAdapter\n                    .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                    .toLocaleUpperCase();\n            }\n            if (this.calendar.currentView == 'year') {\n                return this._dateAdapter.getYearName(this.calendar.activeDate);\n            }\n            // The offset from the active year to the \"slot\" for the starting year is the\n            // *actual* first rendered year in the multi-year view, and the last year is\n            // just yearsPerPage - 1 away.\n            /** @type {?} */\n            var activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n            /** @type {?} */\n            var minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n            /** @type {?} */\n            var maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n            return minYearOfPage + \" \\u2013 \" + maxYearOfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatCalendarHeader.prototype, \"periodButtonLabel\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.calendar.currentView == 'month' ?\n                this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatCalendarHeader.prototype, \"prevButtonLabel\", {\n        /** The label for the previous button. */\n        get: /**\n         * The label for the previous button.\n         * @return {?}\n         */\n        function () {\n            return {\n                'month': this._intl.prevMonthLabel,\n                'year': this._intl.prevYearLabel,\n                'multi-year': this._intl.prevMultiYearLabel\n            }[this.calendar.currentView];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatCalendarHeader.prototype, \"nextButtonLabel\", {\n        /** The label for the next button. */\n        get: /**\n         * The label for the next button.\n         * @return {?}\n         */\n        function () {\n            return {\n                'month': this._intl.nextMonthLabel,\n                'year': this._intl.nextYearLabel,\n                'multi-year': this._intl.nextMultiYearLabel\n            }[this.calendar.currentView];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Handles user clicks on the period label. */\n    /**\n     * Handles user clicks on the period label.\n     * @return {?}\n     */\n    MatCalendarHeader.prototype.currentPeriodClicked = /**\n     * Handles user clicks on the period label.\n     * @return {?}\n     */\n    function () {\n        this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    };\n    /** Handles user clicks on the previous button. */\n    /**\n     * Handles user clicks on the previous button.\n     * @return {?}\n     */\n    MatCalendarHeader.prototype.previousClicked = /**\n     * Handles user clicks on the previous button.\n     * @return {?}\n     */\n    function () {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    };\n    /** Handles user clicks on the next button. */\n    /**\n     * Handles user clicks on the next button.\n     * @return {?}\n     */\n    MatCalendarHeader.prototype.nextClicked = /**\n     * Handles user clicks on the next button.\n     * @return {?}\n     */\n    function () {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    };\n    /** Whether the previous period button is enabled. */\n    /**\n     * Whether the previous period button is enabled.\n     * @return {?}\n     */\n    MatCalendarHeader.prototype.previousEnabled = /**\n     * Whether the previous period button is enabled.\n     * @return {?}\n     */\n    function () {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n        return !this.calendar.minDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n    };\n    /** Whether the next period button is enabled. */\n    /**\n     * Whether the next period button is enabled.\n     * @return {?}\n     */\n    MatCalendarHeader.prototype.nextEnabled = /**\n     * Whether the next period button is enabled.\n     * @return {?}\n     */\n    function () {\n        return !this.calendar.maxDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    };\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    /**\n     * Whether the two dates represent the same view in the current view mode (month or year).\n     * @private\n     * @param {?} date1\n     * @param {?} date2\n     * @return {?}\n     */\n    MatCalendarHeader.prototype._isSameView = /**\n     * Whether the two dates represent the same view in the current view mode (month or year).\n     * @private\n     * @param {?} date1\n     * @param {?} date2\n     * @return {?}\n     */\n    function (date1, date2) {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n        }\n        // Otherwise we are in 'multi-year' view.\n        return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n    };\n    MatCalendarHeader.decorators = [\n        { type: Component, args: [{selector: 'mat-calendar-header',\n                    template: \"<div class=\\\"mat-calendar-header\\\"><div class=\\\"mat-calendar-controls\\\"><button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\" (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\" cdkAriaLive=\\\"polite\\\">{{periodButtonText}}<div class=\\\"mat-calendar-arrow\\\" [class.mat-calendar-invert]=\\\"calendar.currentView != 'month'\\\"></div></button><div class=\\\"mat-calendar-spacer\\\"></div><ng-content></ng-content><button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\" [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\" [attr.aria-label]=\\\"prevButtonLabel\\\"></button> <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\" [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\" [attr.aria-label]=\\\"nextButtonLabel\\\"></button></div></div>\",\n                    exportAs: 'matCalendarHeader',\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                },] },\n    ];\n    /** @nocollapse */\n    MatCalendarHeader.ctorParameters = function () { return [\n        { type: MatDatepickerIntl },\n        { type: MatCalendar, decorators: [{ type: Inject, args: [forwardRef((/**\n                         * @return {?}\n                         */\n                        function () { return MatCalendar; })),] }] },\n        { type: DateAdapter, decorators: [{ type: Optional }] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n        { type: ChangeDetectorRef }\n    ]; };\n    return MatCalendarHeader;\n}());\n/**\n * A calendar that is used as part of the datepicker.\n * \\@docs-private\n * @template D\n */\nvar MatCalendar = /** @class */ (function () {\n    function MatCalendar(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n        var _this = this;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Used for scheduling that focus should be moved to the active cell on the next tick.\n         * We need to schedule it, rather than do it immediately, because we have to wait\n         * for Angular to re-evaluate the view children.\n         */\n        this._moveFocusOnNextTick = false;\n        /**\n         * Whether the calendar should be started in month or year view.\n         */\n        this.startView = 'month';\n        /**\n         * Emits when the currently selected date changes.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the year chosen in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits the month chosen in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits whenever there is a state change that the header may need to respond to.\n         */\n        this.stateChanges = new Subject();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._intlChanges = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _changeDetectorRef.markForCheck();\n            _this.stateChanges.next();\n        }));\n    }\n    Object.defineProperty(MatCalendar.prototype, \"startAt\", {\n        /** A date representing the period (month or year) to start the calendar in. */\n        get: /**\n         * A date representing the period (month or year) to start the calendar in.\n         * @return {?}\n         */\n        function () { return this._startAt; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatCalendar.prototype, \"selected\", {\n        /** The currently selected date. */\n        get: /**\n         * The currently selected date.\n         * @return {?}\n         */\n        function () { return this._selected; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatCalendar.prototype, \"minDate\", {\n        /** The minimum selectable date. */\n        get: /**\n         * The minimum selectable date.\n         * @return {?}\n         */\n        function () { return this._minDate; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatCalendar.prototype, \"maxDate\", {\n        /** The maximum selectable date. */\n        get: /**\n         * The maximum selectable date.\n         * @return {?}\n         */\n        function () { return this._maxDate; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatCalendar.prototype, \"activeDate\", {\n        /**\n         * The current active date. This determines which time period is shown and which date is\n         * highlighted when using keyboard navigation.\n         */\n        get: /**\n         * The current active date. This determines which time period is shown and which date is\n         * highlighted when using keyboard navigation.\n         * @return {?}\n         */\n        function () { return this._clampedActiveDate; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n            this.stateChanges.next();\n            this._changeDetectorRef.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatCalendar.prototype, \"currentView\", {\n        /** Whether the calendar is in month view. */\n        get: /**\n         * Whether the calendar is in month view.\n         * @return {?}\n         */\n        function () { return this._currentView; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._currentView = value;\n            this._moveFocusOnNextTick = true;\n            this._changeDetectorRef.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatCalendar.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n        this.activeDate = this.startAt || this._dateAdapter.today();\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    };\n    /**\n     * @return {?}\n     */\n    MatCalendar.prototype.ngAfterViewChecked = /**\n     * @return {?}\n     */\n    function () {\n        if (this._moveFocusOnNextTick) {\n            this._moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatCalendar.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MatCalendar.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        /** @type {?} */\n        var change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n        if (change && !change.firstChange) {\n            /** @type {?} */\n            var view = this._getCurrentViewComponent();\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n                this._changeDetectorRef.detectChanges();\n                view._init();\n            }\n        }\n        this.stateChanges.next();\n    };\n    /**\n     * @return {?}\n     */\n    MatCalendar.prototype.focusActiveCell = /**\n     * @return {?}\n     */\n    function () {\n        this._getCurrentViewComponent()._focusActiveCell();\n    };\n    /** Updates today's date after an update of the active date */\n    /**\n     * Updates today's date after an update of the active date\n     * @return {?}\n     */\n    MatCalendar.prototype.updateTodaysDate = /**\n     * Updates today's date after an update of the active date\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var view = this.currentView == 'month' ? this.monthView :\n            (this.currentView == 'year' ? this.yearView : this.multiYearView);\n        view.ngAfterContentInit();\n    };\n    /** Handles date selection in the month view. */\n    /**\n     * Handles date selection in the month view.\n     * @param {?} date\n     * @return {?}\n     */\n    MatCalendar.prototype._dateSelected = /**\n     * Handles date selection in the month view.\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        if (!this._dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    };\n    /** Handles year selection in the multiyear view. */\n    /**\n     * Handles year selection in the multiyear view.\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    MatCalendar.prototype._yearSelectedInMultiYearView = /**\n     * Handles year selection in the multiyear view.\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    function (normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    };\n    /** Handles month selection in the year view. */\n    /**\n     * Handles month selection in the year view.\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    MatCalendar.prototype._monthSelectedInYearView = /**\n     * Handles month selection in the year view.\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    function (normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    };\n    /**\n     * @return {?}\n     */\n    MatCalendar.prototype._userSelected = /**\n     * @return {?}\n     */\n    function () {\n        this._userSelection.emit();\n    };\n    /** Handles year/month selection in the multi-year/year views. */\n    /**\n     * Handles year/month selection in the multi-year/year views.\n     * @param {?} date\n     * @param {?} view\n     * @return {?}\n     */\n    MatCalendar.prototype._goToDateInView = /**\n     * Handles year/month selection in the multi-year/year views.\n     * @param {?} date\n     * @param {?} view\n     * @return {?}\n     */\n    function (date, view) {\n        this.activeDate = date;\n        this.currentView = view;\n    };\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    MatCalendar.prototype._getValidDateOrNull = /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    function (obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    };\n    /** Returns the component instance that corresponds to the current calendar view. */\n    /**\n     * Returns the component instance that corresponds to the current calendar view.\n     * @private\n     * @return {?}\n     */\n    MatCalendar.prototype._getCurrentViewComponent = /**\n     * Returns the component instance that corresponds to the current calendar view.\n     * @private\n     * @return {?}\n     */\n    function () {\n        return this.monthView || this.yearView || this.multiYearView;\n    };\n    MatCalendar.decorators = [\n        { type: Component, args: [{selector: 'mat-calendar',\n                    template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template><div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\"><mat-month-view *ngSwitchCase=\\\"'month'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" [dateClass]=\\\"dateClass\\\" (selectedChange)=\\\"_dateSelected($event)\\\" (_userSelection)=\\\"_userSelected()\\\"></mat-month-view><mat-year-view *ngSwitchCase=\\\"'year'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" (monthSelected)=\\\"_monthSelectedInYearView($event)\\\" (selectedChange)=\\\"_goToDateInView($event, 'month')\\\"></mat-year-view><mat-multi-year-view *ngSwitchCase=\\\"'multi-year'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\" (selectedChange)=\\\"_goToDateInView($event, 'year')\\\"></mat-multi-year-view></div>\",\n                    styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:0}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-next-button,.mat-calendar-previous-button{position:relative}.mat-calendar-next-button::after,.mat-calendar-previous-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:'';margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-next-button,[dir=rtl] .mat-calendar-previous-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:'';position:absolute;top:0;left:-8px;right:-8px;height:1px}\"],\n                    host: {\n                        'class': 'mat-calendar',\n                    },\n                    exportAs: 'matCalendar',\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                },] },\n    ];\n    /** @nocollapse */\n    MatCalendar.ctorParameters = function () { return [\n        { type: MatDatepickerIntl },\n        { type: DateAdapter, decorators: [{ type: Optional }] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n        { type: ChangeDetectorRef }\n    ]; };\n    MatCalendar.propDecorators = {\n        headerComponent: [{ type: Input }],\n        startAt: [{ type: Input }],\n        startView: [{ type: Input }],\n        selected: [{ type: Input }],\n        minDate: [{ type: Input }],\n        maxDate: [{ type: Input }],\n        dateFilter: [{ type: Input }],\n        dateClass: [{ type: Input }],\n        selectedChange: [{ type: Output }],\n        yearSelected: [{ type: Output }],\n        monthSelected: [{ type: Output }],\n        _userSelection: [{ type: Output }],\n        monthView: [{ type: ViewChild, args: [MatMonthView, { static: false },] }],\n        yearView: [{ type: ViewChild, args: [MatYearView, { static: false },] }],\n        multiYearView: [{ type: ViewChild, args: [MatMultiYearView, { static: false },] }]\n    };\n    return MatCalendar;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material datepicker.\n * \\@docs-private\n * @type {?}\n */\nvar matDatepickerAnimations = {\n    /**\n     * Transforms the height of the datepicker's calendar.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * Fades in the content of the calendar.\n     */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n        // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate a unique ID for each datepicker instance.\n * @type {?}\n */\nvar datepickerUid = 0;\n/**\n * Injection token that determines the scroll handling while the calendar is open.\n * @type {?}\n */\nvar MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    function () { return overlay.scrollStrategies.reposition(); });\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nvar MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n// Boilerplate for applying mixins to MatDatepickerContent.\n/**\n * \\@docs-private\n */\nvar \n// Boilerplate for applying mixins to MatDatepickerContent.\n/**\n * \\@docs-private\n */\nMatDatepickerContentBase = /** @class */ (function () {\n    function MatDatepickerContentBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatDatepickerContentBase;\n}());\n/** @type {?} */\nvar _MatDatepickerContentMixinBase = mixinColor(MatDatepickerContentBase);\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * \\@docs-private\n * @template D\n */\nvar MatDatepickerContent = /** @class */ (function (_super) {\n    __extends(MatDatepickerContent, _super);\n    function MatDatepickerContent(elementRef) {\n        return _super.call(this, elementRef) || this;\n    }\n    /**\n     * @return {?}\n     */\n    MatDatepickerContent.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        this._calendar.focusActiveCell();\n    };\n    MatDatepickerContent.decorators = [\n        { type: Component, args: [{selector: 'mat-datepicker-content',\n                    template: \"<mat-calendar cdkTrapFocus [id]=\\\"datepicker.id\\\" [ngClass]=\\\"datepicker.panelClass\\\" [startAt]=\\\"datepicker.startAt\\\" [startView]=\\\"datepicker.startView\\\" [minDate]=\\\"datepicker._minDate\\\" [maxDate]=\\\"datepicker._maxDate\\\" [dateFilter]=\\\"datepicker._dateFilter\\\" [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\" [selected]=\\\"datepicker._selected\\\" [dateClass]=\\\"datepicker.dateClass\\\" [@fadeInCalendar]=\\\"'enter'\\\" (selectedChange)=\\\"datepicker.select($event)\\\" (yearSelected)=\\\"datepicker._selectYear($event)\\\" (monthSelected)=\\\"datepicker._selectMonth($event)\\\" (_userSelection)=\\\"datepicker.close()\\\"></mat-calendar>\",\n                    styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation:landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation:portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\"],\n                    host: {\n                        'class': 'mat-datepicker-content',\n                        '[@transformPanel]': '\"enter\"',\n                        '[class.mat-datepicker-content-touch]': 'datepicker.touchUi',\n                    },\n                    animations: [\n                        matDatepickerAnimations.transformPanel,\n                        matDatepickerAnimations.fadeInCalendar,\n                    ],\n                    exportAs: 'matDatepickerContent',\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    inputs: ['color'],\n                },] },\n    ];\n    /** @nocollapse */\n    MatDatepickerContent.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\n    MatDatepickerContent.propDecorators = {\n        _calendar: [{ type: ViewChild, args: [MatCalendar, { static: false },] }]\n    };\n    return MatDatepickerContent;\n}(_MatDatepickerContentMixinBase));\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/**\n * Component responsible for managing the datepicker popup/dialog.\n * @template D\n */\nvar MatDatepicker = /** @class */ (function () {\n    function MatDatepicker(_dialog, _overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _document) {\n        this._dialog = _dialog;\n        this._overlay = _overlay;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._document = _document;\n        /**\n         * The view that the calendar should start in.\n         */\n        this.startView = 'month';\n        this._touchUi = false;\n        /**\n         * Emits selected year in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the datepicker has been opened.\n         */\n        this.openedStream = new EventEmitter();\n        /**\n         * Emits when the datepicker has been closed.\n         */\n        this.closedStream = new EventEmitter();\n        this._opened = false;\n        /**\n         * The id for the datepicker calendar.\n         */\n        this.id = \"mat-datepicker-\" + datepickerUid++;\n        this._validSelected = null;\n        /**\n         * The element that was focused before the datepicker was opened.\n         */\n        this._focusedElementBeforeOpen = null;\n        /**\n         * Subscription to value changes in the associated input element.\n         */\n        this._inputSubscription = Subscription.EMPTY;\n        /**\n         * Emits when the datepicker is disabled.\n         */\n        this._disabledChange = new Subject();\n        /**\n         * Emits new selected date when selected date changes.\n         */\n        this._selectedChanged = new Subject();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    Object.defineProperty(MatDatepicker.prototype, \"startAt\", {\n        /** The date to open the calendar to initially. */\n        get: /**\n         * The date to open the calendar to initially.\n         * @return {?}\n         */\n        function () {\n            // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n            // selected value is.\n            return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDatepicker.prototype, \"color\", {\n        /** Color palette to use on the datepicker's calendar. */\n        get: /**\n         * Color palette to use on the datepicker's calendar.\n         * @return {?}\n         */\n        function () {\n            return this._color ||\n                (this._datepickerInput ? this._datepickerInput._getThemePalette() : undefined);\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._color = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDatepicker.prototype, \"touchUi\", {\n        /**\n         * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n         * than a popup and elements have more padding to allow for bigger touch targets.\n         */\n        get: /**\n         * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n         * than a popup and elements have more padding to allow for bigger touch targets.\n         * @return {?}\n         */\n        function () { return this._touchUi; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._touchUi = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDatepicker.prototype, \"disabled\", {\n        /** Whether the datepicker pop-up should be disabled. */\n        get: /**\n         * Whether the datepicker pop-up should be disabled.\n         * @return {?}\n         */\n        function () {\n            return this._disabled === undefined && this._datepickerInput ?\n                this._datepickerInput.disabled : !!this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var newValue = coerceBooleanProperty(value);\n            if (newValue !== this._disabled) {\n                this._disabled = newValue;\n                this._disabledChange.next(newValue);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDatepicker.prototype, \"opened\", {\n        /** Whether the calendar is open. */\n        get: /**\n         * Whether the calendar is open.\n         * @return {?}\n         */\n        function () { return this._opened; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { value ? this.open() : this.close(); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDatepicker.prototype, \"_selected\", {\n        /** The currently selected date. */\n        get: /**\n         * The currently selected date.\n         * @return {?}\n         */\n        function () { return this._validSelected; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._validSelected = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDatepicker.prototype, \"_minDate\", {\n        /** The minimum selectable date. */\n        get: /**\n         * The minimum selectable date.\n         * @return {?}\n         */\n        function () {\n            return this._datepickerInput && this._datepickerInput.min;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDatepicker.prototype, \"_maxDate\", {\n        /** The maximum selectable date. */\n        get: /**\n         * The maximum selectable date.\n         * @return {?}\n         */\n        function () {\n            return this._datepickerInput && this._datepickerInput.max;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDatepicker.prototype, \"_dateFilter\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._datepickerInput && this._datepickerInput._dateFilter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatDatepicker.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.close();\n        this._inputSubscription.unsubscribe();\n        this._disabledChange.complete();\n        if (this._popupRef) {\n            this._popupRef.dispose();\n            this._popupComponentRef = null;\n        }\n    };\n    /** Selects the given date */\n    /**\n     * Selects the given date\n     * @param {?} date\n     * @return {?}\n     */\n    MatDatepicker.prototype.select = /**\n     * Selects the given date\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        /** @type {?} */\n        var oldValue = this._selected;\n        this._selected = date;\n        if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n            this._selectedChanged.next(date);\n        }\n    };\n    /** Emits the selected year in multiyear view */\n    /**\n     * Emits the selected year in multiyear view\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    MatDatepicker.prototype._selectYear = /**\n     * Emits the selected year in multiyear view\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    function (normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    };\n    /** Emits selected month in year view */\n    /**\n     * Emits selected month in year view\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    MatDatepicker.prototype._selectMonth = /**\n     * Emits selected month in year view\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    function (normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    };\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     */\n    /**\n     * Register an input with this datepicker.\n     * @param {?} input The datepicker input to register with this datepicker.\n     * @return {?}\n     */\n    MatDatepicker.prototype._registerInput = /**\n     * Register an input with this datepicker.\n     * @param {?} input The datepicker input to register with this datepicker.\n     * @return {?}\n     */\n    function (input) {\n        var _this = this;\n        if (this._datepickerInput) {\n            throw Error('A MatDatepicker can only be associated with a single input.');\n        }\n        this._datepickerInput = input;\n        this._inputSubscription =\n            this._datepickerInput._valueChange.subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            function (value) { return _this._selected = value; }));\n    };\n    /** Open the calendar. */\n    /**\n     * Open the calendar.\n     * @return {?}\n     */\n    MatDatepicker.prototype.open = /**\n     * Open the calendar.\n     * @return {?}\n     */\n    function () {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this._datepickerInput) {\n            throw Error('Attempted to open an MatDatepicker with no associated input.');\n        }\n        if (this._document) {\n            this._focusedElementBeforeOpen = this._document.activeElement;\n        }\n        this.touchUi ? this._openAsDialog() : this._openAsPopup();\n        this._opened = true;\n        this.openedStream.emit();\n    };\n    /** Close the calendar. */\n    /**\n     * Close the calendar.\n     * @return {?}\n     */\n    MatDatepicker.prototype.close = /**\n     * Close the calendar.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this._opened) {\n            return;\n        }\n        if (this._popupRef && this._popupRef.hasAttached()) {\n            this._popupRef.detach();\n        }\n        if (this._dialogRef) {\n            this._dialogRef.close();\n            this._dialogRef = null;\n        }\n        if (this._calendarPortal && this._calendarPortal.isAttached) {\n            this._calendarPortal.detach();\n        }\n        /** @type {?} */\n        var completeClose = (/**\n         * @return {?}\n         */\n        function () {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (_this._opened) {\n                _this._opened = false;\n                _this.closedStream.emit();\n                _this._focusedElementBeforeOpen = null;\n            }\n        });\n        if (this._focusedElementBeforeOpen &&\n            typeof this._focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this._focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        }\n        else {\n            completeClose();\n        }\n    };\n    /** Open the calendar as a dialog. */\n    /**\n     * Open the calendar as a dialog.\n     * @private\n     * @return {?}\n     */\n    MatDatepicker.prototype._openAsDialog = /**\n     * Open the calendar as a dialog.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Usually this would be handled by `open` which ensures that we can only have one overlay\n        // open at a time, however since we reset the variables in async handlers some overlays\n        // may slip through if the user opens and closes multiple times in quick succession (e.g.\n        // by holding down the enter key).\n        if (this._dialogRef) {\n            this._dialogRef.close();\n        }\n        this._dialogRef = this._dialog.open(MatDatepickerContent, {\n            direction: this._dir ? this._dir.value : 'ltr',\n            viewContainerRef: this._viewContainerRef,\n            panelClass: 'mat-datepicker-dialog',\n        });\n        this._dialogRef.afterClosed().subscribe((/**\n         * @return {?}\n         */\n        function () { return _this.close(); }));\n        this._dialogRef.componentInstance.datepicker = this;\n        this._setColor();\n    };\n    /** Open the calendar as a popup. */\n    /**\n     * Open the calendar as a popup.\n     * @private\n     * @return {?}\n     */\n    MatDatepicker.prototype._openAsPopup = /**\n     * Open the calendar as a popup.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this._calendarPortal) {\n            this._calendarPortal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n        }\n        if (!this._popupRef) {\n            this._createPopup();\n        }\n        if (!this._popupRef.hasAttached()) {\n            this._popupComponentRef = this._popupRef.attach(this._calendarPortal);\n            this._popupComponentRef.instance.datepicker = this;\n            this._setColor();\n            // Update the position once the calendar has rendered.\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            function () {\n                _this._popupRef.updatePosition();\n            }));\n        }\n    };\n    /** Create the popup. */\n    /**\n     * Create the popup.\n     * @private\n     * @return {?}\n     */\n    MatDatepicker.prototype._createPopup = /**\n     * Create the popup.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var overlayConfig = new OverlayConfig({\n            positionStrategy: this._createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'mat-overlay-transparent-backdrop',\n            direction: this._dir,\n            scrollStrategy: this._scrollStrategy(),\n            panelClass: 'mat-datepicker-popup',\n        });\n        this._popupRef = this._overlay.create(overlayConfig);\n        this._popupRef.overlayElement.setAttribute('role', 'dialog');\n        merge(this._popupRef.backdropClick(), this._popupRef.detachments(), this._popupRef.keydownEvents().pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            // Closing on alt + up is only valid when there's an input associated with the datepicker.\n            return event.keyCode === ESCAPE ||\n                (_this._datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n        })))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            if (event) {\n                event.preventDefault();\n            }\n            _this.close();\n        }));\n    };\n    /** Create the popup PositionStrategy. */\n    /**\n     * Create the popup PositionStrategy.\n     * @private\n     * @return {?}\n     */\n    MatDatepicker.prototype._createPopupPositionStrategy = /**\n     * Create the popup PositionStrategy.\n     * @private\n     * @return {?}\n     */\n    function () {\n        return this._overlay.position()\n            .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())\n            .withTransformOriginOn('.mat-datepicker-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition()\n            .withPositions([\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'top'\n            },\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'bottom'\n            },\n            {\n                originX: 'end',\n                originY: 'bottom',\n                overlayX: 'end',\n                overlayY: 'top'\n            },\n            {\n                originX: 'end',\n                originY: 'top',\n                overlayX: 'end',\n                overlayY: 'bottom'\n            }\n        ]);\n    };\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    MatDatepicker.prototype._getValidDateOrNull = /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    function (obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    };\n    /** Passes the current theme color along to the calendar overlay. */\n    /**\n     * Passes the current theme color along to the calendar overlay.\n     * @private\n     * @return {?}\n     */\n    MatDatepicker.prototype._setColor = /**\n     * Passes the current theme color along to the calendar overlay.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var color = this.color;\n        if (this._popupComponentRef) {\n            this._popupComponentRef.instance.color = color;\n        }\n        if (this._dialogRef) {\n            this._dialogRef.componentInstance.color = color;\n        }\n    };\n    MatDatepicker.decorators = [\n        { type: Component, args: [{selector: 'mat-datepicker',\n                    template: '',\n                    exportAs: 'matDatepicker',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                },] },\n    ];\n    /** @nocollapse */\n    MatDatepicker.ctorParameters = function () { return [\n        { type: MatDialog },\n        { type: Overlay },\n        { type: NgZone },\n        { type: ViewContainerRef },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_DATEPICKER_SCROLL_STRATEGY,] }] },\n        { type: DateAdapter, decorators: [{ type: Optional }] },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    MatDatepicker.propDecorators = {\n        calendarHeaderComponent: [{ type: Input }],\n        startAt: [{ type: Input }],\n        startView: [{ type: Input }],\n        color: [{ type: Input }],\n        touchUi: [{ type: Input }],\n        disabled: [{ type: Input }],\n        yearSelected: [{ type: Output }],\n        monthSelected: [{ type: Output }],\n        panelClass: [{ type: Input }],\n        dateClass: [{ type: Input }],\n        openedStream: [{ type: Output, args: ['opened',] }],\n        closedStream: [{ type: Output, args: ['closed',] }],\n        opened: [{ type: Input }]\n    };\n    return MatDatepicker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @type {?}\n */\nvar MAT_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    function () { return MatDatepickerInput; })),\n    multi: true\n};\n/**\n * \\@docs-private\n * @type {?}\n */\nvar MAT_DATEPICKER_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    function () { return MatDatepickerInput; })),\n    multi: true\n};\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n * @template D\n */\nvar  /**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n * @template D\n */\nMatDatepickerInputEvent = /** @class */ (function () {\n    function MatDatepickerInputEvent(target, targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n    return MatDatepickerInputEvent;\n}());\n/**\n * Directive used to connect an input to a MatDatepicker.\n * @template D\n */\nvar MatDatepickerInput = /** @class */ (function () {\n    function MatDatepickerInput(_elementRef, _dateAdapter, _dateFormats, _formField) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._formField = _formField;\n        /**\n         * Emits when a `change` event is fired on this `<input>`.\n         */\n        this.dateChange = new EventEmitter();\n        /**\n         * Emits when an `input` event is fired on this `<input>`.\n         */\n        this.dateInput = new EventEmitter();\n        /**\n         * Emits when the value changes (either due to user input or programmatic change).\n         */\n        this._valueChange = new EventEmitter();\n        /**\n         * Emits when the disabled state has changed\n         */\n        this._disabledChange = new EventEmitter();\n        this._onTouched = (/**\n         * @return {?}\n         */\n        function () { });\n        this._cvaOnChange = (/**\n         * @return {?}\n         */\n        function () { });\n        this._validatorOnChange = (/**\n         * @return {?}\n         */\n        function () { });\n        this._datepickerSubscription = Subscription.EMPTY;\n        this._localeSubscription = Subscription.EMPTY;\n        /**\n         * The form control validator for whether the input parses.\n         */\n        this._parseValidator = (/**\n         * @return {?}\n         */\n        function () {\n            return _this._lastValueValid ?\n                null : { 'matDatepickerParse': { 'text': _this._elementRef.nativeElement.value } };\n        });\n        /**\n         * The form control validator for the min date.\n         */\n        this._minValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        function (control) {\n            /** @type {?} */\n            var controlValue = _this._getValidDateOrNull(_this._dateAdapter.deserialize(control.value));\n            return (!_this.min || !controlValue ||\n                _this._dateAdapter.compareDate(_this.min, controlValue) <= 0) ?\n                null : { 'matDatepickerMin': { 'min': _this.min, 'actual': controlValue } };\n        });\n        /**\n         * The form control validator for the max date.\n         */\n        this._maxValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        function (control) {\n            /** @type {?} */\n            var controlValue = _this._getValidDateOrNull(_this._dateAdapter.deserialize(control.value));\n            return (!_this.max || !controlValue ||\n                _this._dateAdapter.compareDate(_this.max, controlValue) >= 0) ?\n                null : { 'matDatepickerMax': { 'max': _this.max, 'actual': controlValue } };\n        });\n        /**\n         * The form control validator for the date filter.\n         */\n        this._filterValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        function (control) {\n            /** @type {?} */\n            var controlValue = _this._getValidDateOrNull(_this._dateAdapter.deserialize(control.value));\n            return !_this._dateFilter || !controlValue || _this._dateFilter(controlValue) ?\n                null : { 'matDatepickerFilter': true };\n        });\n        /**\n         * The combined form control validator for this input.\n         */\n        this._validator = Validators.compose([this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\n        /**\n         * Whether the last value set on the input was valid.\n         */\n        this._lastValueValid = false;\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this.value = _this.value;\n        }));\n    }\n    Object.defineProperty(MatDatepickerInput.prototype, \"matDatepicker\", {\n        /** The datepicker that this input is associated with. */\n        set: /**\n         * The datepicker that this input is associated with.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            var _this = this;\n            if (!value) {\n                return;\n            }\n            this._datepicker = value;\n            this._datepicker._registerInput(this);\n            this._datepickerSubscription.unsubscribe();\n            this._datepickerSubscription = this._datepicker._selectedChanged.subscribe((/**\n             * @param {?} selected\n             * @return {?}\n             */\n            function (selected) {\n                _this.value = selected;\n                _this._cvaOnChange(selected);\n                _this._onTouched();\n                _this.dateInput.emit(new MatDatepickerInputEvent(_this, _this._elementRef.nativeElement));\n                _this.dateChange.emit(new MatDatepickerInputEvent(_this, _this._elementRef.nativeElement));\n            }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDatepickerInput.prototype, \"matDatepickerFilter\", {\n        /** Function that can be used to filter out dates within the datepicker. */\n        set: /**\n         * Function that can be used to filter out dates within the datepicker.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._dateFilter = value;\n            this._validatorOnChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDatepickerInput.prototype, \"value\", {\n        /** The value of the input. */\n        get: /**\n         * The value of the input.\n         * @return {?}\n         */\n        function () { return this._value; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            value = this._dateAdapter.deserialize(value);\n            this._lastValueValid = !value || this._dateAdapter.isValid(value);\n            value = this._getValidDateOrNull(value);\n            /** @type {?} */\n            var oldDate = this.value;\n            this._value = value;\n            this._formatValue(value);\n            if (!this._dateAdapter.sameDate(oldDate, value)) {\n                this._valueChange.emit(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDatepickerInput.prototype, \"min\", {\n        /** The minimum valid date. */\n        get: /**\n         * The minimum valid date.\n         * @return {?}\n         */\n        function () { return this._min; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n            this._validatorOnChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDatepickerInput.prototype, \"max\", {\n        /** The maximum valid date. */\n        get: /**\n         * The maximum valid date.\n         * @return {?}\n         */\n        function () { return this._max; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n            this._validatorOnChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDatepickerInput.prototype, \"disabled\", {\n        /** Whether the datepicker-input is disabled. */\n        get: /**\n         * Whether the datepicker-input is disabled.\n         * @return {?}\n         */\n        function () { return !!this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var newValue = coerceBooleanProperty(value);\n            /** @type {?} */\n            var element = this._elementRef.nativeElement;\n            if (this._disabled !== newValue) {\n                this._disabled = newValue;\n                this._disabledChange.emit(newValue);\n            }\n            // We need to null check the `blur` method, because it's undefined during SSR.\n            if (newValue && element.blur) {\n                // Normally, native input elements automatically blur if they turn disabled. This behavior\n                // is problematic, because it would mean that it triggers another change detection cycle,\n                // which then causes a changed after checked error if the input element was focused before.\n                element.blur();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatDatepickerInput.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._datepickerSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this._valueChange.complete();\n        this._disabledChange.complete();\n    };\n    /** @docs-private */\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    MatDatepickerInput.prototype.registerOnValidatorChange = /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this._validatorOnChange = fn;\n    };\n    /** @docs-private */\n    /**\n     * \\@docs-private\n     * @param {?} c\n     * @return {?}\n     */\n    MatDatepickerInput.prototype.validate = /**\n     * \\@docs-private\n     * @param {?} c\n     * @return {?}\n     */\n    function (c) {\n        return this._validator ? this._validator(c) : null;\n    };\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\n     */\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\n     * @return {?}\n     */\n    MatDatepickerInput.prototype.getPopupConnectionElementRef = /**\n     * @deprecated\n     * \\@breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\n     * @return {?}\n     */\n    function () {\n        return this.getConnectedOverlayOrigin();\n    };\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return The element to connect the popup to.\n     */\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return {?} The element to connect the popup to.\n     */\n    MatDatepickerInput.prototype.getConnectedOverlayOrigin = /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return {?} The element to connect the popup to.\n     */\n    function () {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    };\n    // Implemented as part of ControlValueAccessor.\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    MatDatepickerInput.prototype.writeValue = \n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this.value = value;\n    };\n    // Implemented as part of ControlValueAccessor.\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MatDatepickerInput.prototype.registerOnChange = \n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this._cvaOnChange = fn;\n    };\n    // Implemented as part of ControlValueAccessor.\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MatDatepickerInput.prototype.registerOnTouched = \n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this._onTouched = fn;\n    };\n    // Implemented as part of ControlValueAccessor.\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    MatDatepickerInput.prototype.setDisabledState = \n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatDatepickerInput.prototype._onKeydown = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        /** @type {?} */\n        var isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n        if (this._datepicker && isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n            this._datepicker.open();\n            event.preventDefault();\n        }\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    MatDatepickerInput.prototype._onInput = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        /** @type {?} */\n        var date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n        this._lastValueValid = !date || this._dateAdapter.isValid(date);\n        date = this._getValidDateOrNull(date);\n        if (!this._dateAdapter.sameDate(date, this._value)) {\n            this._value = date;\n            this._cvaOnChange(date);\n            this._valueChange.emit(date);\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n        else {\n            this._validatorOnChange();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatDatepickerInput.prototype._onChange = /**\n     * @return {?}\n     */\n    function () {\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    };\n    /** Returns the palette used by the input's form field, if any. */\n    /**\n     * Returns the palette used by the input's form field, if any.\n     * @return {?}\n     */\n    MatDatepickerInput.prototype._getThemePalette = /**\n     * Returns the palette used by the input's form field, if any.\n     * @return {?}\n     */\n    function () {\n        return this._formField ? this._formField.color : undefined;\n    };\n    /** Handles blur events on the input. */\n    /**\n     * Handles blur events on the input.\n     * @return {?}\n     */\n    MatDatepickerInput.prototype._onBlur = /**\n     * Handles blur events on the input.\n     * @return {?}\n     */\n    function () {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this._formatValue(this.value);\n        }\n        this._onTouched();\n    };\n    /** Formats a value and sets it on the input element. */\n    /**\n     * Formats a value and sets it on the input element.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    MatDatepickerInput.prototype._formatValue = /**\n     * Formats a value and sets it on the input element.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this._elementRef.nativeElement.value =\n            value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n    };\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    MatDatepickerInput.prototype._getValidDateOrNull = /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    function (obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    };\n    MatDatepickerInput.decorators = [\n        { type: Directive, args: [{\n                    selector: 'input[matDatepicker]',\n                    providers: [\n                        MAT_DATEPICKER_VALUE_ACCESSOR,\n                        MAT_DATEPICKER_VALIDATORS,\n                        { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n                    ],\n                    host: {\n                        'aria-haspopup': 'dialog',\n                        '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n                        '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n                        '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n                        '[disabled]': 'disabled',\n                        '(input)': '_onInput($event.target.value)',\n                        '(change)': '_onChange()',\n                        '(blur)': '_onBlur()',\n                        '(keydown)': '_onKeydown($event)',\n                    },\n                    exportAs: 'matDatepickerInput',\n                },] },\n    ];\n    /** @nocollapse */\n    MatDatepickerInput.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: DateAdapter, decorators: [{ type: Optional }] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n        { type: MatFormField, decorators: [{ type: Optional }] }\n    ]; };\n    MatDatepickerInput.propDecorators = {\n        matDatepicker: [{ type: Input }],\n        matDatepickerFilter: [{ type: Input }],\n        value: [{ type: Input }],\n        min: [{ type: Input }],\n        max: [{ type: Input }],\n        disabled: [{ type: Input }],\n        dateChange: [{ type: Output }],\n        dateInput: [{ type: Output }]\n    };\n    return MatDatepickerInput;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Can be used to override the icon of a `matDatepickerToggle`.\n */\nvar MatDatepickerToggleIcon = /** @class */ (function () {\n    function MatDatepickerToggleIcon() {\n    }\n    MatDatepickerToggleIcon.decorators = [\n        { type: Directive, args: [{\n                    selector: '[matDatepickerToggleIcon]'\n                },] },\n    ];\n    return MatDatepickerToggleIcon;\n}());\n/**\n * @template D\n */\nvar MatDatepickerToggle = /** @class */ (function () {\n    function MatDatepickerToggle(_intl, _changeDetectorRef, defaultTabIndex) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._stateChanges = Subscription.EMPTY;\n        /** @type {?} */\n        var parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n    Object.defineProperty(MatDatepickerToggle.prototype, \"disabled\", {\n        /** Whether the toggle button is disabled. */\n        get: /**\n         * Whether the toggle button is disabled.\n         * @return {?}\n         */\n        function () {\n            if (this._disabled === undefined && this.datepicker) {\n                return this.datepicker.disabled;\n            }\n            return !!this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MatDatepickerToggle.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes['datepicker']) {\n            this._watchStateChanges();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatDatepickerToggle.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._stateChanges.unsubscribe();\n    };\n    /**\n     * @return {?}\n     */\n    MatDatepickerToggle.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        this._watchStateChanges();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatDatepickerToggle.prototype._open = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    MatDatepickerToggle.prototype._watchStateChanges = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : of();\n        /** @type {?} */\n        var inputDisabled = this.datepicker && this.datepicker._datepickerInput ?\n            this.datepicker._datepickerInput._disabledChange : of();\n        /** @type {?} */\n        var datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            of();\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerDisabled, inputDisabled, datepickerToggled).subscribe((/**\n         * @return {?}\n         */\n        function () { return _this._changeDetectorRef.markForCheck(); }));\n    };\n    MatDatepickerToggle.decorators = [\n        { type: Component, args: [{selector: 'mat-datepicker-toggle',\n                    template: \"<button #button mat-icon-button type=\\\"button\\\" aria-haspopup=\\\"dialog\\\" [attr.aria-label]=\\\"_intl.openCalendarLabel\\\" [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\" [disabled]=\\\"disabled\\\" [disableRipple]=\\\"disableRipple\\\" (click)=\\\"_open($event)\\\"><svg *ngIf=\\\"!_customIcon\\\" class=\\\"mat-datepicker-toggle-default-icon\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" fill=\\\"currentColor\\\" focusable=\\\"false\\\"><path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/></svg><ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content></button>\",\n                    styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\"],\n                    host: {\n                        'class': 'mat-datepicker-toggle',\n                        // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n                        // consumer may have provided, while still being able to receive focus.\n                        '[attr.tabindex]': '-1',\n                        '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n                        '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n                        '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n                        '(focus)': '_button.focus()',\n                    },\n                    exportAs: 'matDatepickerToggle',\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                },] },\n    ];\n    /** @nocollapse */\n    MatDatepickerToggle.ctorParameters = function () { return [\n        { type: MatDatepickerIntl },\n        { type: ChangeDetectorRef },\n        { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n    ]; };\n    MatDatepickerToggle.propDecorators = {\n        datepicker: [{ type: Input, args: ['for',] }],\n        tabIndex: [{ type: Input }],\n        disabled: [{ type: Input }],\n        disableRipple: [{ type: Input }],\n        _customIcon: [{ type: ContentChild, args: [MatDatepickerToggleIcon, { static: false },] }],\n        _button: [{ type: ViewChild, args: ['button', { static: false },] }]\n    };\n    return MatDatepickerToggle;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatDatepickerModule = /** @class */ (function () {\n    function MatDatepickerModule() {\n    }\n    MatDatepickerModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        CommonModule,\n                        MatButtonModule,\n                        MatDialogModule,\n                        OverlayModule,\n                        A11yModule,\n                        PortalModule,\n                    ],\n                    exports: [\n                        MatCalendar,\n                        MatCalendarBody,\n                        MatDatepicker,\n                        MatDatepickerContent,\n                        MatDatepickerInput,\n                        MatDatepickerToggle,\n                        MatDatepickerToggleIcon,\n                        MatMonthView,\n                        MatYearView,\n                        MatMultiYearView,\n                        MatCalendarHeader,\n                    ],\n                    declarations: [\n                        MatCalendar,\n                        MatCalendarBody,\n                        MatDatepicker,\n                        MatDatepickerContent,\n                        MatDatepickerInput,\n                        MatDatepickerToggle,\n                        MatDatepickerToggleIcon,\n                        MatMonthView,\n                        MatYearView,\n                        MatMultiYearView,\n                        MatCalendarHeader,\n                    ],\n                    providers: [\n                        MatDatepickerIntl,\n                        MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n                    ],\n                    entryComponents: [\n                        MatDatepickerContent,\n                        MatCalendarHeader,\n                    ]\n                },] },\n    ];\n    return MatDatepickerModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatMultiYearView, yearsPerPage, yearsPerRow, MatDatepickerModule, MatCalendarHeader, MatCalendar, MatCalendarCell, MatCalendarBody, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MatDatepickerContent, MatDatepicker, matDatepickerAnimations, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, MatDatepickerInputEvent, MatDatepickerInput, MatDatepickerIntl, MatDatepickerToggleIcon, MatDatepickerToggle, MatMonthView, MatYearView };\n//# sourceMappingURL=datepicker.es5.js.map\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@env/environment';\nimport { AppNotification } from './app-notification.model';\nimport { EntityService, IPagination } from '@ngx-starter-kit/shared';\nimport { Observable } from 'rxjs';\nimport { catchError, finalize, map, retry } from 'rxjs/operators';\nimport { BrowserFeatureKey, FeatureService } from '@ngx-starter-kit/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotificationsService extends EntityService<AppNotification> {\n  public apiBaseUrl = environment.API_BASE_URL;\n  readonly entityPath = 'notifications';\n\n  constructor(httpClient: HttpClient, private readonly featureService: FeatureService) {\n    super(httpClient);\n  }\n\n  getAll(): Observable<AppNotification[]> {\n    this.loadingSubject.next(true);\n    return this.httpClient.get<IPagination<AppNotification>>(`${this.baseUrl}/${this.entityPath}/own`).pipe(\n      retry(3), // retry a failed request up to 3 times\n      catchError(this.handleError),\n      finalize(() => this.loadingSubject.next(false)),\n      // return without count\n      map(data => data.items),\n    );\n  }\n\n  /**\n   * Util for showing native Notifications\n   * @param noti:  {\n   *    title: 'NGX WebApp Notification',\n   *   options: {\n   *     body: payload.message,\n   *     icon: 'assets/icons/icon-72x72.png',\n   *     data: {\n   *       click_url: '/index.html',\n   *     },\n   *   },\n   * }\n   */\n  async showNativeNotification(noti: { title: string; options?: Partial<NotificationOptions> }) {\n    if (\n      this.featureService.detectFeature(BrowserFeatureKey.NotificationsAPI).supported &&\n      !this.featureService.isMobileAndroid()\n    ) {\n      const permission = await Notification.requestPermission();\n      if (permission === 'granted') {\n        const notification = new Notification(noti.title, noti.options);\n        notification.onclick = () => {\n          console.log('clicked todo: mark as read');\n        };\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { __extends } from 'tslib';\nimport { FocusMonitor, FocusTrapFactory } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef, EventEmitter, forwardRef, Inject, InjectionToken, Input, NgZone, Optional, Output, ViewChild, ViewEncapsulation, HostListener, HostBinding, NgModule } from '@angular/core';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { debounceTime, filter, map, startWith, take, takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material drawers.\n * \\@docs-private\n * @type {?}\n */\nvar matDrawerAnimations = {\n    /**\n     * Animation that slides a drawer in and out.\n     */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(\"A drawer was already declared for 'position=\\\"\" + position + \"\\\"'\");\n}\n/**\n * Configures whether drawers should use auto sizing by default.\n * @type {?}\n */\nvar MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nvar MatDrawerContent = /** @class */ (function (_super) {\n    __extends(MatDrawerContent, _super);\n    function MatDrawerContent(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        var _this = _super.call(this, elementRef, scrollDispatcher, ngZone) || this;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._container = _container;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    MatDrawerContent.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._container._contentMarginChanges.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this._changeDetectorRef.markForCheck();\n        }));\n    };\n    MatDrawerContent.decorators = [\n        { type: Component, args: [{selector: 'mat-drawer-content',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        'class': 'mat-drawer-content',\n                        '[style.margin-left.px]': '_container._contentMargins.left',\n                        '[style.margin-right.px]': '_container._contentMargins.right',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                },] },\n    ];\n    /** @nocollapse */\n    MatDrawerContent.ctorParameters = function () { return [\n        { type: ChangeDetectorRef },\n        { type: MatDrawerContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                         * @return {?}\n                         */\n                        function () { return MatDrawerContainer; })),] }] },\n        { type: ElementRef },\n        { type: ScrollDispatcher },\n        { type: NgZone }\n    ]; };\n    return MatDrawerContent;\n}(CdkScrollable));\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nvar MatDrawer = /** @class */ (function () {\n    function MatDrawer(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._doc = _doc;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /**\n         * Whether the drawer is initialized. Used for disabling the initial animation.\n         */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._autoFocus = true;\n        /**\n         * Emits whenever the drawer has started animating.\n         */\n        this._animationStarted = new Subject();\n        /**\n         * Emits whenever the drawer is done animating.\n         */\n        this._animationEnd = new Subject();\n        /**\n         * Current state of the sidenav animation.\n         */\n        // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n        // metadata is not inherited by child classes, instead the host binding data is defined in a way\n        // that can be inherited.\n        // tslint:disable:no-host-decorator-in-concrete\n        this._animationState = 'void';\n        /**\n         * Event emitted when the drawer open state is changed.\n         */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Event emitted when the drawer's position changes.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this._opened = false;\n        this.openedChange.subscribe((/**\n         * @param {?} opened\n         * @return {?}\n         */\n        function (opened) {\n            if (opened) {\n                if (_this._doc) {\n                    _this._elementFocusedBeforeDrawerWasOpened = (/** @type {?} */ (_this._doc.activeElement));\n                }\n                if (_this._isFocusTrapEnabled && _this._focusTrap) {\n                    _this._trapFocus();\n                }\n            }\n            else {\n                _this._restoreFocus();\n            }\n        }));\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        function () {\n            ((/** @type {?} */ (fromEvent(_this._elementRef.nativeElement, 'keydown')))).pipe(filter((/**\n             * @param {?} event\n             * @return {?}\n             */\n            function (event) {\n                return event.keyCode === ESCAPE && !_this.disableClose && !hasModifierKey(event);\n            })), takeUntil(_this._destroyed)).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            function (event) { return _this._ngZone.run((/**\n             * @return {?}\n             */\n            function () {\n                _this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            })); }));\n        }));\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        function (x, y) {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            var fromState = event.fromState, toState = event.toState;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                _this.openedChange.emit(_this._opened);\n            }\n        }));\n    }\n    Object.defineProperty(MatDrawer.prototype, \"position\", {\n        /** The side that the drawer is attached to. */\n        get: /**\n         * The side that the drawer is attached to.\n         * @return {?}\n         */\n        function () { return this._position; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            // Make sure we have a valid value.\n            value = value === 'end' ? 'end' : 'start';\n            if (value != this._position) {\n                this._position = value;\n                this.onPositionChanged.emit();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDrawer.prototype, \"mode\", {\n        /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n        get: /**\n         * Mode of the drawer; one of 'over', 'push' or 'side'.\n         * @return {?}\n         */\n        function () { return this._mode; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._mode = value;\n            this._modeChanged.next();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDrawer.prototype, \"disableClose\", {\n        /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n        get: /**\n         * Whether the drawer can be closed with the escape key or by clicking on the backdrop.\n         * @return {?}\n         */\n        function () { return this._disableClose; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._disableClose = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDrawer.prototype, \"autoFocus\", {\n        /** Whether the drawer should focus the first focusable element automatically when opened. */\n        get: /**\n         * Whether the drawer should focus the first focusable element automatically when opened.\n         * @return {?}\n         */\n        function () { return this._autoFocus; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._autoFocus = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDrawer.prototype, \"_openedStream\", {\n        /** Event emitted when the drawer has been opened. */\n        get: /**\n         * Event emitted when the drawer has been opened.\n         * @return {?}\n         */\n        function () {\n            return this.openedChange.pipe(filter((/**\n             * @param {?} o\n             * @return {?}\n             */\n            function (o) { return o; })), map((/**\n             * @return {?}\n             */\n            function () { })));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDrawer.prototype, \"openedStart\", {\n        /** Event emitted when the drawer has started opening. */\n        get: /**\n         * Event emitted when the drawer has started opening.\n         * @return {?}\n         */\n        function () {\n            return this._animationStarted.pipe(filter((/**\n             * @param {?} e\n             * @return {?}\n             */\n            function (e) { return e.fromState !== e.toState && e.toState.indexOf('open') === 0; })), map((/**\n             * @return {?}\n             */\n            function () { })));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDrawer.prototype, \"_closedStream\", {\n        /** Event emitted when the drawer has been closed. */\n        get: /**\n         * Event emitted when the drawer has been closed.\n         * @return {?}\n         */\n        function () {\n            return this.openedChange.pipe(filter((/**\n             * @param {?} o\n             * @return {?}\n             */\n            function (o) { return !o; })), map((/**\n             * @return {?}\n             */\n            function () { })));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDrawer.prototype, \"closedStart\", {\n        /** Event emitted when the drawer has started closing. */\n        get: /**\n         * Event emitted when the drawer has started closing.\n         * @return {?}\n         */\n        function () {\n            return this._animationStarted.pipe(filter((/**\n             * @param {?} e\n             * @return {?}\n             */\n            function (e) { return e.fromState !== e.toState && e.toState === 'void'; })), map((/**\n             * @return {?}\n             */\n            function () { })));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDrawer.prototype, \"_isFocusTrapEnabled\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            return this.opened && this.mode !== 'side';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Traps focus inside the drawer. */\n    /**\n     * Traps focus inside the drawer.\n     * @private\n     * @return {?}\n     */\n    MatDrawer.prototype._trapFocus = /**\n     * Traps focus inside the drawer.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.autoFocus) {\n            return;\n        }\n        this._focusTrap.focusInitialElementWhenReady().then((/**\n         * @param {?} hasMovedFocus\n         * @return {?}\n         */\n        function (hasMovedFocus) {\n            // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n            // still works. We need to check that `focus` is a function due to Universal.\n            if (!hasMovedFocus && typeof _this._elementRef.nativeElement.focus === 'function') {\n                _this._elementRef.nativeElement.focus();\n            }\n        }));\n    };\n    /**\n     * If focus is currently inside the drawer, restores it to where it was before the drawer\n     * opened.\n     */\n    /**\n     * If focus is currently inside the drawer, restores it to where it was before the drawer\n     * opened.\n     * @private\n     * @return {?}\n     */\n    MatDrawer.prototype._restoreFocus = /**\n     * If focus is currently inside the drawer, restores it to where it was before the drawer\n     * opened.\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (!this.autoFocus) {\n            return;\n        }\n        /** @type {?} */\n        var activeEl = this._doc && this._doc.activeElement;\n        if (activeEl && this._elementRef.nativeElement.contains(activeEl)) {\n            if (this._elementFocusedBeforeDrawerWasOpened instanceof HTMLElement) {\n                this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n            }\n            else {\n                this._elementRef.nativeElement.blur();\n            }\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    };\n    /**\n     * @return {?}\n     */\n    MatDrawer.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._focusTrap.enabled = this._isFocusTrapEnabled;\n    };\n    /**\n     * @return {?}\n     */\n    MatDrawer.prototype.ngAfterContentChecked = /**\n     * @return {?}\n     */\n    function () {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatDrawer.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    };\n    Object.defineProperty(MatDrawer.prototype, \"opened\", {\n        /**\n         * Whether the drawer is opened. We overload this because we trigger an event when it\n         * starts or end.\n         */\n        get: /**\n         * Whether the drawer is opened. We overload this because we trigger an event when it\n         * starts or end.\n         * @return {?}\n         */\n        function () { return this._opened; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this.toggle(coerceBooleanProperty(value)); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Open the drawer.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    /**\n     * Open the drawer.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    MatDrawer.prototype.open = /**\n     * Open the drawer.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    function (openedVia) {\n        return this.toggle(true, openedVia);\n    };\n    /** Close the drawer. */\n    /**\n     * Close the drawer.\n     * @return {?}\n     */\n    MatDrawer.prototype.close = /**\n     * Close the drawer.\n     * @return {?}\n     */\n    function () {\n        return this.toggle(false);\n    };\n    /**\n     * Toggle this drawer.\n     * @param isOpen Whether the drawer should be open.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    /**\n     * Toggle this drawer.\n     * @param {?=} isOpen Whether the drawer should be open.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    MatDrawer.prototype.toggle = /**\n     * Toggle this drawer.\n     * @param {?=} isOpen Whether the drawer should be open.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    function (isOpen, openedVia) {\n        var _this = this;\n        if (isOpen === void 0) { isOpen = !this.opened; }\n        if (openedVia === void 0) { openedVia = 'program'; }\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            this._restoreFocus();\n        }\n        if (this._focusTrap) {\n            this._focusTrap.enabled = this._isFocusTrapEnabled;\n        }\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        function (resolve) {\n            _this.openedChange.pipe(take(1)).subscribe((/**\n             * @param {?} open\n             * @return {?}\n             */\n            function (open) { return resolve(open ? 'open' : 'close'); }));\n        }));\n    };\n    Object.defineProperty(MatDrawer.prototype, \"_width\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritte.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritte.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatDrawer.prototype._animationStartListener = \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritte.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        this._animationStarted.next(event);\n    };\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritte.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritte.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatDrawer.prototype._animationDoneListener = \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritte.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        this._animationEnd.next(event);\n    };\n    MatDrawer.decorators = [\n        { type: Component, args: [{selector: 'mat-drawer',\n                    exportAs: 'matDrawer',\n                    template: \"<div class=\\\"mat-drawer-inner-container\\\"><ng-content></ng-content></div>\",\n                    animations: [matDrawerAnimations.transformDrawer],\n                    host: {\n                        'class': 'mat-drawer',\n                        // must prevent the browser from aligning text based on value\n                        '[attr.align]': 'null',\n                        '[class.mat-drawer-end]': 'position === \"end\"',\n                        '[class.mat-drawer-over]': 'mode === \"over\"',\n                        '[class.mat-drawer-push]': 'mode === \"push\"',\n                        '[class.mat-drawer-side]': 'mode === \"side\"',\n                        'tabIndex': '-1',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                },] },\n    ];\n    /** @nocollapse */\n    MatDrawer.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: FocusTrapFactory },\n        { type: FocusMonitor },\n        { type: Platform },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    MatDrawer.propDecorators = {\n        position: [{ type: Input }],\n        mode: [{ type: Input }],\n        disableClose: [{ type: Input }],\n        autoFocus: [{ type: Input }],\n        _animationState: [{ type: HostBinding, args: ['@transform',] }],\n        openedChange: [{ type: Output }],\n        _openedStream: [{ type: Output, args: ['opened',] }],\n        openedStart: [{ type: Output }],\n        _closedStream: [{ type: Output, args: ['closed',] }],\n        closedStart: [{ type: Output }],\n        onPositionChanged: [{ type: Output, args: ['positionChanged',] }],\n        opened: [{ type: Input }],\n        _animationStartListener: [{ type: HostListener, args: ['@transform.start', ['$event'],] }],\n        _animationDoneListener: [{ type: HostListener, args: ['@transform.done', ['$event'],] }]\n    };\n    return MatDrawer;\n}());\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nvar MatDrawerContainer = /** @class */ (function () {\n    function MatDrawerContainer(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize, _animationMode) {\n        var _this = this;\n        if (defaultAutosize === void 0) { defaultAutosize = false; }\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * Event emitted when the drawer backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Emits on every ngDoCheck. Used for debouncing reflows.\n         */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            function () {\n                _this._validateDrawers();\n                _this.updateContentMargins();\n            }));\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler.change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        function () { return _this.updateContentMargins(); }));\n        this._autosize = defaultAutosize;\n    }\n    Object.defineProperty(MatDrawerContainer.prototype, \"start\", {\n        /** The drawer child with the `start` position. */\n        get: /**\n         * The drawer child with the `start` position.\n         * @return {?}\n         */\n        function () { return this._start; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDrawerContainer.prototype, \"end\", {\n        /** The drawer child with the `end` position. */\n        get: /**\n         * The drawer child with the `end` position.\n         * @return {?}\n         */\n        function () { return this._end; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDrawerContainer.prototype, \"autosize\", {\n        /**\n         * Whether to automatically resize the container whenever\n         * the size of any of its drawers changes.\n         *\n         * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n         * the drawers on every change detection cycle. Can be configured globally via the\n         * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n         */\n        get: /**\n         * Whether to automatically resize the container whenever\n         * the size of any of its drawers changes.\n         *\n         * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n         * the drawers on every change detection cycle. Can be configured globally via the\n         * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n         * @return {?}\n         */\n        function () { return this._autosize; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._autosize = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDrawerContainer.prototype, \"hasBackdrop\", {\n        /**\n         * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n         * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n         * mode as well.\n         */\n        get: /**\n         * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n         * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n         * mode as well.\n         * @return {?}\n         */\n        function () {\n            if (this._backdropOverride == null) {\n                return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n            }\n            return this._backdropOverride;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDrawerContainer.prototype, \"scrollable\", {\n        /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n        get: /**\n         * Reference to the CdkScrollable instance that wraps the scrollable content.\n         * @return {?}\n         */\n        function () {\n            return this._userContent || this._content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatDrawerContainer.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._drawers.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this._validateDrawers();\n            _this._drawers.forEach((/**\n             * @param {?} drawer\n             * @return {?}\n             */\n            function (drawer) {\n                _this._watchDrawerToggle(drawer);\n                _this._watchDrawerPosition(drawer);\n                _this._watchDrawerMode(drawer);\n            }));\n            if (!_this._drawers.length ||\n                _this._isDrawerOpen(_this._start) ||\n                _this._isDrawerOpen(_this._end)) {\n                _this.updateContentMargins();\n            }\n            _this._changeDetectorRef.markForCheck();\n        }));\n        this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n        takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        function () { return _this.updateContentMargins(); }));\n    };\n    /**\n     * @return {?}\n     */\n    MatDrawerContainer.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    };\n    /** Calls `open` of both start and end drawers */\n    /**\n     * Calls `open` of both start and end drawers\n     * @return {?}\n     */\n    MatDrawerContainer.prototype.open = /**\n     * Calls `open` of both start and end drawers\n     * @return {?}\n     */\n    function () {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        function (drawer) { return drawer.open(); }));\n    };\n    /** Calls `close` of both start and end drawers */\n    /**\n     * Calls `close` of both start and end drawers\n     * @return {?}\n     */\n    MatDrawerContainer.prototype.close = /**\n     * Calls `close` of both start and end drawers\n     * @return {?}\n     */\n    function () {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        function (drawer) { return drawer.close(); }));\n    };\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     */\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     * @return {?}\n     */\n    MatDrawerContainer.prototype.updateContentMargins = /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        /** @type {?} */\n        var left = 0;\n        /** @type {?} */\n        var right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._width;\n            }\n            else if (this._left.mode == 'push') {\n                /** @type {?} */\n                var width = this._left._width;\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._width;\n            }\n            else if (this._right.mode == 'push') {\n                /** @type {?} */\n                var width = this._right._width;\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || (/** @type {?} */ (null));\n        right = right || (/** @type {?} */ (null));\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left: left, right: right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            function () { return _this._contentMarginChanges.next(_this._contentMargins); }));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatDrawerContainer.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () { return _this._doCheckSubject.next(); }));\n        }\n    };\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     */\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    MatDrawerContainer.prototype._watchDrawerToggle = /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    function (drawer) {\n        var _this = this;\n        drawer._animationStarted.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) { return event.fromState !== event.toState; })), takeUntil(this._drawers.changes))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && _this._animationMode !== 'NoopAnimations') {\n                _this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            _this.updateContentMargins();\n            _this._changeDetectorRef.markForCheck();\n        }));\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n             * @return {?}\n             */\n            function () {\n                return _this._setContainerClass(drawer.opened);\n            }));\n        }\n    };\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     */\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    MatDrawerContainer.prototype._watchDrawerPosition = /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    function (drawer) {\n        var _this = this;\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            function () {\n                _this._validateDrawers();\n            }));\n        }));\n    };\n    /** Subscribes to changes in drawer mode so we can run change detection. */\n    /**\n     * Subscribes to changes in drawer mode so we can run change detection.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    MatDrawerContainer.prototype._watchDrawerMode = /**\n     * Subscribes to changes in drawer mode so we can run change detection.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    function (drawer) {\n        var _this = this;\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe((/**\n             * @return {?}\n             */\n            function () {\n                _this.updateContentMargins();\n                _this._changeDetectorRef.markForCheck();\n            }));\n        }\n    };\n    /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n    /**\n     * Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element.\n     * @private\n     * @param {?} isAdd\n     * @return {?}\n     */\n    MatDrawerContainer.prototype._setContainerClass = /**\n     * Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element.\n     * @private\n     * @param {?} isAdd\n     * @return {?}\n     */\n    function (isAdd) {\n        if (isAdd) {\n            this._element.nativeElement.classList.add('mat-drawer-opened');\n        }\n        else {\n            this._element.nativeElement.classList.remove('mat-drawer-opened');\n        }\n    };\n    /** Validate the state of the drawer children components. */\n    /**\n     * Validate the state of the drawer children components.\n     * @private\n     * @return {?}\n     */\n    MatDrawerContainer.prototype._validateDrawers = /**\n     * Validate the state of the drawer children components.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        function (drawer) {\n            if (drawer.position == 'end') {\n                if (_this._end != null) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                _this._end = drawer;\n            }\n            else {\n                if (_this._start != null) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                _this._start = drawer;\n            }\n        }));\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    };\n    /** Whether the container is being pushed to the side by one of the drawers. */\n    /**\n     * Whether the container is being pushed to the side by one of the drawers.\n     * @private\n     * @return {?}\n     */\n    MatDrawerContainer.prototype._isPushed = /**\n     * Whether the container is being pushed to the side by one of the drawers.\n     * @private\n     * @return {?}\n     */\n    function () {\n        return (this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over');\n    };\n    /**\n     * @return {?}\n     */\n    MatDrawerContainer.prototype._onBackdropClicked = /**\n     * @return {?}\n     */\n    function () {\n        this.backdropClick.emit();\n        this._closeModalDrawer();\n    };\n    /**\n     * @return {?}\n     */\n    MatDrawerContainer.prototype._closeModalDrawer = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        function (drawer) { return drawer && !drawer.disableClose && _this._canHaveBackdrop(drawer); }))\n            .forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        function (drawer) { return (/** @type {?} */ (drawer)).close(); }));\n    };\n    /**\n     * @return {?}\n     */\n    MatDrawerContainer.prototype._isShowingBackdrop = /**\n     * @return {?}\n     */\n    function () {\n        return (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end));\n    };\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    MatDrawerContainer.prototype._canHaveBackdrop = /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    function (drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    };\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    MatDrawerContainer.prototype._isDrawerOpen = /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    function (drawer) {\n        return drawer != null && drawer.opened;\n    };\n    MatDrawerContainer.decorators = [\n        { type: Component, args: [{selector: 'mat-drawer-container',\n                    exportAs: 'matDrawerContainer',\n                    template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\" [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div><ng-content select=\\\"mat-drawer\\\"></ng-content><ng-content select=\\\"mat-drawer-content\\\"></ng-content><mat-drawer-content *ngIf=\\\"!_content\\\"><ng-content></ng-content></mat-drawer-content>\",\n                    styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-opened{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"],\n                    host: {\n                        'class': 'mat-drawer-container',\n                        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                },] },\n    ];\n    /** @nocollapse */\n    MatDrawerContainer.ctorParameters = function () { return [\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: ElementRef },\n        { type: NgZone },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_DRAWER_DEFAULT_AUTOSIZE,] }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatDrawerContainer.propDecorators = {\n        _drawers: [{ type: ContentChildren, args: [MatDrawer,] }],\n        _content: [{ type: ContentChild, args: [MatDrawerContent, { static: false },] }],\n        _userContent: [{ type: ViewChild, args: [MatDrawerContent, { static: false },] }],\n        autosize: [{ type: Input }],\n        hasBackdrop: [{ type: Input }],\n        backdropClick: [{ type: Output }]\n    };\n    return MatDrawerContainer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatSidenavContent = /** @class */ (function (_super) {\n    __extends(MatSidenavContent, _super);\n    function MatSidenavContent(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        return _super.call(this, changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) || this;\n    }\n    MatSidenavContent.decorators = [\n        { type: Component, args: [{selector: 'mat-sidenav-content',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        'class': 'mat-drawer-content mat-sidenav-content',\n                        '[style.margin-left.px]': '_container._contentMargins.left',\n                        '[style.margin-right.px]': '_container._contentMargins.right',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                },] },\n    ];\n    /** @nocollapse */\n    MatSidenavContent.ctorParameters = function () { return [\n        { type: ChangeDetectorRef },\n        { type: MatSidenavContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                         * @return {?}\n                         */\n                        function () { return MatSidenavContainer; })),] }] },\n        { type: ElementRef },\n        { type: ScrollDispatcher },\n        { type: NgZone }\n    ]; };\n    return MatSidenavContent;\n}(MatDrawerContent));\nvar MatSidenav = /** @class */ (function (_super) {\n    __extends(MatSidenav, _super);\n    function MatSidenav() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._fixedInViewport = false;\n        _this._fixedTopGap = 0;\n        _this._fixedBottomGap = 0;\n        return _this;\n    }\n    Object.defineProperty(MatSidenav.prototype, \"fixedInViewport\", {\n        /** Whether the sidenav is fixed in the viewport. */\n        get: /**\n         * Whether the sidenav is fixed in the viewport.\n         * @return {?}\n         */\n        function () { return this._fixedInViewport; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._fixedInViewport = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSidenav.prototype, \"fixedTopGap\", {\n        /**\n         * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n         * mode.\n         */\n        get: /**\n         * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n         * mode.\n         * @return {?}\n         */\n        function () { return this._fixedTopGap; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._fixedTopGap = coerceNumberProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSidenav.prototype, \"fixedBottomGap\", {\n        /**\n         * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n         * fixed mode.\n         */\n        get: /**\n         * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n         * fixed mode.\n         * @return {?}\n         */\n        function () { return this._fixedBottomGap; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._fixedBottomGap = coerceNumberProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    MatSidenav.decorators = [\n        { type: Component, args: [{selector: 'mat-sidenav',\n                    exportAs: 'matSidenav',\n                    template: \"<div class=\\\"mat-drawer-inner-container\\\"><ng-content></ng-content></div>\",\n                    animations: [matDrawerAnimations.transformDrawer],\n                    host: {\n                        'class': 'mat-drawer mat-sidenav',\n                        'tabIndex': '-1',\n                        // must prevent the browser from aligning text based on value\n                        '[attr.align]': 'null',\n                        '[class.mat-drawer-end]': 'position === \"end\"',\n                        '[class.mat-drawer-over]': 'mode === \"over\"',\n                        '[class.mat-drawer-push]': 'mode === \"push\"',\n                        '[class.mat-drawer-side]': 'mode === \"side\"',\n                        '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                        '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                        '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                },] },\n    ];\n    MatSidenav.propDecorators = {\n        fixedInViewport: [{ type: Input }],\n        fixedTopGap: [{ type: Input }],\n        fixedBottomGap: [{ type: Input }]\n    };\n    return MatSidenav;\n}(MatDrawer));\nvar MatSidenavContainer = /** @class */ (function (_super) {\n    __extends(MatSidenavContainer, _super);\n    function MatSidenavContainer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MatSidenavContainer.decorators = [\n        { type: Component, args: [{selector: 'mat-sidenav-container',\n                    exportAs: 'matSidenavContainer',\n                    template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\" [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div><ng-content select=\\\"mat-sidenav\\\"></ng-content><ng-content select=\\\"mat-sidenav-content\\\"></ng-content><mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable><ng-content></ng-content></mat-sidenav-content>\",\n                    styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-opened{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"],\n                    host: {\n                        'class': 'mat-drawer-container mat-sidenav-container',\n                        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                },] },\n    ];\n    MatSidenavContainer.propDecorators = {\n        _drawers: [{ type: ContentChildren, args: [MatSidenav,] }],\n        _content: [{ type: ContentChild, args: [MatSidenavContent, { static: false },] }]\n    };\n    return MatSidenavContainer;\n}(MatDrawerContainer));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatSidenavModule = /** @class */ (function () {\n    function MatSidenavModule() {\n    }\n    MatSidenavModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        CommonModule,\n                        MatCommonModule,\n                        ScrollingModule,\n                        PlatformModule,\n                    ],\n                    exports: [\n                        MatCommonModule,\n                        MatDrawer,\n                        MatDrawerContainer,\n                        MatDrawerContent,\n                        MatSidenav,\n                        MatSidenavContainer,\n                        MatSidenavContent,\n                    ],\n                    declarations: [\n                        MatDrawer,\n                        MatDrawerContainer,\n                        MatDrawerContent,\n                        MatSidenav,\n                        MatSidenavContainer,\n                        MatSidenavContent,\n                    ],\n                },] },\n    ];\n    return MatSidenavModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatSidenavModule, throwMatDuplicatedDrawerError, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MAT_DRAWER_DEFAULT_AUTOSIZE, MatDrawerContent, MatDrawer, MatDrawerContainer, MatSidenavContent, MatSidenav, MatSidenavContainer, matDrawerAnimations };\n//# sourceMappingURL=sidenav.es5.js.map\n","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import { Actions, ofActionSuccessful, Store } from '@ngxs/store';\nimport { Injectable } from '@angular/core';\nimport { AddNotification, DeleteNotification, MarkAllAsRead, MarkAsRead } from './notifications.actions';\nimport { SendWebSocketAction } from '@ngx-starter-kit/socketio-plugin';\nimport { SwPush } from '@angular/service-worker';\nimport { AppNotification } from './app-notification.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotificationsHandler {\n  constructor(private actions$: Actions, private store: Store, private readonly swPush: SwPush) {\n    this.actions$\n      .pipe(ofActionSuccessful(DeleteNotification))\n      .subscribe(action => this.store.dispatch(new SendWebSocketAction(action)));\n    this.actions$\n      .pipe(ofActionSuccessful(MarkAsRead))\n      .subscribe(action => this.store.dispatch(new SendWebSocketAction(action)));\n    this.actions$\n      .pipe(ofActionSuccessful(MarkAllAsRead))\n      .subscribe(action => this.store.dispatch(new SendWebSocketAction(action)));\n\n    if (this.swPush.isEnabled) {\n      this.swPush.messages.subscribe((message: { notification: Notification }) => {\n        if (message.notification.data.targetType) {\n          this.store.dispatch(new AddNotification(new AppNotification(message.notification.data)));\n        }\n      });\n      this.swPush.notificationClicks.subscribe(({ action, notification: { title, ...notification } }) => {\n        console.log(`action: ${action}, title: ${title}, notification`, notification);\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { __extends } from 'tslib';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ContentChild, Directive, ElementRef, Input, TemplateRef, ChangeDetectionStrategy, Component, IterableDiffers, ViewContainerRef, ViewEncapsulation, Attribute, ChangeDetectorRef, ContentChildren, EmbeddedViewRef, Inject, isDevMode, Optional, ViewChild, InjectionToken, NgModule } from '@angular/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { isDataSource } from '@angular/cdk/collections';\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinHasStickyInput(base) {\n    return /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _this = _super.apply(this, args) || this;\n            _this._sticky = false;\n            /**\n             * Whether the sticky input has changed since it was last checked.\n             */\n            _this._hasStickyChanged = false;\n            return _this;\n        }\n        Object.defineProperty(class_1.prototype, \"sticky\", {\n            /** Whether sticky positioning should be applied. */\n            get: /**\n             * Whether sticky positioning should be applied.\n             * @return {?}\n             */\n            function () { return this._sticky; },\n            set: /**\n             * @param {?} v\n             * @return {?}\n             */\n            function (v) {\n                /** @type {?} */\n                var prevValue = this._sticky;\n                this._sticky = coerceBooleanProperty(v);\n                this._hasStickyChanged = prevValue !== this._sticky;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** Whether the sticky value has changed since this was last called. */\n        /**\n         * Whether the sticky value has changed since this was last called.\n         * @return {?}\n         */\n        class_1.prototype.hasStickyChanged = /**\n         * Whether the sticky value has changed since this was last called.\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        };\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        /**\n         * Resets the dirty check for cases where the sticky state has been used without checking.\n         * @return {?}\n         */\n        class_1.prototype.resetStickyChanged = /**\n         * Resets the dirty check for cases where the sticky state has been used without checking.\n         * @return {?}\n         */\n        function () {\n            this._hasStickyChanged = false;\n        };\n        return class_1;\n    }(base));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nvar CdkCellDef = /** @class */ (function () {\n    function CdkCellDef(/** @docs-private */ template) {\n        this.template = template;\n    }\n    CdkCellDef.decorators = [\n        { type: Directive, args: [{ selector: '[cdkCellDef]' },] },\n    ];\n    /** @nocollapse */\n    CdkCellDef.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    return CdkCellDef;\n}());\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nvar CdkHeaderCellDef = /** @class */ (function () {\n    function CdkHeaderCellDef(/** @docs-private */ template) {\n        this.template = template;\n    }\n    CdkHeaderCellDef.decorators = [\n        { type: Directive, args: [{ selector: '[cdkHeaderCellDef]' },] },\n    ];\n    /** @nocollapse */\n    CdkHeaderCellDef.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    return CdkHeaderCellDef;\n}());\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nvar CdkFooterCellDef = /** @class */ (function () {\n    function CdkFooterCellDef(/** @docs-private */ template) {\n        this.template = template;\n    }\n    CdkFooterCellDef.decorators = [\n        { type: Directive, args: [{ selector: '[cdkFooterCellDef]' },] },\n    ];\n    /** @nocollapse */\n    CdkFooterCellDef.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    return CdkFooterCellDef;\n}());\n// Boilerplate for applying mixins to CdkColumnDef.\n/**\n * \\@docs-private\n */\nvar \n// Boilerplate for applying mixins to CdkColumnDef.\n/**\n * \\@docs-private\n */\nCdkColumnDefBase = /** @class */ (function () {\n    function CdkColumnDefBase() {\n    }\n    return CdkColumnDefBase;\n}());\n/** @type {?} */\nvar _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nvar CdkColumnDef = /** @class */ (function (_super) {\n    __extends(CdkColumnDef, _super);\n    function CdkColumnDef() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._stickyEnd = false;\n        return _this;\n    }\n    Object.defineProperty(CdkColumnDef.prototype, \"name\", {\n        /** Unique name for this column. */\n        get: /**\n         * Unique name for this column.\n         * @return {?}\n         */\n        function () {\n            return this._name;\n        },\n        set: /**\n         * @param {?} name\n         * @return {?}\n         */\n        function (name) {\n            // If the directive is set without a name (updated programatically), then this setter will\n            // trigger with an empty string and should not overwrite the programatically set value.\n            if (!name) {\n                return;\n            }\n            this._name = name;\n            this.cssClassFriendlyName = name.replace(/[^a-z0-9_-]/ig, '-');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkColumnDef.prototype, \"stickyEnd\", {\n        /**\n         * Whether this column should be sticky positioned on the end of the row. Should make sure\n         * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n         * has been changed.\n         */\n        get: /**\n         * Whether this column should be sticky positioned on the end of the row. Should make sure\n         * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n         * has been changed.\n         * @return {?}\n         */\n        function () {\n            return this._stickyEnd;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            /** @type {?} */\n            var prevValue = this._stickyEnd;\n            this._stickyEnd = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._stickyEnd;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CdkColumnDef.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkColumnDef]',\n                    inputs: ['sticky'],\n                    providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }],\n                },] },\n    ];\n    CdkColumnDef.propDecorators = {\n        name: [{ type: Input, args: ['cdkColumnDef',] }],\n        stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\n        cell: [{ type: ContentChild, args: [CdkCellDef, { static: false },] }],\n        headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef, { static: false },] }],\n        footerCell: [{ type: ContentChild, args: [CdkFooterCellDef, { static: false },] }]\n    };\n    return CdkColumnDef;\n}(_CdkColumnDefBase));\n/**\n * Base class for the cells. Adds a CSS classname that identifies the column it renders in.\n */\nvar  /**\n * Base class for the cells. Adds a CSS classname that identifies the column it renders in.\n */\nBaseCdkCell = /** @class */ (function () {\n    function BaseCdkCell(columnDef, elementRef) {\n        /** @type {?} */\n        var columnClassName = \"cdk-column-\" + columnDef.cssClassFriendlyName;\n        elementRef.nativeElement.classList.add(columnClassName);\n    }\n    return BaseCdkCell;\n}());\n/**\n * Header cell template container that adds the right classes and role.\n */\nvar CdkHeaderCell = /** @class */ (function (_super) {\n    __extends(CdkHeaderCell, _super);\n    function CdkHeaderCell(columnDef, elementRef) {\n        return _super.call(this, columnDef, elementRef) || this;\n    }\n    CdkHeaderCell.decorators = [\n        { type: Directive, args: [{\n                    selector: 'cdk-header-cell, th[cdk-header-cell]',\n                    host: {\n                        'class': 'cdk-header-cell',\n                        'role': 'columnheader',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    CdkHeaderCell.ctorParameters = function () { return [\n        { type: CdkColumnDef },\n        { type: ElementRef }\n    ]; };\n    return CdkHeaderCell;\n}(BaseCdkCell));\n/**\n * Footer cell template container that adds the right classes and role.\n */\nvar CdkFooterCell = /** @class */ (function (_super) {\n    __extends(CdkFooterCell, _super);\n    function CdkFooterCell(columnDef, elementRef) {\n        return _super.call(this, columnDef, elementRef) || this;\n    }\n    CdkFooterCell.decorators = [\n        { type: Directive, args: [{\n                    selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                    host: {\n                        'class': 'cdk-footer-cell',\n                        'role': 'gridcell',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    CdkFooterCell.ctorParameters = function () { return [\n        { type: CdkColumnDef },\n        { type: ElementRef }\n    ]; };\n    return CdkFooterCell;\n}(BaseCdkCell));\n/**\n * Cell template container that adds the right classes and role.\n */\nvar CdkCell = /** @class */ (function (_super) {\n    __extends(CdkCell, _super);\n    function CdkCell(columnDef, elementRef) {\n        return _super.call(this, columnDef, elementRef) || this;\n    }\n    CdkCell.decorators = [\n        { type: Directive, args: [{\n                    selector: 'cdk-cell, td[cdk-cell]',\n                    host: {\n                        'class': 'cdk-cell',\n                        'role': 'gridcell',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    CdkCell.ctorParameters = function () { return [\n        { type: CdkColumnDef },\n        { type: ElementRef }\n    ]; };\n    return CdkCell;\n}(BaseCdkCell));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @type {?}\n */\nvar CDK_ROW_TEMPLATE = \"<ng-container cdkCellOutlet></ng-container>\";\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n * @abstract\n */\nvar  /**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n * @abstract\n */\nBaseRowDef = /** @class */ (function () {\n    function BaseRowDef(template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    BaseRowDef.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            /** @type {?} */\n            var columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    };\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     * @return {?}\n     */\n    BaseRowDef.prototype.getColumnsDiff = /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     * @return {?}\n     */\n    function () {\n        return this._columnsDiffer.diff(this.columns);\n    };\n    /** Gets this row def's relevant cell template from the provided column def. */\n    /**\n     * Gets this row def's relevant cell template from the provided column def.\n     * @param {?} column\n     * @return {?}\n     */\n    BaseRowDef.prototype.extractCellTemplate = /**\n     * Gets this row def's relevant cell template from the provided column def.\n     * @param {?} column\n     * @return {?}\n     */\n    function (column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    };\n    return BaseRowDef;\n}());\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/**\n * \\@docs-private\n */\nvar \n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/**\n * \\@docs-private\n */\nCdkHeaderRowDefBase = /** @class */ (function (_super) {\n    __extends(CdkHeaderRowDefBase, _super);\n    function CdkHeaderRowDefBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return CdkHeaderRowDefBase;\n}(BaseRowDef));\n/** @type {?} */\nvar _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nvar CdkHeaderRowDef = /** @class */ (function (_super) {\n    __extends(CdkHeaderRowDef, _super);\n    function CdkHeaderRowDef(template, _differs) {\n        return _super.call(this, template, _differs) || this;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    CdkHeaderRowDef.prototype.ngOnChanges = \n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        _super.prototype.ngOnChanges.call(this, changes);\n    };\n    CdkHeaderRowDef.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkHeaderRowDef]',\n                    inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky'],\n                },] },\n    ];\n    /** @nocollapse */\n    CdkHeaderRowDef.ctorParameters = function () { return [\n        { type: TemplateRef },\n        { type: IterableDiffers }\n    ]; };\n    return CdkHeaderRowDef;\n}(_CdkHeaderRowDefBase));\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/**\n * \\@docs-private\n */\nvar \n// Boilerplate for applying mixins to CdkFooterRowDef.\n/**\n * \\@docs-private\n */\nCdkFooterRowDefBase = /** @class */ (function (_super) {\n    __extends(CdkFooterRowDefBase, _super);\n    function CdkFooterRowDefBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return CdkFooterRowDefBase;\n}(BaseRowDef));\n/** @type {?} */\nvar _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nvar CdkFooterRowDef = /** @class */ (function (_super) {\n    __extends(CdkFooterRowDef, _super);\n    function CdkFooterRowDef(template, _differs) {\n        return _super.call(this, template, _differs) || this;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    CdkFooterRowDef.prototype.ngOnChanges = \n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        _super.prototype.ngOnChanges.call(this, changes);\n    };\n    CdkFooterRowDef.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkFooterRowDef]',\n                    inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky'],\n                },] },\n    ];\n    /** @nocollapse */\n    CdkFooterRowDef.ctorParameters = function () { return [\n        { type: TemplateRef },\n        { type: IterableDiffers }\n    ]; };\n    return CdkFooterRowDef;\n}(_CdkFooterRowDefBase));\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nvar CdkRowDef = /** @class */ (function (_super) {\n    __extends(CdkRowDef, _super);\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    function CdkRowDef(template, _differs) {\n        return _super.call(this, template, _differs) || this;\n    }\n    CdkRowDef.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkRowDef]',\n                    inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen'],\n                },] },\n    ];\n    /** @nocollapse */\n    CdkRowDef.ctorParameters = function () { return [\n        { type: TemplateRef },\n        { type: IterableDiffers }\n    ]; };\n    return CdkRowDef;\n}(BaseRowDef));\n/**\n * Outlet for rendering cells inside of a row or header row.\n * \\@docs-private\n */\nvar CdkCellOutlet = /** @class */ (function () {\n    function CdkCellOutlet(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    /**\n     * @return {?}\n     */\n    CdkCellOutlet.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    };\n    /**\n     * Static property containing the latest constructed instance of this class.\n     * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n     * createEmbeddedView. After one of these components are created, this property will provide\n     * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n     * construct the cells with the provided context.\n     */\n    CdkCellOutlet.mostRecentCellOutlet = null;\n    CdkCellOutlet.decorators = [\n        { type: Directive, args: [{ selector: '[cdkCellOutlet]' },] },\n    ];\n    /** @nocollapse */\n    CdkCellOutlet.ctorParameters = function () { return [\n        { type: ViewContainerRef }\n    ]; };\n    return CdkCellOutlet;\n}());\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nvar CdkHeaderRow = /** @class */ (function () {\n    function CdkHeaderRow() {\n    }\n    CdkHeaderRow.decorators = [\n        { type: Component, args: [{selector: 'cdk-header-row, tr[cdk-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                },] },\n    ];\n    return CdkHeaderRow;\n}());\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nvar CdkFooterRow = /** @class */ (function () {\n    function CdkFooterRow() {\n    }\n    CdkFooterRow.decorators = [\n        { type: Component, args: [{selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                },] },\n    ];\n    return CdkFooterRow;\n}());\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nvar CdkRow = /** @class */ (function () {\n    function CdkRow() {\n    }\n    CdkRow.decorators = [\n        { type: Component, args: [{selector: 'cdk-row, tr[cdk-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                },] },\n    ];\n    return CdkRow;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * List of all possible directions that can be used for sticky positioning.\n * \\@docs-private\n * @type {?}\n */\nvar STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * \\@docs-private\n */\nvar  /**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * \\@docs-private\n */\nStickyStyler = /** @class */ (function () {\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     */\n    function StickyStyler(_isNativeHtmlTable, _stickCellCss, direction, _isBrowser) {\n        if (_isBrowser === void 0) { _isBrowser = true; }\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._isBrowser = _isBrowser;\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param {?} rows The list of rows that should be cleared from sticking in the provided directions\n     * @param {?} stickyDirections The directions that should no longer be set as sticky on the rows.\n     * @return {?}\n     */\n    StickyStyler.prototype.clearStickyPositioning = /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param {?} rows The list of rows that should be cleared from sticking in the provided directions\n     * @param {?} stickyDirections The directions that should no longer be set as sticky on the rows.\n     * @return {?}\n     */\n    function (rows, stickyDirections) {\n        for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n            var row = rows_1[_i];\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            this._removeStickyStyle(row, stickyDirections);\n            for (var i = 0; i < row.children.length; i++) {\n                /** @type {?} */\n                var cell = (/** @type {?} */ (row.children[i]));\n                this._removeStickyStyle(cell, stickyDirections);\n            }\n        }\n    };\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     */\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param {?} rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param {?} stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param {?} stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @return {?}\n     */\n    StickyStyler.prototype.updateStickyColumns = /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param {?} rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param {?} stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param {?} stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @return {?}\n     */\n    function (rows, stickyStartStates, stickyEndStates) {\n        /** @type {?} */\n        var hasStickyColumns = stickyStartStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        function (state) { return state; })) || stickyEndStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        function (state) { return state; }));\n        if (!rows.length || !hasStickyColumns || !this._isBrowser) {\n            return;\n        }\n        /** @type {?} */\n        var firstRow = rows[0];\n        /** @type {?} */\n        var numCells = firstRow.children.length;\n        /** @type {?} */\n        var cellWidths = this._getCellWidths(firstRow);\n        /** @type {?} */\n        var startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        /** @type {?} */\n        var endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        /** @type {?} */\n        var isRtl = this.direction === 'rtl';\n        for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n            var row = rows_2[_i];\n            for (var i = 0; i < numCells; i++) {\n                /** @type {?} */\n                var cell = (/** @type {?} */ (row.children[i]));\n                if (stickyStartStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'right' : 'left', startPositions[i]);\n                }\n                if (stickyEndStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'left' : 'right', endPositions[i]);\n                }\n            }\n        }\n    };\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param {?} rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param {?} stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param {?} position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     * @return {?}\n     */\n    StickyStyler.prototype.stickRows = /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param {?} rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param {?} stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param {?} position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     * @return {?}\n     */\n    function (rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on.\n        /** @type {?} */\n        var rows = position === 'bottom' ? rowsToStick.reverse() : rowsToStick;\n        /** @type {?} */\n        var stickyHeight = 0;\n        for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n            if (!stickyStates[rowIndex]) {\n                continue;\n            }\n            /** @type {?} */\n            var row = rows[rowIndex];\n            if (this._isNativeHtmlTable) {\n                for (var j = 0; j < row.children.length; j++) {\n                    /** @type {?} */\n                    var cell = (/** @type {?} */ (row.children[j]));\n                    this._addStickyStyle(cell, position, stickyHeight);\n                }\n            }\n            else {\n                // Flex does not respect the stick positioning on the cells, needs to be applied to the row.\n                // If this is applied on a native table, Safari causes the header to fly in wrong direction.\n                this._addStickyStyle(row, position, stickyHeight);\n            }\n            if (rowIndex === rows.length - 1) {\n                // prevent unnecessary reflow from getBoundingClientRect()\n                return;\n            }\n            stickyHeight += row.getBoundingClientRect().height;\n        }\n    };\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     * @param {?} tableElement\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    StickyStyler.prototype.updateStickyFooterContainer = /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     * @param {?} tableElement\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    function (tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        /** @type {?} */\n        var tfoot = (/** @type {?} */ (tableElement.querySelector('tfoot')));\n        if (stickyStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        function (state) { return !state; }))) {\n            this._removeStickyStyle(tfoot, ['bottom']);\n        }\n        else {\n            this._addStickyStyle(tfoot, 'bottom', 0);\n        }\n    };\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     * @param {?} element\n     * @param {?} stickyDirections\n     * @return {?}\n     */\n    StickyStyler.prototype._removeStickyStyle = /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     * @param {?} element\n     * @param {?} stickyDirections\n     * @return {?}\n     */\n    function (element, stickyDirections) {\n        for (var _i = 0, stickyDirections_1 = stickyDirections; _i < stickyDirections_1.length; _i++) {\n            var dir = stickyDirections_1[_i];\n            element.style[dir] = '';\n        }\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        /** @type {?} */\n        var hasDirection = STICKY_DIRECTIONS.some((/**\n         * @param {?} dir\n         * @return {?}\n         */\n        function (dir) { return !!element.style[dir]; }));\n        if (!hasDirection) {\n            element.style.position = '';\n            element.classList.remove(this._stickCellCss);\n        }\n    };\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     * @param {?} element\n     * @param {?} dir\n     * @param {?} dirValue\n     * @return {?}\n     */\n    StickyStyler.prototype._addStickyStyle = /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     * @param {?} element\n     * @param {?} dir\n     * @param {?} dirValue\n     * @return {?}\n     */\n    function (element, dir, dirValue) {\n        element.classList.add(this._stickCellCss);\n        element.style[dir] = dirValue + \"px\";\n        element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        element.style.zIndex = this._getCalculatedZIndex(element);\n    };\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     * @param {?} element\n     * @return {?}\n     */\n    StickyStyler.prototype._getCalculatedZIndex = /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        /** @type {?} */\n        var zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        /** @type {?} */\n        var zIndex = 0;\n        for (var _i = 0, STICKY_DIRECTIONS_1 = STICKY_DIRECTIONS; _i < STICKY_DIRECTIONS_1.length; _i++) {\n            var dir = STICKY_DIRECTIONS_1[_i];\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? \"\" + zIndex : '';\n    };\n    /** Gets the widths for each cell in the provided row. */\n    /**\n     * Gets the widths for each cell in the provided row.\n     * @param {?} row\n     * @return {?}\n     */\n    StickyStyler.prototype._getCellWidths = /**\n     * Gets the widths for each cell in the provided row.\n     * @param {?} row\n     * @return {?}\n     */\n    function (row) {\n        /** @type {?} */\n        var cellWidths = [];\n        /** @type {?} */\n        var firstRowCells = row.children;\n        for (var i = 0; i < firstRowCells.length; i++) {\n            /** @type {?} */\n            var cell = (/** @type {?} */ (firstRowCells[i]));\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        return cellWidths;\n    };\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    StickyStyler.prototype._getStickyStartColumnPositions = /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    function (widths, stickyStates) {\n        /** @type {?} */\n        var positions = [];\n        /** @type {?} */\n        var nextPosition = 0;\n        for (var i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    };\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    StickyStyler.prototype._getStickyEndColumnPositions = /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    function (widths, stickyStates) {\n        /** @type {?} */\n        var positions = [];\n        /** @type {?} */\n        var nextPosition = 0;\n        for (var i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    };\n    return StickyStyler;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * \\@docs-private\n * @param {?} id Id whose lookup failed.\n * @return {?}\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(\"Could not find column with id \\\"\" + id + \"\\\".\");\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * \\@docs-private\n * @param {?} name\n * @return {?}\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(\"Duplicate column definition name provided: \\\"\" + name + \"\\\".\");\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(\"There can only be one default row without a when predicate function.\");\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * \\@docs-private\n * @param {?} data\n * @return {?}\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(\"Could not find a matching row definition for the\" +\n        (\"provided row data: \" + JSON.stringify(data)));\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(\"Provided data source did not match an array, Observable, or DataSource\");\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(\"Text column could not find a parent table for registration.\");\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(\"Table text column must have a name.\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * \\@docs-private\n */\nvar DataRowOutlet = /** @class */ (function () {\n    function DataRowOutlet(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n    DataRowOutlet.decorators = [\n        { type: Directive, args: [{ selector: '[rowOutlet]' },] },\n    ];\n    /** @nocollapse */\n    DataRowOutlet.ctorParameters = function () { return [\n        { type: ViewContainerRef },\n        { type: ElementRef }\n    ]; };\n    return DataRowOutlet;\n}());\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * \\@docs-private\n */\nvar HeaderRowOutlet = /** @class */ (function () {\n    function HeaderRowOutlet(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n    HeaderRowOutlet.decorators = [\n        { type: Directive, args: [{ selector: '[headerRowOutlet]' },] },\n    ];\n    /** @nocollapse */\n    HeaderRowOutlet.ctorParameters = function () { return [\n        { type: ViewContainerRef },\n        { type: ElementRef }\n    ]; };\n    return HeaderRowOutlet;\n}());\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * \\@docs-private\n */\nvar FooterRowOutlet = /** @class */ (function () {\n    function FooterRowOutlet(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n    FooterRowOutlet.decorators = [\n        { type: Directive, args: [{ selector: '[footerRowOutlet]' },] },\n    ];\n    /** @nocollapse */\n    FooterRowOutlet.ctorParameters = function () { return [\n        { type: ViewContainerRef },\n        { type: ElementRef }\n    ]; };\n    return FooterRowOutlet;\n}());\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * \\@docs-private\n * @type {?}\n */\nvar CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n\"\\n  <ng-content select=\\\"caption\\\"></ng-content>\\n  <ng-container headerRowOutlet></ng-container>\\n  <ng-container rowOutlet></ng-container>\\n  <ng-container footerRowOutlet></ng-container>\\n\";\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * \\@docs-private\n * @abstract\n * @template T\n */\nvar /**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * \\@docs-private\n * @abstract\n * @template T\n */\nRowViewRef = /** @class */ (function (_super) {\n    __extends(RowViewRef, _super);\n    function RowViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return RowViewRef;\n}(EmbeddedViewRef));\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n * @template T\n */\nvar CdkTable = /** @class */ (function () {\n    function CdkTable(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *it's* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *it's* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *it's* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *it's* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        this._multiTemplateDataRows = false;\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * \\@docs-private\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    Object.defineProperty(CdkTable.prototype, \"trackBy\", {\n        /**\n         * Tracking function that will be used to check the differences in data changes. Used similarly\n         * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n         * relative to the function to know if a row should be added/removed/moved.\n         * Accepts a function that takes two parameters, `index` and `item`.\n         */\n        get: /**\n         * Tracking function that will be used to check the differences in data changes. Used similarly\n         * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n         * relative to the function to know if a row should be added/removed/moved.\n         * Accepts a function that takes two parameters, `index` and `item`.\n         * @return {?}\n         */\n        function () {\n            return this._trackByFn;\n        },\n        set: /**\n         * @param {?} fn\n         * @return {?}\n         */\n        function (fn) {\n            if (isDevMode() && fn != null && typeof fn !== 'function' && (/** @type {?} */ (console)) &&\n                (/** @type {?} */ (console.warn))) {\n                console.warn(\"trackBy must be a function, but received \" + JSON.stringify(fn) + \".\");\n            }\n            this._trackByFn = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkTable.prototype, \"dataSource\", {\n        /**\n         * The table's source of data, which can be provided in three ways (in order of complexity):\n         *   - Simple data array (each object represents one table row)\n         *   - Stream that emits a data array each time the array changes\n         *   - `DataSource` object that implements the connect/disconnect interface.\n         *\n         * If a data array is provided, the table must be notified when the array's objects are\n         * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n         * render the diff since the last table render. If the data array reference is changed, the table\n         * will automatically trigger an update to the rows.\n         *\n         * When providing an Observable stream, the table will trigger an update automatically when the\n         * stream emits a new array of data.\n         *\n         * Finally, when providing a `DataSource` object, the table will use the Observable stream\n         * provided by the connect function and trigger updates when that stream emits new data array\n         * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n         * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n         * subscriptions registered during the connect process).\n         */\n        get: /**\n         * The table's source of data, which can be provided in three ways (in order of complexity):\n         *   - Simple data array (each object represents one table row)\n         *   - Stream that emits a data array each time the array changes\n         *   - `DataSource` object that implements the connect/disconnect interface.\n         *\n         * If a data array is provided, the table must be notified when the array's objects are\n         * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n         * render the diff since the last table render. If the data array reference is changed, the table\n         * will automatically trigger an update to the rows.\n         *\n         * When providing an Observable stream, the table will trigger an update automatically when the\n         * stream emits a new array of data.\n         *\n         * Finally, when providing a `DataSource` object, the table will use the Observable stream\n         * provided by the connect function and trigger updates when that stream emits new data array\n         * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n         * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n         * subscriptions registered during the connect process).\n         * @return {?}\n         */\n        function () {\n            return this._dataSource;\n        },\n        set: /**\n         * @param {?} dataSource\n         * @return {?}\n         */\n        function (dataSource) {\n            if (this._dataSource !== dataSource) {\n                this._switchDataSource(dataSource);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkTable.prototype, \"multiTemplateDataRows\", {\n        /**\n         * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n         * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n         * dataobject will render the first row that evaluates its when predicate to true, in the order\n         * defined in the table, or otherwise the default row which does not have a when predicate.\n         */\n        get: /**\n         * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n         * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n         * dataobject will render the first row that evaluates its when predicate to true, in the order\n         * defined in the table, or otherwise the default row which does not have a when predicate.\n         * @return {?}\n         */\n        function () {\n            return this._multiTemplateDataRows;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this._multiTemplateDataRows = coerceBooleanProperty(v);\n            // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n            // this setter will be invoked before the row outlet has been defined hence the null check.\n            if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n                this._forceRenderDataRows();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkTable.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((/**\n         * @param {?} _i\n         * @param {?} dataRow\n         * @return {?}\n         */\n        function (_i, dataRow) {\n            return _this.trackBy ? _this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    CdkTable.prototype.ngAfterContentChecked = /**\n     * @return {?}\n     */\n    function () {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        this._renderUpdatedColumns();\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        this._checkStickyStates();\n    };\n    /**\n     * @return {?}\n     */\n    CdkTable.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._rowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    };\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     * @return {?}\n     */\n    CdkTable.prototype.renderRows = /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._renderRows = this._getAllRenderRows();\n        /** @type {?} */\n        var changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            return;\n        }\n        /** @type {?} */\n        var viewContainer = this._rowOutlet.viewContainer;\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} prevIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        function (record, prevIndex, currentIndex) {\n            if (record.previousIndex == null) {\n                _this._insertRow(record.item, (/** @type {?} */ (currentIndex)));\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove((/** @type {?} */ (prevIndex)));\n            }\n            else {\n                /** @type {?} */\n                var view = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (prevIndex)))));\n                viewContainer.move((/** @type {?} */ (view)), currentIndex);\n            }\n        }));\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        function (record) {\n            /** @type {?} */\n            var rowView = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (record.currentIndex)))));\n            rowView.context.$implicit = record.item.data;\n        }));\n        this.updateStickyColumnStyles();\n    };\n    /**\n     * Sets the header row definition to be used. Overrides the header row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the header row after the\n     * table's content is checked.\n     * @docs-private\n     * @deprecated Use `addHeaderRowDef` and `removeHeaderRowDef` instead\n     * @breaking-change 8.0.0\n     */\n    /**\n     * Sets the header row definition to be used. Overrides the header row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the header row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addHeaderRowDef` and `removeHeaderRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    CdkTable.prototype.setHeaderRowDef = /**\n     * Sets the header row definition to be used. Overrides the header row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the header row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addHeaderRowDef` and `removeHeaderRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    function (headerRowDef) {\n        this._customHeaderRowDefs = new Set([headerRowDef]);\n        this._headerRowDefChanged = true;\n    };\n    /**\n     * Sets the footer row definition to be used. Overrides the footer row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the footer row after the\n     * table's content is checked.\n     * @docs-private\n     * @deprecated Use `addFooterRowDef` and `removeFooterRowDef` instead\n     * @breaking-change 8.0.0\n     */\n    /**\n     * Sets the footer row definition to be used. Overrides the footer row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the footer row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addFooterRowDef` and `removeFooterRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    CdkTable.prototype.setFooterRowDef = /**\n     * Sets the footer row definition to be used. Overrides the footer row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the footer row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addFooterRowDef` and `removeFooterRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    function (footerRowDef) {\n        this._customFooterRowDefs = new Set([footerRowDef]);\n        this._footerRowDefChanged = true;\n    };\n    /** Adds a column definition that was not included as part of the content children. */\n    /**\n     * Adds a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    CdkTable.prototype.addColumnDef = /**\n     * Adds a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    function (columnDef) {\n        this._customColumnDefs.add(columnDef);\n    };\n    /** Removes a column definition that was not included as part of the content children. */\n    /**\n     * Removes a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    CdkTable.prototype.removeColumnDef = /**\n     * Removes a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    function (columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    };\n    /** Adds a row definition that was not included as part of the content children. */\n    /**\n     * Adds a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    CdkTable.prototype.addRowDef = /**\n     * Adds a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    function (rowDef) {\n        this._customRowDefs.add(rowDef);\n    };\n    /** Removes a row definition that was not included as part of the content children. */\n    /**\n     * Removes a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    CdkTable.prototype.removeRowDef = /**\n     * Removes a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    function (rowDef) {\n        this._customRowDefs.delete(rowDef);\n    };\n    /** Adds a header row definition that was not included as part of the content children. */\n    /**\n     * Adds a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    CdkTable.prototype.addHeaderRowDef = /**\n     * Adds a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    function (headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    };\n    /** Removes a header row definition that was not included as part of the content children. */\n    /**\n     * Removes a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    CdkTable.prototype.removeHeaderRowDef = /**\n     * Removes a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    function (headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    };\n    /** Adds a footer row definition that was not included as part of the content children. */\n    /**\n     * Adds a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    CdkTable.prototype.addFooterRowDef = /**\n     * Adds a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    function (footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    };\n    /** Removes a footer row definition that was not included as part of the content children. */\n    /**\n     * Removes a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    CdkTable.prototype.removeFooterRowDef = /**\n     * Removes a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    function (footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    };\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    CdkTable.prototype.updateStickyHeaderRowStyles = /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        var tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        var thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        var stickyStates = this._headerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        function (def) { return def.sticky; }));\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        function (def) { return def.resetStickyChanged(); }));\n    };\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    CdkTable.prototype.updateStickyFooterRowStyles = /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var footerRows = this._getRenderedRows(this._footerRowOutlet);\n        /** @type {?} */\n        var tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        var tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        var stickyStates = this._footerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        function (def) { return def.sticky; }));\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        function (def) { return def.resetStickyChanged(); }));\n    };\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     * @return {?}\n     */\n    CdkTable.prototype.updateStickyColumnStyles = /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        var dataRows = this._getRenderedRows(this._rowOutlet);\n        /** @type {?} */\n        var footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // Clear the left and right positioning from all columns in the table across all rows since\n        // sticky columns span across all table sections (header, data, footer)\n        this._stickyStyler.clearStickyPositioning(headerRows.concat(dataRows, footerRows), ['left', 'right']);\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((/**\n         * @param {?} headerRow\n         * @param {?} i\n         * @return {?}\n         */\n        function (headerRow, i) {\n            _this._addStickyColumnStyles([headerRow], _this._headerRowDefs[i]);\n        }));\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        function (rowDef) {\n            // Collect all the rows rendered with this row definition.\n            /** @type {?} */\n            var rows = [];\n            for (var i = 0; i < dataRows.length; i++) {\n                if (_this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            _this._addStickyColumnStyles(rows, rowDef);\n        }));\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((/**\n         * @param {?} footerRow\n         * @param {?} i\n         * @return {?}\n         */\n        function (footerRow, i) {\n            _this._addStickyColumnStyles([footerRow], _this._footerRowDefs[i]);\n        }));\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        function (def) { return def.resetStickyChanged(); }));\n    };\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     * @private\n     * @return {?}\n     */\n    CdkTable.prototype._getAllRenderRows = /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        /** @type {?} */\n        var prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (var i = 0; i < this._data.length; i++) {\n            /** @type {?} */\n            var data = this._data[i];\n            /** @type {?} */\n            var renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (var j = 0; j < renderRowsForData.length; j++) {\n                /** @type {?} */\n                var renderRow = renderRowsForData[j];\n                /** @type {?} */\n                var cache = (/** @type {?} */ (this._cachedRenderRowsMap.get(renderRow.data)));\n                if (cache.has(renderRow.rowDef)) {\n                    (/** @type {?} */ (cache.get(renderRow.rowDef))).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    };\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     * @private\n     * @param {?} data\n     * @param {?} dataIndex\n     * @param {?=} cache\n     * @return {?}\n     */\n    CdkTable.prototype._getRenderRowsForData = /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     * @private\n     * @param {?} data\n     * @param {?} dataIndex\n     * @param {?=} cache\n     * @return {?}\n     */\n    function (data, dataIndex, cache) {\n        /** @type {?} */\n        var rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        function (rowDef) {\n            /** @type {?} */\n            var cachedRenderRows = (cache && cache.has(rowDef)) ? (/** @type {?} */ (cache.get(rowDef))) : [];\n            if (cachedRenderRows.length) {\n                /** @type {?} */\n                var dataRow = (/** @type {?} */ (cachedRenderRows.shift()));\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data: data, rowDef: rowDef, dataIndex: dataIndex };\n            }\n        }));\n    };\n    /** Update the map containing the content's column definitions. */\n    /**\n     * Update the map containing the content's column definitions.\n     * @private\n     * @return {?}\n     */\n    CdkTable.prototype._cacheColumnDefs = /**\n     * Update the map containing the content's column definitions.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._columnDefsByName.clear();\n        /** @type {?} */\n        var columnDefs = mergeQueryListAndSet(this._contentColumnDefs, this._customColumnDefs);\n        columnDefs.forEach((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        function (columnDef) {\n            if (_this._columnDefsByName.has(columnDef.name)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            _this._columnDefsByName.set(columnDef.name, columnDef);\n        }));\n    };\n    /** Update the list of all available row definitions that can be used. */\n    /**\n     * Update the list of all available row definitions that can be used.\n     * @private\n     * @return {?}\n     */\n    CdkTable.prototype._cacheRowDefs = /**\n     * Update the list of all available row definitions that can be used.\n     * @private\n     * @return {?}\n     */\n    function () {\n        this._headerRowDefs =\n            mergeQueryListAndSet(this._contentHeaderRowDefs, this._customHeaderRowDefs);\n        this._footerRowDefs =\n            mergeQueryListAndSet(this._contentFooterRowDefs, this._customFooterRowDefs);\n        this._rowDefs = mergeQueryListAndSet(this._contentRowDefs, this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        /** @type {?} */\n        var defaultRowDefs = this._rowDefs.filter((/**\n         * @param {?} def\n         * @return {?}\n         */\n        function (def) { return !def.when; }));\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    };\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     * @private\n     * @return {?}\n     */\n    CdkTable.prototype._renderUpdatedColumns = /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var columnsDiffReducer = (/**\n         * @param {?} acc\n         * @param {?} def\n         * @return {?}\n         */\n        function (acc, def) { return acc || !!def.getColumnsDiff(); });\n        // Force re-render data rows if the list of column definitions have changed.\n        if (this._rowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed..\n        if (this._headerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderHeaderRows();\n        }\n        if (this._footerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderFooterRows();\n        }\n    };\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     * @private\n     * @param {?} dataSource\n     * @return {?}\n     */\n    CdkTable.prototype._switchDataSource = /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     * @private\n     * @param {?} dataSource\n     * @return {?}\n     */\n    function (dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    };\n    /** Set up a subscription for the data provided by the data source. */\n    /**\n     * Set up a subscription for the data provided by the data source.\n     * @private\n     * @return {?}\n     */\n    CdkTable.prototype._observeRenderChanges = /**\n     * Set up a subscription for the data provided by the data source.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        /** @type {?} */\n        var dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (this.dataSource instanceof Observable) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy)).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        function (data) {\n            _this._data = data || [];\n            _this.renderRows();\n        }));\n    };\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     * @private\n     * @return {?}\n     */\n    CdkTable.prototype._forceRenderHeaderRows = /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        function (def, i) { return _this._renderRow(_this._headerRowOutlet, def, i); }));\n        this.updateStickyHeaderRowStyles();\n        this.updateStickyColumnStyles();\n    };\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     * @private\n     * @return {?}\n     */\n    CdkTable.prototype._forceRenderFooterRows = /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        function (def, i) { return _this._renderRow(_this._footerRowOutlet, def, i); }));\n        this.updateStickyFooterRowStyles();\n        this.updateStickyColumnStyles();\n    };\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    /**\n     * Adds the sticky column styles for the rows according to the columns' stick states.\n     * @private\n     * @param {?} rows\n     * @param {?} rowDef\n     * @return {?}\n     */\n    CdkTable.prototype._addStickyColumnStyles = /**\n     * Adds the sticky column styles for the rows according to the columns' stick states.\n     * @private\n     * @param {?} rows\n     * @param {?} rowDef\n     * @return {?}\n     */\n    function (rows, rowDef) {\n        var _this = this;\n        /** @type {?} */\n        var columnDefs = Array.from(rowDef.columns || []).map((/**\n         * @param {?} columnName\n         * @return {?}\n         */\n        function (columnName) {\n            /** @type {?} */\n            var columnDef = _this._columnDefsByName.get(columnName);\n            if (!columnDef) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return (/** @type {?} */ (columnDef));\n        }));\n        /** @type {?} */\n        var stickyStartStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        function (columnDef) { return columnDef.sticky; }));\n        /** @type {?} */\n        var stickyEndStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        function (columnDef) { return columnDef.stickyEnd; }));\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates);\n    };\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    /**\n     * Gets the list of rows that have been rendered in the row outlet.\n     * @param {?} rowOutlet\n     * @return {?}\n     */\n    CdkTable.prototype._getRenderedRows = /**\n     * Gets the list of rows that have been rendered in the row outlet.\n     * @param {?} rowOutlet\n     * @return {?}\n     */\n    function (rowOutlet) {\n        /** @type {?} */\n        var renderedRows = [];\n        for (var i = 0; i < rowOutlet.viewContainer.length; i++) {\n            /** @type {?} */\n            var viewRef = ((/** @type {?} */ ((/** @type {?} */ (rowOutlet.viewContainer.get(i))))));\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    };\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     * @param {?} data\n     * @param {?} dataIndex\n     * @return {?}\n     */\n    CdkTable.prototype._getRowDefs = /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     * @param {?} data\n     * @param {?} dataIndex\n     * @return {?}\n     */\n    function (data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        /** @type {?} */\n        var rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter((/**\n             * @param {?} def\n             * @return {?}\n             */\n            function (def) { return !def.when || def.when(dataIndex, data); }));\n        }\n        else {\n            /** @type {?} */\n            var rowDef = this._rowDefs.find((/**\n             * @param {?} def\n             * @return {?}\n             */\n            function (def) { return def.when && def.when(dataIndex, data); })) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    };\n    /**\n     * Create the embedded view for the data row template and place it in the correct index location\n     * within the data row view container.\n     */\n    /**\n     * Create the embedded view for the data row template and place it in the correct index location\n     * within the data row view container.\n     * @private\n     * @param {?} renderRow\n     * @param {?} renderIndex\n     * @return {?}\n     */\n    CdkTable.prototype._insertRow = /**\n     * Create the embedded view for the data row template and place it in the correct index location\n     * within the data row view container.\n     * @private\n     * @param {?} renderRow\n     * @param {?} renderIndex\n     * @return {?}\n     */\n    function (renderRow, renderIndex) {\n        /** @type {?} */\n        var rowDef = renderRow.rowDef;\n        /** @type {?} */\n        var context = { $implicit: renderRow.data };\n        this._renderRow(this._rowOutlet, rowDef, renderIndex, context);\n    };\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     * @private\n     * @param {?} outlet\n     * @param {?} rowDef\n     * @param {?} index\n     * @param {?=} context\n     * @return {?}\n     */\n    CdkTable.prototype._renderRow = /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     * @private\n     * @param {?} outlet\n     * @param {?} rowDef\n     * @param {?} index\n     * @param {?=} context\n     * @return {?}\n     */\n    function (outlet, rowDef, index, context) {\n        if (context === void 0) { context = {}; }\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        for (var _a = 0, _b = this._getCellTemplates(rowDef); _a < _b.length; _a++) {\n            var cellTemplate = _b[_a];\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     * @private\n     * @return {?}\n     */\n    CdkTable.prototype._updateRowIndexContext = /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var viewContainer = this._rowOutlet.viewContainer;\n        for (var renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            /** @type {?} */\n            var viewRef = (/** @type {?} */ (viewContainer.get(renderIndex)));\n            /** @type {?} */\n            var context = (/** @type {?} */ (viewRef.context));\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    };\n    /** Gets the column definitions for the provided row def. */\n    /**\n     * Gets the column definitions for the provided row def.\n     * @private\n     * @param {?} rowDef\n     * @return {?}\n     */\n    CdkTable.prototype._getCellTemplates = /**\n     * Gets the column definitions for the provided row def.\n     * @private\n     * @param {?} rowDef\n     * @return {?}\n     */\n    function (rowDef) {\n        var _this = this;\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, (/**\n         * @param {?} columnId\n         * @return {?}\n         */\n        function (columnId) {\n            /** @type {?} */\n            var column = _this._columnDefsByName.get(columnId);\n            if (!column) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        }));\n    };\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n    /**\n     * Adds native table sections (e.g. tbody) and moves the row outlets into them.\n     * @private\n     * @return {?}\n     */\n    CdkTable.prototype._applyNativeTableSections = /**\n     * Adds native table sections (e.g. tbody) and moves the row outlets into them.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var documentFragment = this._document.createDocumentFragment();\n        /** @type {?} */\n        var sections = [\n            { tag: 'thead', outlet: this._headerRowOutlet },\n            { tag: 'tbody', outlet: this._rowOutlet },\n            { tag: 'tfoot', outlet: this._footerRowOutlet },\n        ];\n        for (var _a = 0, sections_1 = sections; _a < sections_1.length; _a++) {\n            var section = sections_1[_a];\n            /** @type {?} */\n            var element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            element.appendChild(section.outlet.elementRef.nativeElement);\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    };\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     * @private\n     * @return {?}\n     */\n    CdkTable.prototype._forceRenderDataRows = /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     * @private\n     * @return {?}\n     */\n    function () {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n        this.updateStickyColumnStyles();\n    };\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     * @private\n     * @return {?}\n     */\n    CdkTable.prototype._checkStickyStates = /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var stickyCheckReducer = (/**\n         * @param {?} acc\n         * @param {?} d\n         * @return {?}\n         */\n        function (acc, d) {\n            return acc || d.hasStickyChanged();\n        });\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this.updateStickyColumnStyles();\n        }\n    };\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     * @private\n     * @return {?}\n     */\n    CdkTable.prototype._setupStickyStyler = /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._platform.isBrowser);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            _this._stickyStyler.direction = value;\n            _this.updateStickyColumnStyles();\n        }));\n    };\n    CdkTable.decorators = [\n        { type: Component, args: [{selector: 'cdk-table, table[cdk-table]',\n                    exportAs: 'cdkTable',\n                    template: CDK_TABLE_TEMPLATE,\n                    host: {\n                        'class': 'cdk-table',\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\n                    // The view for `MatTable` consists entirely of templates declared in other views. As they are\n                    // declared elsewhere, they are checked when their declaration points are checked.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                },] },\n    ];\n    /** @nocollapse */\n    CdkTable.ctorParameters = function () { return [\n        { type: IterableDiffers },\n        { type: ChangeDetectorRef },\n        { type: ElementRef },\n        { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: Platform }\n    ]; };\n    CdkTable.propDecorators = {\n        trackBy: [{ type: Input }],\n        dataSource: [{ type: Input }],\n        multiTemplateDataRows: [{ type: Input }],\n        _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\n        _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\n        _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\n        _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef,] }],\n        _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef,] }],\n        _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef,] }],\n        _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef,] }]\n    };\n    return CdkTable;\n}());\n/**\n * Utility function that gets a merged list of the entries in a QueryList and values of a Set.\n * @template T\n * @param {?} queryList\n * @param {?} set\n * @return {?}\n */\nfunction mergeQueryListAndSet(queryList, set) {\n    return queryList.toArray().concat(Array.from(set));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to specify the text column options.\n * @type {?}\n */\nvar TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nvar CdkTextColumn = /** @class */ (function () {\n    function CdkTextColumn(_table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /**\n         * Alignment of the cell values.\n         */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    Object.defineProperty(CdkTextColumn.prototype, \"name\", {\n        /** Column name that should be used to reference this column. */\n        get: /**\n         * Column name that should be used to reference this column.\n         * @return {?}\n         */\n        function () {\n            return this._name;\n        },\n        set: /**\n         * @param {?} name\n         * @return {?}\n         */\n        function (name) {\n            this._name = name;\n            // With Ivy, inputs can be initialized before static query results are\n            // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n            this._syncColumnDefName();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkTextColumn.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((/**\n                 * @param {?} data\n                 * @param {?} name\n                 * @return {?}\n                 */\n                function (data, name) { return ((/** @type {?} */ (data)))[name]; }));\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CdkTextColumn.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    };\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     * @return {?}\n     */\n    CdkTextColumn.prototype._createDefaultHeaderText = /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var name = this.name;\n        if (isDevMode() && !name) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    };\n    /** Synchronizes the column definition name with the text column name. */\n    /**\n     * Synchronizes the column definition name with the text column name.\n     * @private\n     * @return {?}\n     */\n    CdkTextColumn.prototype._syncColumnDefName = /**\n     * Synchronizes the column definition name with the text column name.\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    };\n    CdkTextColumn.decorators = [\n        { type: Component, args: [{selector: 'cdk-text-column',\n                    template: \"\\n    <ng-container cdkColumnDef>\\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\\\"justify\\\">\\n        {{headerText}}\\n      </th>\\n      <td cdk-cell *cdkCellDef=\\\"let data\\\" [style.text-align]=\\\"justify\\\">\\n        {{dataAccessor(data, name)}}\\n      </td>\\n    </ng-container>\\n  \",\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                },] },\n    ];\n    /** @nocollapse */\n    CdkTextColumn.ctorParameters = function () { return [\n        { type: CdkTable, decorators: [{ type: Optional }] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\n    ]; };\n    CdkTextColumn.propDecorators = {\n        name: [{ type: Input }],\n        headerText: [{ type: Input }],\n        dataAccessor: [{ type: Input }],\n        justify: [{ type: Input }],\n        columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\n        cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\n        headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\n    };\n    return CdkTextColumn;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n];\nvar CdkTableModule = /** @class */ (function () {\n    function CdkTableModule() {\n    }\n    CdkTableModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule],\n                    exports: EXPORTED_DECLARATIONS,\n                    declarations: EXPORTED_DECLARATIONS\n                },] },\n    ];\n    return CdkTableModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CDK_TABLE_TEMPLATE, CdkTable, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, BaseCdkCell, CdkHeaderCell, CdkFooterCell, CdkCell, CDK_ROW_TEMPLATE, BaseRowDef, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkCellOutlet, CdkHeaderRow, CdkFooterRow, CdkRow, CdkTableModule, STICKY_DIRECTIONS, StickyStyler, mixinHasStickyInput, TEXT_COLUMN_OPTIONS, CdkTextColumn };\n//# sourceMappingURL=table.es5.js.map\n","import { AppNotification } from './app-notification.model';\n\n// Actions\nexport class FetchNotifications {\n  static readonly type = '[Notifications] Fetch';\n}\n// new AddNotification({ id: 6, icon: 'notifications', message: 'sumo',createdAt: new Date(Date.now() - 864e5), read: false, native: true}),\nexport class AddNotification {\n  static readonly type = '[Notifications] Add';\n  constructor(public readonly payload: AppNotification) {}\n}\n\nexport class DeleteNotification {\n  static readonly type = '[Notifications] Delete';\n  constructor(public readonly payload: AppNotification) {}\n}\n\nexport class MarkAsRead {\n  static readonly type = '[Notifications] MarkAsRead';\n  constructor(public readonly payload: AppNotification) {}\n}\n\nexport class MarkAllAsRead {\n  static readonly type = '[Notifications] MarkAllAsRead';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { __extends } from 'tslib';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef, Inject, InjectionToken, Input, Optional, Output, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { mixinDisableRipple, mixinTabIndex, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * @return {?}\n */\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent'\n    };\n}\n// Increasing integer for generating unique ids for radio components.\n/** @type {?} */\nvar nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * \\@docs-private\n * @type {?}\n */\nvar MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    function () { return MatRadioGroup; })),\n    multi: true\n};\n/**\n * Change event object emitted by MatRadio and MatRadioGroup.\n */\nvar  /**\n * Change event object emitted by MatRadio and MatRadioGroup.\n */\nMatRadioChange = /** @class */ (function () {\n    function MatRadioChange(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n    return MatRadioChange;\n}());\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nvar MatRadioGroup = /** @class */ (function () {\n    function MatRadioGroup(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /**\n         * Selected value for the radio group.\n         */\n        this._value = null;\n        /**\n         * The HTML name attribute applied to radio buttons in this group.\n         */\n        this._name = \"mat-radio-group-\" + nextUniqueId++;\n        /**\n         * The currently selected radio button. Should match value.\n         */\n        this._selected = null;\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n         */\n        this._labelPosition = 'after';\n        /**\n         * Whether the radio group is disabled.\n         */\n        this._disabled = false;\n        /**\n         * Whether the radio group is required.\n         */\n        this._required = false;\n        /**\n         * The method to be called in order to update ngModel\n         */\n        this._controlValueAccessorChangeFn = (/**\n         * @return {?}\n         */\n        function () { });\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * \\@docs-private\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        function () { });\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    Object.defineProperty(MatRadioGroup.prototype, \"name\", {\n        /** Name of the radio button group. All radio buttons inside this group will use this name. */\n        get: /**\n         * Name of the radio button group. All radio buttons inside this group will use this name.\n         * @return {?}\n         */\n        function () { return this._name; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._name = value;\n            this._updateRadioButtonNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioGroup.prototype, \"labelPosition\", {\n        /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n        get: /**\n         * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n         * @return {?}\n         */\n        function () {\n            return this._labelPosition;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this._labelPosition = v === 'before' ? 'before' : 'after';\n            this._markRadiosForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioGroup.prototype, \"value\", {\n        /**\n         * Value for the radio-group. Should equal the value of the selected radio button if there is\n         * a corresponding radio button with a matching value. If there is not such a corresponding\n         * radio button, this value persists to be applied in case a new radio button is added with a\n         * matching value.\n         */\n        get: /**\n         * Value for the radio-group. Should equal the value of the selected radio button if there is\n         * a corresponding radio button with a matching value. If there is not such a corresponding\n         * radio button, this value persists to be applied in case a new radio button is added with a\n         * matching value.\n         * @return {?}\n         */\n        function () { return this._value; },\n        set: /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        function (newValue) {\n            if (this._value !== newValue) {\n                // Set this before proceeding to ensure no circular loop occurs with selection.\n                this._value = newValue;\n                this._updateSelectedRadioFromValue();\n                this._checkSelectedRadioButton();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatRadioGroup.prototype._checkSelectedRadioButton = /**\n     * @return {?}\n     */\n    function () {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    };\n    Object.defineProperty(MatRadioGroup.prototype, \"selected\", {\n        /**\n         * The currently selected radio button. If set to a new radio button, the radio group value\n         * will be updated to match the new selected button.\n         */\n        get: /**\n         * The currently selected radio button. If set to a new radio button, the radio group value\n         * will be updated to match the new selected button.\n         * @return {?}\n         */\n        function () { return this._selected; },\n        set: /**\n         * @param {?} selected\n         * @return {?}\n         */\n        function (selected) {\n            this._selected = selected;\n            this.value = selected ? selected.value : null;\n            this._checkSelectedRadioButton();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioGroup.prototype, \"disabled\", {\n        /** Whether the radio group is disabled */\n        get: /**\n         * Whether the radio group is disabled\n         * @return {?}\n         */\n        function () { return this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n            this._markRadiosForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioGroup.prototype, \"required\", {\n        /** Whether the radio group is required */\n        get: /**\n         * Whether the radio group is required\n         * @return {?}\n         */\n        function () { return this._required; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._required = coerceBooleanProperty(value);\n            this._markRadiosForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     * @return {?}\n     */\n    MatRadioGroup.prototype.ngAfterContentInit = /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     * @return {?}\n     */\n    function () {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n    };\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     * @return {?}\n     */\n    MatRadioGroup.prototype._touch = /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     * @return {?}\n     */\n    function () {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    MatRadioGroup.prototype._updateRadioButtonNames = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._radios) {\n            this._radios.forEach((/**\n             * @param {?} radio\n             * @return {?}\n             */\n            function (radio) {\n                radio.name = _this.name;\n                radio._markForCheck();\n            }));\n        }\n    };\n    /** Updates the `selected` radio button from the internal _value state. */\n    /**\n     * Updates the `selected` radio button from the internal _value state.\n     * @private\n     * @return {?}\n     */\n    MatRadioGroup.prototype._updateSelectedRadioFromValue = /**\n     * Updates the `selected` radio button from the internal _value state.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // If the value already matches the selected radio, do nothing.\n        /** @type {?} */\n        var isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((/**\n             * @param {?} radio\n             * @return {?}\n             */\n            function (radio) {\n                radio.checked = _this.value === radio.value;\n                if (radio.checked) {\n                    _this._selected = radio;\n                }\n            }));\n        }\n    };\n    /** Dispatch change event with current selection and group value. */\n    /**\n     * Dispatch change event with current selection and group value.\n     * @return {?}\n     */\n    MatRadioGroup.prototype._emitChangeEvent = /**\n     * Dispatch change event with current selection and group value.\n     * @return {?}\n     */\n    function () {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange((/** @type {?} */ (this._selected)), this._value));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatRadioGroup.prototype._markRadiosForCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (this._radios) {\n            this._radios.forEach((/**\n             * @param {?} radio\n             * @return {?}\n             */\n            function (radio) { return radio._markForCheck(); }));\n        }\n    };\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    MatRadioGroup.prototype.writeValue = /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    };\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    MatRadioGroup.prototype.registerOnChange = /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    function (fn) {\n        this._controlValueAccessorChangeFn = fn;\n    };\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    MatRadioGroup.prototype.registerOnTouched = /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    function (fn) {\n        this.onTouched = fn;\n    };\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled Whether the control should be disabled.\n     * @return {?}\n     */\n    MatRadioGroup.prototype.setDisabledState = /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled Whether the control should be disabled.\n     * @return {?}\n     */\n    function (isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    };\n    MatRadioGroup.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-radio-group',\n                    exportAs: 'matRadioGroup',\n                    providers: [MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n                    host: {\n                        'role': 'radiogroup',\n                        'class': 'mat-radio-group',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatRadioGroup.ctorParameters = function () { return [\n        { type: ChangeDetectorRef }\n    ]; };\n    MatRadioGroup.propDecorators = {\n        change: [{ type: Output }],\n        _radios: [{ type: ContentChildren, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    function () { return MatRadioButton; })), { descendants: true },] }],\n        color: [{ type: Input }],\n        name: [{ type: Input }],\n        labelPosition: [{ type: Input }],\n        value: [{ type: Input }],\n        selected: [{ type: Input }],\n        disabled: [{ type: Input }],\n        required: [{ type: Input }]\n    };\n    return MatRadioGroup;\n}());\n// Boilerplate for applying mixins to MatRadioButton.\n/**\n * \\@docs-private\n */\nvar \n// Boilerplate for applying mixins to MatRadioButton.\n/**\n * \\@docs-private\n */\nMatRadioButtonBase = /** @class */ (function () {\n    function MatRadioButtonBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatRadioButtonBase;\n}());\n// As per Material design specifications the selection control radio should use the accent color\n// palette by default. https://material.io/guidelines/components/selection-controls.html\n/** @type {?} */\nvar _MatRadioButtonMixinBase = mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n */\nvar MatRadioButton = /** @class */ (function (_super) {\n    __extends(MatRadioButton, _super);\n    function MatRadioButton(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, _animationMode, _providerOverride) {\n        var _this = _super.call(this, elementRef) || this;\n        _this._changeDetector = _changeDetector;\n        _this._focusMonitor = _focusMonitor;\n        _this._radioDispatcher = _radioDispatcher;\n        _this._animationMode = _animationMode;\n        _this._providerOverride = _providerOverride;\n        _this._uniqueId = \"mat-radio-\" + ++nextUniqueId;\n        /**\n         * The unique ID for the radio button.\n         */\n        _this.id = _this._uniqueId;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        _this.change = new EventEmitter();\n        /**\n         * Whether this radio is checked.\n         */\n        _this._checked = false;\n        /**\n         * Value assigned to this radio.\n         */\n        _this._value = null;\n        /**\n         * Unregister function for _radioDispatcher\n         */\n        _this._removeUniqueSelectionListener = (/**\n         * @return {?}\n         */\n        function () { });\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        _this.radioGroup = radioGroup;\n        _this._removeUniqueSelectionListener =\n            _radioDispatcher.listen((/**\n             * @param {?} id\n             * @param {?} name\n             * @return {?}\n             */\n            function (id, name) {\n                if (id !== _this.id && name === _this.name) {\n                    _this.checked = false;\n                }\n            }));\n        return _this;\n    }\n    Object.defineProperty(MatRadioButton.prototype, \"checked\", {\n        /** Whether this radio button is checked. */\n        get: /**\n         * Whether this radio button is checked.\n         * @return {?}\n         */\n        function () { return this._checked; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var newCheckedState = coerceBooleanProperty(value);\n            if (this._checked !== newCheckedState) {\n                this._checked = newCheckedState;\n                if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                    this.radioGroup.selected = this;\n                }\n                else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                    // When unchecking the selected radio button, update the selected radio\n                    // property on the group.\n                    this.radioGroup.selected = null;\n                }\n                if (newCheckedState) {\n                    // Notify all radio buttons with the same name to un-check.\n                    this._radioDispatcher.notify(this.id, this.name);\n                }\n                this._changeDetector.markForCheck();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioButton.prototype, \"value\", {\n        /** The value of this radio button. */\n        get: /**\n         * The value of this radio button.\n         * @return {?}\n         */\n        function () { return this._value; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (this._value !== value) {\n                this._value = value;\n                if (this.radioGroup !== null) {\n                    if (!this.checked) {\n                        // Update checked when the value changed to match the radio group's value\n                        this.checked = this.radioGroup.value === value;\n                    }\n                    if (this.checked) {\n                        this.radioGroup.selected = this;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioButton.prototype, \"labelPosition\", {\n        /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n        get: /**\n         * Whether the label should appear after or before the radio button. Defaults to 'after'\n         * @return {?}\n         */\n        function () {\n            return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._labelPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioButton.prototype, \"disabled\", {\n        /** Whether the radio button is disabled. */\n        get: /**\n         * Whether the radio button is disabled.\n         * @return {?}\n         */\n        function () {\n            return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var newDisabledState = coerceBooleanProperty(value);\n            if (this._disabled !== newDisabledState) {\n                this._disabled = newDisabledState;\n                this._changeDetector.markForCheck();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioButton.prototype, \"required\", {\n        /** Whether the radio button is required. */\n        get: /**\n         * Whether the radio button is required.\n         * @return {?}\n         */\n        function () {\n            return this._required || (this.radioGroup && this.radioGroup.required);\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._required = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioButton.prototype, \"color\", {\n        /** Theme color of the radio button. */\n        get: /**\n         * Theme color of the radio button.\n         * @return {?}\n         */\n        function () {\n            return this._color ||\n                (this.radioGroup && this.radioGroup.color) ||\n                this._providerOverride && this._providerOverride.color || 'accent';\n        },\n        set: /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        function (newValue) { this._color = newValue; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioButton.prototype, \"inputId\", {\n        /** ID of the native input element inside `<mat-radio-button>` */\n        get: /**\n         * ID of the native input element inside `<mat-radio-button>`\n         * @return {?}\n         */\n        function () { return (this.id || this._uniqueId) + \"-input\"; },\n        enumerable: true,\n        configurable: true\n    });\n    /** Focuses the radio button. */\n    /**\n     * Focuses the radio button.\n     * @return {?}\n     */\n    MatRadioButton.prototype.focus = /**\n     * Focuses the radio button.\n     * @return {?}\n     */\n    function () {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard');\n    };\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     * @return {?}\n     */\n    MatRadioButton.prototype._markForCheck = /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     * @return {?}\n     */\n    function () {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    };\n    /**\n     * @return {?}\n     */\n    MatRadioButton.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatRadioButton.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        function (focusOrigin) {\n            if (!focusOrigin && _this.radioGroup) {\n                _this.radioGroup._touch();\n            }\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    MatRadioButton.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    };\n    /** Dispatch change event with current value. */\n    /**\n     * Dispatch change event with current value.\n     * @private\n     * @return {?}\n     */\n    MatRadioButton.prototype._emitChangeEvent = /**\n     * Dispatch change event with current value.\n     * @private\n     * @return {?}\n     */\n    function () {\n        this.change.emit(new MatRadioChange(this, this._value));\n    };\n    /**\n     * @return {?}\n     */\n    MatRadioButton.prototype._isRippleDisabled = /**\n     * @return {?}\n     */\n    function () {\n        return this.disableRipple || this.disabled;\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatRadioButton.prototype._onInputClick = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    };\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     */\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     * @param {?} event\n     * @return {?}\n     */\n    MatRadioButton.prototype._onInputChange = /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        /** @type {?} */\n        var groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this._emitChangeEvent();\n        if (this.radioGroup) {\n            this.radioGroup._controlValueAccessorChangeFn(this.value);\n            if (groupValueChanged) {\n                this.radioGroup._emitChangeEvent();\n            }\n        }\n    };\n    MatRadioButton.decorators = [\n        { type: Component, args: [{selector: 'mat-radio-button',\n                    template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label><div class=\\\"mat-radio-container\\\"><div class=\\\"mat-radio-outer-circle\\\"></div><div class=\\\"mat-radio-inner-circle\\\"></div><div mat-ripple class=\\\"mat-radio-ripple\\\" [matRippleTrigger]=\\\"label\\\" [matRippleDisabled]=\\\"_isRippleDisabled()\\\" [matRippleCentered]=\\\"true\\\" [matRippleRadius]=\\\"20\\\" [matRippleAnimation]=\\\"{enterDuration: 150}\\\"><div class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></div></div><input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\" [id]=\\\"inputId\\\" [checked]=\\\"checked\\\" [disabled]=\\\"disabled\\\" [tabIndex]=\\\"tabIndex\\\" [attr.name]=\\\"name\\\" [required]=\\\"required\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-labelledby]=\\\"ariaLabelledby\\\" [attr.aria-describedby]=\\\"ariaDescribedby\\\" (change)=\\\"_onInputChange($event)\\\" (click)=\\\"_onInputClick($event)\\\"></div><div class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\"><span style=\\\"display:none\\\">&nbsp;</span><ng-content></ng-content></div></label>\",\n                    styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(.5)}@media (-ms-high-contrast:active){.mat-radio-checked .mat-radio-inner-circle{border:solid 10px}}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple,.mat-radio-persistent-ripple{opacity:0}@media (hover:none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}@media (-ms-high-contrast:active){.mat-radio-disabled{opacity:.5}}\"],\n                    inputs: ['disableRipple', 'tabIndex'],\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matRadioButton',\n                    host: {\n                        'class': 'mat-radio-button',\n                        '[class.mat-radio-checked]': 'checked',\n                        '[class.mat-radio-disabled]': 'disabled',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        '[class.mat-primary]': 'color === \"primary\"',\n                        '[class.mat-accent]': 'color === \"accent\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                        // Needs to be -1 so the `focus` event still fires.\n                        '[attr.tabindex]': '-1',\n                        '[attr.id]': 'id',\n                        // Note: under normal conditions focus shouldn't land on this element, however it may be\n                        // programmatically set, for example inside of a focus trap, in this case we want to forward\n                        // the focus to the native element.\n                        '(focus)': '_inputElement.nativeElement.focus()',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                },] },\n    ];\n    /** @nocollapse */\n    MatRadioButton.ctorParameters = function () { return [\n        { type: MatRadioGroup, decorators: [{ type: Optional }] },\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: FocusMonitor },\n        { type: UniqueSelectionDispatcher },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_DEFAULT_OPTIONS,] }] }\n    ]; };\n    MatRadioButton.propDecorators = {\n        id: [{ type: Input }],\n        name: [{ type: Input }],\n        ariaLabel: [{ type: Input, args: ['aria-label',] }],\n        ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n        ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n        checked: [{ type: Input }],\n        value: [{ type: Input }],\n        labelPosition: [{ type: Input }],\n        disabled: [{ type: Input }],\n        required: [{ type: Input }],\n        color: [{ type: Input }],\n        change: [{ type: Output }],\n        _inputElement: [{ type: ViewChild, args: ['input', { static: false },] }]\n    };\n    return MatRadioButton;\n}(_MatRadioButtonMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatRadioModule = /** @class */ (function () {\n    function MatRadioModule() {\n    }\n    MatRadioModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule, MatRippleModule, MatCommonModule],\n                    exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\n                    declarations: [MatRadioGroup, MatRadioButton],\n                },] },\n    ];\n    return MatRadioModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatRadioModule, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioChange, MatRadioGroup, MatRadioButton };\n//# sourceMappingURL=radio.es5.js.map\n","import { Component, Input, OnInit } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'ngx-sidenav-toggle',\n  templateUrl: './sidenav-toggle.component.html',\n  styleUrls: ['./sidenav-toggle.component.scss'],\n})\nexport class SidenavToggleComponent implements OnInit {\n  @Input()\n  sidenav: MatSidenav;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  openSidenav() {\n    this.sidenav.open();\n  }\n}\n","<button class=\"button\" (click)=\"openSidenav()\" mat-icon-button fxHide.gt-md><mat-icon>menu</mat-icon></button>\n","import { Directive, ElementRef, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n  selector: '[ngxClickOutside]',\n})\nexport class ClickOutsideDirective {\n  @Output()\n  public ngxClickOutside = new EventEmitter<MouseEvent>();\n\n  constructor(private elementRef: ElementRef) {}\n\n  @HostListener('document:click', ['$event', '$event.target'])\n  public onClick(event: MouseEvent, targetElement: HTMLElement): void {\n    if (!targetElement) {\n      return;\n    }\n\n    const clickedInside = this.elementRef.nativeElement.contains(targetElement);\n    if (!clickedInside) {\n      this.ngxClickOutside.emit(event);\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { MenuItem, MenuService } from '@ngx-starter-kit/navigator';\n\n@Component({\n  selector: 'ngx-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.scss'],\n})\nexport class SearchBarComponent implements OnInit {\n  input: string;\n  focused: boolean;\n\n  recentlyVisited: MenuItem[] = [];\n\n  constructor(private router: Router, private sidenavService: MenuService) {}\n\n  ngOnInit() {\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        const item = this.sidenavService.getItemByRoute(event.urlAfterRedirects);\n\n        if (item) {\n          const index = this.recentlyVisited.indexOf(item);\n          if (index > -1) {\n            this.recentlyVisited.splice(index, 1);\n          }\n\n          this.recentlyVisited.unshift(item);\n\n          if (this.recentlyVisited.length > 5) {\n            this.recentlyVisited.pop();\n          }\n        }\n      }\n    });\n  }\n\n  openDropdown() {\n    this.focused = true;\n  }\n\n  closeDropdown() {\n    this.focused = false;\n  }\n}\n","<div\n  class=\"search-wrapper\"\n  fxLayout=\"row\"\n  [ngClass]=\"{ focus: focused, 'has-input': input }\"\n  fxFlex\n  (ngxClickOutside)=\"closeDropdown()\"\n>\n  <mat-icon class=\"search-icon\">search</mat-icon>\n  <input\n    #searchInput\n    type=\"search\"\n    autocomplete=\"off\"\n    spellcheck=\"false\"\n    class=\"search-input\"\n    (focus)=\"openDropdown()\"\n    placeholder=\"Search...\"\n  />\n\n  <div class=\"search-dropdown mat-elevation-z1\">\n    <div class=\"content results\" *ngIf=\"input\" fxLayout=\"column\">\n      <div class=\"heading\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        <mat-icon class=\"icon\">search</mat-icon>\n        Search results for: {{ searchInput.value }}\n      </div>\n      <div class=\"items\">\n        <div class=\"item\" matRipple>Overview</div>\n        <div class=\"item\" matRipple>Dashboard</div>\n        <div class=\"item\" matRipple>Servers</div>\n        <div class=\"item\" matRipple>Grid</div>\n        <div class=\"item\" matRipple>Profile</div>\n        <div class=\"item\" matRipple>Home</div>\n      </div>\n    </div>\n\n    <div class=\"content recents\" fxLayout=\"row\" *ngIf=\"!input\">\n      <div class=\"recently\" fxLayout=\"column\" fxFlex>\n        <div class=\"heading\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n          <mat-icon class=\"icon\">restore</mat-icon>\n          Recently Visited\n        </div>\n        <div class=\"items\">\n          <div\n            class=\"item\"\n            matRipple\n            *ngFor=\"let item of recentlyVisited\"\n            [routerLink]=\"item.route\"\n            (click)=\"closeDropdown()\"\n          >\n            {{ item.name }}\n          </div>\n        </div>\n      </div>\n      <div class=\"frequently\" fxLayout=\"column\" fxFlex fxFlexOffset=\"16px\">\n        <div class=\"heading\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n          <mat-icon class=\"icon\">youtube_searched_for</mat-icon>\n          Frequently Visited\n        </div>\n        <div class=\"items\">\n          <div class=\"item\" matRipple [routerLink]=\"['/dashboard']\">Dashboard</div>\n          <div class=\"item\" matRipple [routerLink]=\"['/dashboard/overview']\">Overview</div>\n          <div class=\"item\" matRipple [routerLink]=\"['/dashboard/experiments']\">Experiments</div>\n          <div class=\"item\" matRipple [routerLink]=\"['/dashboard/grid']\">Grid</div>\n          <div class=\"item\" matRipple [routerLink]=\"['/dashboard/experiments/animations']\">Animations</div>\n          <div class=\"item\" matRipple [routerLink]=\"['/home']\">Home</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport * as screenfull from 'screenfull';\n\n@Component({\n  selector: 'ngx-fullscreen-toggle',\n  templateUrl: './fullscreen-toggle.component.html',\n  styleUrls: ['./fullscreen-toggle.component.scss'],\n})\nexport class FullscreenToggleComponent implements OnInit {\n  isFullscreen: boolean;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  toggleFullscreen() {\n    if ((screenfull as any).enabled) {\n      (screenfull as any).toggle();\n      this.isFullscreen = !this.isFullscreen;\n    }\n  }\n}\n","<button class=\"button\" mat-button (click)=\"toggleFullscreen()\" fxFlex=\"grow\">\n  <mat-icon *ngIf=\"!isFullscreen\">fullscreen</mat-icon>\n  <mat-icon *ngIf=\"isFullscreen\">fullscreen_exit</mat-icon>\n</button>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material';\n\n@Component({\n  selector: 'ngx-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n})\nexport class SearchComponent implements OnInit {\n  isOpen: boolean;\n\n  @ViewChild('input', { read: ElementRef, static: true }) input: ElementRef;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  open() {\n    this.isOpen = true;\n\n    setTimeout(() => {\n      this.input.nativeElement.focus();\n    }, 100);\n  }\n\n  close() {\n    this.isOpen = false;\n  }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center stretch\" fxFlex=\"grow\">\n  <button class=\"search-button\" mat-button (click)=\"open()\"><mat-icon>search</mat-icon></button>\n  <mat-form-field class=\"search\" [class.search-open]=\"isOpen\" fxFlex=\"auto\">\n    <input #input (blur)=\"close()\" matInput placeholder=\"Search...\" />\n  </mat-form-field>\n</div>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { listFadeAnimation } from '@ngx-starter-kit/animations';\n\nimport { DeleteNotification, FetchNotifications, MarkAllAsRead, MarkAsRead } from './notifications.actions';\nimport { Observable } from 'rxjs';\nimport { NotificationsState } from './notifications.state';\nimport { AppNotification } from './app-notification.model';\n\n@Component({\n  selector: 'ngx-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss'],\n  animations: [listFadeAnimation],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NotificationsComponent implements OnInit {\n  @Select(NotificationsState) notifications$: Observable<AppNotification>;\n  @Select(NotificationsState.unReadCount) unReadCount$: Observable<number>;\n  isOpen: boolean;\n\n  constructor(private store: Store) {}\n\n  ngOnInit() {\n    this.store.dispatch(new FetchNotifications());\n  }\n\n  markAsRead(notification) {\n    this.store.dispatch(new MarkAsRead(notification));\n  }\n\n  dismiss(notification, event) {\n    event.stopPropagation();\n    this.store.dispatch(new DeleteNotification(notification));\n  }\n\n  toggleDropdown() {\n    this.isOpen = !this.isOpen;\n  }\n\n  onClickOutside() {\n    this.isOpen = false;\n  }\n\n  markAllAsRead() {\n    this.store.dispatch(new MarkAllAsRead());\n  }\n\n  trackById(index: number, item: AppNotification) {\n    return item.id;\n  }\n}\n","<div\n  class=\"notification-container\"\n  (ngxClickOutside)=\"onClickOutside()\"\n  fxFlex=\"grow\"\n  fxLayout=\"row\"\n  fxLayoutAlign=\"start center\"\n>\n  <button class=\"button\" type=\"button\" mat-button (click)=\"toggleDropdown()\" [class.open]=\"isOpen\" fxFlex=\"grow\">\n    <span *ngIf=\"(unReadCount$ | async) > 0; then withBadge; else withOutBadge\"></span>\n    <ng-template #withBadge>\n      <mat-icon matBadge=\"{{ unReadCount$ | async }}\" matBadgePosition=\"above after\" matBadgeColor=\"accent\"\n        >notifications_active</mat-icon\n      >\n    </ng-template>\n    <ng-template #withOutBadge><mat-icon>notifications_none</mat-icon></ng-template>\n  </button>\n\n  <div class=\"dropdown mat-elevation-z1\" [class.open]=\"isOpen\">\n    <div class=\"card\">\n      <div class=\"header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <div class=\"title\">\n          <div class=\"name\">Notifications</div>\n          <div class=\"extra\">You have {{ unReadCount$ | async }} new notifications.</div>\n        </div>\n        <button type=\"button\" mat-icon-button><mat-icon class=\"icon\">settings</mat-icon></button>\n      </div>\n\n      <ng-container *ngLet=\"(notifications$ | async) as notifications\">\n        <ng-container *ngIf=\"notifications?.length !== 0; then thenBlock; else elseBlock\"></ng-container>\n        <ng-template #thenBlock>\n          <perfect-scrollbar class=\"content\">\n            <ng-container *ngFor=\"let notification of notifications; last as isLast; trackBy: trackById\">\n              <div\n                class=\"notification\"\n                (click)=\"markAsRead(notification)\"\n                [ngClass]=\"notification.color\"\n                [class.read]=\"notification.read\"\n                fxLayout=\"row\"\n                fxLayoutAlign=\"start center\"\n                matRipple\n                [@listFade]\n              >\n                <mat-icon class=\"icon\">{{ notification.icon }}</mat-icon>\n                <div class=\"title\" fxLayout=\"column\">\n                  <div class=\"name\">{{ notification.body }}</div>\n                  <div class=\"time\">{{ notification.createdAt | formatTimeInWords }}</div>\n                </div>\n                <span fxFlex></span>\n                <button (click)=\"dismiss(notification, $event)\" type=\"button\" mat-icon-button>\n                  <mat-icon class=\"close\">close</mat-icon>\n                </button>\n              </div>\n              <div class=\"divider\" *ngIf=\"!isLast\"></div>\n            </ng-container>\n          </perfect-scrollbar>\n        </ng-template>\n        <ng-template #elseBlock>\n          <div class=\"empty\" fxLayout=\"row\" fxLayoutAlign=\"center center\" [@listFade]>\n            All fine! No notifications right now.\n          </div>\n        </ng-template>\n\n        <div class=\"footer\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n          <div class=\"action\" (click)=\"markAllAsRead()\">Mark all as read</div>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { Logout } from '@ngx-starter-kit/auth';\n// import { Logout } from '@ngx-starter-kit/oidc';\nimport { Store } from '@ngxs/store';\n\n@Component({\n  selector: 'ngx-user-menu',\n  templateUrl: './user-menu.component.html',\n  styleUrls: ['./user-menu.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserMenuComponent implements OnInit {\n  isOpen: boolean;\n  @Input()\n  currentUser = null;\n\n  constructor(private store: Store) {}\n\n  ngOnInit() {\n    if (this.currentUser.given_name && this.currentUser.given_name === 'Sumanth') {\n      this.currentUser.photoURL = 'assets/img/avatars/user-image.jpg';\n    }\n  }\n\n  toggleDropdown() {\n    this.isOpen = !this.isOpen;\n  }\n\n  onClickOutside() {\n    this.isOpen = false;\n  }\n\n  public logout() {\n    this.store.dispatch(new Logout());\n  }\n}\n","<div class=\"user-container\" #userButton (ngxClickOutside)=\"onClickOutside()\">\n  <button class=\"user-button\" mat-button (click)=\"toggleDropdown()\" [class.open]=\"isOpen\">\n    <span fxLayout=\"row\" fxLayoutAlign=\"start center\">\n      <img class=\"user-avatar\" [src]=\"currentUser?.photoURL || 'assets/img/avatars/noavatar.png'\" />\n      <span class=\"name\" fxHide fxShow.gt-sm>{{ currentUser?.given_name || 'Sumo Demo' }}</span>\n      <mat-icon class=\"icon\" fxHide fxShow.gt-sm>keyboard_arrow_down</mat-icon>\n    </span>\n  </button>\n\n  <div class=\"dropdown mat-elevation-z1\" [class.open]=\"isOpen\">\n    <div class=\"content\">\n      <mat-nav-list>\n        <mat-list-item>\n          <a matLine [routerLink]=\"['/dashboard/profile']\">Profile</a>\n          <button mat-icon-button><mat-icon>account_circle</mat-icon></button>\n        </mat-list-item>\n        <mat-list-item>\n          <a matLine [routerLink]=\"['/dashboard/settings']\">Settings</a>\n          <button mat-icon-button><mat-icon>settings</mat-icon></button>\n        </mat-list-item>\n        <mat-list-item>\n          <a matLine [routerLink]=\"['/home/faq']\">Help</a> <button mat-icon-button><mat-icon>help</mat-icon></button>\n        </mat-list-item>\n\n        <mat-divider></mat-divider>\n\n        <mat-list-item (click)=\"logout()\">\n          <a matLine>Logout</a> <button mat-icon-button><mat-icon>exit_to_app</mat-icon></button>\n        </mat-list-item>\n      </mat-nav-list>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'ngx-quickpanel-toggle',\n  templateUrl: './quickpanel-toggle.component.html',\n  styleUrls: ['./quickpanel-toggle.component.scss'],\n})\nexport class QuickpanelToggleComponent implements OnInit {\n  @Input()\n  quickpanel: MatSidenav;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  openQuickpanel() {\n    this.quickpanel.open();\n  }\n}\n","<button mat-button class=\"button\" (click)=\"openQuickpanel()\" fxFlex=\"grow\">\n  <mat-icon>format_align_right</mat-icon>\n</button>\n","<mat-toolbar class=\"toolbar\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n    <ngx-sidenav-toggle [sidenav]=\"sidenav\"></ngx-sidenav-toggle>\n\n    <img\n      class=\"logo\"\n      [routerLink]=\"['/']\"\n      fxHide.gt-md\n      fxHide.xs\n      style=\"height: 35px; margin-left: 24px; margin-bottom: -5px;\"\n      src=\"assets/img/logo_text_dark.png\"\n    />\n\n    <ngx-search-bar fxFlex=\"500px\" fxHide fxShow.gt-md></ngx-search-bar>\n  </div>\n\n  <div fxLayout=\"row\">\n    <ngx-fullscreen-toggle class=\"button\" fxHide fxShow.gt-sm></ngx-fullscreen-toggle>\n\n    <ngx-search class=\"button\" fxHide fxShow.gt-sm></ngx-search>\n\n    <ngx-notifications class=\"button\" fxHide fxShow.gt-sm></ngx-notifications>\n\n    <!-- <theme-picker class=\"button\" fxShow fxHide.lt-md></theme-picker> -->\n\n    <ngx-user-menu class=\"button\" [currentUser]=\"profile$ | async\"></ngx-user-menu>\n\n    <ngx-quickpanel-toggle class=\"button\" [quickpanel]=\"quickpanel\"></ngx-quickpanel-toggle>\n  </div>\n</mat-toolbar>\n","import { Action, NgxsAfterBootstrap, Selector, State, StateContext } from '@ngxs/store';\nimport { ImmutableContext, ImmutableSelector } from '@ngxs-labs/immer-adapter';\nimport { append, patch, removeItem, updateItem } from '@ngxs/store/operators';\nimport { tap } from 'rxjs/operators';\nimport { AppNotification } from './app-notification.model';\nimport { NotificationsService } from './notifications.service';\nimport {\n  FetchNotifications,\n  AddNotification,\n  DeleteNotification,\n  MarkAsRead,\n  MarkAllAsRead,\n} from './notifications.actions';\n\n/** @dynamic */\n@State<AppNotification[]>({\n  name: 'notifications',\n  defaults: [],\n})\nexport class NotificationsState implements NgxsAfterBootstrap {\n  constructor(private notificationsService: NotificationsService) {}\n\n  @Selector()\n  static unReadCount(state: AppNotification[]) {\n    return state.filter(note => !note.read).length;\n  }\n\n  ngxsAfterBootstrap(ctx: StateContext<AppNotification[]>) {\n    console.log('State initialized, now getting Notifications.');\n    /**\n     * well, this way, it will be called before dashboard is routed due to preloadingStrategy.\n     * we will loose lazy loading benefits. so lets use ngxsAfterBootstrap on component to load initial data.\n     */\n    // ctx.dispatch(new FetchNotifications())\n  }\n\n  @ImmutableContext()\n  @Action(AddNotification)\n  add(ctx: StateContext<AppNotification[]>, { payload }: AddNotification) {\n    ctx.setState((state: AppNotification[]) => {\n      state.push(payload);\n      return state;\n    });\n  }\n\n  @Action(FetchNotifications, { cancelUncompleted: true })\n  fetchNotifications({ getState, patchState, setState }: StateContext<AppNotification[]>) {\n    return this.notificationsService.getAll().pipe(tap(res => setState(res)));\n  }\n\n  // @ImmutableContext()\n  // @Action(DeleteNotification)\n  // delete(ctx: StateContext<AppNotification[]>, { payload }: DeleteNotification) {\n  //   ctx.setState((state: AppNotification[]) => {\n  //     return state.splice(state.findIndex(note => note.id === payload.id), 1);\n  //     // or (slower):\n  //     // return state.filter(note => note.id !== payload.id);\n  //   });\n  // }\n\n  @Action(DeleteNotification)\n  delete(ctx: StateContext<AppNotification[]>, { payload }: DeleteNotification) {\n    ctx.setState(removeItem<AppNotification>(note => note.id === payload.id));\n  }\n\n  @ImmutableContext()\n  @Action(MarkAsRead)\n  markAsRead(ctx: StateContext<AppNotification[]>, { payload }: MarkAsRead) {\n    ctx.setState((state: AppNotification[]) => {\n      state[state.findIndex(note => note.id === payload.id)].read = true;\n      return state;\n    });\n  }\n\n  @ImmutableContext()\n  @Action(MarkAllAsRead)\n  markAllAsRead(ctx: StateContext<AppNotification[]>) {\n    ctx.setState((state: AppNotification[]) => {\n      state.forEach(item => {\n        item.read = true;\n      });\n      return state;\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NotificationsComponent } from './notifications.component';\nimport { NgxsModule } from '@ngxs/store';\n\nimport { SharedFlexLayoutModule, SharedPerfectScrollbarModule } from '@ngx-starter-kit/shared';\nimport { ClickOutsideModule, DateFnsModule, NgLetModule } from '@ngx-starter-kit/ngx-utils';\n\nimport { NotificationsState } from './notifications.state';\nimport { NotificationsHandler } from './notifications.handler';\nimport { CommonModule } from '@angular/common';\n\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\nconst matModules = [MatButtonModule, MatIconModule, MatBadgeModule];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    [...matModules],\n    NgLetModule,\n    DateFnsModule,\n    ClickOutsideModule,\n    SharedPerfectScrollbarModule,\n    SharedFlexLayoutModule,\n    NgxsModule.forFeature([NotificationsState]),\n  ],\n  declarations: [NotificationsComponent],\n  exports: [NotificationsComponent],\n})\nexport class NotificationsModule {\n  // HINT: NotificationsHandler is injected here to initialize it as Module Run Block\n  constructor(notificationsHandler: NotificationsHandler) {}\n}\n","var obj;\nvar NOTHING = typeof Symbol !== \"undefined\" ? Symbol(\"immer-nothing\") : ( obj = {}, obj[\"immer-nothing\"] = true, obj );\nvar DRAFTABLE = typeof Symbol !== \"undefined\" && Symbol.for ? Symbol.for(\"immer-draftable\") : \"__$immer_draftable\";\nvar DRAFT_STATE = typeof Symbol !== \"undefined\" && Symbol.for ? Symbol.for(\"immer-state\") : \"__$immer_state\";\nfunction isDraft(value) {\n  return !!value && !!value[DRAFT_STATE];\n}\nfunction isDraftable(value) {\n  if (!value || typeof value !== \"object\") { return false; }\n  if (Array.isArray(value)) { return true; }\n  var proto = Object.getPrototypeOf(value);\n  if (!proto || proto === Object.prototype) { return true; }\n  return !!value[DRAFTABLE] || !!value.constructor[DRAFTABLE];\n}\nfunction original(value) {\n  if (value && value[DRAFT_STATE]) {\n    return value[DRAFT_STATE].base;\n  } // otherwise return undefined\n\n}\nvar assign = Object.assign || function assign(target, value) {\n  for (var key in value) {\n    if (has(value, key)) {\n      target[key] = value[key];\n    }\n  }\n\n  return target;\n};\nvar ownKeys = typeof Reflect !== \"undefined\" && Reflect.ownKeys ? Reflect.ownKeys : typeof Object.getOwnPropertySymbols !== \"undefined\" ? function (obj) { return Object.getOwnPropertyNames(obj).concat(Object.getOwnPropertySymbols(obj)); } : Object.getOwnPropertyNames;\nfunction shallowCopy(base, invokeGetters) {\n  if ( invokeGetters === void 0 ) invokeGetters = false;\n\n  if (Array.isArray(base)) { return base.slice(); }\n  var clone = Object.create(Object.getPrototypeOf(base));\n  ownKeys(base).forEach(function (key) {\n    if (key === DRAFT_STATE) {\n      return; // Never copy over draft state.\n    }\n\n    var desc = Object.getOwnPropertyDescriptor(base, key);\n    var value = desc.value;\n\n    if (desc.get) {\n      if (!invokeGetters) {\n        throw new Error(\"Immer drafts cannot have computed properties\");\n      }\n\n      value = desc.get.call(base);\n    }\n\n    if (desc.enumerable) {\n      clone[key] = value;\n    } else {\n      Object.defineProperty(clone, key, {\n        value: value,\n        writable: true,\n        configurable: true\n      });\n    }\n  });\n  return clone;\n}\nfunction each(value, cb) {\n  if (Array.isArray(value)) {\n    for (var i = 0; i < value.length; i++) { cb(i, value[i], value); }\n  } else {\n    ownKeys(value).forEach(function (key) { return cb(key, value[key], value); });\n  }\n}\nfunction isEnumerable(base, prop) {\n  var desc = Object.getOwnPropertyDescriptor(base, prop);\n  return !!desc && desc.enumerable;\n}\nfunction has(thing, prop) {\n  return Object.prototype.hasOwnProperty.call(thing, prop);\n}\nfunction is(x, y) {\n  // From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\n/** Each scope represents a `produce` call. */\n\nvar ImmerScope = function ImmerScope(parent) {\n  this.drafts = [];\n  this.parent = parent; // Whenever the modified draft contains a draft from another scope, we\n  // need to prevent auto-freezing so the unowned draft can be finalized.\n\n  this.canAutoFreeze = true; // To avoid prototype lookups:\n\n  this.patches = null;\n};\n\nImmerScope.prototype.usePatches = function usePatches (patchListener) {\n  if (patchListener) {\n    this.patches = [];\n    this.inversePatches = [];\n    this.patchListener = patchListener;\n  }\n};\n\nImmerScope.prototype.revoke = function revoke$1 () {\n  this.leave();\n  this.drafts.forEach(revoke);\n  this.drafts = null; // Make draft-related methods throw.\n};\n\nImmerScope.prototype.leave = function leave () {\n  if (this === ImmerScope.current) {\n    ImmerScope.current = this.parent;\n  }\n};\nImmerScope.current = null;\n\nImmerScope.enter = function () {\n  return this.current = new ImmerScope(this.current);\n};\n\nfunction revoke(draft) {\n  draft[DRAFT_STATE].revoke();\n}\n\n// but share them all instead\n\nvar descriptors = {};\nfunction willFinalize(scope, result, isReplaced) {\n  scope.drafts.forEach(function (draft) {\n    draft[DRAFT_STATE].finalizing = true;\n  });\n\n  if (!isReplaced) {\n    if (scope.patches) {\n      markChangesRecursively(scope.drafts[0]);\n    } // This is faster when we don't care about which attributes changed.\n\n\n    markChangesSweep(scope.drafts);\n  } // When a child draft is returned, look for changes.\n  else if (isDraft(result) && result[DRAFT_STATE].scope === scope) {\n      markChangesSweep(scope.drafts);\n    }\n}\nfunction createProxy(base, parent) {\n  var isArray = Array.isArray(base);\n  var draft = clonePotentialDraft(base);\n  each(draft, function (prop) {\n    proxyProperty(draft, prop, isArray || isEnumerable(base, prop));\n  }); // See \"proxy.js\" for property documentation.\n\n  var scope = parent ? parent.scope : ImmerScope.current;\n  var state = {\n    scope: scope,\n    modified: false,\n    finalizing: false,\n    // es5 only\n    finalized: false,\n    assigned: {},\n    parent: parent,\n    base: base,\n    draft: draft,\n    copy: null,\n    revoke: revoke$1,\n    revoked: false // es5 only\n\n  };\n  createHiddenProperty(draft, DRAFT_STATE, state);\n  scope.drafts.push(draft);\n  return draft;\n}\n\nfunction revoke$1() {\n  this.revoked = true;\n}\n\nfunction source(state) {\n  return state.copy || state.base;\n} // Access a property without creating an Immer draft.\n\n\nfunction peek(draft, prop) {\n  var state = draft[DRAFT_STATE];\n\n  if (state && !state.finalizing) {\n    state.finalizing = true;\n    var value = draft[prop];\n    state.finalizing = false;\n    return value;\n  }\n\n  return draft[prop];\n}\n\nfunction get(state, prop) {\n  assertUnrevoked(state);\n  var value = peek(source(state), prop);\n  if (state.finalizing) { return value; } // Create a draft if the value is unmodified.\n\n  if (value === peek(state.base, prop) && isDraftable(value)) {\n    prepareCopy(state);\n    return state.copy[prop] = createProxy(value, state);\n  }\n\n  return value;\n}\n\nfunction set(state, prop, value) {\n  assertUnrevoked(state);\n  state.assigned[prop] = true;\n\n  if (!state.modified) {\n    if (is(value, peek(source(state), prop))) { return; }\n    markChanged(state);\n    prepareCopy(state);\n  }\n\n  state.copy[prop] = value;\n}\n\nfunction markChanged(state) {\n  if (!state.modified) {\n    state.modified = true;\n    if (state.parent) { markChanged(state.parent); }\n  }\n}\n\nfunction prepareCopy(state) {\n  if (!state.copy) { state.copy = clonePotentialDraft(state.base); }\n}\n\nfunction clonePotentialDraft(base) {\n  var state = base && base[DRAFT_STATE];\n\n  if (state) {\n    state.finalizing = true;\n    var draft = shallowCopy(state.draft, true);\n    state.finalizing = false;\n    return draft;\n  }\n\n  return shallowCopy(base);\n}\n\nfunction proxyProperty(draft, prop, enumerable) {\n  var desc = descriptors[prop];\n\n  if (desc) {\n    desc.enumerable = enumerable;\n  } else {\n    descriptors[prop] = desc = {\n      configurable: true,\n      enumerable: enumerable,\n\n      get: function get$1() {\n        return get(this[DRAFT_STATE], prop);\n      },\n\n      set: function set$1(value) {\n        set(this[DRAFT_STATE], prop, value);\n      }\n\n    };\n  }\n\n  Object.defineProperty(draft, prop, desc);\n}\n\nfunction assertUnrevoked(state) {\n  if (state.revoked === true) { throw new Error(\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" + JSON.stringify(source(state))); }\n} // This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\n\n\nfunction markChangesSweep(drafts) {\n  // The natural order of drafts in the `scope` array is based on when they\n  // were accessed. By processing drafts in reverse natural order, we have a\n  // better chance of processing leaf nodes first. When a leaf node is known to\n  // have changed, we can avoid any traversal of its ancestor nodes.\n  for (var i = drafts.length - 1; i >= 0; i--) {\n    var state = drafts[i][DRAFT_STATE];\n\n    if (!state.modified) {\n      if (Array.isArray(state.base)) {\n        if (hasArrayChanges(state)) { markChanged(state); }\n      } else if (hasObjectChanges(state)) { markChanged(state); }\n    }\n  }\n}\n\nfunction markChangesRecursively(object) {\n  if (!object || typeof object !== \"object\") { return; }\n  var state = object[DRAFT_STATE];\n  if (!state) { return; }\n  var base = state.base;\n  var draft = state.draft;\n  var assigned = state.assigned;\n\n  if (!Array.isArray(object)) {\n    // Look for added keys.\n    Object.keys(draft).forEach(function (key) {\n      // The `undefined` check is a fast path for pre-existing keys.\n      if (base[key] === undefined && !has(base, key)) {\n        assigned[key] = true;\n        markChanged(state);\n      } else if (!assigned[key]) {\n        // Only untouched properties trigger recursion.\n        markChangesRecursively(draft[key]);\n      }\n    }); // Look for removed keys.\n\n    Object.keys(base).forEach(function (key) {\n      // The `undefined` check is a fast path for pre-existing keys.\n      if (draft[key] === undefined && !has(draft, key)) {\n        assigned[key] = false;\n        markChanged(state);\n      }\n    });\n  } else if (hasArrayChanges(state)) {\n    markChanged(state);\n    assigned.length = true;\n\n    if (draft.length < base.length) {\n      for (var i = draft.length; i < base.length; i++) { assigned[i] = false; }\n    } else {\n      for (var i$1 = base.length; i$1 < draft.length; i$1++) { assigned[i$1] = true; }\n    }\n\n    for (var i$2 = 0; i$2 < draft.length; i$2++) {\n      // Only untouched indices trigger recursion.\n      if (assigned[i$2] === undefined) { markChangesRecursively(draft[i$2]); }\n    }\n  }\n}\n\nfunction hasObjectChanges(state) {\n  var base = state.base;\n  var draft = state.draft; // Search for added keys and changed keys. Start at the back, because\n  // non-numeric keys are ordered by time of definition on the object.\n\n  var keys = Object.keys(draft);\n\n  for (var i = keys.length - 1; i >= 0; i--) {\n    var key = keys[i];\n    var baseValue = base[key]; // The `undefined` check is a fast path for pre-existing keys.\n\n    if (baseValue === undefined && !has(base, key)) {\n      return true;\n    } // Once a base key is deleted, future changes go undetected, because its\n    // descriptor is erased. This branch detects any missed changes.\n    else {\n        var value = draft[key];\n        var state$1 = value && value[DRAFT_STATE];\n\n        if (state$1 ? state$1.base !== baseValue : !is(value, baseValue)) {\n          return true;\n        }\n      }\n  } // At this point, no keys were added or changed.\n  // Compare key count to determine if keys were deleted.\n\n\n  return keys.length !== Object.keys(base).length;\n}\n\nfunction hasArrayChanges(state) {\n  var draft = state.draft;\n  if (draft.length !== state.base.length) { return true; } // See #116\n  // If we first shorten the length, our array interceptors will be removed.\n  // If after that new items are added, result in the same original length,\n  // those last items will have no intercepting property.\n  // So if there is no own descriptor on the last position, we know that items were removed and added\n  // N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n  // the last one\n\n  var descriptor = Object.getOwnPropertyDescriptor(draft, draft.length - 1); // descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\n  if (descriptor && !descriptor.get) { return true; } // For all other cases, we don't have to compare, as they would have been picked up by the index setters\n\n  return false;\n}\n\nfunction createHiddenProperty(target, prop, value) {\n  Object.defineProperty(target, prop, {\n    value: value,\n    enumerable: false,\n    writable: true\n  });\n}\n\nvar legacyProxy = /*#__PURE__*/Object.freeze({\n    willFinalize: willFinalize,\n    createProxy: createProxy\n});\n\nfunction willFinalize$1() {}\nfunction createProxy$1(base, parent) {\n  var scope = parent ? parent.scope : ImmerScope.current;\n  var state = {\n    // Track which produce call this is associated with.\n    scope: scope,\n    // True for both shallow and deep changes.\n    modified: false,\n    // Used during finalization.\n    finalized: false,\n    // Track which properties have been assigned (true) or deleted (false).\n    assigned: {},\n    // The parent draft state.\n    parent: parent,\n    // The base state.\n    base: base,\n    // The base proxy.\n    draft: null,\n    // Any property proxies.\n    drafts: {},\n    // The base copy with any updated values.\n    copy: null,\n    // Called by the `produce` function.\n    revoke: null\n  };\n  var ref = Array.isArray(base) ? // [state] is used for arrays, to make sure the proxy is array-ish and not violate invariants,\n  // although state itself is an object\n  Proxy.revocable([state], arrayTraps) : Proxy.revocable(state, objectTraps);\n  var revoke = ref.revoke;\n  var proxy = ref.proxy;\n  state.draft = proxy;\n  state.revoke = revoke;\n  scope.drafts.push(proxy);\n  return proxy;\n}\nvar objectTraps = {\n  get: get$1,\n\n  has: function has(target, prop) {\n    return prop in source$1(target);\n  },\n\n  ownKeys: function ownKeys(target) {\n    return Reflect.ownKeys(source$1(target));\n  },\n\n  set: set$1,\n  deleteProperty: deleteProperty,\n  getOwnPropertyDescriptor: getOwnPropertyDescriptor,\n\n  defineProperty: function defineProperty() {\n    throw new Error(\"Object.defineProperty() cannot be used on an Immer draft\"); // prettier-ignore\n  },\n\n  getPrototypeOf: function getPrototypeOf(target) {\n    return Object.getPrototypeOf(target.base);\n  },\n\n  setPrototypeOf: function setPrototypeOf() {\n    throw new Error(\"Object.setPrototypeOf() cannot be used on an Immer draft\"); // prettier-ignore\n  }\n\n};\nvar arrayTraps = {};\neach(objectTraps, function (key, fn) {\n  arrayTraps[key] = function () {\n    arguments[0] = arguments[0][0];\n    return fn.apply(this, arguments);\n  };\n});\n\narrayTraps.deleteProperty = function (state, prop) {\n  if (isNaN(parseInt(prop))) {\n    throw new Error(\"Immer only supports deleting array indices\"); // prettier-ignore\n  }\n\n  return objectTraps.deleteProperty.call(this, state[0], prop);\n};\n\narrayTraps.set = function (state, prop, value) {\n  if (prop !== \"length\" && isNaN(parseInt(prop))) {\n    throw new Error(\"Immer only supports setting array indices and the 'length' property\"); // prettier-ignore\n  }\n\n  return objectTraps.set.call(this, state[0], prop, value);\n}; // returns the object we should be reading the current value from, which is base, until some change has been made\n\n\nfunction source$1(state) {\n  return state.copy || state.base;\n} // Access a property without creating an Immer draft.\n\n\nfunction peek$1(draft, prop) {\n  var state = draft[DRAFT_STATE];\n  var desc = Reflect.getOwnPropertyDescriptor(state ? source$1(state) : draft, prop);\n  return desc && desc.value;\n}\n\nfunction get$1(state, prop) {\n  if (prop === DRAFT_STATE) { return state; }\n  var drafts = state.drafts; // Check for existing draft in unmodified state.\n\n  if (!state.modified && has(drafts, prop)) {\n    return drafts[prop];\n  }\n\n  var value = source$1(state)[prop];\n\n  if (state.finalized || !isDraftable(value)) {\n    return value;\n  } // Check for existing draft in modified state.\n\n\n  if (state.modified) {\n    // Assigned values are never drafted. This catches any drafts we created, too.\n    if (value !== peek$1(state.base, prop)) { return value; } // Store drafts on the copy (when one exists).\n\n    drafts = state.copy;\n  }\n\n  return drafts[prop] = createProxy$1(value, state);\n}\n\nfunction set$1(state, prop, value) {\n  if (!state.modified) {\n    var baseValue = peek$1(state.base, prop); // Optimize based on value's truthiness. Truthy values are guaranteed to\n    // never be undefined, so we can avoid the `in` operator. Lastly, truthy\n    // values may be drafts, but falsy values are never drafts.\n\n    var isUnchanged = value ? is(baseValue, value) || value === state.drafts[prop] : is(baseValue, value) && prop in state.base;\n    if (isUnchanged) { return true; }\n    markChanged$1(state);\n  }\n\n  state.assigned[prop] = true;\n  state.copy[prop] = value;\n  return true;\n}\n\nfunction deleteProperty(state, prop) {\n  // The `undefined` check is a fast path for pre-existing keys.\n  if (peek$1(state.base, prop) !== undefined || prop in state.base) {\n    state.assigned[prop] = false;\n    markChanged$1(state);\n  }\n\n  if (state.copy) { delete state.copy[prop]; }\n  return true;\n} // Note: We never coerce `desc.value` into an Immer draft, because we can't make\n// the same guarantee in ES5 mode.\n\n\nfunction getOwnPropertyDescriptor(state, prop) {\n  var owner = source$1(state);\n  var desc = Reflect.getOwnPropertyDescriptor(owner, prop);\n\n  if (desc) {\n    desc.writable = true;\n    desc.configurable = !Array.isArray(owner) || prop !== \"length\";\n  }\n\n  return desc;\n}\n\nfunction markChanged$1(state) {\n  if (!state.modified) {\n    state.modified = true;\n    state.copy = assign(shallowCopy(state.base), state.drafts);\n    state.drafts = null;\n    if (state.parent) { markChanged$1(state.parent); }\n  }\n}\n\nvar modernProxy = /*#__PURE__*/Object.freeze({\n    willFinalize: willFinalize$1,\n    createProxy: createProxy$1\n});\n\nfunction generatePatches(state, basePath, patches, inversePatches) {\n  Array.isArray(state.base) ? generateArrayPatches(state, basePath, patches, inversePatches) : generateObjectPatches(state, basePath, patches, inversePatches);\n}\n\nfunction generateArrayPatches(state, basePath, patches, inversePatches) {\n  var assign, assign$1;\n\n  var base = state.base;\n  var copy = state.copy;\n  var assigned = state.assigned; // Reduce complexity by ensuring `base` is never longer.\n\n  if (copy.length < base.length) {\n    (assign = [copy, base], base = assign[0], copy = assign[1]);\n    (assign$1 = [inversePatches, patches], patches = assign$1[0], inversePatches = assign$1[1]);\n  }\n\n  var delta = copy.length - base.length; // Find the first replaced index.\n\n  var start = 0;\n\n  while (base[start] === copy[start] && start < base.length) {\n    ++start;\n  } // Find the last replaced index. Search from the end to optimize splice patches.\n\n\n  var end = base.length;\n\n  while (end > start && base[end - 1] === copy[end + delta - 1]) {\n    --end;\n  } // Process replaced indices.\n\n\n  for (var i = start; i < end; ++i) {\n    if (assigned[i] && copy[i] !== base[i]) {\n      var path = basePath.concat([i]);\n      patches.push({\n        op: \"replace\",\n        path: path,\n        value: copy[i]\n      });\n      inversePatches.push({\n        op: \"replace\",\n        path: path,\n        value: base[i]\n      });\n    }\n  }\n\n  var useRemove = end != base.length;\n  var replaceCount = patches.length; // Process added indices.\n\n  for (var i$1 = end + delta - 1; i$1 >= end; --i$1) {\n    var path$1 = basePath.concat([i$1]);\n    patches[replaceCount + i$1 - end] = {\n      op: \"add\",\n      path: path$1,\n      value: copy[i$1]\n    };\n\n    if (useRemove) {\n      inversePatches.push({\n        op: \"remove\",\n        path: path$1\n      });\n    }\n  } // One \"replace\" patch reverses all non-splicing \"add\" patches.\n\n\n  if (!useRemove) {\n    inversePatches.push({\n      op: \"replace\",\n      path: basePath.concat([\"length\"]),\n      value: base.length\n    });\n  }\n}\n\nfunction generateObjectPatches(state, basePath, patches, inversePatches) {\n  var base = state.base;\n  var copy = state.copy;\n  each(state.assigned, function (key, assignedValue) {\n    var origValue = base[key];\n    var value = copy[key];\n    var op = !assignedValue ? \"remove\" : key in base ? \"replace\" : \"add\";\n    if (origValue === value && op === \"replace\") { return; }\n    var path = basePath.concat(key);\n    patches.push(op === \"remove\" ? {\n      op: op,\n      path: path\n    } : {\n      op: op,\n      path: path,\n      value: value\n    });\n    inversePatches.push(op === \"add\" ? {\n      op: \"remove\",\n      path: path\n    } : op === \"remove\" ? {\n      op: \"add\",\n      path: path,\n      value: origValue\n    } : {\n      op: \"replace\",\n      path: path,\n      value: origValue\n    });\n  });\n}\n\nfunction applyPatches(draft, patches) {\n  for (var i = 0; i < patches.length; i++) {\n    var patch = patches[i];\n    var path = patch.path;\n\n    if (path.length === 0 && patch.op === \"replace\") {\n      draft = patch.value;\n    } else {\n      var base = draft;\n\n      for (var i$1 = 0; i$1 < path.length - 1; i$1++) {\n        base = base[path[i$1]];\n        if (!base || typeof base !== \"object\") { throw new Error(\"Cannot apply patch, path doesn't resolve: \" + path.join(\"/\")); } // prettier-ignore\n      }\n\n      var key = path[path.length - 1];\n\n      switch (patch.op) {\n        case \"replace\":\n          base[key] = patch.value;\n          break;\n\n        case \"add\":\n          if (Array.isArray(base)) {\n            // TODO: support \"foo/-\" paths for appending to an array\n            base.splice(key, 0, patch.value);\n          } else {\n            base[key] = patch.value;\n          }\n\n          break;\n\n        case \"remove\":\n          if (Array.isArray(base)) {\n            base.splice(key, 1);\n          } else {\n            delete base[key];\n          }\n\n          break;\n\n        default:\n          throw new Error(\"Unsupported patch operation: \" + patch.op);\n      }\n    }\n  }\n\n  return draft;\n}\n\nfunction verifyMinified() {}\n\nvar configDefaults = {\n  useProxies: typeof Proxy !== \"undefined\" && typeof Reflect !== \"undefined\",\n  autoFreeze: typeof process !== \"undefined\" ? process.env.NODE_ENV !== \"production\" : verifyMinified.name === \"verifyMinified\",\n  onAssign: null,\n  onDelete: null,\n  onCopy: null\n};\nvar Immer = function Immer(config) {\n  assign(this, configDefaults, config);\n  this.setUseProxies(this.useProxies);\n  this.produce = this.produce.bind(this);\n};\n\nImmer.prototype.produce = function produce (base, recipe, patchListener) {\n    var this$1 = this;\n\n  // curried invocation\n  if (typeof base === \"function\" && typeof recipe !== \"function\") {\n    var defaultBase = recipe;\n    recipe = base;\n    var self = this;\n    return function curriedProduce(base) {\n        var this$1 = this;\n        if ( base === void 0 ) base = defaultBase;\n        var args = [], len = arguments.length - 1;\n        while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n      return self.produce(base, function (draft) { return recipe.call.apply(recipe, [ this$1, draft ].concat( args )); }); // prettier-ignore\n    };\n  } // prettier-ignore\n\n\n  {\n    if (typeof recipe !== \"function\") {\n      throw new Error(\"The first or second argument to `produce` must be a function\");\n    }\n\n    if (patchListener !== undefined && typeof patchListener !== \"function\") {\n      throw new Error(\"The third argument to `produce` must be a function or undefined\");\n    }\n  }\n  var result; // Only plain objects, arrays, and \"immerable classes\" are drafted.\n\n  if (isDraftable(base)) {\n    var scope = ImmerScope.enter();\n    var proxy = this.createProxy(base);\n    var hasError = true;\n\n    try {\n      result = recipe(proxy);\n      hasError = false;\n    } finally {\n      // finally instead of catch + rethrow better preserves original stack\n      if (hasError) { scope.revoke(); }else { scope.leave(); }\n    }\n\n    if (result instanceof Promise) {\n      return result.then(function (result) {\n        scope.usePatches(patchListener);\n        return this$1.processResult(result, scope);\n      }, function (error) {\n        scope.revoke();\n        throw error;\n      });\n    }\n\n    scope.usePatches(patchListener);\n    return this.processResult(result, scope);\n  } else {\n    result = recipe(base);\n    if (result === undefined) { return base; }\n    return result !== NOTHING ? result : undefined;\n  }\n};\n\nImmer.prototype.createDraft = function createDraft (base) {\n  if (!isDraftable(base)) {\n    throw new Error(\"First argument to `createDraft` must be a plain object, an array, or an immerable object\"); // prettier-ignore\n  }\n\n  var scope = ImmerScope.enter();\n  var proxy = this.createProxy(base);\n  proxy[DRAFT_STATE].isManual = true;\n  scope.leave();\n  return proxy;\n};\n\nImmer.prototype.finishDraft = function finishDraft (draft, patchListener) {\n  var state = draft && draft[DRAFT_STATE];\n\n  if (!state || !state.isManual) {\n    throw new Error(\"First argument to `finishDraft` must be a draft returned by `createDraft`\"); // prettier-ignore\n  }\n\n  if (state.finalized) {\n    throw new Error(\"The given draft is already finalized\"); // prettier-ignore\n  }\n\n  var scope = state.scope;\n  scope.usePatches(patchListener);\n  return this.processResult(undefined, scope);\n};\n\nImmer.prototype.setAutoFreeze = function setAutoFreeze (value) {\n  this.autoFreeze = value;\n};\n\nImmer.prototype.setUseProxies = function setUseProxies (value) {\n  this.useProxies = value;\n  assign(this, value ? modernProxy : legacyProxy);\n};\n\nImmer.prototype.applyPatches = function applyPatches$1 (base, patches) {\n  // Mutate the base state when a draft is passed.\n  if (isDraft(base)) {\n    return applyPatches(base, patches);\n  } // Otherwise, produce a copy of the base state.\n\n\n  return this.produce(base, function (draft) { return applyPatches(draft, patches); });\n};\n/** @internal */\n\n\nImmer.prototype.processResult = function processResult (result, scope) {\n  var baseDraft = scope.drafts[0];\n  var isReplaced = result !== undefined && result !== baseDraft;\n  this.willFinalize(scope, result, isReplaced);\n\n  if (isReplaced) {\n    if (baseDraft[DRAFT_STATE].modified) {\n      scope.revoke();\n      throw new Error(\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\"); // prettier-ignore\n    }\n\n    if (isDraftable(result)) {\n      // Finalize the result in case it contains (or is) a subset of the draft.\n      result = this.finalize(result, null, scope);\n    }\n\n    if (scope.patches) {\n      scope.patches.push({\n        op: \"replace\",\n        path: [],\n        value: result\n      });\n      scope.inversePatches.push({\n        op: \"replace\",\n        path: [],\n        value: baseDraft[DRAFT_STATE].base\n      });\n    }\n  } else {\n    // Finalize the base draft.\n    result = this.finalize(baseDraft, [], scope);\n  }\n\n  scope.revoke();\n\n  if (scope.patches) {\n    scope.patchListener(scope.patches, scope.inversePatches);\n  }\n\n  return result !== NOTHING ? result : undefined;\n};\n/**\n * @internal\n * Finalize a draft, returning either the unmodified base state or a modified\n * copy of the base state.\n */\n\n\nImmer.prototype.finalize = function finalize (draft, path, scope) {\n    var this$1 = this;\n\n  var state = draft[DRAFT_STATE];\n\n  if (!state) {\n    if (Object.isFrozen(draft)) { return draft; }\n    return this.finalizeTree(draft, null, scope);\n  } // Never finalize drafts owned by another scope.\n\n\n  if (state.scope !== scope) {\n    return draft;\n  }\n\n  if (!state.modified) {\n    return state.base;\n  }\n\n  if (!state.finalized) {\n    state.finalized = true;\n    this.finalizeTree(state.draft, path, scope);\n\n    if (this.onDelete) {\n      // The `assigned` object is unreliable with ES5 drafts.\n      if (this.useProxies) {\n        var assigned = state.assigned;\n\n        for (var prop in assigned) {\n          if (!assigned[prop]) { this.onDelete(state, prop); }\n        }\n      } else {\n        var base = state.base;\n          var copy = state.copy;\n        each(base, function (prop) {\n          if (!has(copy, prop)) { this$1.onDelete(state, prop); }\n        });\n      }\n    }\n\n    if (this.onCopy) {\n      this.onCopy(state);\n    } // At this point, all descendants of `state.copy` have been finalized,\n    // so we can be sure that `scope.canAutoFreeze` is accurate.\n\n\n    if (this.autoFreeze && scope.canAutoFreeze) {\n      Object.freeze(state.copy);\n    }\n\n    if (path && scope.patches) {\n      generatePatches(state, path, scope.patches, scope.inversePatches);\n    }\n  }\n\n  return state.copy;\n};\n/**\n * @internal\n * Finalize all drafts in the given state tree.\n */\n\n\nImmer.prototype.finalizeTree = function finalizeTree (root, rootPath, scope) {\n    var this$1 = this;\n\n  var state = root[DRAFT_STATE];\n\n  if (state) {\n    if (!this.useProxies) {\n      // Create the final copy, with added keys and without deleted keys.\n      state.copy = shallowCopy(state.draft, true);\n    }\n\n    root = state.copy;\n  }\n\n  var needPatches = !!rootPath && !!scope.patches;\n\n  var finalizeProperty = function (prop, value, parent) {\n    if (value === parent) {\n      throw Error(\"Immer forbids circular references\");\n    } // In the `finalizeTree` method, only the `root` object may be a draft.\n\n\n    var isDraftProp = !!state && parent === root;\n\n    if (isDraft(value)) {\n      var path = isDraftProp && needPatches && !state.assigned[prop] ? rootPath.concat(prop) : null; // Drafts owned by `scope` are finalized here.\n\n      value = this$1.finalize(value, path, scope); // Drafts from another scope must prevent auto-freezing.\n\n      if (isDraft(value)) {\n        scope.canAutoFreeze = false;\n      } // Preserve non-enumerable properties.\n\n\n      if (Array.isArray(parent) || isEnumerable(parent, prop)) {\n        parent[prop] = value;\n      } else {\n        Object.defineProperty(parent, prop, {\n          value: value\n        });\n      } // Unchanged drafts are never passed to the `onAssign` hook.\n\n\n      if (isDraftProp && value === state.base[prop]) { return; }\n    } // Unchanged draft properties are ignored.\n    else if (isDraftProp && is(value, state.base[prop])) {\n        return;\n      } // Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n      else if (isDraftable(value) && !Object.isFrozen(value)) {\n          each(value, finalizeProperty);\n        }\n\n    if (isDraftProp && this$1.onAssign) {\n      this$1.onAssign(state, prop, value);\n    }\n  };\n\n  each(root, finalizeProperty);\n  return root;\n};\n\nvar immer = new Immer();\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\n\nvar produce = immer.produce;\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * By default, auto-freezing is disabled in production.\n */\n\nvar setAutoFreeze = immer.setAutoFreeze.bind(immer);\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\n\nvar setUseProxies = immer.setUseProxies.bind(immer);\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\n\nvar applyPatches$1 = immer.applyPatches.bind(immer);\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\n\nvar createDraft = immer.createDraft.bind(immer);\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\n\nvar finishDraft = immer.finishDraft.bind(immer);\n\nexport default produce;\nexport { Immer, applyPatches$1 as applyPatches, createDraft, finishDraft, DRAFTABLE as immerable, isDraft, isDraftable, NOTHING as nothing, original, produce, setAutoFreeze, setUseProxies };\n//# sourceMappingURL=immer.module.js.map\n","import { __spread, __values } from 'tslib';\nimport { produce, createDraft, finishDraft } from 'immer';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An utility function, that determines if provided target is defined and not nullable\n *\n * @template T\n * @param {?} target - Value to check for being `undefined` or `null`\n * @return {?} - True if the passed target is not `undefined` and not `null`\n */\nfunction isDefined(target) {\n    return target !== undefined && target !== null;\n}\n/**\n * An utility function, that determines if provided object is valid\n *\n * @template T\n * @param {?} ctx - `StateContext` plain object\n * @return {?} - True if provided object is valid and has necessary methods\n */\nfunction isValidContext(ctx) {\n    return isDefined(ctx) && typeof ctx.getState === 'function' && typeof ctx.setState === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An adapter function for the `produce` from `immer` library\n *\n * @deprecated - use immutable helpers from ngxs v3.4.x\n * @template T\n * @param {?} ctx - Reference to the `StateContext` plain object\n * @param {?} recipe - Function that receives a proxy of the current state\n * @return {?} - New state or throws an error\n */\nfunction produce$1(ctx, recipe) {\n    /** @type {?} */\n    var invalidContext = !isValidContext(ctx);\n    if (invalidContext) {\n        throw new Error('You should provide `StateContext` object as the first argument of the `produce` function');\n    }\n    return ctx.setState((/** @type {?} */ (((/**\n     * @param {?} state\n     * @return {?}\n     */\n    function (state) { return produce(state, recipe); })))));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nvar /**\n * @template T\n */\nImmutableStateContext = /** @class */ (function () {\n    function ImmutableStateContext(ctx) {\n        this.ctx = ctx;\n        this.frozenState = null;\n        ImmutableStateContext.autobindStateContext(this);\n    }\n    /**\n     * @private\n     * @param {?} context\n     * @return {?}\n     */\n    ImmutableStateContext.autobindStateContext = /**\n     * @private\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(Object.getOwnPropertyNames(Object.getPrototypeOf(context))), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var prop = _c.value;\n                if (prop === 'constructor' || typeof context[prop] !== 'function') {\n                    continue;\n                }\n                context[prop] = context[prop].bind(context);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ImmutableStateContext.prototype.getState = /**\n     * @return {?}\n     */\n    function () {\n        this.frozenState = (/** @type {?} */ (createDraft(this.ctx.getState())));\n        return this.frozenState;\n    };\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    ImmutableStateContext.prototype.setState = /**\n     * @param {?} val\n     * @return {?}\n     */\n    function (val) {\n        /** @type {?} */\n        var state;\n        if (typeof val === 'function') {\n            /** @type {?} */\n            var newState = void 0;\n            /** @type {?} */\n            var oldState = (/** @type {?} */ (createDraft(this.ctx.getState())));\n            /** @type {?} */\n            var operator = (/** @type {?} */ (val));\n            /** @type {?} */\n            var mutatedOldState = operator(oldState);\n            if (this.frozenState === mutatedOldState) {\n                newState = finishDraft(this.frozenState);\n                finishDraft(oldState);\n            }\n            else {\n                /** @type {?} */\n                var mutateOutsideOperator = oldState !== mutatedOldState;\n                if (mutateOutsideOperator) {\n                    newState = mutatedOldState;\n                    finishDraft(oldState);\n                }\n                else {\n                    newState = finishDraft(mutatedOldState);\n                }\n            }\n            state = newState;\n        }\n        else {\n            state = finishDraft(val);\n        }\n        this.frozenState = null;\n        return this.ctx.setState(state);\n    };\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    ImmutableStateContext.prototype.patchState = /**\n     * @param {?} val\n     * @return {?}\n     */\n    function (val) {\n        return this.ctx.patchState((/** @type {?} */ (finishDraft(val))));\n    };\n    /**\n     * @param {?} actions\n     * @return {?}\n     */\n    ImmutableStateContext.prototype.dispatch = /**\n     * @param {?} actions\n     * @return {?}\n     */\n    function (actions) {\n        return this.ctx.dispatch(actions);\n    };\n    return ImmutableStateContext;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @deprecated - use ImmutableContext instead Mutation\n * @return {?}\n */\nfunction Mutation() {\n    return (/**\n     * @param {?} _target\n     * @param {?} _key\n     * @param {?} descriptor\n     * @return {?}\n     */\n    function (_target, _key, descriptor) {\n        /** @type {?} */\n        var method = descriptor.value;\n        descriptor.value = (/**\n         * @param {?} ctx\n         * @param {?} action\n         * @param {...?} args\n         * @return {?}\n         */\n        function (ctx, action) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            return method.apply(this, __spread([new ImmutableStateContext(ctx), action], args));\n        });\n        return descriptor;\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction ImmutableContext() {\n    return (/**\n     * @param {?} _target\n     * @param {?} _key\n     * @param {?} descriptor\n     * @return {?}\n     */\n    function (_target, _key, descriptor) {\n        /** @type {?} */\n        var method = descriptor.value;\n        descriptor.value = (/**\n         * @param {?} ctx\n         * @param {?} action\n         * @param {...?} args\n         * @return {?}\n         */\n        function (ctx, action) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            return method.apply(this, __spread([new ImmutableStateContext(ctx), action], args));\n        });\n        return descriptor;\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction ImmutableSelector() {\n    return (/**\n     * @param {?} _target\n     * @param {?} _key\n     * @param {?} descriptor\n     * @return {?}\n     */\n    function (_target, _key, descriptor) {\n        /** @type {?} */\n        var method = descriptor.value;\n        descriptor.value = (/**\n         * @param {?} state\n         * @param {...?} args\n         * @return {?}\n         */\n        function (state) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            return method.apply(this, __spread([createDraft(state)], args));\n        });\n        return descriptor;\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { ImmutableContext, ImmutableSelector, produce$1 as produce, Mutation };\n\n//# sourceMappingURL=ngxs-labs-immer-adapter.js.map","/*!\n* screenfull\n* v4.2.1 - 2019-07-27\n* (c) Sindre Sorhus; MIT License\n*/\n(function () {\n\t'use strict';\n\n\tvar document = typeof window !== 'undefined' && typeof window.document !== 'undefined' ? window.document : {};\n\tvar isCommonjs = typeof module !== 'undefined' && module.exports;\n\tvar keyboardAllowed = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element;\n\n\tvar fn = (function () {\n\t\tvar val;\n\n\t\tvar fnMap = [\n\t\t\t[\n\t\t\t\t'requestFullscreen',\n\t\t\t\t'exitFullscreen',\n\t\t\t\t'fullscreenElement',\n\t\t\t\t'fullscreenEnabled',\n\t\t\t\t'fullscreenchange',\n\t\t\t\t'fullscreenerror'\n\t\t\t],\n\t\t\t// New WebKit\n\t\t\t[\n\t\t\t\t'webkitRequestFullscreen',\n\t\t\t\t'webkitExitFullscreen',\n\t\t\t\t'webkitFullscreenElement',\n\t\t\t\t'webkitFullscreenEnabled',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t// Old WebKit (Safari 5.1)\n\t\t\t[\n\t\t\t\t'webkitRequestFullScreen',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitCurrentFullScreenElement',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t[\n\t\t\t\t'mozRequestFullScreen',\n\t\t\t\t'mozCancelFullScreen',\n\t\t\t\t'mozFullScreenElement',\n\t\t\t\t'mozFullScreenEnabled',\n\t\t\t\t'mozfullscreenchange',\n\t\t\t\t'mozfullscreenerror'\n\t\t\t],\n\t\t\t[\n\t\t\t\t'msRequestFullscreen',\n\t\t\t\t'msExitFullscreen',\n\t\t\t\t'msFullscreenElement',\n\t\t\t\t'msFullscreenEnabled',\n\t\t\t\t'MSFullscreenChange',\n\t\t\t\t'MSFullscreenError'\n\t\t\t]\n\t\t];\n\n\t\tvar i = 0;\n\t\tvar l = fnMap.length;\n\t\tvar ret = {};\n\n\t\tfor (; i < l; i++) {\n\t\t\tval = fnMap[i];\n\t\t\tif (val && val[1] in document) {\n\t\t\t\tfor (i = 0; i < val.length; i++) {\n\t\t\t\t\tret[fnMap[0][i]] = val[i];\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t})();\n\n\tvar eventNameMap = {\n\t\tchange: fn.fullscreenchange,\n\t\terror: fn.fullscreenerror\n\t};\n\n\tvar screenfull = {\n\t\trequest: function (elem) {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tvar request = fn.requestFullscreen;\n\n\t\t\t\tvar onFullScreenEntered = function () {\n\t\t\t\t\tthis.off('change', onFullScreenEntered);\n\t\t\t\t\tresolve();\n\t\t\t\t}.bind(this);\n\n\t\t\t\tthis.on('change', onFullScreenEntered);\n\n\t\t\t\telem = elem || document.documentElement;\n\n\t\t\t\tvar promise;\n\n\t\t\t\t// Work around Safari 5.1 bug: reports support for\n\t\t\t\t// keyboard in fullscreen even though it doesn't.\n\t\t\t\t// Browser sniffing, since the alternative with\n\t\t\t\t// setTimeout is even worse.\n\t\t\t\tif (/ Version\\/5\\.1(?:\\.\\d+)? Safari\\//.test(navigator.userAgent)) {\n\t\t\t\t\tpromise = elem[request]();\n\t\t\t\t} else {\n\t\t\t\t\tpromise = elem[request](keyboardAllowed ? Element.ALLOW_KEYBOARD_INPUT : {});\n\t\t\t\t}\n\n\t\t\t\tPromise.resolve(promise).catch(reject);\n\t\t\t}.bind(this));\n\t\t},\n\t\texit: function () {\n\t\t\treturn new Promise(function (resolve) {\n\t\t\t\tif (!this.isFullscreen) {\n\t\t\t\t\tresolve();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar onFullScreenExit = function () {\n\t\t\t\t\tthis.off('change', onFullScreenExit);\n\t\t\t\t\tresolve();\n\t\t\t\t}.bind(this);\n\n\t\t\t\tdocument[fn.exitFullscreen]();\n\n\t\t\t\tthis.on('change', onFullScreenExit);\n\t\t\t}.bind(this));\n\t\t},\n\t\ttoggle: function (elem) {\n\t\t\treturn this.isFullscreen ? this.exit() : this.request(elem);\n\t\t},\n\t\tonchange: function (callback) {\n\t\t\tthis.on('change', callback);\n\t\t},\n\t\tonerror: function (callback) {\n\t\t\tthis.on('error', callback);\n\t\t},\n\t\ton: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.addEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\toff: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.removeEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\traw: fn\n\t};\n\n\tif (!fn) {\n\t\tif (isCommonjs) {\n\t\t\tmodule.exports = false;\n\t\t} else {\n\t\t\twindow.screenfull = false;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tObject.defineProperties(screenfull, {\n\t\tisFullscreen: {\n\t\t\tget: function () {\n\t\t\t\treturn Boolean(document[fn.fullscreenElement]);\n\t\t\t}\n\t\t},\n\t\telement: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn document[fn.fullscreenElement];\n\t\t\t}\n\t\t},\n\t\tenabled: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\t// Coerce to boolean in case of old WebKit\n\t\t\t\treturn Boolean(document[fn.fullscreenEnabled]);\n\t\t\t}\n\t\t}\n\t});\n\n\tif (isCommonjs) {\n\t\tmodule.exports = screenfull;\n\t\t// TODO: remove this in the next major version\n\t\tmodule.exports.default = screenfull;\n\t} else {\n\t\twindow.screenfull = screenfull;\n\t}\n})();\n","<ng-content></ng-content>","<div class=\"mat-drawer-inner-container\"><ng-content></ng-content></div>","<div class=\"mat-drawer-backdrop\" (click)=\"_onBackdropClicked()\" *ngIf=\"hasBackdrop\" [class.mat-drawer-shown]=\"_isShowingBackdrop()\"></div><ng-content select=\"mat-drawer\"></ng-content><ng-content select=\"mat-drawer-content\"></ng-content><mat-drawer-content *ngIf=\"!_content\"><ng-content></ng-content></mat-drawer-content>","<ng-content></ng-content>","<div class=\"mat-drawer-inner-container\"><ng-content></ng-content></div>","<div class=\"mat-drawer-backdrop\" (click)=\"_onBackdropClicked()\" *ngIf=\"hasBackdrop\" [class.mat-drawer-shown]=\"_isShowingBackdrop()\"></div><ng-content select=\"mat-sidenav\"></ng-content><ng-content select=\"mat-sidenav-content\"></ng-content><mat-sidenav-content *ngIf=\"!_content\" cdkScrollable><ng-content></ng-content></mat-sidenav-content>","<div class=\"title\">{{ title }}</div>\n<div class=\"crumbs\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n  <div\n    class=\"crumb\"\n    *ngFor=\"let crumb of crumbs; let last = last\"\n    [ngSwitch]=\"!!crumb.link\"\n    fxLayout=\"row\"\n    fxLayoutAlign=\"start center\"\n  >\n    <a *ngSwitchCase=\"true\" class=\"crumb link\" [routerLink]=\"[crumb.link]\">{{ crumb.name }}</a>\n    <div *ngSwitchDefault class=\"link\">{{ crumb.name }}</div>\n    <mat-icon *ngIf=\"!last\" class=\"chevron\">chevron_right</mat-icon>\n  </div>\n</div>\n","<div cdk-overlay-origin class=\"mat-select-trigger\" aria-hidden=\"true\" (click)=\"toggle()\" #origin=\"cdkOverlayOrigin\" #trigger><div class=\"mat-select-value\" [ngSwitch]=\"empty\"><span class=\"mat-select-placeholder\" *ngSwitchCase=\"true\">{{placeholder || '\\u00A0'}}</span> <span class=\"mat-select-value-text\" *ngSwitchCase=\"false\" [ngSwitch]=\"!!customTrigger\"><span *ngSwitchDefault>{{triggerValue || '\\u00A0'}}</span><ng-content select=\"mat-select-trigger\" *ngSwitchCase=\"true\"></ng-content></span></div><div class=\"mat-select-arrow-wrapper\"><div class=\"mat-select-arrow\"></div></div></div><ng-template cdk-connected-overlay cdkConnectedOverlayLockPosition cdkConnectedOverlayHasBackdrop cdkConnectedOverlayBackdropClass=\"cdk-overlay-transparent-backdrop\" [cdkConnectedOverlayScrollStrategy]=\"_scrollStrategy\" [cdkConnectedOverlayOrigin]=\"origin\" [cdkConnectedOverlayOpen]=\"panelOpen\" [cdkConnectedOverlayPositions]=\"_positions\" [cdkConnectedOverlayMinWidth]=\"_triggerRect?.width\" [cdkConnectedOverlayOffsetY]=\"_offsetY\" (backdropClick)=\"close()\" (attach)=\"_onAttached()\" (detach)=\"close()\"><div class=\"mat-select-panel-wrap\" [@transformPanelWrap]><div #panel class=\"mat-select-panel {{ _getPanelTheme() }}\" [ngClass]=\"panelClass\" [@transformPanel]=\"multiple ? 'showing-multiple' : 'showing'\" (@transformPanel.done)=\"_panelDoneAnimatingStream.next($event.toState)\" [style.transformOrigin]=\"_transformOrigin\" [style.font-size.px]=\"_triggerFontSize\" (keydown)=\"_handleKeydown($event)\"><ng-content></ng-content></div></div></ng-template>","import { NgModule } from '@angular/core';\nimport { QuickpanelComponent } from './quickpanel.component';\nimport { CommonModule } from '@angular/common';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { SharedFlexLayoutModule, SharedPerfectScrollbarModule } from '@ngx-starter-kit/shared';\n\nconst matModules = [MatListModule, MatProgressBarModule, MatSidenavModule, MatTabsModule];\n\n@NgModule({\n  imports: [CommonModule, [...matModules], SharedFlexLayoutModule, SharedPerfectScrollbarModule],\n  exports: [QuickpanelComponent],\n  declarations: [QuickpanelComponent],\n})\nexport class QuickpanelModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Inject, InjectionToken, NgZone, Optional, TemplateRef, ChangeDetectionStrategy, Component, ContentChild, Input, ViewChild, ViewContainerRef, ViewEncapsulation, ChangeDetectorRef, Output, EventEmitter, ComponentFactoryResolver, forwardRef, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { __extends } from 'tslib';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, MAT_RIPPLE_GLOBAL_OPTIONS, mixinTabIndex, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Subject, Subscription, merge, of, timer, fromEvent } from 'rxjs';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { END, ENTER, HOME, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Platform, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token for the MatInkBar's Positioner.\n * @type {?}\n */\nvar _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * \\@docs-private\n * @return {?}\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    /** @type {?} */\n    var method = (/**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) { return ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    }); });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nvar MatInkBar = /** @class */ (function () {\n    function MatInkBar(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    MatInkBar.prototype.alignToElement = /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var _this = this;\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                function () { return _this._setStyles(element); }));\n            }));\n        }\n        else {\n            this._setStyles(element);\n        }\n    };\n    /** Shows the ink bar. */\n    /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    MatInkBar.prototype.show = /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    function () {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    };\n    /** Hides the ink bar. */\n    /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    MatInkBar.prototype.hide = /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    function () {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    };\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param element\n     */\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    MatInkBar.prototype._setStyles = /**\n     * Sets the proper styles to the ink bar element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        /** @type {?} */\n        var positions = this._inkBarPositioner(element);\n        /** @type {?} */\n        var inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    };\n    MatInkBar.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-ink-bar',\n                    host: {\n                        'class': 'mat-ink-bar',\n                        '[class._mat-animation-noopable]': \"_animationMode === 'NoopAnimations'\",\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatInkBar.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    return MatInkBar;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Decorates the `ng-template` tags and reads out the template from it.\n */\nvar MatTabContent = /** @class */ (function () {\n    function MatTabContent(template) {\n        this.template = template;\n    }\n    MatTabContent.decorators = [\n        { type: Directive, args: [{ selector: '[matTabContent]' },] },\n    ];\n    /** @nocollapse */\n    MatTabContent.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    return MatTabContent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to flag tab labels for use with the portal directive\n */\nvar MatTabLabel = /** @class */ (function (_super) {\n    __extends(MatTabLabel, _super);\n    function MatTabLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MatTabLabel.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-tab-label], [matTabLabel]',\n                },] },\n    ];\n    return MatTabLabel;\n}(CdkPortal));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTab.\n/**\n * \\@docs-private\n */\nvar \n// Boilerplate for applying mixins to MatTab.\n/**\n * \\@docs-private\n */\nMatTabBase = /** @class */ (function () {\n    function MatTabBase() {\n    }\n    return MatTabBase;\n}());\n/** @type {?} */\nvar _MatTabMixinBase = mixinDisabled(MatTabBase);\nvar MatTab = /** @class */ (function (_super) {\n    __extends(MatTab, _super);\n    function MatTab(_viewContainerRef) {\n        var _this = _super.call(this) || this;\n        _this._viewContainerRef = _viewContainerRef;\n        /**\n         * Plain text label for the tab, used when there is no template label.\n         */\n        _this.textLabel = '';\n        /**\n         * Portal that will be the hosted content of the tab\n         */\n        _this._contentPortal = null;\n        /**\n         * Emits whenever the internal state of the tab changes.\n         */\n        _this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        _this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        _this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        _this.isActive = false;\n        return _this;\n    }\n    Object.defineProperty(MatTab.prototype, \"content\", {\n        /** @docs-private */\n        get: /**\n         * \\@docs-private\n         * @return {?}\n         */\n        function () {\n            return this._contentPortal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MatTab.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatTab.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._stateChanges.complete();\n    };\n    /**\n     * @return {?}\n     */\n    MatTab.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    };\n    MatTab.decorators = [\n        { type: Component, args: [{selector: 'mat-tab',\n                    template: \"<ng-template><ng-content></ng-content></ng-template>\",\n                    inputs: ['disabled'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matTab',\n                },] },\n    ];\n    /** @nocollapse */\n    MatTab.ctorParameters = function () { return [\n        { type: ViewContainerRef }\n    ]; };\n    MatTab.propDecorators = {\n        templateLabel: [{ type: ContentChild, args: [MatTabLabel, { static: false },] }],\n        _explicitContent: [{ type: ContentChild, args: [MatTabContent, { read: TemplateRef, static: true },] }],\n        _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n        textLabel: [{ type: Input, args: ['label',] }],\n        ariaLabel: [{ type: Input, args: ['aria-label',] }],\n        ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n    };\n    return MatTab;\n}(_MatTabMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material tabs.\n * \\@docs-private\n * @type {?}\n */\nvar matTabsAnimations = {\n    /**\n     * Animation translates a tab along the X axis.\n     */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The portal host directive for the contents of the tab.\n * \\@docs-private\n */\nvar MatTabBodyPortal = /** @class */ (function (_super) {\n    __extends(MatTabBodyPortal, _super);\n    function MatTabBodyPortal(componentFactoryResolver, viewContainerRef, _host) {\n        var _this = _super.call(this, componentFactoryResolver, viewContainerRef) || this;\n        _this._host = _host;\n        /**\n         * Subscription to events for when the tab body begins centering.\n         */\n        _this._centeringSub = Subscription.EMPTY;\n        /**\n         * Subscription to events for when the tab body finishes leaving from center position.\n         */\n        _this._leavingSub = Subscription.EMPTY;\n        return _this;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    /**\n     * Set initial visibility or set up subscription for changing visibility.\n     * @return {?}\n     */\n    MatTabBodyPortal.prototype.ngOnInit = /**\n     * Set initial visibility or set up subscription for changing visibility.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((/**\n         * @param {?} isCentering\n         * @return {?}\n         */\n        function (isCentering) {\n            if (isCentering && !_this.hasAttached()) {\n                _this.attach(_this._host._content);\n            }\n        }));\n        this._leavingSub = this._host._afterLeavingCenter.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this.detach();\n        }));\n    };\n    /** Clean up centering subscription. */\n    /**\n     * Clean up centering subscription.\n     * @return {?}\n     */\n    MatTabBodyPortal.prototype.ngOnDestroy = /**\n     * Clean up centering subscription.\n     * @return {?}\n     */\n    function () {\n        _super.prototype.ngOnDestroy.call(this);\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    };\n    MatTabBodyPortal.decorators = [\n        { type: Directive, args: [{\n                    selector: '[matTabBodyHost]'\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabBodyPortal.ctorParameters = function () { return [\n        { type: ComponentFactoryResolver },\n        { type: ViewContainerRef },\n        { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef((/**\n                         * @return {?}\n                         */\n                        function () { return MatTabBody; })),] }] }\n    ]; };\n    return MatTabBodyPortal;\n}(CdkPortalOutlet));\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nvar MatTabBody = /** @class */ (function () {\n    function MatTabBody(_elementRef, _dir, changeDetectorRef) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /**\n         * Subscription to the directionality change observable.\n         */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /**\n         * Emits when an animation on the tab is complete.\n         */\n        this._translateTabComplete = new Subject();\n        /**\n         * Event emitted when the tab begins to animate towards the center as the active tab.\n         */\n        this._onCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._beforeCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._afterLeavingCenter = new EventEmitter();\n        /**\n         * Event emitted when the tab completes its animation towards the center.\n         */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /**\n         * Duration for the tab's animation.\n         */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            function (dir) {\n                _this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            }));\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        function (x, y) {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            // If the transition to the center is complete, emit an event.\n            if (_this._isCenterPosition(event.toState) && _this._isCenterPosition(_this._position)) {\n                _this._onCentered.emit();\n            }\n            if (_this._isCenterPosition(event.fromState) && !_this._isCenterPosition(_this._position)) {\n                _this._afterLeavingCenter.emit();\n            }\n        }));\n    }\n    Object.defineProperty(MatTabBody.prototype, \"position\", {\n        /** The shifted index position of the tab body, where zero represents the active center tab. */\n        set: /**\n         * The shifted index position of the tab body, where zero represents the active center tab.\n         * @param {?} position\n         * @return {?}\n         */\n        function (position) {\n            this._positionIndex = position;\n            this._computePositionAnimationState();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    MatTabBody.prototype.ngOnInit = /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    function () {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatTabBody.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatTabBody.prototype._onTranslateTabStarted = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        /** @type {?} */\n        var isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    };\n    /** The text direction of the containing app. */\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    MatTabBody.prototype._getLayoutDirection = /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    function () {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    };\n    /** Whether the provided position state is considered center, regardless of origin. */\n    /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    MatTabBody.prototype._isCenterPosition = /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    };\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    /**\n     * Computes the position state that will be used for the tab-body animation trigger.\n     * @private\n     * @param {?=} dir\n     * @return {?}\n     */\n    MatTabBody.prototype._computePositionAnimationState = /**\n     * Computes the position state that will be used for the tab-body animation trigger.\n     * @private\n     * @param {?=} dir\n     * @return {?}\n     */\n    function (dir) {\n        if (dir === void 0) { dir = this._getLayoutDirection(); }\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    };\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     * @private\n     * @return {?}\n     */\n    MatTabBody.prototype._computePositionFromOrigin = /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && this.origin <= 0) || (dir == 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    };\n    MatTabBody.decorators = [\n        { type: Component, args: [{selector: 'mat-tab-body',\n                    template: \"<div class=\\\"mat-tab-body-content\\\" #content [@translateTab]=\\\"{ value: _position, params: {animationDuration: animationDuration} }\\\" (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\" (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"><ng-template matTabBodyHost></ng-template></div>\",\n                    styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\"],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [matTabsAnimations.translateTab],\n                    host: {\n                        'class': 'mat-tab-body',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabBody.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: ChangeDetectorRef }\n    ]; };\n    MatTabBody.propDecorators = {\n        _onCentering: [{ type: Output }],\n        _beforeCentering: [{ type: Output }],\n        _afterLeavingCenter: [{ type: Output }],\n        _onCentered: [{ type: Output }],\n        _portalHost: [{ type: ViewChild, args: [PortalHostDirective, { static: false },] }],\n        _content: [{ type: Input, args: ['content',] }],\n        origin: [{ type: Input }],\n        animationDuration: [{ type: Input }],\n        position: [{ type: Input }]\n    };\n    return MatTabBody;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/**\n * \\@docs-private\n */\nvar \n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/**\n * \\@docs-private\n */\nMatTabLabelWrapperBase = /** @class */ (function () {\n    function MatTabLabelWrapperBase() {\n    }\n    return MatTabLabelWrapperBase;\n}());\n/** @type {?} */\nvar _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * \\@docs-private\n */\nvar MatTabLabelWrapper = /** @class */ (function (_super) {\n    __extends(MatTabLabelWrapper, _super);\n    function MatTabLabelWrapper(elementRef) {\n        var _this = _super.call(this) || this;\n        _this.elementRef = elementRef;\n        return _this;\n    }\n    /** Sets focus on the wrapper element */\n    /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    MatTabLabelWrapper.prototype.focus = /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    function () {\n        this.elementRef.nativeElement.focus();\n    };\n    /**\n     * @return {?}\n     */\n    MatTabLabelWrapper.prototype.getOffsetLeft = /**\n     * @return {?}\n     */\n    function () {\n        return this.elementRef.nativeElement.offsetLeft;\n    };\n    /**\n     * @return {?}\n     */\n    MatTabLabelWrapper.prototype.getOffsetWidth = /**\n     * @return {?}\n     */\n    function () {\n        return this.elementRef.nativeElement.offsetWidth;\n    };\n    MatTabLabelWrapper.decorators = [\n        { type: Directive, args: [{\n                    selector: '[matTabLabelWrapper]',\n                    inputs: ['disabled'],\n                    host: {\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[attr.aria-disabled]': '!!disabled',\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabLabelWrapper.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\n    return MatTabLabelWrapper;\n}(_MatTabLabelWrapperMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config used to bind passive event listeners\n * @type {?}\n */\nvar passiveEventListenerOptions = (/** @type {?} */ (normalizePassiveListenerOptions({ passive: true })));\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n * @type {?}\n */\nvar EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n * @type {?}\n */\nvar HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n * @type {?}\n */\nvar HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @abstract\n */\nvar MatPaginatedTabHeader = /** @class */ (function () {\n    function MatPaginatedTabHeader(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /**\n         * The distance in pixels that the tab labels should be translated to the left.\n         */\n        this._scrollDistance = 0;\n        /**\n         * Whether the header should scroll to the selected index after the view has been checked.\n         */\n        this._selectedIndexChanged = false;\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Whether the controls for pagination should be displayed\n         */\n        this._showPaginationControls = false;\n        /**\n         * Whether the tab list can be scrolled more towards the end of the tab label list.\n         */\n        this._disableScrollAfter = true;\n        /**\n         * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n         */\n        this._disableScrollBefore = true;\n        /**\n         * Stream that will stop the automated scrolling.\n         */\n        this._stopScrolling = new Subject();\n        this._selectedIndex = 0;\n        /**\n         * Event emitted when the option is selected.\n         */\n        this.selectFocusedIndex = new EventEmitter();\n        /**\n         * Event emitted when a label is focused.\n         */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        function () {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(_this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            function () {\n                _this._stopInterval();\n            }));\n        }));\n    }\n    Object.defineProperty(MatPaginatedTabHeader.prototype, \"selectedIndex\", {\n        /** The index of the active tab. */\n        get: /**\n         * The index of the active tab.\n         * @return {?}\n         */\n        function () { return this._selectedIndex; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            value = coerceNumberProperty(value);\n            if (this._selectedIndex != value) {\n                this._selectedIndexChanged = true;\n                this._selectedIndex = value;\n                if (this._keyManager) {\n                    this._keyManager.updateActiveItemIndex(value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this._handlePaginatorPress('before');\n        }));\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this._handlePaginatorPress('after');\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var dirChange = this._dir ? this._dir.change : of(null);\n        /** @type {?} */\n        var resize = this._viewportRuler.change(150);\n        /** @type {?} */\n        var realign = (/**\n         * @return {?}\n         */\n        function () {\n            _this.updatePagination();\n            _this._alignInkBarToSelectedTab();\n        });\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withWrap();\n        this._keyManager.updateActiveItem(0);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        function () {\n            realign();\n            _this._keyManager.withHorizontalOrientation(_this._getLayoutDirection());\n        }));\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} newFocusIndex\n         * @return {?}\n         */\n        function (newFocusIndex) {\n            _this.indexFocused.emit(newFocusIndex);\n            _this._setTabFocus(newFocusIndex);\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype.ngAfterContentChecked = /**\n     * @return {?}\n     */\n    function () {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    };\n    /** Handles keyboard events on the header. */\n    /**\n     * Handles keyboard events on the header.\n     * @param {?} event\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype._handleKeydown = /**\n     * Handles keyboard events on the header.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                this._itemSelected(event);\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    };\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype._onContentChanges = /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            function () {\n                _this.updatePagination();\n                _this._alignInkBarToSelectedTab();\n                _this._changeDetectorRef.markForCheck();\n            }));\n        }\n    };\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype.updatePagination = /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     * @return {?}\n     */\n    function () {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    };\n    Object.defineProperty(MatPaginatedTabHeader.prototype, \"focusIndex\", {\n        /** Tracks which element has focus; used for keyboard navigation */\n        get: /**\n         * Tracks which element has focus; used for keyboard navigation\n         * @return {?}\n         */\n        function () {\n            return this._keyManager ? (/** @type {?} */ (this._keyManager.activeItemIndex)) : 0;\n        },\n        /** When the focus index is set, we must manually send focus to the correct label */\n        set: /**\n         * When the focus index is set, we must manually send focus to the correct label\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n                return;\n            }\n            this._keyManager.setActiveItem(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype._isValidIndex = /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (!this._items) {\n            return true;\n        }\n        /** @type {?} */\n        var tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    };\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype._setTabFocus = /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    function (tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            /** @type {?} */\n            var containerEl = this._tabListContainer.nativeElement;\n            /** @type {?} */\n            var dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    };\n    /** The layout direction of the containing app. */\n    /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype._getLayoutDirection = /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    function () {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    };\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype._updateTabScrollPosition = /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var scrollDistance = this.scrollDistance;\n        /** @type {?} */\n        var platform = this._platform;\n        /** @type {?} */\n        var translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = \"translateX(\" + Math.round(translateX) + \"px)\";\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n        if (platform && (platform.TRIDENT || platform.EDGE)) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    };\n    Object.defineProperty(MatPaginatedTabHeader.prototype, \"scrollDistance\", {\n        /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n        get: /**\n         * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n         * @return {?}\n         */\n        function () { return this._scrollDistance; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._scrollTo(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} direction\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype._scrollHeader = /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} direction\n     * @return {?}\n     */\n    function (direction) {\n        /** @type {?} */\n        var viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        /** @type {?} */\n        var scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    };\n    /** Handles click events on the pagination arrows. */\n    /**\n     * Handles click events on the pagination arrows.\n     * @param {?} direction\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype._handlePaginatorClick = /**\n     * Handles click events on the pagination arrows.\n     * @param {?} direction\n     * @return {?}\n     */\n    function (direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    };\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype._scrollToLabel = /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    function (labelIndex) {\n        /** @type {?} */\n        var selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        /** @type {?} */\n        var viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        var _a = selectedLabel.elementRef.nativeElement, offsetLeft = _a.offsetLeft, offsetWidth = _a.offsetWidth;\n        /** @type {?} */\n        var labelBeforePos;\n        /** @type {?} */\n        var labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        /** @type {?} */\n        var beforeVisiblePos = this.scrollDistance;\n        /** @type {?} */\n        var afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    };\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype._checkPaginationEnabled = /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n        if (isEnabled !== this._showPaginationControls) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._showPaginationControls = isEnabled;\n    };\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype._checkScrollingControls = /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    function () {\n        // Check if the pagination arrows should be activated.\n        this._disableScrollBefore = this.scrollDistance == 0;\n        this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype._getMaxScrollDistance = /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        /** @type {?} */\n        var viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    };\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype._alignInkBarToSelectedTab = /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        /** @type {?} */\n        var selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    };\n    /** Stops the currently-running paginator interval.  */\n    /**\n     * Stops the currently-running paginator interval.\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype._stopInterval = /**\n     * Stops the currently-running paginator interval.\n     * @return {?}\n     */\n    function () {\n        this._stopScrolling.next();\n    };\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param {?} direction In which direction the paginator should be scrolled.\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype._handlePaginatorPress = /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param {?} direction In which direction the paginator should be scrolled.\n     * @return {?}\n     */\n    function (direction) {\n        var _this = this;\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe((/**\n         * @return {?}\n         */\n        function () {\n            var _a = _this._scrollHeader(direction), maxScrollDistance = _a.maxScrollDistance, distance = _a.distance;\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                _this._stopInterval();\n            }\n        }));\n    };\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    /**\n     * Scrolls the header to a given position.\n     * @private\n     * @param {?} position Position to which to scroll.\n     * @return {?} Information on the current scroll distance and the maximum.\n     */\n    MatPaginatedTabHeader.prototype._scrollTo = /**\n     * Scrolls the header to a given position.\n     * @private\n     * @param {?} position Position to which to scroll.\n     * @return {?} Information on the current scroll distance and the maximum.\n     */\n    function (position) {\n        /** @type {?} */\n        var maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance: maxScrollDistance, distance: this._scrollDistance };\n    };\n    /** @nocollapse */\n    MatPaginatedTabHeader.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: Platform },\n        { type: String }\n    ]; };\n    return MatPaginatedTabHeader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\nvar MatTabHeader = /** @class */ (function (_super) {\n    __extends(MatTabHeader, _super);\n    function MatTabHeader(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        var _this = _super.call(this, elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) || this;\n        _this._disableRipple = false;\n        return _this;\n    }\n    Object.defineProperty(MatTabHeader.prototype, \"disableRipple\", {\n        /** Whether the ripple effect is disabled or not. */\n        get: /**\n         * Whether the ripple effect is disabled or not.\n         * @return {?}\n         */\n        function () { return this._disableRipple; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._disableRipple = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    MatTabHeader.prototype._itemSelected = /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        event.preventDefault();\n    };\n    MatTabHeader.decorators = [\n        { type: Component, args: [{selector: 'mat-tab-header',\n                    template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\" #previousPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\" (click)=\\\"_handlePaginatorClick('before')\\\" (mousedown)=\\\"_handlePaginatorPress('before')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div><div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\"><div #tabList class=\\\"mat-tab-list\\\" [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\" role=\\\"tablist\\\" (cdkObserveContent)=\\\"_onContentChanges()\\\"><div class=\\\"mat-tab-labels\\\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\" #nextPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\" (mousedown)=\\\"_handlePaginatorPress('after')\\\" (click)=\\\"_handlePaginatorClick('after')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div>\",\n                    styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{min-width:72px}}\"],\n                    inputs: ['selectedIndex'],\n                    outputs: ['selectFocusedIndex', 'indexFocused'],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        'class': 'mat-tab-header',\n                        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabHeader.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: Platform },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatTabHeader.propDecorators = {\n        _items: [{ type: ContentChildren, args: [MatTabLabelWrapper,] }],\n        _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n        _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n        _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n        _nextPaginator: [{ type: ViewChild, args: ['nextPaginator', { static: false },] }],\n        _previousPaginator: [{ type: ViewChild, args: ['previousPaginator', { static: false },] }],\n        disableRipple: [{ type: Input }]\n    };\n    return MatTabHeader;\n}(MatPaginatedTabHeader));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID's for each tab component\n * @type {?}\n */\nvar nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nvar  /**\n * A simple change event emitted on focus or selection changes.\n */\nMatTabChangeEvent = /** @class */ (function () {\n    function MatTabChangeEvent() {\n    }\n    return MatTabChangeEvent;\n}());\n/**\n * Injection token that can be used to provide the default options the tabs module.\n * @type {?}\n */\nvar MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n// Boilerplate for applying mixins to MatTabGroup.\n/**\n * \\@docs-private\n */\nvar \n// Boilerplate for applying mixins to MatTabGroup.\n/**\n * \\@docs-private\n */\nMatTabGroupBase = /** @class */ (function () {\n    function MatTabGroupBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatTabGroupBase;\n}());\n/** @type {?} */\nvar _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupBase), 'primary');\n/**\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nvar MatTabGroup = /** @class */ (function (_super) {\n    __extends(MatTabGroup, _super);\n    function MatTabGroup(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        var _this = _super.call(this, elementRef) || this;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._animationMode = _animationMode;\n        /**\n         * The tab index that should be selected after the content has been checked.\n         */\n        _this._indexToSelect = 0;\n        /**\n         * Snapshot of the height of the tab body wrapper before another tab is activated.\n         */\n        _this._tabBodyWrapperHeight = 0;\n        /**\n         * Subscription to tabs being added/removed.\n         */\n        _this._tabsSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to changes in the tab labels.\n         */\n        _this._tabLabelSubscription = Subscription.EMPTY;\n        _this._dynamicHeight = false;\n        _this._selectedIndex = null;\n        /**\n         * Position of the tab header.\n         */\n        _this.headerPosition = 'above';\n        /**\n         * Output to enable support for two-way binding on `[(selectedIndex)]`\n         */\n        _this.selectedIndexChange = new EventEmitter();\n        /**\n         * Event emitted when focus has changed within a tab group.\n         */\n        _this.focusChange = new EventEmitter();\n        /**\n         * Event emitted when the body animation has completed\n         */\n        _this.animationDone = new EventEmitter();\n        /**\n         * Event emitted when the tab selection has changed.\n         */\n        _this.selectedTabChange = new EventEmitter(true);\n        _this._groupId = nextId++;\n        _this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        return _this;\n    }\n    Object.defineProperty(MatTabGroup.prototype, \"dynamicHeight\", {\n        /** Whether the tab group should grow to the size of the active tab. */\n        get: /**\n         * Whether the tab group should grow to the size of the active tab.\n         * @return {?}\n         */\n        function () { return this._dynamicHeight; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._dynamicHeight = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTabGroup.prototype, \"selectedIndex\", {\n        /** The index of the active tab. */\n        get: /**\n         * The index of the active tab.\n         * @return {?}\n         */\n        function () { return this._selectedIndex; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._indexToSelect = coerceNumberProperty(value, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTabGroup.prototype, \"animationDuration\", {\n        /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n        get: /**\n         * Duration for the tab animation. Will be normalized to milliseconds if no units are set.\n         * @return {?}\n         */\n        function () { return this._animationDuration; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTabGroup.prototype, \"backgroundColor\", {\n        /** Background color of the tab group. */\n        get: /**\n         * Background color of the tab group.\n         * @return {?}\n         */\n        function () { return this._backgroundColor; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var nativeElement = this._elementRef.nativeElement;\n            nativeElement.classList.remove(\"mat-background-\" + this.backgroundColor);\n            if (value) {\n                nativeElement.classList.add(\"mat-background-\" + value);\n            }\n            this._backgroundColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    MatTabGroup.prototype.ngAfterContentChecked = /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        /** @type {?} */\n        var indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            /** @type {?} */\n            var isFirstRun_1 = this._selectedIndex == null;\n            if (!isFirstRun_1) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            function () {\n                _this._tabs.forEach((/**\n                 * @param {?} tab\n                 * @param {?} index\n                 * @return {?}\n                 */\n                function (tab, index) { return tab.isActive = index === indexToSelect; }));\n                if (!isFirstRun_1) {\n                    _this.selectedIndexChange.emit(indexToSelect);\n                }\n            }));\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((/**\n         * @param {?} tab\n         * @param {?} index\n         * @return {?}\n         */\n        function (tab, index) {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (_this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - _this._selectedIndex;\n            }\n        }));\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatTabGroup.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var indexToSelect = _this._clampTabIndex(_this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === _this._selectedIndex) {\n                /** @type {?} */\n                var tabs = _this._tabs.toArray();\n                for (var i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        _this._indexToSelect = _this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            _this._subscribeToTabLabels();\n            _this._changeDetectorRef.markForCheck();\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    MatTabGroup.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    };\n    /** Re-aligns the ink bar to the selected tab element. */\n    /**\n     * Re-aligns the ink bar to the selected tab element.\n     * @return {?}\n     */\n    MatTabGroup.prototype.realignInkBar = /**\n     * Re-aligns the ink bar to the selected tab element.\n     * @return {?}\n     */\n    function () {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    MatTabGroup.prototype._focusChanged = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    };\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    MatTabGroup.prototype._createChangeEvent = /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        /** @type {?} */\n        var event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    };\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @private\n     * @return {?}\n     */\n    MatTabGroup.prototype._subscribeToTabLabels = /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge.apply(void 0, this._tabs.map((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        function (tab) { return tab._stateChanges; }))).subscribe((/**\n         * @return {?}\n         */\n        function () { return _this._changeDetectorRef.markForCheck(); }));\n    };\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    MatTabGroup.prototype._clampTabIndex = /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    };\n    /** Returns a unique id for each tab label element */\n    /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    MatTabGroup.prototype._getTabLabelId = /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    function (i) {\n        return \"mat-tab-label-\" + this._groupId + \"-\" + i;\n    };\n    /** Returns a unique id for each tab content element */\n    /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    MatTabGroup.prototype._getTabContentId = /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    function (i) {\n        return \"mat-tab-content-\" + this._groupId + \"-\" + i;\n    };\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    MatTabGroup.prototype._setTabBodyWrapperHeight = /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    function (tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        /** @type {?} */\n        var wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    };\n    /** Removes the height of the tab body wrapper. */\n    /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    MatTabGroup.prototype._removeTabBodyWrapperHeight = /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    };\n    /** Handle click events, setting new selected index if appropriate. */\n    /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} index\n     * @return {?}\n     */\n    MatTabGroup.prototype._handleClick = /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} index\n     * @return {?}\n     */\n    function (tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    };\n    /** Retrieves the tabindex for the tab. */\n    /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    MatTabGroup.prototype._getTabIndex = /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    function (tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    };\n    MatTabGroup.decorators = [\n        { type: Component, args: [{selector: 'mat-tab-group',\n                    exportAs: 'matTabGroup',\n                    template: \"<mat-tab-header #tabHeader [selectedIndex]=\\\"selectedIndex\\\" [disableRipple]=\\\"disableRipple\\\" (indexFocused)=\\\"_focusChanged($event)\\\" (selectFocusedIndex)=\\\"selectedIndex = $event\\\"><div class=\\\"mat-tab-label\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabLabelId(i)\\\" [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\" [attr.aria-posinset]=\\\"i + 1\\\" [attr.aria-setsize]=\\\"_tabs.length\\\" [attr.aria-controls]=\\\"_getTabContentId(i)\\\" [attr.aria-selected]=\\\"selectedIndex == i\\\" [attr.aria-label]=\\\"tab.ariaLabel || null\\\" [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\" [class.mat-tab-label-active]=\\\"selectedIndex == i\\\" [disabled]=\\\"tab.disabled\\\" [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\" (click)=\\\"_handleClick(tab, tabHeader, i)\\\"><div class=\\\"mat-tab-label-content\\\"><ng-template [ngIf]=\\\"tab.templateLabel\\\"><ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template></ng-template><ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template></div></div></mat-tab-header><div class=\\\"mat-tab-body-wrapper\\\" [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\" #tabBodyWrapper><mat-tab-body role=\\\"tabpanel\\\" *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabContentId(i)\\\" [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\" [class.mat-tab-body-active]=\\\"selectedIndex == i\\\" [content]=\\\"tab.content\\\" [position]=\\\"tab.position\\\" [origin]=\\\"tab.origin\\\" [animationDuration]=\\\"animationDuration\\\" (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\" (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\"></mat-tab-body></div>\",\n                    styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    inputs: ['color', 'disableRipple'],\n                    host: {\n                        'class': 'mat-tab-group',\n                        '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                        '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabGroup.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatTabGroup.propDecorators = {\n        _tabs: [{ type: ContentChildren, args: [MatTab,] }],\n        _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper', { static: false },] }],\n        _tabHeader: [{ type: ViewChild, args: ['tabHeader', { static: false },] }],\n        dynamicHeight: [{ type: Input }],\n        selectedIndex: [{ type: Input }],\n        headerPosition: [{ type: Input }],\n        animationDuration: [{ type: Input }],\n        backgroundColor: [{ type: Input }],\n        selectedIndexChange: [{ type: Output }],\n        focusChange: [{ type: Output }],\n        animationDone: [{ type: Output }],\n        selectedTabChange: [{ type: Output }]\n    };\n    return MatTabGroup;\n}(_MatTabGroupMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nvar MatTabNav = /** @class */ (function (_super) {\n    __extends(MatTabNav, _super);\n    function MatTabNav(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        var _this = _super.call(this, elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) || this;\n        _this._disableRipple = false;\n        /**\n         * Theme color of the nav bar.\n         */\n        _this.color = 'primary';\n        return _this;\n    }\n    Object.defineProperty(MatTabNav.prototype, \"backgroundColor\", {\n        /** Background color of the tab nav. */\n        get: /**\n         * Background color of the tab nav.\n         * @return {?}\n         */\n        function () { return this._backgroundColor; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var classList = this._elementRef.nativeElement.classList;\n            classList.remove(\"mat-background-\" + this.backgroundColor);\n            if (value) {\n                classList.add(\"mat-background-\" + value);\n            }\n            this._backgroundColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTabNav.prototype, \"disableRipple\", {\n        /** Whether the ripple effect is disabled or not. */\n        get: /**\n         * Whether the ripple effect is disabled or not.\n         * @return {?}\n         */\n        function () { return this._disableRipple; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._disableRipple = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @protected\n     * @return {?}\n     */\n    MatTabNav.prototype._itemSelected = /**\n     * @protected\n     * @return {?}\n     */\n    function () {\n        // noop\n    };\n    /**\n     * @return {?}\n     */\n    MatTabNav.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        this.updateActiveLink();\n        _super.prototype.ngAfterContentInit.call(this);\n    };\n    /**\n     * Notifies the component that the active link has been changed.\n     * @breaking-change 8.0.0 `element` parameter to be removed.\n     */\n    /**\n     * Notifies the component that the active link has been changed.\n     * \\@breaking-change 8.0.0 `element` parameter to be removed.\n     * @param {?=} _element\n     * @return {?}\n     */\n    MatTabNav.prototype.updateActiveLink = /**\n     * Notifies the component that the active link has been changed.\n     * \\@breaking-change 8.0.0 `element` parameter to be removed.\n     * @param {?=} _element\n     * @return {?}\n     */\n    function (_element) {\n        if (!this._items) {\n            return;\n        }\n        /** @type {?} */\n        var items = this._items.toArray();\n        for (var i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    };\n    MatTabNav.decorators = [\n        { type: Component, args: [{selector: '[mat-tab-nav-bar]',\n                    exportAs: 'matTabNavBar, matTabNav',\n                    inputs: ['color'],\n                    template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\" #previousPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\" (click)=\\\"_handlePaginatorClick('before')\\\" (mousedown)=\\\"_handlePaginatorPress('before')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div><div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\"><div class=\\\"mat-tab-list\\\" #tabList (cdkObserveContent)=\\\"_onContentChanges()\\\"><div class=\\\"mat-tab-links\\\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\" #nextPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\" (mousedown)=\\\"_handlePaginatorPress('after')\\\" (click)=\\\"_handlePaginatorClick('after')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div>\",\n                    styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-links{display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:0}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-link:focus{outline:dotted 2px}}.mat-tab-link.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-link.mat-tab-disabled{opacity:.5}}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-link{opacity:1}}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media (max-width:599px){.mat-tab-link{min-width:72px}}\"],\n                    host: {\n                        'class': 'mat-tab-nav-bar mat-tab-header',\n                        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                        '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                        '[class.mat-accent]': 'color === \"accent\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabNav.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: Platform, decorators: [{ type: Optional }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatTabNav.propDecorators = {\n        _items: [{ type: ContentChildren, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    function () { return MatTabLink; })), { descendants: true },] }],\n        _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n        _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n        _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n        _nextPaginator: [{ type: ViewChild, args: ['nextPaginator', { static: false },] }],\n        _previousPaginator: [{ type: ViewChild, args: ['previousPaginator', { static: false },] }],\n        backgroundColor: [{ type: Input }],\n        disableRipple: [{ type: Input }],\n        color: [{ type: Input }]\n    };\n    return MatTabNav;\n}(MatPaginatedTabHeader));\n// Boilerplate for applying mixins to MatTabLink.\nvar \n// Boilerplate for applying mixins to MatTabLink.\nMatTabLinkBase = /** @class */ (function () {\n    function MatTabLinkBase() {\n    }\n    return MatTabLinkBase;\n}());\n/** @type {?} */\nvar _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkBase)));\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nvar MatTabLink = /** @class */ (function (_super) {\n    __extends(MatTabLink, _super);\n    function MatTabLink(_tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        var _this = _super.call(this) || this;\n        _this._tabNavBar = _tabNavBar;\n        _this.elementRef = elementRef;\n        _this._focusMonitor = _focusMonitor;\n        /**\n         * Whether the tab link is active or not.\n         */\n        _this._isActive = false;\n        _this._tabLinkRipple = new RippleRenderer(_this, ngZone, elementRef, platform);\n        _this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n        _this.rippleConfig = globalRippleOptions || {};\n        _this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            _this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n        _focusMonitor.monitor(elementRef);\n        return _this;\n    }\n    Object.defineProperty(MatTabLink.prototype, \"active\", {\n        /** Whether the link is active. */\n        get: /**\n         * Whether the link is active.\n         * @return {?}\n         */\n        function () { return this._isActive; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value !== this._isActive) {\n                this._isActive = value;\n                this._tabNavBar.updateActiveLink(this.elementRef);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTabLink.prototype, \"rippleDisabled\", {\n        /**\n         * Whether ripples are disabled on interaction.\n         * @docs-private\n         */\n        get: /**\n         * Whether ripples are disabled on interaction.\n         * \\@docs-private\n         * @return {?}\n         */\n        function () {\n            return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n                !!this.rippleConfig.disabled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatTabLink.prototype.focus = /**\n     * @return {?}\n     */\n    function () {\n        this.elementRef.nativeElement.focus();\n    };\n    /**\n     * @return {?}\n     */\n    MatTabLink.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._tabLinkRipple._removeTriggerEvents();\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    };\n    MatTabLink.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-tab-link], [matTabLink]',\n                    exportAs: 'matTabLink',\n                    inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                    host: {\n                        'class': 'mat-tab-link',\n                        '[attr.aria-current]': 'active',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.tabIndex]': 'tabIndex',\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[class.mat-tab-label-active]': 'active',\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabLink.ctorParameters = function () { return [\n        { type: MatTabNav },\n        { type: ElementRef },\n        { type: NgZone },\n        { type: Platform },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n        { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n        { type: FocusMonitor },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatTabLink.propDecorators = {\n        active: [{ type: Input }]\n    };\n    return MatTabLink;\n}(_MatTabLinkMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatTabsModule = /** @class */ (function () {\n    function MatTabsModule() {\n    }\n    MatTabsModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        CommonModule,\n                        MatCommonModule,\n                        PortalModule,\n                        MatRippleModule,\n                        ObserversModule,\n                        A11yModule,\n                    ],\n                    // Don't export all components because some are only to be used internally.\n                    exports: [\n                        MatCommonModule,\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatTabNav,\n                        MatTabLink,\n                        MatTabContent,\n                    ],\n                    declarations: [\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatInkBar,\n                        MatTabLabelWrapper,\n                        MatTabNav,\n                        MatTabLink,\n                        MatTabBody,\n                        MatTabBodyPortal,\n                        MatTabHeader,\n                        MatTabContent,\n                    ],\n                },] },\n    ];\n    return MatTabsModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatInkBar, _MAT_INK_BAR_POSITIONER, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabLabelWrapper, MatTab, MatTabLabel, MatTabNav, MatTabLink, MatTabContent, MatTabsModule, MatTabChangeEvent, MAT_TABS_CONFIG, MatTabGroup, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵa24, MatPaginatedTabHeader as ɵb24 };\n//# sourceMappingURL=tabs.es5.js.map\n","<label [attr.for]=\"inputId\" class=\"mat-radio-label\" #label><div class=\"mat-radio-container\"><div class=\"mat-radio-outer-circle\"></div><div class=\"mat-radio-inner-circle\"></div><div mat-ripple class=\"mat-radio-ripple\" [matRippleTrigger]=\"label\" [matRippleDisabled]=\"_isRippleDisabled()\" [matRippleCentered]=\"true\" [matRippleRadius]=\"20\" [matRippleAnimation]=\"{enterDuration: 150}\"><div class=\"mat-ripple-element mat-radio-persistent-ripple\"></div></div><input #input class=\"mat-radio-input cdk-visually-hidden\" type=\"radio\" [id]=\"inputId\" [checked]=\"checked\" [disabled]=\"disabled\" [tabIndex]=\"tabIndex\" [attr.name]=\"name\" [required]=\"required\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledby\" [attr.aria-describedby]=\"ariaDescribedby\" (change)=\"_onInputChange($event)\" (click)=\"_onInputClick($event)\"></div><div class=\"mat-radio-label-content\" [class.mat-radio-label-before]=\"labelPosition == 'before'\"><span style=\"display:none\">&nbsp;</span><ng-content></ng-content></div></label>"],"sourceRoot":""}