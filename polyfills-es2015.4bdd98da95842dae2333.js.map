{"version":3,"sources":["//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_array-species-constructor.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_a-function.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_wks.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_redefine.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/es7/array.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_export.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_uid.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_flatten-into-array.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_to-iobject.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_global.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_ctx.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_is-object.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_has.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_shared.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_descriptors.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/es7.array.includes.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_is-array.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_core.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/es7.array.flatten.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/es7.array.flat-map.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_array-species-create.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_object-dp.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_library.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_to-primitive.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_to-object.js","/./src/polyfills.ts","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_an-object.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_add-to-unscopables.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_dom-create.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_function-to-string.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/zone.js/dist/zone-evergreen.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_to-integer.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_fails.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_array-includes.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_property-desc.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_to-absolute-index.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_iobject.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_cof.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_to-length.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_hide.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_defined.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/core-js/modules/_ie8-dom-define.js"],"names":["isObject","__webpack_require__","isArray","SPECIES","module","exports","original","C","constructor","Array","prototype","undefined","it","TypeError","store","uid","Symbol","USE_SYMBOL","name","global","hide","has","SRC","$toString","TPL","split","inspectSource","call","O","key","val","safe","isFunction","join","String","Function","this","core","redefine","ctx","$export","type","source","own","out","exp","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","P","IS_BIND","B","target","expProto","U","W","R","id","px","Math","random","concat","toString","toLength","IS_CONCAT_SPREADABLE","flattenIntoArray","sourceLen","start","depth","mapper","thisArg","element","spreadable","targetIndex","sourceIndex","mapFn","length","IObject","defined","window","self","__g","aFunction","fn","that","a","b","c","apply","arguments","hasOwnProperty","value","push","version","mode","copyright","Object","defineProperty","get","$includes","includes","el","cof","arg","__e","toObject","toInteger","arraySpeciesCreate","flatten","depthArg","A","flatMap","callbackfn","speciesConstructor","anObject","IE8_DOM_DEFINE","toPrimitive","dP","f","Attributes","e","valueOf","r","__webpack_exports__","UNSCOPABLES","ArrayProto","document","is","createElement","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","performance","mark","performanceMeasure","label","symbolPrefix","__symbol__","checkDuplicate","Error","Zone","[object Object]","parent","zoneSpec","_parent","_name","_properties","properties","_zoneDelegate","ZoneDelegate","patches","root","zone","current","_currentZoneFrame","currentTask","_currentTask","perfName","_api","getZoneWith","fork","callback","_callback","intercept","runGuarded","applyThis","applyArgs","invoke","error","handleError","task","NO_ZONE","state","notScheduled","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","invokeTask","unknown","_updateTaskCount","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","scheduleTask","err","customSchedule","ZoneTask","microTask","customCancel","canceling","cancelTask","count","i","DELEGATE_ZS","onHasTask","delegate","_","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","parentHasTask","targetZone","returnTask","scheduleFn","scheduleMicroTask","isEmpty","counts","prev","next","change","options","_state","useG","args","_numberOfNestedTaskFrames","runTask","drainMicroTaskQueue","toState","fromState1","fromState2","handleId","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","resolve","nativeThen","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","setNativePromise","NativePromise","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","__load_patch","api","getOwnPropertyDescriptor","_uncaughtPromiseErrors","creationTrace","rejection","console","message","stack","uncaughtPromiseError","shift","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","then","forwardResolution","forwardRejection","ZoneAwarePromise","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","REJECTED_NO_CATCH","makeResolver","promise","v","resolvePromise","once","wasCalled","wrappedFunction","TYPE_ERROR","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","clearRejectedNoCatch","trace","configurable","enumerable","writable","scheduleResolveOrReject","obj","className","JSON","stringify","readableObjectToString","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","run","ZONE_AWARE_PROMISE_TO_STRING","executor","values","res","rej","onResolve","onReject","unresolvedCount","valueIndex","resolvedValues","curValueIndex","toStringTag","onFinally","race","all","ZONE_AWARE_PROMISE","desc","set","NewNativePromise","symbolThenPatched","Ctor","proto","prop","originalThen","wrapped","fetch","resultPromise","ctor","zoneify","Promise","ObjectGetPrototypeOf","getPrototypeOf","create","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","wrap","scheduleMacroTaskWithCurrentZone","scheduleMacroTask","zoneSymbol","isWindowExists","internalWindow","_global","REMOVE_ATTRIBUTE","NULL_ON_PROP_VALUE","isPropertyWritable","propertyDesc","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","isMix","zoneSymbolEventNames","wrapFn","event","eventNameSymbol","listener","result","errorEvent","filename","lineno","colno","preventDefault","patchProperty","prototypeDesc","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","substr","newValue","previousValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","OriginalClass","instance","shouldCopySymbolProperties","patchFn","delegateName","patchDelegate","src","dest","getOwnPropertySymbols","forEach","funcName","metaCreator","setNative","cbIdx","meta","patched","isDetectedIEOrEdge","ieOrEdge","ua","navigator","userAgent","indexOf","originalFunctionToString","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames$1","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","PREPEND_EVENT_LISTENER","PREPEND_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","globalZoneAwareCallback","tasks","copyTasks","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","eventNameToString","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","checkIsPassive","capture","prepend","customSchedulePrepend","isExisting","symbolEventNames","symbolEventName","existingTasks","existingTask","allRemoved","compare","diff","typeOfDelegate","blackListedEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","falseEventName","trueEventName","symbolCapture","constructorName","targetSource","scheduleEventTask","unshift","onPropertySymbol","findEventTasks","symbolCaptureEventName","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","Event","targetName","method","callbacks","nativeDelegate","opts","descriptor","zoneSymbol$1","_defineProperty","unconfigurablesKey","originalConfigurableFlag","isFrozen","rewriteDescriptor","descJson","log","_tryDefineProperty","windowEventNames","mediaElementEventNames","frameEventNames","frameSetEventNames","marqueeEventNames","XMLHttpRequestEventNames","IDBIndexEventNames","websocketEventNames","workerEventNames","eventNames","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","filteredProperties","propertyDescriptorPatch","supportsWebSocket","WebSocket","ignoreErrorProperties","Document","Element","HTMLElement","HTMLMediaElement","HTMLFrameSetElement","HTMLBodyElement","HTMLFrameElement","HTMLIFrameElement","HTMLMarqueeElement","Worker","XMLHttpRequest","XMLHttpRequestEventTarget","IDBIndex","IDBRequest","IDBOpenDBRequest","IDBDatabase","IDBTransaction","IDBCursor","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","handle","ref","unref","bind","eventTargetPatch","EVENT_TARGET","legacyPatch","blockingMethods","s","patchEvent","customElements","patchCustomElements","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","aborted","loadTasks","oriInvoke","storedTask","XHR_TASK","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","url","patchXHR","geolocation","fnNames","patchPrototype","findPromiseRejectionHandler","eventTasks","PromiseRejectionEvent","evt","reason","ceil","floor","isNaN","toIObject","toAbsoluteIndex","IS_INCLUDES","$this","fromIndex","index","bitmap","max","min","propertyIsEnumerable","createDesc","object"],"mappings":"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AOAC,GAAA,gFA6DAC,GAAA,SACAC,GAAA,iEACAC,GAAA,4BACAC,GAAA,CACA,6EACA,oBAEAC,GAAA,yFACAC,GAAA,mCACAC,GAAA,oBACAC,GApNA,CACA,QACA,kBACA,eACA,qBACA,WACA,cACA,OACA,SACA,UACA,iBACA,SACA,mBACA,oBACA,iBACA,YACA,QACA,QACA,cACA,aACA,WACA,OACA,UACA,YACA,WACA,YACA,WACA,OACA,iBACA,UACA,QACA,QACA,QACA,UACA,WACA,oBACA,QACA,UACA,UACA,WACA,QACA,OACA,YACA,aACA,iBACA,qBACA,YACA,aACA,aACA,YACA,WACA,YACA,UACA,aACA,oBACA,QACA,OACA,UACA,gBACA,cACA,eACA,eACA,oBACA,uBACA,4BACA,mBACA,sBACA,yBACA,cACA,WACA,cACA,YACA,WACA,aACA,QACA,SACA,SACA,SACA,UACA,SACA,kBACA,cACA,OACA,OACA,UACA,SACA,UACA,aACA,eACA,cACA,YACA,aACA,WACA,mBACA,gBACA,UACA,SAoHAvgB,OAbA,wEACA,qCACA,WAvGA,CACA,0FACA,sFACA,oFACA,6BA8GA8f,EA5EA,CACA,kFACA,iFACA,yEAGA,CACA,WACA,cACA,cACA,iBACA,mBACA,kBACA,eACA,aACA,gBACA,gBACA,iBACA,kBACA,cACA,eACA,iBACA,cACA,OACA,UACA,YACA,iBACA,YACA,cACA,WACA,UACA,aACA,eACA,UACA,0BACA,aACA,OACA,gBACA,6BACA,kBACA,qBACA,eACA,gBACA,iBACA,eACA,sBACA,iBACA,uBACA,kBACA,gBACA,iBACA,iBACA,iBACA,gBACA,eACA,gBACA,cACA,aACA,gCACA,mBACA,OACA,kBAgBA,SAAAlR,GAAArP,EAAAqY,EAAA4I,GACA,IAAAA,GAAA,IAAAA,EAAAzf,OACA,OAAA6W,EAEA,MAAA6I,EAAAD,EAAAE,OAAAC,KAAAphB,YACA,IAAAkhB,GAAA,IAAAA,EAAA1f,OACA,OAAA6W,EAEA,MAAAgJ,EAAAH,EAAA,GAAAD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","file":"polyfills-es2015.4bdd98da95842dae2333.js","sourcesContent":["var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar $toString = require('./_function-to-string');\nvar TO_STRING = 'toString';\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","require('../modules/es7.array.includes');\nrequire('../modules/es7.array.flat-map');\nrequire('../modules/es7.array.flatten');\nmodule.exports = require('../modules/_core').Array;\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar isArray = require('./_is-array');\nvar isObject = require('./_is-object');\nvar toLength = require('./_to-length');\nvar ctx = require('./_ctx');\nvar IS_CONCAT_SPREADABLE = require('./_wks')('isConcatSpreadable');\n\nfunction flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;\n  var element, spreadable;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      spreadable = false;\n      if (isObject(element)) {\n        spreadable = element[IS_CONCAT_SPREADABLE];\n        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);\n      }\n\n      if (spreadable && depth > 0) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1fffffffffffff) throw TypeError();\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n}\n\nmodule.exports = flattenIntoArray;\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export = require('./_export');\nvar $includes = require('./_array-includes')(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nrequire('./_add-to-unscopables')('includes');\n","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","var core = module.exports = { version: '2.6.9' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatten\nvar $export = require('./_export');\nvar flattenIntoArray = require('./_flatten-into-array');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar toInteger = require('./_to-integer');\nvar arraySpeciesCreate = require('./_array-species-create');\n\n$export($export.P, 'Array', {\n  flatten: function flatten(/* depthArg = 1 */) {\n    var depthArg = arguments[0];\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A = arraySpeciesCreate(O, 0);\n    flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));\n    return A;\n  }\n});\n\nrequire('./_add-to-unscopables')('flatten');\n","'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap\nvar $export = require('./_export');\nvar flattenIntoArray = require('./_flatten-into-array');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar aFunction = require('./_a-function');\nvar arraySpeciesCreate = require('./_array-species-create');\n\n$export($export.P, 'Array', {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen, A;\n    aFunction(callbackfn);\n    sourceLen = toLength(O.length);\n    A = arraySpeciesCreate(O, 0);\n    flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);\n    return A;\n  }\n});\n\nrequire('./_add-to-unscopables')('flatMap');\n","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","module.exports = false;\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags.ts';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone'; // Included with Angular CLI.\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\n// By Sumo\n// Add global to window, assigning the value of window itself.\n(window as any).global = window;\nimport 'core-js/es7/array';\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","module.exports = require('./_shared')('native-function-to-string', Function.toString);\n","/**\n * @license Angular v0.10.0\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (factory) {\n    typeof define === 'function' && define.amd ? define(factory) :\n    factory();\n}(function () { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const Zone$1 = (function (global) {\n        const performance = global['performance'];\n        function mark(name) { performance && performance['mark'] && performance['mark'](name); }\n        function performanceMeasure(name, label) {\n            performance && performance['measure'] && performance['measure'](name, label);\n        }\n        mark('Zone');\n        // Initialize before it's accessed below.\n        // __Zone_symbol_prefix global can be used to override the default zone\n        // symbol prefix with a custom one if needed.\n        const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n        function __symbol__(name) { return symbolPrefix + name; }\n        const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n        if (global['Zone']) {\n            // if global['Zone'] already exists (maybe zone.js was already loaded or\n            // some other lib also registered a global object named Zone), we may need\n            // to throw an error, but sometimes user may not want this error.\n            // For example,\n            // we have two web pages, page1 includes zone.js, page2 doesn't.\n            // and the 1st time user load page1 and page2, everything work fine,\n            // but when user load page2 again, error occurs because global['Zone'] already exists.\n            // so we add a flag to let user choose whether to throw this error or not.\n            // By default, if existing Zone is from zone.js, we will not throw the error.\n            if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n                throw new Error('Zone already loaded.');\n            }\n            else {\n                return global['Zone'];\n            }\n        }\n        class Zone {\n            constructor(parent, zoneSpec) {\n                this._parent = parent;\n                this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n                this._properties = zoneSpec && zoneSpec.properties || {};\n                this._zoneDelegate =\n                    new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n            }\n            static assertZonePatched() {\n                if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                    throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                        'has been overwritten.\\n' +\n                        'Most likely cause is that a Promise polyfill has been loaded ' +\n                        'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                        'If you must load one, do so before loading zone.js.)');\n                }\n            }\n            static get root() {\n                let zone = Zone.current;\n                while (zone.parent) {\n                    zone = zone.parent;\n                }\n                return zone;\n            }\n            static get current() { return _currentZoneFrame.zone; }\n            static get currentTask() { return _currentTask; }\n            static __load_patch(name, fn) {\n                if (patches.hasOwnProperty(name)) {\n                    if (checkDuplicate) {\n                        throw Error('Already loaded patch: ' + name);\n                    }\n                }\n                else if (!global['__Zone_disable_' + name]) {\n                    const perfName = 'Zone:' + name;\n                    mark(perfName);\n                    patches[name] = fn(global, Zone, _api);\n                    performanceMeasure(perfName, perfName);\n                }\n            }\n            get parent() { return this._parent; }\n            get name() { return this._name; }\n            get(key) {\n                const zone = this.getZoneWith(key);\n                if (zone)\n                    return zone._properties[key];\n            }\n            getZoneWith(key) {\n                let current = this;\n                while (current) {\n                    if (current._properties.hasOwnProperty(key)) {\n                        return current;\n                    }\n                    current = current._parent;\n                }\n                return null;\n            }\n            fork(zoneSpec) {\n                if (!zoneSpec)\n                    throw new Error('ZoneSpec required!');\n                return this._zoneDelegate.fork(this, zoneSpec);\n            }\n            wrap(callback, source) {\n                if (typeof callback !== 'function') {\n                    throw new Error('Expecting function got: ' + callback);\n                }\n                const _callback = this._zoneDelegate.intercept(this, callback, source);\n                const zone = this;\n                return function () {\n                    return zone.runGuarded(_callback, this, arguments, source);\n                };\n            }\n            run(callback, applyThis, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runGuarded(callback, applyThis = null, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    try {\n                        return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runTask(task, applyThis, applyArgs) {\n                if (task.zone != this) {\n                    throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                }\n                // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n                // will run in notScheduled(canceled) state, we should not try to\n                // run such kind of task but just return\n                if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                    return;\n                }\n                const reEntryGuard = task.state != running;\n                reEntryGuard && task._transitionTo(running, scheduled);\n                task.runCount++;\n                const previousTask = _currentTask;\n                _currentTask = task;\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                        task.cancelFn = undefined;\n                    }\n                    try {\n                        return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    // if the task's state is notScheduled or unknown, then it has already been cancelled\n                    // we should not reset the state to scheduled\n                    if (task.state !== notScheduled && task.state !== unknown) {\n                        if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                            reEntryGuard && task._transitionTo(scheduled, running);\n                        }\n                        else {\n                            task.runCount = 0;\n                            this._updateTaskCount(task, -1);\n                            reEntryGuard &&\n                                task._transitionTo(notScheduled, running, notScheduled);\n                        }\n                    }\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                    _currentTask = previousTask;\n                }\n            }\n            scheduleTask(task) {\n                if (task.zone && task.zone !== this) {\n                    // check if the task was rescheduled, the newZone\n                    // should not be the children of the original zone\n                    let newZone = this;\n                    while (newZone) {\n                        if (newZone === task.zone) {\n                            throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                        }\n                        newZone = newZone.parent;\n                    }\n                }\n                task._transitionTo(scheduling, notScheduled);\n                const zoneDelegates = [];\n                task._zoneDelegates = zoneDelegates;\n                task._zone = this;\n                try {\n                    task = this._zoneDelegate.scheduleTask(this, task);\n                }\n                catch (err) {\n                    // should set task's state to unknown when scheduleTask throw error\n                    // because the err may from reschedule, so the fromState maybe notScheduled\n                    task._transitionTo(unknown, scheduling, notScheduled);\n                    // TODO: @JiaLiPassion, should we check the result from handleError?\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                if (task._zoneDelegates === zoneDelegates) {\n                    // we have to check because internally the delegate can reschedule the task.\n                    this._updateTaskCount(task, 1);\n                }\n                if (task.state == scheduling) {\n                    task._transitionTo(scheduled, scheduling);\n                }\n                return task;\n            }\n            scheduleMicroTask(source, callback, data, customSchedule) {\n                return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n            }\n            scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n            }\n            scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n            }\n            cancelTask(task) {\n                if (task.zone != this)\n                    throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                task._transitionTo(canceling, scheduled, running);\n                try {\n                    this._zoneDelegate.cancelTask(this, task);\n                }\n                catch (err) {\n                    // if error occurs when cancelTask, transit the state to unknown\n                    task._transitionTo(unknown, canceling);\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                this._updateTaskCount(task, -1);\n                task._transitionTo(notScheduled, canceling);\n                task.runCount = 0;\n                return task;\n            }\n            _updateTaskCount(task, count) {\n                const zoneDelegates = task._zoneDelegates;\n                if (count == -1) {\n                    task._zoneDelegates = null;\n                }\n                for (let i = 0; i < zoneDelegates.length; i++) {\n                    zoneDelegates[i]._updateTaskCount(task.type, count);\n                }\n            }\n        }\n        Zone.__symbol__ = __symbol__;\n        const DELEGATE_ZS = {\n            name: '',\n            onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n            onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n            onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n            onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n        };\n        class ZoneDelegate {\n            constructor(zone, parentDelegate, zoneSpec) {\n                this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n                this.zone = zone;\n                this._parentDelegate = parentDelegate;\n                this._forkZS =\n                    zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n                this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n                this._forkCurrZone =\n                    zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n                this._interceptZS =\n                    zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n                this._interceptDlgt =\n                    zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n                this._interceptCurrZone =\n                    zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n                this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n                this._invokeDlgt =\n                    zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n                this._invokeCurrZone =\n                    zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n                this._handleErrorZS =\n                    zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n                this._handleErrorDlgt = zoneSpec &&\n                    (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n                this._handleErrorCurrZone =\n                    zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n                this._scheduleTaskZS =\n                    zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n                this._scheduleTaskDlgt = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n                this._scheduleTaskCurrZone = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n                this._invokeTaskZS =\n                    zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n                this._invokeTaskDlgt =\n                    zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n                this._invokeTaskCurrZone =\n                    zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n                this._cancelTaskZS =\n                    zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n                this._cancelTaskDlgt =\n                    zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n                this._cancelTaskCurrZone =\n                    zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n                this._hasTaskZS = null;\n                this._hasTaskDlgt = null;\n                this._hasTaskDlgtOwner = null;\n                this._hasTaskCurrZone = null;\n                const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n                const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n                if (zoneSpecHasTask || parentHasTask) {\n                    // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                    // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                    this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                    this._hasTaskDlgt = parentDelegate;\n                    this._hasTaskDlgtOwner = this;\n                    this._hasTaskCurrZone = zone;\n                    if (!zoneSpec.onScheduleTask) {\n                        this._scheduleTaskZS = DELEGATE_ZS;\n                        this._scheduleTaskDlgt = parentDelegate;\n                        this._scheduleTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onInvokeTask) {\n                        this._invokeTaskZS = DELEGATE_ZS;\n                        this._invokeTaskDlgt = parentDelegate;\n                        this._invokeTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onCancelTask) {\n                        this._cancelTaskZS = DELEGATE_ZS;\n                        this._cancelTaskDlgt = parentDelegate;\n                        this._cancelTaskCurrZone = this.zone;\n                    }\n                }\n            }\n            fork(targetZone, zoneSpec) {\n                return this._forkZS ?\n                    this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                    new Zone(targetZone, zoneSpec);\n            }\n            intercept(targetZone, callback, source) {\n                return this._interceptZS ?\n                    this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                    callback;\n            }\n            invoke(targetZone, callback, applyThis, applyArgs, source) {\n                return this._invokeZS ?\n                    this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                    callback.apply(applyThis, applyArgs);\n            }\n            handleError(targetZone, error) {\n                return this._handleErrorZS ?\n                    this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                    true;\n            }\n            scheduleTask(targetZone, task) {\n                let returnTask = task;\n                if (this._scheduleTaskZS) {\n                    if (this._hasTaskZS) {\n                        returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                    }\n                    // clang-format off\n                    returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                    // clang-format on\n                    if (!returnTask)\n                        returnTask = task;\n                }\n                else {\n                    if (task.scheduleFn) {\n                        task.scheduleFn(task);\n                    }\n                    else if (task.type == microTask) {\n                        scheduleMicroTask(task);\n                    }\n                    else {\n                        throw new Error('Task is missing scheduleFn.');\n                    }\n                }\n                return returnTask;\n            }\n            invokeTask(targetZone, task, applyThis, applyArgs) {\n                return this._invokeTaskZS ?\n                    this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                    task.callback.apply(applyThis, applyArgs);\n            }\n            cancelTask(targetZone, task) {\n                let value;\n                if (this._cancelTaskZS) {\n                    value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n                }\n                else {\n                    if (!task.cancelFn) {\n                        throw Error('Task is not cancelable');\n                    }\n                    value = task.cancelFn(task);\n                }\n                return value;\n            }\n            hasTask(targetZone, isEmpty) {\n                // hasTask should not throw error so other ZoneDelegate\n                // can still trigger hasTask callback\n                try {\n                    this._hasTaskZS &&\n                        this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n                }\n                catch (err) {\n                    this.handleError(targetZone, err);\n                }\n            }\n            _updateTaskCount(type, count) {\n                const counts = this._taskCounts;\n                const prev = counts[type];\n                const next = counts[type] = prev + count;\n                if (next < 0) {\n                    throw new Error('More tasks executed then were scheduled.');\n                }\n                if (prev == 0 || next == 0) {\n                    const isEmpty = {\n                        microTask: counts['microTask'] > 0,\n                        macroTask: counts['macroTask'] > 0,\n                        eventTask: counts['eventTask'] > 0,\n                        change: type\n                    };\n                    this.hasTask(this.zone, isEmpty);\n                }\n            }\n        }\n        class ZoneTask {\n            constructor(type, source, callback, options, scheduleFn, cancelFn) {\n                this._zone = null;\n                this.runCount = 0;\n                this._zoneDelegates = null;\n                this._state = 'notScheduled';\n                this.type = type;\n                this.source = source;\n                this.data = options;\n                this.scheduleFn = scheduleFn;\n                this.cancelFn = cancelFn;\n                if (!callback) {\n                    throw new Error('callback is not defined');\n                }\n                this.callback = callback;\n                const self = this;\n                // TODO: @JiaLiPassion options should have interface\n                if (type === eventTask && options && options.useG) {\n                    this.invoke = ZoneTask.invokeTask;\n                }\n                else {\n                    this.invoke = function () {\n                        return ZoneTask.invokeTask.call(global, self, this, arguments);\n                    };\n                }\n            }\n            static invokeTask(task, target, args) {\n                if (!task) {\n                    task = this;\n                }\n                _numberOfNestedTaskFrames++;\n                try {\n                    task.runCount++;\n                    return task.zone.runTask(task, target, args);\n                }\n                finally {\n                    if (_numberOfNestedTaskFrames == 1) {\n                        drainMicroTaskQueue();\n                    }\n                    _numberOfNestedTaskFrames--;\n                }\n            }\n            get zone() { return this._zone; }\n            get state() { return this._state; }\n            cancelScheduleRequest() { this._transitionTo(notScheduled, scheduling); }\n            _transitionTo(toState, fromState1, fromState2) {\n                if (this._state === fromState1 || this._state === fromState2) {\n                    this._state = toState;\n                    if (toState == notScheduled) {\n                        this._zoneDelegates = null;\n                    }\n                }\n                else {\n                    throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n                }\n            }\n            toString() {\n                if (this.data && typeof this.data.handleId !== 'undefined') {\n                    return this.data.handleId.toString();\n                }\n                else {\n                    return Object.prototype.toString.call(this);\n                }\n            }\n            // add toJSON method to prevent cyclic error when\n            // call JSON.stringify(zoneTask)\n            toJSON() {\n                return {\n                    type: this.type,\n                    state: this.state,\n                    source: this.source,\n                    zone: this.zone.name,\n                    runCount: this.runCount\n                };\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  MICROTASK QUEUE\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const symbolSetTimeout = __symbol__('setTimeout');\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        let _microTaskQueue = [];\n        let _isDrainingMicrotaskQueue = false;\n        let nativeMicroTaskQueuePromise;\n        function scheduleMicroTask(task) {\n            // if we are not running in any task, and there has not been anything scheduled\n            // we must bootstrap the initial task creation by manually scheduling the drain\n            if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n                // We are not running in Task, so we need to kickstart the microtask queue.\n                if (!nativeMicroTaskQueuePromise) {\n                    if (global[symbolPromise]) {\n                        nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                    }\n                }\n                if (nativeMicroTaskQueuePromise) {\n                    let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                    if (!nativeThen) {\n                        // native Promise is not patchable, we need to use `then` directly\n                        // issue 1078\n                        nativeThen = nativeMicroTaskQueuePromise['then'];\n                    }\n                    nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n                }\n                else {\n                    global[symbolSetTimeout](drainMicroTaskQueue, 0);\n                }\n            }\n            task && _microTaskQueue.push(task);\n        }\n        function drainMicroTaskQueue() {\n            if (!_isDrainingMicrotaskQueue) {\n                _isDrainingMicrotaskQueue = true;\n                while (_microTaskQueue.length) {\n                    const queue = _microTaskQueue;\n                    _microTaskQueue = [];\n                    for (let i = 0; i < queue.length; i++) {\n                        const task = queue[i];\n                        try {\n                            task.zone.runTask(task, null, null);\n                        }\n                        catch (error) {\n                            _api.onUnhandledError(error);\n                        }\n                    }\n                }\n                _api.microtaskDrainDone();\n                _isDrainingMicrotaskQueue = false;\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  BOOTSTRAP\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const NO_ZONE = { name: 'NO ZONE' };\n        const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n        const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n        const patches = {};\n        const _api = {\n            symbol: __symbol__,\n            currentZoneFrame: () => _currentZoneFrame,\n            onUnhandledError: noop,\n            microtaskDrainDone: noop,\n            scheduleMicroTask: scheduleMicroTask,\n            showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n            patchEventTarget: () => [],\n            patchOnProperties: noop,\n            patchMethod: () => noop,\n            bindArguments: () => [],\n            patchThen: () => noop,\n            patchMacroTask: () => noop,\n            setNativePromise: (NativePromise) => {\n                // sometimes NativePromise.resolve static function\n                // is not ready yet, (such as core-js/es6.promise)\n                // so we need to check here.\n                if (NativePromise && typeof NativePromise.resolve === 'function') {\n                    nativeMicroTaskQueuePromise = NativePromise.resolve(0);\n                }\n            },\n            patchEventPrototype: () => noop,\n            isIEOrEdge: () => false,\n            getGlobalObjects: () => undefined,\n            ObjectDefineProperty: () => noop,\n            ObjectGetOwnPropertyDescriptor: () => undefined,\n            ObjectCreate: () => undefined,\n            ArraySlice: () => [],\n            patchClass: () => noop,\n            wrapWithCurrentZone: () => noop,\n            filterProperties: () => [],\n            attachOriginToPatched: () => noop,\n            _redefineProperty: () => noop,\n            patchCallbacks: () => noop\n        };\n        let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n        let _currentTask = null;\n        let _numberOfNestedTaskFrames = 0;\n        function noop() { }\n        performanceMeasure('Zone', 'Zone');\n        return global['Zone'] = Zone;\n    })(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                while (_uncaughtPromiseErrors.length) {\n                    const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                    try {\n                        uncaughtPromiseError.zone.runGuarded(() => { throw uncaughtPromiseError; });\n                    }\n                    catch (error) {\n                        handleUnhandledRejection(error);\n                    }\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) {\n            }\n        }\n        function isThenable(value) { return value && value.then; }\n        function forwardResolution(value) { return value; }\n        function forwardRejection(rejection) { return ZoneAwarePromise.reject(rejection); }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask && Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        let uncaughtPromiseError;\n                        if (value instanceof Error || (value && value.message)) {\n                            uncaughtPromiseError = value;\n                        }\n                        else {\n                            try {\n                                // try to print more readable error log\n                                throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                                    (value && value.stack ? '\\n' + value.stack : ''));\n                            }\n                            catch (err) {\n                                uncaughtPromiseError = err;\n                            }\n                        }\n                        uncaughtPromiseError.rejection = value;\n                        uncaughtPromiseError.promise = promise;\n                        uncaughtPromiseError.zone = Zone.current;\n                        uncaughtPromiseError.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) {\n                }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState ?\n                (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n                (typeof onRejected === 'function') ? onRejected : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                        [] :\n                        [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        class ZoneAwarePromise {\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            static toString() { return ZONE_AWARE_PROMISE_TO_STRING; }\n            static resolve(value) {\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) { resolve(value); }\n                function onReject(error) { reject(error); }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, reject);\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            get [Symbol.toStringTag]() { return 'Promise'; }\n            then(onFulfilled, onRejected) {\n                const chainPromise = new this.constructor(null);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                const chainPromise = new this.constructor(null);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = global[symbolPromise] = global['Promise'];\n        const ZONE_AWARE_PROMISE = Zone.__symbol__('ZoneAwarePromise');\n        let desc = ObjectGetOwnPropertyDescriptor(global, 'Promise');\n        if (!desc || desc.configurable) {\n            desc && delete desc.writable;\n            desc && delete desc.value;\n            if (!desc) {\n                desc = { configurable: true, enumerable: true };\n            }\n            desc.get = function () {\n                // if we already set ZoneAwarePromise, use patched one\n                // otherwise return native one.\n                return global[ZONE_AWARE_PROMISE] ? global[ZONE_AWARE_PROMISE] : global[symbolPromise];\n            };\n            desc.set = function (NewNativePromise) {\n                if (NewNativePromise === ZoneAwarePromise) {\n                    // if the NewNativePromise is ZoneAwarePromise\n                    // save to global\n                    global[ZONE_AWARE_PROMISE] = NewNativePromise;\n                }\n                else {\n                    // if the NewNativePromise is not ZoneAwarePromise\n                    // for example: after load zone.js, some library just\n                    // set es6-promise to global, if we set it to global\n                    // directly, assertZonePatched will fail and angular\n                    // will not loaded, so we just set the NewNativePromise\n                    // to global[symbolPromise], so the result is just like\n                    // we load ES6 Promise before zone.js\n                    global[symbolPromise] = NewNativePromise;\n                    if (!NewNativePromise.prototype[symbolThen]) {\n                        patchThen(NewNativePromise);\n                    }\n                    api.setNativePromise(NewNativePromise);\n                }\n            };\n            ObjectDefineProperty(global, 'Promise', desc);\n        }\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => { originalThen.call(this, resolve, reject); });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function () {\n                let resultPromise = fn.apply(this, arguments);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            const fetch = global['fetch'];\n            if (typeof fetch == 'function') {\n                global[api.symbol('fetch')] = fetch;\n                global['fetch'] = zoneify(fetch);\n            }\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Suppress closure compiler errors about unknown 'Zone' variable\n     * @fileoverview\n     * @suppress {undefinedVars,globalThis,missingRequire}\n     */\n    /// <reference types=\"node\"/>\n    // issue #989, to reduce bundle size, use short name\n    /** Object.getOwnPropertyDescriptor */\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    /** Object.defineProperty */\n    const ObjectDefineProperty = Object.defineProperty;\n    /** Object.getPrototypeOf */\n    const ObjectGetPrototypeOf = Object.getPrototypeOf;\n    /** Object.create */\n    const ObjectCreate = Object.create;\n    /** Array.prototype.slice */\n    const ArraySlice = Array.prototype.slice;\n    /** addEventListener string const */\n    const ADD_EVENT_LISTENER_STR = 'addEventListener';\n    /** removeEventListener string const */\n    const REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n    /** zoneSymbol addEventListener */\n    const ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n    /** zoneSymbol removeEventListener */\n    const ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n    /** true string const */\n    const TRUE_STR = 'true';\n    /** false string const */\n    const FALSE_STR = 'false';\n    /** Zone symbol prefix string const. */\n    const ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\n    function wrapWithCurrentZone(callback, source) {\n        return Zone.current.wrap(callback, source);\n    }\n    function scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n        return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n    }\n    const zoneSymbol = Zone.__symbol__;\n    const isWindowExists = typeof window !== 'undefined';\n    const internalWindow = isWindowExists ? window : undefined;\n    const _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\n    const REMOVE_ATTRIBUTE = 'removeAttribute';\n    const NULL_ON_PROP_VALUE = [null];\n    function bindArguments(args, source) {\n        for (let i = args.length - 1; i >= 0; i--) {\n            if (typeof args[i] === 'function') {\n                args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n            }\n        }\n        return args;\n    }\n    function patchPrototype(prototype, fnNames) {\n        const source = prototype.constructor['name'];\n        for (let i = 0; i < fnNames.length; i++) {\n            const name = fnNames[i];\n            const delegate = prototype[name];\n            if (delegate) {\n                const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n                if (!isPropertyWritable(prototypeDesc)) {\n                    continue;\n                }\n                prototype[name] = ((delegate) => {\n                    const patched = function () {\n                        return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                    };\n                    attachOriginToPatched(patched, delegate);\n                    return patched;\n                })(delegate);\n            }\n        }\n    }\n    function isPropertyWritable(propertyDesc) {\n        if (!propertyDesc) {\n            return true;\n        }\n        if (propertyDesc.writable === false) {\n            return false;\n        }\n        return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n    }\n    const isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]');\n    const isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n    // we are in electron of nw, so we are both browser and nodejs\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isMix = typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n        !!(isWindowExists && internalWindow['HTMLElement']);\n    const zoneSymbolEventNames = {};\n    const wrapFn = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        let eventNameSymbol = zoneSymbolEventNames[event.type];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n        }\n        const target = this || event.target || _global;\n        const listener = target[eventNameSymbol];\n        let result;\n        if (isBrowser && target === internalWindow && event.type === 'error') {\n            // window.onerror have different signiture\n            // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n            // and onerror callback will prevent default when callback return true\n            const errorEvent = event;\n            result = listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n            if (result === true) {\n                event.preventDefault();\n            }\n        }\n        else {\n            result = listener && listener.apply(this, arguments);\n            if (result != undefined && !result) {\n                event.preventDefault();\n            }\n        }\n        return result;\n    };\n    function patchProperty(obj, prop, prototype) {\n        let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n        if (!desc && prototype) {\n            // when patch window object, use prototype to check prop exist or not\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n            if (prototypeDesc) {\n                desc = { enumerable: true, configurable: true };\n            }\n        }\n        // if the descriptor not exists or is not configurable\n        // just return\n        if (!desc || !desc.configurable) {\n            return;\n        }\n        const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n        if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n            return;\n        }\n        // A property descriptor cannot have getter/setter and be writable\n        // deleting the writable and value properties avoids this error:\n        //\n        // TypeError: property descriptors must not specify a value or be writable when a\n        // getter or setter has been specified\n        delete desc.writable;\n        delete desc.value;\n        const originalDescGet = desc.get;\n        const originalDescSet = desc.set;\n        // substr(2) cuz 'onclick' -> 'click', etc\n        const eventName = prop.substr(2);\n        let eventNameSymbol = zoneSymbolEventNames[eventName];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n        }\n        desc.set = function (newValue) {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return;\n            }\n            let previousValue = target[eventNameSymbol];\n            if (previousValue) {\n                target.removeEventListener(eventName, wrapFn);\n            }\n            // issue #978, when onload handler was added before loading zone.js\n            // we should remove it with originalDescSet\n            if (originalDescSet) {\n                originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n            }\n            if (typeof newValue === 'function') {\n                target[eventNameSymbol] = newValue;\n                target.addEventListener(eventName, wrapFn, false);\n            }\n            else {\n                target[eventNameSymbol] = null;\n            }\n        };\n        // The getter would return undefined for unassigned properties but the default value of an\n        // unassigned property is null\n        desc.get = function () {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return null;\n            }\n            const listener = target[eventNameSymbol];\n            if (listener) {\n                return listener;\n            }\n            else if (originalDescGet) {\n                // result will be null when use inline event attribute,\n                // such as <button onclick=\"func();\">OK</button>\n                // because the onclick function is internal raw uncompiled handler\n                // the onclick will be evaluated when first time event was triggered or\n                // the property is accessed, https://github.com/angular/zone.js/issues/525\n                // so we should use original native get to retrieve the handler\n                let value = originalDescGet && originalDescGet.call(this);\n                if (value) {\n                    desc.set.call(this, value);\n                    if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                        target.removeAttribute(prop);\n                    }\n                    return value;\n                }\n            }\n            return null;\n        };\n        ObjectDefineProperty(obj, prop, desc);\n        obj[onPropPatchedSymbol] = true;\n    }\n    function patchOnProperties(obj, properties, prototype) {\n        if (properties) {\n            for (let i = 0; i < properties.length; i++) {\n                patchProperty(obj, 'on' + properties[i], prototype);\n            }\n        }\n        else {\n            const onProperties = [];\n            for (const prop in obj) {\n                if (prop.substr(0, 2) == 'on') {\n                    onProperties.push(prop);\n                }\n            }\n            for (let j = 0; j < onProperties.length; j++) {\n                patchProperty(obj, onProperties[j], prototype);\n            }\n        }\n    }\n    const originalInstanceKey = zoneSymbol('originalInstance');\n    // wrap some native API on `window`\n    function patchClass(className) {\n        const OriginalClass = _global[className];\n        if (!OriginalClass)\n            return;\n        // keep original class in global\n        _global[zoneSymbol(className)] = OriginalClass;\n        _global[className] = function () {\n            const a = bindArguments(arguments, className);\n            switch (a.length) {\n                case 0:\n                    this[originalInstanceKey] = new OriginalClass();\n                    break;\n                case 1:\n                    this[originalInstanceKey] = new OriginalClass(a[0]);\n                    break;\n                case 2:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                    break;\n                case 3:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                    break;\n                case 4:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                    break;\n                default:\n                    throw new Error('Arg list too long.');\n            }\n        };\n        // attach original delegate to patched function\n        attachOriginToPatched(_global[className], OriginalClass);\n        const instance = new OriginalClass(function () { });\n        let prop;\n        for (prop in instance) {\n            // https://bugs.webkit.org/show_bug.cgi?id=44721\n            if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n                continue;\n            (function (prop) {\n                if (typeof instance[prop] === 'function') {\n                    _global[className].prototype[prop] = function () {\n                        return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                    };\n                }\n                else {\n                    ObjectDefineProperty(_global[className].prototype, prop, {\n                        set: function (fn) {\n                            if (typeof fn === 'function') {\n                                this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                                // keep callback in wrapped function so we can\n                                // use it in Function.prototype.toString to return\n                                // the native one.\n                                attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                            }\n                            else {\n                                this[originalInstanceKey][prop] = fn;\n                            }\n                        },\n                        get: function () { return this[originalInstanceKey][prop]; }\n                    });\n                }\n            }(prop));\n        }\n        for (prop in OriginalClass) {\n            if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n                _global[className][prop] = OriginalClass[prop];\n            }\n        }\n    }\n    function copySymbolProperties(src, dest) {\n        if (typeof Object.getOwnPropertySymbols !== 'function') {\n            return;\n        }\n        const symbols = Object.getOwnPropertySymbols(src);\n        symbols.forEach((symbol) => {\n            const desc = Object.getOwnPropertyDescriptor(src, symbol);\n            Object.defineProperty(dest, symbol, {\n                get: function () { return src[symbol]; },\n                set: function (value) {\n                    if (desc && (!desc.writable || typeof desc.set !== 'function')) {\n                        // if src[symbol] is not writable or not have a setter, just return\n                        return;\n                    }\n                    src[symbol] = value;\n                },\n                enumerable: desc ? desc.enumerable : true,\n                configurable: desc ? desc.configurable : true\n            });\n        });\n    }\n    let shouldCopySymbolProperties = false;\n    function patchMethod(target, name, patchFn) {\n        let proto = target;\n        while (proto && !proto.hasOwnProperty(name)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && target[name]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = target;\n        }\n        const delegateName = zoneSymbol(name);\n        let delegate = null;\n        if (proto && !(delegate = proto[delegateName])) {\n            delegate = proto[delegateName] = proto[name];\n            // check whether proto[name] is writable\n            // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n            const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n            if (isPropertyWritable(desc)) {\n                const patchDelegate = patchFn(delegate, delegateName, name);\n                proto[name] = function () { return patchDelegate(this, arguments); };\n                attachOriginToPatched(proto[name], delegate);\n                if (shouldCopySymbolProperties) {\n                    copySymbolProperties(delegate, proto[name]);\n                }\n            }\n        }\n        return delegate;\n    }\n    // TODO: @JiaLiPassion, support cancel task later if necessary\n    function patchMacroTask(obj, funcName, metaCreator) {\n        let setNative = null;\n        function scheduleTask(task) {\n            const data = task.data;\n            data.args[data.cbIdx] = function () { task.invoke.apply(this, arguments); };\n            setNative.apply(data.target, data.args);\n            return task;\n        }\n        setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n            const meta = metaCreator(self, args);\n            if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n                return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(self, args);\n            }\n        });\n    }\n    function attachOriginToPatched(patched, original) {\n        patched[zoneSymbol('OriginalDelegate')] = original;\n    }\n    let isDetectedIEOrEdge = false;\n    let ieOrEdge = false;\n    function isIE() {\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n                return true;\n            }\n        }\n        catch (error) {\n        }\n        return false;\n    }\n    function isIEOrEdge() {\n        if (isDetectedIEOrEdge) {\n            return ieOrEdge;\n        }\n        isDetectedIEOrEdge = true;\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n                ieOrEdge = true;\n            }\n        }\n        catch (error) {\n        }\n        return ieOrEdge;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    let passiveSupported = false;\n    if (typeof window !== 'undefined') {\n        try {\n            const options = Object.defineProperty({}, 'passive', { get: function () { passiveSupported = true; } });\n            window.addEventListener('test', options, options);\n            window.removeEventListener('test', options, options);\n        }\n        catch (err) {\n            passiveSupported = false;\n        }\n    }\n    // an identifier to tell ZoneTask do not create a new invoke closure\n    const OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n        useG: true\n    };\n    const zoneSymbolEventNames$1 = {};\n    const globalSources = {};\n    const EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\n    const IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\n    function patchEventTarget(_global, apis, patchOptions) {\n        const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n        const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n        const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n        const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n        const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n        const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n        const PREPEND_EVENT_LISTENER = 'prependListener';\n        const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n        const invokeTask = function (task, target, event) {\n            // for better performance, check isRemoved which is set\n            // by removeEventListener\n            if (task.isRemoved) {\n                return;\n            }\n            const delegate = task.callback;\n            if (typeof delegate === 'object' && delegate.handleEvent) {\n                // create the bind version of handleEvent when invoke\n                task.callback = (event) => delegate.handleEvent(event);\n                task.originalDelegate = delegate;\n            }\n            // invoke static task.invoke\n            task.invoke(task, target, [event]);\n            const options = task.options;\n            if (options && typeof options === 'object' && options.once) {\n                // if options.once is true, after invoke once remove listener here\n                // only browser need to do this, nodejs eventEmitter will cal removeListener\n                // inside EventEmitter.once\n                const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = false\n        const globalZoneAwareCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = true\n        const globalZoneAwareCaptureCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        function patchEventTargetMethods(obj, patchOptions) {\n            if (!obj) {\n                return false;\n            }\n            let useGlobalCallback = true;\n            if (patchOptions && patchOptions.useG !== undefined) {\n                useGlobalCallback = patchOptions.useG;\n            }\n            const validateHandler = patchOptions && patchOptions.vh;\n            let checkDuplicate = true;\n            if (patchOptions && patchOptions.chkDup !== undefined) {\n                checkDuplicate = patchOptions.chkDup;\n            }\n            let returnTarget = false;\n            if (patchOptions && patchOptions.rt !== undefined) {\n                returnTarget = patchOptions.rt;\n            }\n            let proto = obj;\n            while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n                proto = ObjectGetPrototypeOf(proto);\n            }\n            if (!proto && obj[ADD_EVENT_LISTENER]) {\n                // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n                proto = obj;\n            }\n            if (!proto) {\n                return false;\n            }\n            if (proto[zoneSymbolAddEventListener]) {\n                return false;\n            }\n            const eventNameToString = patchOptions && patchOptions.eventNameToString;\n            // a shared global taskData to pass data for scheduleEventTask\n            // so we do not need to create a new object just for pass some data\n            const taskData = {};\n            const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n            const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n                proto[REMOVE_EVENT_LISTENER];\n            const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n                proto[LISTENERS_EVENT_LISTENER];\n            const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n                proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n            let nativePrependEventListener;\n            if (patchOptions && patchOptions.prepend) {\n                nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                    proto[patchOptions.prepend];\n            }\n            function checkIsPassive(task) {\n                if (!passiveSupported && typeof taskData.options !== 'boolean' &&\n                    typeof taskData.options !== 'undefined' && taskData.options !== null) {\n                    // options is a non-null non-undefined object\n                    // passive is not supported\n                    // don't pass options as object\n                    // just pass capture as a boolean\n                    task.options = !!taskData.options.capture;\n                    taskData.options = task.options;\n                }\n            }\n            const customScheduleGlobal = function (task) {\n                // if there is already a task for the eventName + capture,\n                // just return, because we use the shared globalZoneAwareCallback here.\n                if (taskData.isExisting) {\n                    return;\n                }\n                checkIsPassive(task);\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n            };\n            const customCancelGlobal = function (task) {\n                // if task is not marked as isRemoved, this call is directly\n                // from Zone.prototype.cancelTask, we should remove the task\n                // from tasksList of target first\n                if (!task.isRemoved) {\n                    const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                    let symbolEventName;\n                    if (symbolEventNames) {\n                        symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                    }\n                    const existingTasks = symbolEventName && task.target[symbolEventName];\n                    if (existingTasks) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            const existingTask = existingTasks[i];\n                            if (existingTask === task) {\n                                existingTasks.splice(i, 1);\n                                // set isRemoved to data for faster invokeTask check\n                                task.isRemoved = true;\n                                if (existingTasks.length === 0) {\n                                    // all tasks for the eventName + capture have gone,\n                                    // remove globalZoneAwareCallback and remove the task cache from target\n                                    task.allRemoved = true;\n                                    task.target[symbolEventName] = null;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n                // if all tasks for the eventName + capture have gone,\n                // we will really remove the global event callback,\n                // if not, return\n                if (!task.allRemoved) {\n                    return;\n                }\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n            };\n            const customScheduleNonGlobal = function (task) {\n                checkIsPassive(task);\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customSchedulePrepend = function (task) {\n                return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customCancelNonGlobal = function (task) {\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n            };\n            const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n            const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n            const compareTaskCallbackVsDelegate = function (task, delegate) {\n                const typeOfDelegate = typeof delegate;\n                return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                    (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n            };\n            const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n            const blackListedEvents = Zone[zoneSymbol('BLACK_LISTED_EVENTS')];\n            const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n                return function () {\n                    const target = this || _global;\n                    let eventName = arguments[0];\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    let delegate = arguments[1];\n                    if (!delegate) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    if (isNode && eventName === 'uncaughtException') {\n                        // don't patch uncaughtException of nodejs to prevent endless loop\n                        return nativeListener.apply(this, arguments);\n                    }\n                    // don't create the bind delegate function for handleEvent\n                    // case here to improve addEventListener performance\n                    // we will create the bind delegate when invoke\n                    let isHandleEvent = false;\n                    if (typeof delegate !== 'function') {\n                        if (!delegate.handleEvent) {\n                            return nativeListener.apply(this, arguments);\n                        }\n                        isHandleEvent = true;\n                    }\n                    if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                        return;\n                    }\n                    const options = arguments[2];\n                    if (blackListedEvents) {\n                        // check black list\n                        for (let i = 0; i < blackListedEvents.length; i++) {\n                            if (eventName === blackListedEvents[i]) {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                    let capture;\n                    let once = false;\n                    if (options === undefined) {\n                        capture = false;\n                    }\n                    else if (options === true) {\n                        capture = true;\n                    }\n                    else if (options === false) {\n                        capture = false;\n                    }\n                    else {\n                        capture = options ? !!options.capture : false;\n                        once = options ? !!options.once : false;\n                    }\n                    const zone = Zone.current;\n                    const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    let symbolEventName;\n                    if (!symbolEventNames) {\n                        // the code is duplicate, but I just want to get some better performance\n                        const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n                        const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n                        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n                        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n                        zoneSymbolEventNames$1[eventName] = {};\n                        zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n                        zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n                        symbolEventName = capture ? symbolCapture : symbol;\n                    }\n                    else {\n                        symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                    }\n                    let existingTasks = target[symbolEventName];\n                    let isExisting = false;\n                    if (existingTasks) {\n                        // already have task registered\n                        isExisting = true;\n                        if (checkDuplicate) {\n                            for (let i = 0; i < existingTasks.length; i++) {\n                                if (compare(existingTasks[i], delegate)) {\n                                    // same callback, same capture, same event name, just return\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        existingTasks = target[symbolEventName] = [];\n                    }\n                    let source;\n                    const constructorName = target.constructor['name'];\n                    const targetSource = globalSources[constructorName];\n                    if (targetSource) {\n                        source = targetSource[eventName];\n                    }\n                    if (!source) {\n                        source = constructorName + addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                    }\n                    // do not create a new object as task.data to pass those things\n                    // just use the global shared one\n                    taskData.options = options;\n                    if (once) {\n                        // if addEventListener with once options, we don't pass it to\n                        // native addEventListener, instead we keep the once setting\n                        // and handle ourselves.\n                        taskData.options.once = false;\n                    }\n                    taskData.target = target;\n                    taskData.capture = capture;\n                    taskData.eventName = eventName;\n                    taskData.isExisting = isExisting;\n                    const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                    // keep taskData into data to allow onScheduleEventTask to access the task information\n                    if (data) {\n                        data.taskData = taskData;\n                    }\n                    const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                    // should clear taskData.target to avoid memory leak\n                    // issue, https://github.com/angular/angular/issues/20442\n                    taskData.target = null;\n                    // need to clear up taskData because it is a global object\n                    if (data) {\n                        data.taskData = null;\n                    }\n                    // have to save those information to task in case\n                    // application may call task.zone.cancelTask() directly\n                    if (once) {\n                        options.once = true;\n                    }\n                    if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                        // if not support passive, and we pass an option object\n                        // to addEventListener, we should save the options to task\n                        task.options = options;\n                    }\n                    task.target = target;\n                    task.capture = capture;\n                    task.eventName = eventName;\n                    if (isHandleEvent) {\n                        // save original delegate for compare to check duplicate\n                        task.originalDelegate = delegate;\n                    }\n                    if (!prepend) {\n                        existingTasks.push(task);\n                    }\n                    else {\n                        existingTasks.unshift(task);\n                    }\n                    if (returnTarget) {\n                        return target;\n                    }\n                };\n            };\n            proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n            if (nativePrependEventListener) {\n                proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n            }\n            proto[REMOVE_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const options = arguments[2];\n                let capture;\n                if (options === undefined) {\n                    capture = false;\n                }\n                else if (options === true) {\n                    capture = true;\n                }\n                else if (options === false) {\n                    capture = false;\n                }\n                else {\n                    capture = options ? !!options.capture : false;\n                }\n                const delegate = arguments[1];\n                if (!delegate) {\n                    return nativeRemoveEventListener.apply(this, arguments);\n                }\n                if (validateHandler &&\n                    !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                    return;\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (compare(existingTask, delegate)) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            existingTask.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                existingTask.allRemoved = true;\n                                target[symbolEventName] = null;\n                                // in the target, we have an event listener which is added by on_property\n                                // such as target.onclick = function() {}, so we need to clear this internal\n                                // property too if all delegates all removed\n                                if (typeof eventName === 'string') {\n                                    const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                    target[onPropertySymbol] = null;\n                                }\n                            }\n                            existingTask.zone.cancelTask(existingTask);\n                            if (returnTarget) {\n                                return target;\n                            }\n                            return;\n                        }\n                    }\n                }\n                // issue 930, didn't find the event name or callback\n                // from zone kept existingTasks, the callback maybe\n                // added outside of zone, we need to call native removeEventListener\n                // to try to remove it.\n                return nativeRemoveEventListener.apply(this, arguments);\n            };\n            proto[LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const listeners = [];\n                const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n                for (let i = 0; i < tasks.length; i++) {\n                    const task = tasks[i];\n                    let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                    listeners.push(delegate);\n                }\n                return listeners;\n            };\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (!eventName) {\n                    const keys = Object.keys(target);\n                    for (let i = 0; i < keys.length; i++) {\n                        const prop = keys[i];\n                        const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                        let evtName = match && match[1];\n                        // in nodejs EventEmitter, removeListener event is\n                        // used for monitoring the removeListener call,\n                        // so just keep removeListener eventListener until\n                        // all other eventListeners are removed\n                        if (evtName && evtName !== 'removeListener') {\n                            this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                        }\n                    }\n                    // remove removeListener listener finally\n                    this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n                }\n                else {\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    if (symbolEventNames) {\n                        const symbolEventName = symbolEventNames[FALSE_STR];\n                        const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                        const tasks = target[symbolEventName];\n                        const captureTasks = target[symbolCaptureEventName];\n                        if (tasks) {\n                            const removeTasks = tasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                        if (captureTasks) {\n                            const removeTasks = captureTasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                    }\n                }\n                if (returnTarget) {\n                    return this;\n                }\n            };\n            // for native toString patch\n            attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n            attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n            if (nativeRemoveAllListeners) {\n                attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n            }\n            if (nativeListeners) {\n                attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n            }\n            return true;\n        }\n        let results = [];\n        for (let i = 0; i < apis.length; i++) {\n            results[i] = patchEventTargetMethods(apis[i], patchOptions);\n        }\n        return results;\n    }\n    function findEventTasks(target, eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    function patchEventPrototype(global, api) {\n        const Event = global['Event'];\n        if (Event && Event.prototype) {\n            api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n                self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n                // we need to call the native stopImmediatePropagation\n                // in case in some hybrid application, some part of\n                // application will be controlled by zone, some are not\n                delegate && delegate.apply(self, args);\n            });\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCallbacks(api, target, targetName, method, callbacks) {\n        const symbol = Zone.__symbol__(method);\n        if (target[symbol]) {\n            return;\n        }\n        const nativeDelegate = target[symbol] = target[method];\n        target[method] = function (name, opts, options) {\n            if (opts && opts.prototype) {\n                callbacks.forEach(function (callback) {\n                    const source = `${targetName}.${method}::` + callback;\n                    const prototype = opts.prototype;\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                });\n            }\n            return nativeDelegate.call(target, name, opts, options);\n        };\n        api.attachOriginToPatched(target[method], nativeDelegate);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /*\n     * This is necessary for Chrome and Chrome mobile, to enable\n     * things like redefining `createdCallback` on an element.\n     */\n    const zoneSymbol$1 = Zone.__symbol__;\n    const _defineProperty = Object[zoneSymbol$1('defineProperty')] = Object.defineProperty;\n    const _getOwnPropertyDescriptor = Object[zoneSymbol$1('getOwnPropertyDescriptor')] =\n        Object.getOwnPropertyDescriptor;\n    const unconfigurablesKey = zoneSymbol$1('unconfigurables');\n    function _redefineProperty(obj, prop, desc) {\n        const originalConfigurableFlag = desc.configurable;\n        desc = rewriteDescriptor(obj, prop, desc);\n        return _tryDefineProperty(obj, prop, desc, originalConfigurableFlag);\n    }\n    function rewriteDescriptor(obj, prop, desc) {\n        // issue-927, if the desc is frozen, don't try to change the desc\n        if (!Object.isFrozen(desc)) {\n            desc.configurable = true;\n        }\n        if (!desc.configurable) {\n            // issue-927, if the obj is frozen, don't try to set the desc to obj\n            if (!obj[unconfigurablesKey] && !Object.isFrozen(obj)) {\n                _defineProperty(obj, unconfigurablesKey, { writable: true, value: {} });\n            }\n            if (obj[unconfigurablesKey]) {\n                obj[unconfigurablesKey][prop] = true;\n            }\n        }\n        return desc;\n    }\n    function _tryDefineProperty(obj, prop, desc, originalConfigurableFlag) {\n        try {\n            return _defineProperty(obj, prop, desc);\n        }\n        catch (error) {\n            if (desc.configurable) {\n                // In case of errors, when the configurable flag was likely set by rewriteDescriptor(), let's\n                // retry with the original flag value\n                if (typeof originalConfigurableFlag == 'undefined') {\n                    delete desc.configurable;\n                }\n                else {\n                    desc.configurable = originalConfigurableFlag;\n                }\n                try {\n                    return _defineProperty(obj, prop, desc);\n                }\n                catch (error) {\n                    let descJson = null;\n                    try {\n                        descJson = JSON.stringify(desc);\n                    }\n                    catch (error) {\n                        descJson = desc.toString();\n                    }\n                    console.log(`Attempting to configure '${prop}' with descriptor '${descJson}' on object '${obj}' and got error, giving up: ${error}`);\n                }\n            }\n            else {\n                throw error;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const globalEventHandlersEventNames = [\n        'abort',\n        'animationcancel',\n        'animationend',\n        'animationiteration',\n        'auxclick',\n        'beforeinput',\n        'blur',\n        'cancel',\n        'canplay',\n        'canplaythrough',\n        'change',\n        'compositionstart',\n        'compositionupdate',\n        'compositionend',\n        'cuechange',\n        'click',\n        'close',\n        'contextmenu',\n        'curechange',\n        'dblclick',\n        'drag',\n        'dragend',\n        'dragenter',\n        'dragexit',\n        'dragleave',\n        'dragover',\n        'drop',\n        'durationchange',\n        'emptied',\n        'ended',\n        'error',\n        'focus',\n        'focusin',\n        'focusout',\n        'gotpointercapture',\n        'input',\n        'invalid',\n        'keydown',\n        'keypress',\n        'keyup',\n        'load',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'lostpointercapture',\n        'mousedown',\n        'mouseenter',\n        'mouseleave',\n        'mousemove',\n        'mouseout',\n        'mouseover',\n        'mouseup',\n        'mousewheel',\n        'orientationchange',\n        'pause',\n        'play',\n        'playing',\n        'pointercancel',\n        'pointerdown',\n        'pointerenter',\n        'pointerleave',\n        'pointerlockchange',\n        'mozpointerlockchange',\n        'webkitpointerlockerchange',\n        'pointerlockerror',\n        'mozpointerlockerror',\n        'webkitpointerlockerror',\n        'pointermove',\n        'pointout',\n        'pointerover',\n        'pointerup',\n        'progress',\n        'ratechange',\n        'reset',\n        'resize',\n        'scroll',\n        'seeked',\n        'seeking',\n        'select',\n        'selectionchange',\n        'selectstart',\n        'show',\n        'sort',\n        'stalled',\n        'submit',\n        'suspend',\n        'timeupdate',\n        'volumechange',\n        'touchcancel',\n        'touchmove',\n        'touchstart',\n        'touchend',\n        'transitioncancel',\n        'transitionend',\n        'waiting',\n        'wheel'\n    ];\n    const documentEventNames = [\n        'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n        'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n        'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n        'visibilitychange', 'resume'\n    ];\n    const windowEventNames = [\n        'absolutedeviceorientation',\n        'afterinput',\n        'afterprint',\n        'appinstalled',\n        'beforeinstallprompt',\n        'beforeprint',\n        'beforeunload',\n        'devicelight',\n        'devicemotion',\n        'deviceorientation',\n        'deviceorientationabsolute',\n        'deviceproximity',\n        'hashchange',\n        'languagechange',\n        'message',\n        'mozbeforepaint',\n        'offline',\n        'online',\n        'paint',\n        'pageshow',\n        'pagehide',\n        'popstate',\n        'rejectionhandled',\n        'storage',\n        'unhandledrejection',\n        'unload',\n        'userproximity',\n        'vrdisplyconnected',\n        'vrdisplaydisconnected',\n        'vrdisplaypresentchange'\n    ];\n    const htmlElementEventNames = [\n        'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n        'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n        'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n    ];\n    const mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\n    const ieElementEventNames = [\n        'activate',\n        'afterupdate',\n        'ariarequest',\n        'beforeactivate',\n        'beforedeactivate',\n        'beforeeditfocus',\n        'beforeupdate',\n        'cellchange',\n        'controlselect',\n        'dataavailable',\n        'datasetchanged',\n        'datasetcomplete',\n        'errorupdate',\n        'filterchange',\n        'layoutcomplete',\n        'losecapture',\n        'move',\n        'moveend',\n        'movestart',\n        'propertychange',\n        'resizeend',\n        'resizestart',\n        'rowenter',\n        'rowexit',\n        'rowsdelete',\n        'rowsinserted',\n        'command',\n        'compassneedscalibration',\n        'deactivate',\n        'help',\n        'mscontentzoom',\n        'msmanipulationstatechanged',\n        'msgesturechange',\n        'msgesturedoubletap',\n        'msgestureend',\n        'msgesturehold',\n        'msgesturestart',\n        'msgesturetap',\n        'msgotpointercapture',\n        'msinertiastart',\n        'mslostpointercapture',\n        'mspointercancel',\n        'mspointerdown',\n        'mspointerenter',\n        'mspointerhover',\n        'mspointerleave',\n        'mspointermove',\n        'mspointerout',\n        'mspointerover',\n        'mspointerup',\n        'pointerout',\n        'mssitemodejumplistitemremoved',\n        'msthumbnailclick',\n        'stop',\n        'storagecommit'\n    ];\n    const webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\n    const formEventNames = ['autocomplete', 'autocompleteerror'];\n    const detailEventNames = ['toggle'];\n    const frameEventNames = ['load'];\n    const frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\n    const marqueeEventNames = ['bounce', 'finish', 'start'];\n    const XMLHttpRequestEventNames = [\n        'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n        'readystatechange'\n    ];\n    const IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\n    const websocketEventNames = ['close', 'error', 'open', 'message'];\n    const workerEventNames = ['error', 'message'];\n    const eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\n    function filterProperties(target, onProperties, ignoreProperties) {\n        if (!ignoreProperties || ignoreProperties.length === 0) {\n            return onProperties;\n        }\n        const tip = ignoreProperties.filter(ip => ip.target === target);\n        if (!tip || tip.length === 0) {\n            return onProperties;\n        }\n        const targetIgnoreProperties = tip[0].ignoreProperties;\n        return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n    }\n    function patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n        // check whether target is available, sometimes target will be undefined\n        // because different browser or some 3rd party plugin.\n        if (!target) {\n            return;\n        }\n        const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n        patchOnProperties(target, filteredProperties, prototype);\n    }\n    function propertyDescriptorPatch(api, _global) {\n        if (isNode && !isMix) {\n            return;\n        }\n        if (Zone[api.symbol('patchEvents')]) {\n            // events are already been patched by legacy patch.\n            return;\n        }\n        const supportsWebSocket = typeof WebSocket !== 'undefined';\n        const ignoreProperties = _global['__Zone_ignore_on_properties'];\n        // for browsers that we can patch the descriptor:  Chrome & Firefox\n        if (isBrowser) {\n            const internalWindow = window;\n            const ignoreErrorProperties = isIE ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n            // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n            // so we need to pass WindowPrototype to check onProp exist or not\n            patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n            patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n            if (typeof internalWindow['SVGElement'] !== 'undefined') {\n                patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n            }\n            patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n            const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n            if (HTMLMarqueeElement) {\n                patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n            }\n            const Worker = internalWindow['Worker'];\n            if (Worker) {\n                patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n            }\n        }\n        const XMLHttpRequest = _global['XMLHttpRequest'];\n        if (XMLHttpRequest) {\n            // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n            patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget) {\n            patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        if (typeof IDBIndex !== 'undefined') {\n            patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n        }\n        if (supportsWebSocket) {\n            patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('util', (global, Zone, api) => {\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n        // define which events will not be patched by `Zone.js`.\n        // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n        // the name consistent with angular repo.\n        // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n        // backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = _redefineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({ globalSources, zoneSymbolEventNames: zoneSymbolEventNames$1, eventNames, isBrowser, isMix, isNode, TRUE_STR,\n            FALSE_STR, ZONE_SYMBOL_PREFIX, ADD_EVENT_LISTENER_STR, REMOVE_EVENT_LISTENER_STR });\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const taskSymbol = zoneSymbol('zoneTask');\n    function patchTimer(window, setName, cancelName, nameSuffix) {\n        let setNative = null;\n        let clearNative = null;\n        setName += nameSuffix;\n        cancelName += nameSuffix;\n        const tasksByHandleId = {};\n        function scheduleTask(task) {\n            const data = task.data;\n            function timer() {\n                try {\n                    task.invoke.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    if (!(task.data && task.data.isPeriodic)) {\n                        if (typeof data.handleId === 'number') {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[data.handleId];\n                        }\n                        else if (data.handleId) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            data.handleId[taskSymbol] = null;\n                        }\n                    }\n                }\n            }\n            data.args[0] = timer;\n            data.handleId = setNative.apply(window, data.args);\n            return task;\n        }\n        function clearTask(task) { return clearNative(task.data.handleId); }\n        setNative =\n            patchMethod(window, setName, (delegate) => function (self, args) {\n                if (typeof args[0] === 'function') {\n                    const options = {\n                        isPeriodic: nameSuffix === 'Interval',\n                        delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                            undefined,\n                        args: args\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                    if (!task) {\n                        return task;\n                    }\n                    // Node.js must additionally support the ref and unref functions.\n                    const handle = task.data.handleId;\n                    if (typeof handle === 'number') {\n                        // for non nodejs env, we save handleId: task\n                        // mapping in local cache for clearTimeout\n                        tasksByHandleId[handle] = task;\n                    }\n                    else if (handle) {\n                        // for nodejs env, we save task\n                        // reference in timerId Object for clearTimeout\n                        handle[taskSymbol] = task;\n                    }\n                    // check whether handle is null, because some polyfill or browser\n                    // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                    if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                        typeof handle.unref === 'function') {\n                        task.ref = handle.ref.bind(handle);\n                        task.unref = handle.unref.bind(handle);\n                    }\n                    if (typeof handle === 'number' || handle) {\n                        return handle;\n                    }\n                    return task;\n                }\n                else {\n                    // cause an error by calling it directly.\n                    return delegate.apply(window, args);\n                }\n            });\n        clearNative =\n            patchMethod(window, cancelName, (delegate) => function (self, args) {\n                const id = args[0];\n                let task;\n                if (typeof id === 'number') {\n                    // non nodejs env.\n                    task = tasksByHandleId[id];\n                }\n                else {\n                    // nodejs env.\n                    task = id && id[taskSymbol];\n                    // other environments.\n                    if (!task) {\n                        task = id;\n                    }\n                }\n                if (task && typeof task.type === 'string') {\n                    if (task.state !== 'notScheduled' &&\n                        (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                        if (typeof id === 'number') {\n                            delete tasksByHandleId[id];\n                        }\n                        else if (id) {\n                            id[taskSymbol] = null;\n                        }\n                        // Do not cancel already canceled functions\n                        task.zone.cancelTask(task);\n                    }\n                }\n                else {\n                    // cause an error by calling it directly.\n                    delegate.apply(window, args);\n                }\n            });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCustomElements(_global, api) {\n        const { isBrowser, isMix } = api.getGlobalObjects();\n        if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n            return;\n        }\n        const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n        api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function eventTargetPatch(_global, api) {\n        if (Zone[api.symbol('patchEventTarget')]) {\n            // EventTarget is already patched.\n            return;\n        }\n        const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n        //  predefine all __zone_symbol__ + eventName + true/false string\n        for (let i = 0; i < eventNames.length; i++) {\n            const eventName = eventNames[i];\n            const falseEventName = eventName + FALSE_STR;\n            const trueEventName = eventName + TRUE_STR;\n            const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n            const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n            zoneSymbolEventNames[eventName] = {};\n            zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n            zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n        }\n        const EVENT_TARGET = _global['EventTarget'];\n        if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n            return;\n        }\n        api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n        return true;\n    }\n    function patchEvent(global, api) {\n        api.patchEventPrototype(global, api);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n        }\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n        patchClass('IntersectionObserver');\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) { return target[XHR_TASK]; }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                };\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach(eventTask => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n}));\n//# sourceMappingURL=zone_evergreen_rollup.umd.js.map\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n"],"sourceRoot":""}