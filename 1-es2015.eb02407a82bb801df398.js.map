{"version":3,"sources":["webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/in-viewport/viewport.service.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/in-viewport/viewport.service.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/esm2015/paginator.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/in-viewport/in-viewport.directive.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/in-viewport/in-viewport.directive.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/theme-picker/src/lib/theme-picker.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/theme-picker/src/lib/theme-picker.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/theme-picker/src/index.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/operators/untilDestroy.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/theme-picker/src/lib/style-manager.service.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/theme-picker/src/lib/style-manager.service.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/theme-picker/src/lib/theme-picker.component.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/theme-picker/src/lib/theme-picker.component.html","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/theme-picker/src/lib/theme-picker.component.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/rxjs/_esm2015/internal/observable/interval.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/shared-flex-layout.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/shared-flex-layout.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/shared-perfect-scrollbar.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/shared-perfect-scrollbar.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/shared.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/shared.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/shared-material-date.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/shared-material-date.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/containers/entity/entity-form.component.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/containers/entity/entity.component.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/containers/entity/entity.component.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/containers/entity/entity.service.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/containers/entity/entity.model.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/index.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/rxjs/_esm2015/internal/operators/mapTo.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/helper/group-by.pipe.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/helper/group-by.pipe.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/esm2015/select.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/esm2015/list.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/theme-picker/src/lib/theme-picker-service.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/theme-picker/src/lib/theme-picker-service.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/differenceInMilliseconds/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/addLeadingZeros/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/format/formatters/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/format/lightFormatters/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getUTCWeek/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/format/longFormatters/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/protectedTokens/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/format/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/isValid/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/subMilliseconds/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/addMilliseconds/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/esm2015/divider.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/esm2015/datepicker.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/mask/mask-helper.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/mask/mask.directive.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/mask/mask.directive.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/esm2015/menu.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/compareAsc/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/formatDistance/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/assign/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/cloneObject/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/differenceInSeconds/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/differenceInMonths/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/differenceInCalendarMonths/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/ng-let/ng-let.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/ng-let/ng-let.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/router-link-match/router-link-match.directive.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/router-link-match/router-link-match.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/router-link-match/router-link-match.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/in-viewport/in-viewport.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/in-viewport/in-viewport.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/click-outside/click-outside.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/click-outside/click-outside.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/mask/mask.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/mask/mask.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/helper/safe-html.pipe.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/helper/helper.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/helper/helper.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/truncate/truncate.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/truncate/truncate.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/date-fns/date-fns.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/date-fns/date-fns.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/index.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/rxjs/_esm2015/internal/operators/repeatWhen.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/rxjs/_esm2015/internal/operators/delayWhen.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/rxjs/_esm2015/internal/operators/takeWhile.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/differenceInMinutes/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/date-fns/format-time-in-words.pipe.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/date-fns/format-time-in-words.pipe.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/toDate/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/toInteger/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/keyframes.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/card.animation.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/fade.animation.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/expand.animation.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/list.animation.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/route.animation.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/rotate.animation.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/scroll-fab.animation.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/scroll.animation.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/animations.service.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/animations.service.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/router.transition.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/sidenav.animation.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/index.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/esm2015/grid-list.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/click-outside/click-outside.directive.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/click-outside/click-outside.directive.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/esm2015/sort.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/rxjs/_esm2015/internal/operators/retry.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/perfect-scrollbar/dist/perfect-scrollbar.esm.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/ngx-perfect-scrollbar/__ivy_ngcc__/dist/ngx-perfect-scrollbar.es5.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/en-US/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/en-US/_lib/match/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/cdk/__ivy_ngcc__/esm2015/table.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/esm2015/table.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/ng-let/ng-let.directive.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/ng-let/ng-let.directive.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/parseISO/index.js.pre-build-optimizer.js"],"names":["__webpack_require__","d","__webpack_exports__","ViewportService","_angular_core__WEBPACK_IMPORTED_MODULE_0__","rxjs__WEBPACK_IMPORTED_MODULE_1__","rxjs_operators__WEBPACK_IMPORTED_MODULE_2__","rxjs_operators__WEBPACK_IMPORTED_MODULE_3__","[object Object]","this","options","rootMargin","threshold","callback$","a","observer","IntersectionObserver","handler","bind","element","observe","asObservable","pipe","Object","entry","target","unobserve","entries","forEach","next","ngInjectableDef","fc","token","factory","t","providedIn","MatPaginatorModule","MatPaginator","_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_2__","_angular_material_core__WEBPACK_IMPORTED_MODULE_3__","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_material_button__WEBPACK_IMPORTED_MODULE_5__","_angular_material_select__WEBPACK_IMPORTED_MODULE_6__","_angular_material_tooltip__WEBPACK_IMPORTED_MODULE_7__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_8__","_c0","_c1","_c2","_c3","_c4","_c5","_c6","_c7","_c8","_c9","_c10","_c11","_c12","_c13","_c14","_c15","_c16","_c17","_c18","_c19","_c20","MatPaginator_div_2_mat_form_field_3_mat_option_2_Template","rf","ctx","qc","fd","oc","pageSizeOption_r89","$implicit","Jc","Uc","gd","MatPaginator_div_2_mat_form_field_3_Template","_r91","rc","zc","$event","Rc","Dc","_changePageSize","value","dd","ctx_r86","color","pageSize","disabled","_intl","itemsPerPageLabel","_displayedPageSizeOptions","MatPaginator_div_2_div_4_Template","ctx_r87","MatPaginator_div_2_Template","ctx_r83","length","_c21","_c22","MatPaginator_button_6_Template","_r93","firstPage","Cc","kc","ctx_r84","firstPageLabel","_previousButtonsDisabled","Vb","_c23","_c24","MatPaginator_button_13_Template","_r95","Bc","lastPage","ctx_r85","lastPageLabel","_nextButtonsDisabled","MatPaginatorIntl","changes","nextPageLabel","previousPageLabel","getRangeLabel","page","startIndex","Math","max","min","MAT_PAGINATOR_INTL_PROVIDER","provide","deps","M","Y","useFactory","parentIntl","DEFAULT_PAGE_SIZE","MatPaginatorBase","_MatPaginatorBase","B","D","_changeDetectorRef","super","_pageIndex","_length","_pageSizeOptions","_hidePageSize","_showFirstLastButtons","_intlChanges","subscribe","markForCheck","pageIndex","f","_pageSize","_updateDisplayedPageSizeOptions","pageSizeOptions","map","p","hidePageSize","c","showFirstLastButtons","_initialized","_markInitialized","unsubscribe","hasNextPage","previousPageIndex","_emitPageEvent","hasPreviousPage","getNumberOfPages","maxPageIndex","ceil","floor","slice","indexOf","push","sort","b","emit","ngComponentDef","dc","type","selectors","jc","k","hostBindings","elIndex","pc","inputs","outputs","exportAs","features","Rb","consts","vars","template","previousPage","nextPage","directives","n","m","styles","encapsulation","changeDetection","ngModuleDef","hc","ngInjectorDef","gc","providers","imports","InViewportDirective","_angular_common__WEBPACK_IMPORTED_MODULE_1__","_operators_untilDestroy__WEBPACK_IMPORTED_MODULE_2__","rxjs_operators__WEBPACK_IMPORTED_MODULE_4__","_viewport_service__WEBPACK_IMPORTED_MODULE_5__","elementRef","viewportService","platformId","preRender","oneTime","inViewport","w","nativeElement","intersectionRatio","isIntersecting","ngDirectiveDef","ec","r","O","theme_picker_module_ThemePickerModule","ThemePickerModule","core","common","esm2015_button","icon","menu","grid_list","tooltip","theme_picker_service_module","untilDestroy","rxjs__WEBPACK_IMPORTED_MODULE_0__","rxjs_operators__WEBPACK_IMPORTED_MODULE_1__","destroy$","Symbol","component","undefined","orignalDestroy","ngOnDestroy","Error","complete","call","_","style_manager_service_StyleManagerService","StyleManagerService","key","href","getExistingLinkElementByKey","linkEl","document","createElement","setAttribute","classList","add","getClassNameForKey","head","appendChild","existingLinkElement","removeChild","querySelector","theme_picker_component_ThemePickerComponent","ThemePickerComponent_mat_grid_tile_6_mat_icon_3_Template","ThemePickerComponent_mat_grid_tile_6_Template","_r11","item_r8","changeTheme","bd","ctx_r7","currentTheme","ad","bc","Zc","primary","cd","ThemePickerComponent","store","styleManager","ariaHidden","allThemes","src","themeName","dispatch","activeThemeName$","ngx_utils_src","i","installTheme","console","log","theme","get","isDefault","removeStyle","setStyle","ngxs_store","Ub","Ec","_r6","Oc","Fc","pipes","h","tslib_es6","__decorate","activeThemeName","__metadata","prototype","interval","_Observable__WEBPACK_IMPORTED_MODULE_0__","_scheduler_async__WEBPACK_IMPORTED_MODULE_1__","_util_isNumeric__WEBPACK_IMPORTED_MODULE_2__","period","scheduler","schedule","subscriber","counter","state","shared_flex_layout_module_SharedFlexLayoutModule","SharedFlexLayoutModule","flex_layout","withConfig","useColumnBasisZero","DEFAULT_PERFECT_SCROLLBAR_CONFIG","suppressScrollX","wheelPropagation","shared_perfect_scrollbar_module_SharedPerfectScrollbarModule","SharedPerfectScrollbarModule","ngx_perfect_scrollbar_es5","useValue","shared_module_SharedModule","SharedModule","fesm2015_forms","s","g","DATE_FORMATS","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","shared_material_date_module_SharedMaterialDateModule","SharedMaterialDateModule","esm2015_core","datepicker","EntityFormComponent","data","dialogRef","title","entity","payload","buildForm","close","entityForm","entity_component_EntitiesComponent","EntitiesComponent","entityService","dataSource","table","selection","collections","showToolbar","showColumnFilter","showActionColumn","maxSelectable","actionColumn","selectColumn","loading$","update","filterPredicate","changed","operators_filter","sc","added","selected","deselect","shift","paginator","id","getById","item","delete","concatMap","put","post","getAll","getData","result","filteredData","every","isSelected","hasValue","isAllFilteredRowsSelected","isMasterToggleChecked","clear","select","filterValue","trim","toLowerCase","filter","displayedColumns","columns","column","visible","x","property","unshift","concat","toggle","showDetails","outlet","activatedRouteData","depth","event","stopPropagation","stopImmediatePropagation","date","String","parseISO","ngBaseDef","cc","viewQuery","_t","Xc","Nc","Ac","first","filterRef","entity_service_EntityService","httpClient","baseUrl","environment","API_BASE_URL","loadingSubject","BehaviorSubject","entityPath","catchError","handleError","order","skip","take","params","http","set","toString","retry","finalize","error","errorMessage","ErrorEvent","message","status","throwError","body","temporalFunctionToJson","Date","toJSON","format","jsonBody","JSON","stringify","Entity","init","assign","EntityColumnDef","header","displayFn","mapTo","_Subscriber__WEBPACK_IMPORTED_MODULE_0__","source","lift","MapToOperator","MapToSubscriber","destination","GroupByPipe","collection","groupedCollection","reduce","previous","current","keys","ngPipeDef","ic","name","pure","MatSelectModule","MatSelect","_angular_animations__WEBPACK_IMPORTED_MODULE_0__","_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_1__","_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_2__","_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_3__","_angular_cdk_collections__WEBPACK_IMPORTED_MODULE_4__","_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_5__","_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_6__","_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_7__","_angular_core__WEBPACK_IMPORTED_MODULE_8__","_angular_forms__WEBPACK_IMPORTED_MODULE_9__","_angular_material_core__WEBPACK_IMPORTED_MODULE_10__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_11__","rxjs__WEBPACK_IMPORTED_MODULE_12__","rxjs__WEBPACK_IMPORTED_MODULE_13__","rxjs__WEBPACK_IMPORTED_MODULE_14__","rxjs_operators__WEBPACK_IMPORTED_MODULE_15__","rxjs_operators__WEBPACK_IMPORTED_MODULE_16__","rxjs_operators__WEBPACK_IMPORTED_MODULE_17__","rxjs_operators__WEBPACK_IMPORTED_MODULE_18__","rxjs_operators__WEBPACK_IMPORTED_MODULE_19__","rxjs_operators__WEBPACK_IMPORTED_MODULE_20__","rxjs_operators__WEBPACK_IMPORTED_MODULE_21__","_angular_common__WEBPACK_IMPORTED_MODULE_22__","MatSelect_span_4_Template","ctx_r74","placeholder","MatSelect_span_5_span_1_Template","ctx_r77","triggerValue","MatSelect_span_5_2_Template","Hc","MatSelect_span_5_Template","ctx_r75","customTrigger","MatSelect_ng_template_8_Template","_r81","_panelDoneAnimatingStream","toState","_handleKeydown","ctx_r76","Xb","_getPanelTheme","_transformOrigin","_triggerFontSize","panelClass","multiple","matSelectAnimations","transformPanelWrap","o","j","optional","transformPanel","transform","minWidth","opacity","e","fadeInContent","nextUniqueId","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","A","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","overlay","scrollStrategies","reposition","MatSelectChange","MatSelectBase","_elementRef","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatSelectMixinBase","E","C","MatSelectTrigger","_viewportRuler","_ngZone","_dir","_parentFormField","tabIndex","scrollStrategyFactory","_liveAnnouncer","_panelOpen","_required","_scrollTop","_multiple","_compareWith","o1","o2","_uid","_destroy","_onChange","_onTouched","_optionIds","_offsetY","_positions","originX","originY","overlayX","overlayY","_disableOptionCentering","_focused","controlType","ariaLabel","optionSelectionChanges","option","onSelectionChange","onStable","openedChange","_openedStream","_closedStream","selectionChange","valueChange","valueAccessor","_scrollStrategyFactory","_scrollStrategy","parseInt","focused","_placeholder","stateChanges","required","_selectionModel","disableOptionCentering","compareWith","fn","_initializeSelection","_value","newValue","writeValue","_id","panelOpen","overlayDir","offsetX","change","_triggerRect","trigger","getBoundingClientRect","_initKeyManager","onChange","removed","_resetOptions","updateErrorState","open","getComputedStyle","fontSize","_keyManager","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","overlayRef","overlayElement","style","_isRtl","_setSelectionByValue","isDisabled","empty","selectedOptions","viewValue","reverse","join","_handleOpenKeydown","_handleClosedKeydown","keyCode","isArrowKey","manager","altKey","preventDefault","previouslySelectedOption","setFirstItemActive","setLastItemActive","onKeydown","selectedOption","announce","activeItem","ctrlKey","hasDeselectedOptions","some","opt","previouslyFocusedIndex","activeItemIndex","shiftKey","_selectViaInteraction","positionChange","_setPseudoCheckboxPaddingSize","detectChanges","_calculateOverlayOffsetX","panel","scrollTop","pseudoCheckbox","offsetWidth","isEmpty","Promise","resolve","then","Array","isArray","currentValue","_selectValue","_sortValues","correspondingOption","setActiveItem","find","qb","warn","withTypeAhead","withVerticalOrientation","withAllowedModifierKeys","tabOut","focus","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","_setOptionIds","wasSelected","_propagateChanges","toArray","sortComparator","fallbackValue","valueToEmit","activeOptionIndex","labelCount","optionGroups","y","_getItemHeight","index","itemHeight","items","_getItemCount","panelHeight","maxScroll","selectedOptionOffset","_getOptionIndex","scrollBuffer","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","selectedIndex","ariaLabelledby","_hasFloatingLabel","_getAriaLabel","_labelId","overlayRect","viewportSize","getViewportSize","isRtl","paddingWidth","group","leftOverflow","left","rightOverflow","right","width","round","updatePosition","optionHeightAdjustment","height","maxOptionsDisplayed","optionOffsetFromPanelTop","topSpaceAvailable","top","bottomSpaceAvailable","bottom","panelHeightTop","abs","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","ids","_ariaDescribedby","shouldLabelFloat","L","q","xc","contentQueries","dirIndex","ac","md","_onFocus","_onBlur","_getAriaLabelledby","errorState","_getAriaActiveDescendant","Yb","disableRipple","errorStateMatcher","Tb","useExisting","Sb","ngContentSelectors","Ic","_onAttached","_r72","l","animation","MatListModule","MatNavList","MatList","MatListAvatarCssMatStyler","MatListIconCssMatStyler","MatListSubheaderCssMatStyler","MatListItem","_angular_material_core__WEBPACK_IMPORTED_MODULE_1__","rxjs__WEBPACK_IMPORTED_MODULE_2__","_angular_common__WEBPACK_IMPORTED_MODULE_9__","_angular_material_divider__WEBPACK_IMPORTED_MODULE_10__","MatListBase","_MatListMixinBase","MatListItemBase","_MatListItemMixinBase","arguments","ɵMatNavList_BaseFactory","_getListType","nodeName","_element","navList","list","_isInteractiveList","_destroyed","_list","_getHostElement","hasAttribute","F","_lines","_avatar","_icon","_isRippleDisabled","u","v","ThemePickerServiceModule","differenceInMilliseconds","_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__","dirtyDateLeft","dirtyDateRight","TypeError","dateLeft","dateRight","getTime","addLeadingZeros","number","targetLength","sign","output","startOfUTCISOWeek","dirtyDate","toDate","day","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","getUTCISOWeekYear","year","getUTCFullYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfUTCWeek","dirtyOptions","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","toInteger","RangeError","getUTCWeekYear","localeFirstWeekContainsDate","firstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","formatTimezoneShort","offset","dirtyDelimiter","absOffset","hours","minutes","delimiter","formatTimezoneWithOptionalMinutes","formatTimezone","format_formatters","G","localize","era","signedYear","ordinalNumber","unit","signedWeekYear","weekYear","R","Q","quarter","getUTCMonth","context","month","week","firstWeek","I","isoWeek","fourthOfJanuary","dayOfYear","timestamp","setUTCMonth","startOfYearTimestamp","dayOfWeek","localDayOfWeek","isoDayOfWeek","dayPeriodEnumValue","getUTCHours","dayPeriod","H","K","getUTCMinutes","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","pow","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","z","T","dateLongFormatter","pattern","formatLong","timeLongFormatter","time","format_longFormatters","P","dateTimeFormat","matchResult","match","datePattern","timePattern","dateTime","replace","protectedDayOfYearTokens","protectedWeekYearTokens","throwProtectedError","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","en_US","originalDate","isNaN","utcDate","dirtyAmount","amount","getTimezoneOffsetInMilliseconds","formatterOptions","substring","firstCharacter","longFormatter","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","MatDivider","MatDividerModule","_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__","_angular_common__WEBPACK_IMPORTED_MODULE_2__","_vertical","_inset","vertical","inset","MatDatepickerModule","MatDatepicker","MatDatepickerInput","MatDatepickerToggle","rxjs__WEBPACK_IMPORTED_MODULE_3__","rxjs__WEBPACK_IMPORTED_MODULE_4__","rxjs_operators__WEBPACK_IMPORTED_MODULE_5__","rxjs_operators__WEBPACK_IMPORTED_MODULE_6__","_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_7__","_angular_material_core__WEBPACK_IMPORTED_MODULE_8__","_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_9__","_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_10__","_angular_animations__WEBPACK_IMPORTED_MODULE_11__","_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_12__","_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_13__","_angular_common__WEBPACK_IMPORTED_MODULE_14__","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_15__","_angular_forms__WEBPACK_IMPORTED_MODULE_16__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_17__","_angular_material_input__WEBPACK_IMPORTED_MODULE_18__","_angular_material_button__WEBPACK_IMPORTED_MODULE_19__","_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_20__","MatCalendarBody_tr_0_Template","ctx_r41","_cellPadding","numCols","label","MatCalendarBody_tr_1_td_1_Template","ctx_r45","_firstRowOffset","labelMinRequiredCells","MatCalendarBody_tr_1_td_2_Template","_r50","item_r47","_cellClicked","colIndex_r48","rowIndex_r44","ctx_r46","_cellWidth","enabled","_isActiveCell","cssClasses","selectedValue","todayValue","displayValue","MatCalendarBody_tr_1_Template","row_r43","ctx_r42","MatMonthView_th_3_Template","day_r53","long","narrow","_c25","_c26","_c27","_c28","_c29","_c30","_c31","_c32","_c33","MatCalendar_ng_template_0_Template","_c34","MatCalendar_mat_month_view_2_Template","_r59","activeDate","_dateSelected","_userSelected","ctx_r55","dateFilter","maxDate","minDate","dateClass","_c35","MatCalendar_mat_year_view_3_Template","_r63","_monthSelectedInYearView","_goToDateInView","ctx_r56","_c36","MatCalendar_mat_multi_year_view_4_Template","_r67","_yearSelectedInMultiYearView","ctx_r57","_c37","_c38","_c39","_c40","_c41","_c42","_c43","_c44","_c45","_c46","MatDatepickerToggle__svg_svg_2_Template","_c47","_c48","createMissingDateImplError","provider","MatDatepickerIntl","calendarLabel","openCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","MatCalendarCell","MatCalendarBody","activeCell","cellAspectRatio","selectedValueChange","cell","columnChanges","rows","rowIndex","colIndex","cellNumber","runOutsideAngular","attrs","DAYS_PER_WEEK","MatMonthView","_dateFormats","_dateAdapter","selectedChange","_userSelection","activeDateChange","_activeDate","today","oldActiveDate","validDate","_getValidDateOrNull","deserialize","clampDate","_hasSameMonthAndYear","_init","_selected","_selectedDate","_getDateInCurrentMonth","_minDate","_maxDate","selectedYear","getYear","selectedMonth","getMonth","selectedDate","createDate","addCalendarDays","getDate","getNumDaysInMonth","addCalendarYears","addCalendarMonths","compareDate","_focusActiveCell","_todayDate","_monthLabel","getMonthNames","toLocaleUpperCase","firstOfMonth","_firstWeekOffset","getDayOfWeek","getFirstDayOfWeek","_initWeekdays","_createWeekCells","_matCalendarBody","firstDayOfWeek","narrowWeekdays","getDayOfWeekNames","weekdays","_weekdays","daysInMonth","dateNames","getDateNames","_weeks","_shouldEnableDate","cellClasses","d1","d2","obj","isDateInstance","isValid","_handleCalendarBodyKeydown","yearsPerPage","yearsPerRow","MatMultiYearView","yearSelected","isSameMultiYearView","_selectedYear","_todayYear","minYearOfPage","getActiveOffset","_years","row","_createCellForYear","_yearSelected","yearName","getYearName","_shouldEnableYear","_getActiveCell","dateAdapter","date1","date2","year1","year2","startingYear","getStartingYear","MatYearView","monthSelected","_selectedMonth","_getMonthInCurrentYear","normalizedDate","_monthSelected","_todayMonth","_yearLabel","monthNames","_months","_createCellForMonth","monthName","_shouldEnableMonth","activeYear","_isYearAndMonthAfterMaxDate","_isYearAndMonthBeforeMinDate","maxYear","maxMonth","minYear","minMonth","MatCalendarHeader","calendar","changeDetectorRef","periodButtonText","currentView","periodButtonLabel","prevButtonLabel","multi-year","nextButtonLabel","_isSameView","mb","MatCalendar","currentPeriodClicked","previousClicked","nextClicked","previousEnabled","nextEnabled","_moveFocusOnNextTick","startView","startAt","_startAt","_clampedActiveDate","_currentView","_calendarHeaderPortal","headerComponent","focusActiveCell","firstChange","view","_getCurrentViewComponent","monthView","yearView","multiYearView","ngAfterContentInit","sameDate","normalizedYear","normalizedMonth","matDatepickerAnimations","fadeInCalendar","datepickerUid","MAT_DATEPICKER_SCROLL_STRATEGY","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","MatDatepickerContentBase","_MatDatepickerContentMixinBase","MatDatepickerContent","_calendar","ld","touchUi","_selectYear","_selectMonth","_dateFilter","calendarHeaderComponent","_dialog","_overlay","_viewContainerRef","scrollStrategy","_document","_touchUi","openedStream","closedStream","_opened","_validSelected","_focusedElementBeforeOpen","_inputSubscription","EMPTY","_disabledChange","_selectedChanged","_datepickerInput","_color","_getThemePalette","_disabled","opened","_popupRef","dispose","_popupComponentRef","oldValue","input","_valueChange","activeElement","_openAsDialog","_openAsPopup","hasAttached","detach","_dialogRef","_calendarPortal","isAttached","completeClose","setTimeout","direction","viewContainerRef","afterClosed","componentInstance","_setColor","_createPopup","attach","instance","overlayConfig","positionStrategy","_createPopupPositionStrategy","hasBackdrop","backdropClass","create","backdropClick","detachments","keydownEvents","position","flexibleConnectedTo","getConnectedOverlayOrigin","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withLockedPosition","withPositions","gb","MAT_DATEPICKER_VALUE_ACCESSOR","multi","MAT_DATEPICKER_VALIDATORS","MatDatepickerInputEvent","targetElement","_formField","dateChange","_cvaOnChange","_validatorOnChange","_datepickerSubscription","_localeSubscription","_parseValidator","_lastValueValid","matDatepickerParse","text","_minValidator","control","controlValue","matDatepickerMin","actual","_maxValidator","matDatepickerMax","_filterValidator","matDatepickerFilter","_validator","compose","localeChanges","matDatepicker","_datepicker","_registerInput","oldDate","_formatValue","_min","_max","blur","readOnly","_onInput","_onKeydown","tc","toIso8601","MatDatepickerToggleIcon","defaultTabIndex","parsedTabIndex","Number","_watchStateChanges","datepickerDisabled","inputDisabled","datepickerToggled","_customIcon","_button","_open","MASK_FLAGS","KEYS","Ctrl","Z","BACKSPACE","DELETE","MaskHelper","cursor","cursorPrivate","maskOptions","inputValue","mask","literals","getMaskLiterals","literalKeys","from","nonLiteralIndeces","getNonLiteralIndeces","parseValueByMaskOnInit","insertCharAt","promptChar","char","isCharValid","validateCharOnPostion","replaceCharAt","outputVal","maskSym","val","inputVal","literalValues","values","nonLiteralValues","getNonLiteralValues","splice","pos","nonLiteralValue","isMarked","clipboardData","selectionEnd","clipboardSym","inputChar","regex","charAt","RegExp","test","strValue","Map","nonLiteralsIndeces","isIE","navigator","appVersion","mask_directive_MaskDirective","noop","MaskDirective","onTouchedCallback","onChangeCallback","maskHelper","selectionStart","charCode","ctrlDown","paste","valOnPaste","cursorOnPaste","getCursorPosition","parseValueByMaskUponCopyPaste","setCursorPosition","currentCursorPos","parseValueByMaskUponSelection","parseValueByMask","rawVal","restoreValueFromMask","dataValue","includeLiterals","rawValue","formattedValue","focusedValuePipe","displayValuePipe","parseMask","start","end","setSelectionRange","onKeyup","onPaste","onInputChanged","onFocus","onBlur","_MatMenu","MatMenuItem","MatMenuTrigger","MatMenuModule","_angular_core__WEBPACK_IMPORTED_MODULE_1__","_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_2__","_angular_common__WEBPACK_IMPORTED_MODULE_3__","rxjs__WEBPACK_IMPORTED_MODULE_5__","rxjs__WEBPACK_IMPORTED_MODULE_6__","rxjs__WEBPACK_IMPORTED_MODULE_7__","rxjs__WEBPACK_IMPORTED_MODULE_8__","_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_9__","_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_11__","_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_12__","rxjs_operators__WEBPACK_IMPORTED_MODULE_13__","rxjs_operators__WEBPACK_IMPORTED_MODULE_14__","_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_19__","_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_20__","_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_21__","_MatMenu_ng_template_0_Template","_r36","closed","_onAnimationStart","_onAnimationDone","ctx_r34","_classList","_panelAnimationState","matMenuAnimations","transformMenu","fadeInItems","MatMenuContent","_template","_componentFactoryResolver","_appRef","_injector","_attached","_portal","_outlet","parentNode","insertBefore","outletElement","ab","MAT_MENU_PANEL","MatMenuItemBase","_MatMenuItemMixinBase","_focusMonitor","_parentMenu","role","_hovered","_highlighted","_triggersSubmenu","monitor","addItem","origin","focusVia","stopMonitoring","removeItem","textNodeType","TEXT_NODE","childNodes","nodeType","textContent","_checkDisabled","_handleMouseEnter","_getTabIndex","MAT_MENU_DEFAULT_OPTIONS","overlapTrigger","xPosition","yPosition","MAT_MENU_BASE_ELEVATION","_MatMenuBase","_defaultOptions","_xPosition","_yPosition","_directDescendantItems","_tabSubscription","_animationDone","_overlapTrigger","_hasBackdrop","setPositionClasses","classes","previousPanelClass","_previousPanelClass","split","className","_updateDirectDescendants","withWrap","destroy","_item","parentMenu","setFocusOrigin","lazyContent","newElevation","customElevation","startsWith","_previousElevation","posX","posY","_isAnimating","_allItems","reset","notifyOnChanges","templateRef","MatMenu","ngZone","defaultOptions","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","MENU_PANEL_TOP_PADDING","passiveEventListenerOptions","passive","_menuItemInstance","_overlayRef","_menuOpen","_closingActionsSubscription","_hoverSubscription","_menuCloseSubscription","_handleTouchStart","_openedBy","restoreFocus","menuOpened","onMenuOpen","menuClosed","onMenuClose","addEventListener","triggersSubmenu","_deprecatedMatMenuTriggerFor","_menu","reason","_destroyMenu","_checkMenu","_handleHover","removeEventListener","menuOpen","dir","closeMenu","openMenu","_createOverlay","getConfig","_setPosition","_getPortal","menuData","_menuClosingActions","_initMenu","_startAnimation","_resetAnimation","_resetMenu","_setMenuElevation","_setIsMenuOpen","focusFirstItem","setElevation","isOpen","config","_getOverlayConfig","_subscribeToPositions","positionChanges","connectionPair","originFallbackX","overlayFallbackY","originFallbackY","overlayFallbackX","offsetY","backdrop","parentClose","hover","active","button","toggleMenu","_handleMousedown","_handleClick","_MatMenuDirectivesModule","compareAsc","formatDistance","MINUTES_IN_DAY","MINUTES_IN_ALMOST_TWO_DAYS","MINUTES_IN_MONTH","MINUTES_IN_TWO_MONTHS","dirtyBaseDate","comparison","localizeOptions","dirtyObject","hasOwnProperty","addSuffix","Boolean","months","seconds","offsetInSeconds","includeSeconds","days","difference","getFullYear","setMonth","nearestMonth","monthsSinceStartOfYear","years","ng_let_module_NgLetModule","NgLetModule","router_link_match_module_RouterLinkMatchModule","RouterLinkMatchModule","in_viewport_module_InViewportModule","InViewportModule","click_outside_module_ClickOutsideModule","ClickOutsideModule","mask_module_MaskModule","MaskModule","helper_module_HelperModule","HelperModule","truncate_module_TruncateModule","TruncateModule","date_fns_module_DateFnsModule","DateFnsModule","RepeatWhenOperator","notifier","repeatWhen_RepeatWhenSubscriber","OuterSubscriber","sourceIsBeingSubscribedTo","outerValue","innerValue","outerIndex","innerIndex","innerSub","isStopped","retries","subscribeToRetries","retriesSubscription","_unsubscribeAndRecycle","notifications","_unsubscribe","Subject","subscribeToResult","DelayWhenOperator","delayDurationSelector","delayWhen_DelayWhenSubscriber","completed","delayNotifierSubscriptions","removeSubscription","tryComplete","_error","delayNotifier","tryDelay","err","subscription","subscriptionIdx","notifierSubscription","TakeWhileOperator","predicate","inclusive","takeWhile_TakeWhileSubscriber","Subscriber","nextOrComplete","predicateResult","MILLISECONDS_IN_MINUTE","format_time_in_words_pipe_FormatTimeInWordsPipe","defaultConfig","FormatTimeInWordsPipe","cdr","isDestroyed","async","NO_ARGS_ERROR","agoExpression","timeAgo","nextBackoff","backoff","of","notify","subscriptionDelay","stringToDate","tap","minutesElapsed","backoffAmountInSeconds","yc","argument","argStr","stack","NaN","dirtyNumber","wobble","animations","jello","swing","slideOutLeft","zoomOutRight","transform-origin","rotateOutUpRight","flipOutY","cardAnimation","fadeAnimation","listFadeAnimation","min-width","min-height","max-width","flex-direction","flex","hierarchicalRouteAnimation","scrollFabAnimation","animations_service_AnimationsService","AnimationsService","routeAnimationType","pageAnimations","elementsAnimations","STEPS_ALL","STEPS_PAGE","STEPS_ELEMENTS","routerTransition","isRouteAnimationsType","Collapsed","CollapsedHover","Expanded","Mobile","visibility","MobileOpen","MatGridListModule","MatGridList","MatGridTile","_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_3__","MAT_GRID_LIST","_gridList","_rowspan","_colspan","rowspan","colspan","TileCoordinator","columnIndex","rowCount","lastRowMax","tracker","numColumns","tiles","fill","positions","tile","_trackTile","gapStartIndex","_findMatchingGap","_markTilePosition","TilePosition","tileCols","gapEndIndex","_nextRow","_findGapEndIndex","col","cssCalcAllowedValue","TileStyler","_rows","gutterSize","cols","_gutterSize","normalizeUnits","_cols","_direction","sizePercent","gutterFraction","baseSize","calc","span","percentWidthPerTile","gutterWidthFractionPerTile","setColStyles","setRowStyles","percentWidth","gutterWidth","baseTileWidth","getBaseTileSize","_setStyle","getTilePosition","getTileSize","tileHeight","FixedTileStyler","fixedRowHeight","getTileSpan","getGutterSpan","_setListStyle","_tiles","RatioTileStyler","_parseRatio","baseTileHeight","rowHeightRatio","ratioParts","parseFloat","FitTileStyler","exp","MAT_FIT_MODE","_gutter","rowHeight","_rowHeight","_setTileStyler","_checkCols","_checkRowHeight","_layoutTiles","_tileStyler","_tileCoordinator","getComputedHeight","ClickOutsideDirective","ngxClickOutside","contains","onClick","Qc","MatSortModule","MatSortHeader","MatSort","_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_0__","_angular_material_core__WEBPACK_IMPORTED_MODULE_2__","_angular_animations__WEBPACK_IMPORTED_MODULE_5__","_angular_common__WEBPACK_IMPORTED_MODULE_6__","MatSortHeader_div_3_Template","_r98","_disableViewStateAnimation","ctx_r96","_getArrowViewState","_getArrowDirectionState","MatSortBase","_MatSortMixinBase","sortables","sortChange","disableClear","_disableClear","sortable","has","getNextSortDirection","sortDirectionCycle","sortOrder","nextDirectionIndex","ɵMatSort_BaseFactory","SORT_ANIMATION_TRANSITION","ENTERING","STANDARD_CURVE","matSortAnimations","indicator","leftPointer","rightPointer","arrowOpacity","arrowPosition","allowChildren","MatSortHeaderIntl","sortButtonLabel","MAT_SORT_HEADER_INTL_PROVIDER","MatSortHeaderBase","_MatSortHeaderMixinBase","_sort","_columnDef","_showIndicatorHint","_arrowDirection","_rerenderSubscription","_isSorted","_updateArrowDirection","_viewState","_setAnimationTransitionState","fromState","register","deregister","_isDisabled","viewState","_setIndicatorHintVisible","_getAriaSortAttribute","_renderArrow","count","RetryOperator","RetrySubscriber","div","elMatches","Element","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","query","remove","queryChildren","selector","children","child","cls","main","thumb","rail","consuming","clicking","scrolling","scrollingClassTimeout","addScrollingClass","clearTimeout","removeScrollingClass","isAlive","settings","scrollingThreshold","EventElement","handlers","prototypeAccessors","configurable","eventName","unbind","this$1","unbindAll","defineProperties","EventManager","eventElements","createEvent","window","CustomEvent","evt","initCustomEvent","eventElement","ee","once","onceHandler","processScrollDiff","axis","useScrollingClass","forceFireReachEvent","fields","ref","contentHeight","containerHeight","up","down","reach","dispatchEvent","toInt","env","isWebKit","documentElement","supportsTouch","DocumentTouch","supportsIePointer","msMaxTouchPoints","isChrome","userAgent","updateGeometry","roundedScrollTop","containerWidth","clientWidth","clientHeight","contentWidth","scrollWidth","scrollHeight","scrollbarXRail","el","scrollbarYRail","scrollXMarginOffset","scrollbarXActive","railXWidth","railXMarginWidth","railXRatio","scrollbarXWidth","getThumbSize","scrollbarXLeft","negativeScrollAdjustment","scrollLeft","suppressScrollY","scrollYMarginOffset","scrollbarYActive","railYHeight","railYMarginHeight","railYRatio","scrollbarYHeight","scrollbarYTop","xRailOffset","isScrollbarXUsingBottom","scrollbarXBottom","scrollbarXTop","yRailOffset","isScrollbarYUsingRight","scrollbarYRight","scrollbarYOuterWidth","scrollbarYLeft","scrollbarX","railBorderXWidth","scrollbarY","railBorderYWidth","thumbSize","minScrollbarLength","maxScrollbarLength","bindMouseScrollHandler","pageY","startingScrollTop","startingMousePageY","scrollBy","mouseMoveHandler","mouseUpHandler","ownerDocument","click-rail","positionTop","pageYOffset","positionLeft","pageX","pageXOffset","drag-thumb","keyboard","isDefaultPrevented","defaultPrevented","tagName","contentDocument","shadowRoot","deltaX","deltaY","which","metaKey","wheel","mousewheelHandler","wheelDeltaX","wheelDeltaY","deltaMode","wheelDelta","overflow","overflowX","overflowY","maxScrollTop","maxScrollLeft","shouldPrevent","useBothWheelAxes","wheelSpeed","isTop","isBottom","offsetHeight","isLeft","isRight","onwheel","onmousewheel","touch","startOffset","startTime","speed","easingLoop","touchStart","touchMove","touchEnd","PointerEvent","MSPointerEvent","applyTouchMove","differenceX","differenceY","getTouch","targetTouches","shouldHandle","pointerType","buttons","MSPOINTER_TYPE_MOUSE","clearInterval","currentOffset","currentTime","timeGap","magnitudeX","magnitudeY","scrollY","swipeEasing","setInterval","isInitialized","PerfectScrollbar","userSettings","originalScrollLeft","isNegativeScroll","railXStyle","borderLeftWidth","borderRightWidth","marginLeft","marginRight","railYStyle","paddingLeft","paddingRight","borderTopWidth","borderBottomWidth","marginTop","marginBottom","handlerName","lastScrollTop","lastScrollLeft","onScroll","removePsClasses","perfect_scrollbar_esm","MapShim","getIndex","arr","class_1","__entries__","defineProperty","enumerable","callback","_i","_a","isBrowser","global$1","global","self","Function","requestAnimationFrame$1","requestAnimationFrame","now","trailingTimeout","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","addObserver","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","gatherActive","hasActive","broadcastActive","attributes","childList","characterData","subtree","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","props","writable","getWindowOf","defaultView","emptyRect","createRectInit","toFloat","getBordersSize","size","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","bbox","paddings","positions_1","horizPad","vertPad","boxSizing","vertScrollbar","horizScrollbar","broadcastRect","ResizeObserverEntry","rectInit","Constr","contentRect","DOMRectReadOnly","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","callback_","controller_","callbackCtx_","observations","clearActive","_this","observation","WeakMap","ResizeObserver","method","apply","ResizeObserver_es","PERFECT_SCROLLBAR_CONFIG","ngx_perfect_scrollbar_es5_PerfectScrollbarComponent","ngx_perfect_scrollbar_es5_PerfectScrollbarModule","PerfectScrollbarComponent_div_3_Template","ctx_r40","states","indicatorY","interaction","indicatorX","Geometry","Position","PerfectScrollbarEvents","PerfectScrollbarConfig","ngx_perfect_scrollbar_es5_PerfectScrollbarDirective","PerfectScrollbarDirective","zone","differs","defaults","ro","timeout","configDiff","ngDestroy","psScrollY","psScrollX","psScrollUp","psScrollDown","psScrollLeft","psScrollRight","psYReachEnd","psYReachStart","psXReachEnd","psXReachStart","ngOnInit","config_1","eventType","fromEvent","auditTime","takeUntil","ngDoCheck","ngOnChanges","isFirstChange","previousValue","ps","geometry","prefix","absolute","scrollable","scrollTo","animateScrolling","scrollToX","scrollToY","scrollToTop","scrollToLeft","scrollToRight","scrollToBottom","scrollToElement","qs","elementPos","scrollerPos","cancelAnimationFrame","newValue_1","scrollCount_1","oldTimestamp_1","performance","oldValue_1","cosParameter_1","step_1","newTimestamp","PI","cos","PerfectScrollbarComponent","cdRef","scrollPositionX","scrollPositionY","scrollDirectionX","scrollDirectionY","usePropagationX","usePropagationY","allowPropagationX","allowPropagationY","stateTimeout","stateUpdate","usePSClass","autoPropagation","scrollIndicators","distinctUntilChanged","directiveRef","checkPropagation","touches","clientX","clientY","merge","PerfectScrollbarModule","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","defaultWidth","formats","formatRelativeLocale","lastWeek","yesterday","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","valuesArray","formattingValues","defaultFormattingWidth","_defaultWidth","_width","argumentCallback","buildMatchPatternFn","dirtyString","string","matchPattern","matchedString","parseResult","parsePattern","valueCallback","rest","buildMatchFn","matchPatterns","defaultMatchWidth","parsePatterns","defaultParseWidth","findIndex","object","full","medium","short","formatRelative","_date","_baseDate","_options","_dirtyOptions","rem100","abbreviated","wide","am","pm","midnight","noon","morning","afternoon","evening","night","any","mixinHasStickyInput","base","_sticky","_hasStickyChanged","sticky","prevValue","coercion","hasStickyChanged","CdkCellDef","CdkHeaderCellDef","CdkFooterCellDef","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_stickyEnd","_name","cssClassFriendlyName","stickyEnd","ɵCdkColumnDef_BaseFactory","table_CdkCellDef","table_CdkHeaderCellDef","table_CdkFooterCellDef","headerCell","footerCell","table_CdkColumnDef","BaseCdkCell","columnDef","CdkHeaderCell","CdkCell","BaseRowDef","_differs","_columnsDiffer","table_CdkHeaderRowDef","table_CdkFooterRowDef","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkHeaderRowDef","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDef","CdkRowDef","when","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkHeaderRow","lc","table_CdkCellOutlet","CdkRow","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","_isBrowser","stickyDirections","ELEMENT_NODE","_removeStickyStyle","stickyStartStates","stickyEndStates","hasStickyColumns","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","_addStickyStyle","rowsToStick","stickyStates","stickyHeight","tableElement","tfoot","zIndex","_getCalculatedZIndex","dirValue","cssText","zIndexIncrements","firstRowCells","widths","nextPosition","getTableUnknownColumnError","DataRowOutlet","viewContainer","HeaderRowOutlet","FooterRowOutlet","CdkTable","_platform","_onDestroy","_columnDefsByName","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_cachedRenderRowsMap","stickyCssClass","_multiTemplateDataRows","viewChange","MAX_VALUE","trackBy","_trackByFn","_dataSource","_switchDataSource","multiTemplateDataRows","_rowOutlet","_forceRenderDataRows","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","dataRow","dataIndex","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","_renderUpdatedColumns","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_headerRowOutlet","_footerRowOutlet","_renderRows","_getAllRenderRows","forEachOperation","record","prevIndex","currentIndex","previousIndex","_insertRow","move","_updateRowIndexContext","forEachIdentityChange","updateStickyColumnStyles","headerRowDef","footerRowDef","rowDef","headerRows","_getRenderedRows","thead","def","_stickyStyler","clearStickyPositioning","stickRows","resetStickyChanged","footerRows","updateStickyFooterContainer","dataRows","headerRow","_addStickyColumnStyles","footerRow","renderRows","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","renderRow","cache","_getRowDefs","cachedRenderRows","mergeQueryListAndSet","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","_defaultRowDef","columnsDiffReducer","acc","getColumnsDiff","dataStream","connect","Observable","_renderRow","updateStickyHeaderRowStyles","updateStickyFooterRowStyles","columnDefs","columnName","updateStickyColumns","rowOutlet","renderedRows","viewRef","rootNodes","rowDefs","renderIndex","createEmbeddedView","cellTemplate","_getCellTemplates","last","even","odd","columnId","extractCellTemplate","documentFragment","createDocumentFragment","sections","tag","section","stickyCheckReducer","bidi","platform","table_CdkRowDef","table_DataRowOutlet","table_HeaderRowOutlet","table_FooterRowOutlet","queryList","CdkTableModule","table_MatTableModule","table_MatCellDef","table_MatHeaderCellDef","table_MatColumnDef","table_MatHeaderCell","table_MatCell","table_MatTable","table_MatHeaderRowDef","table_MatRowDef","table_MatHeaderRow","table_MatRow","table_MatTableDataSource","table_c0","table_c1","table_c2","table_c3","table_c4","table_c5","table_c6","table_c8","table_c9","table_c10","table_c12","MatTable","table_CdkTable","ɵMatTable_BaseFactory","MatCellDef","ɵMatCellDef_BaseFactory","MatHeaderCellDef","ɵMatHeaderCellDef_BaseFactory","MatColumnDef","ɵMatColumnDef_BaseFactory","MatHeaderCell","table_CdkHeaderCell","MatCell","table_CdkCell","MatHeaderRowDef","ɵMatHeaderRowDef_BaseFactory","MatRowDef","ɵMatRowDef_BaseFactory","MatHeaderRow","table_CdkHeaderRow","ɵMatHeaderRow_BaseFactory","MatRow","table_CdkRow","ɵMatRow_BaseFactory","MatTableModule","table_CdkTableModule","MAX_SAFE_INTEGER","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","Subscription","sortingDataAccessor","sortHeaderId","numberValue","sortData","valueA","valueB","comparatorResult","dataStr","currentTerm","transformedFilter","_updateChangeSubscription","_paginator","initialized","pageChange","combineLatest","_filterData","orderedData","_orderData","paginatedData","_pageData","_updatePaginator","filteredDataLength","lastPageIndex","newPageIndex","NgLetDirective","NgLetContext","ngLet","vcr","baseTimezoneOffset","setSeconds","millisecondsPartOfTimezoneOffset","_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__","_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__","MILLISECONDS_IN_HOUR","DEFAULT_ADDITIONAL_DIGITS","patterns","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","additionalDigits","dateStrings","dateString","timeString","array","substr","exec","parseYearResult","captures","century","restDateString","isWeekDate","parseDateUnit","_year","isoWeekYear","daysInMonths","isLeapYearIndex","parseTimeUnit","timezoneString","_hours","fullTime","fullTimeDate","fullTimeDateNextDay","setDate","offsetDiff"],"mappings":"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","file":"1-es2015.eb02407a82bb801df398.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { finalize, filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ViewportService {\n  private readonly options: IntersectionObserverInit = {\n    rootMargin: '0px 0px 0px 0px',\n    threshold: [0.5],\n  };\n  private observer: IntersectionObserver;\n  private callback$: Subject<IntersectionObserverEntry> = new Subject();\n\n  constructor() {\n    this.observer = new IntersectionObserver(this.handler.bind(this), this.options);\n  }\n\n  observe(element: Element): Observable<IntersectionObserverEntry> {\n    this.observer.observe(element);\n\n    return this.callback$.asObservable().pipe(\n      filter((entry: IntersectionObserverEntry) => entry.target === element),\n      finalize(() => this.observer.unobserve(element)),\n    );\n  }\n\n  private handler(entries: Array<IntersectionObserverEntry>): void {\n    entries.forEach(entry => this.callback$.next(entry));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { finalize, filter } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport class ViewportService {\n    constructor() {\n        this.options = {\n            rootMargin: '0px 0px 0px 0px',\n            threshold: [0.5],\n        };\n        this.callback$ = new Subject();\n        this.observer = new IntersectionObserver(this.handler.bind(this), this.options);\n    }\n    observe(element) {\n        this.observer.observe(element);\n        return this.callback$.asObservable().pipe(filter((entry) => entry.target === element), finalize(() => this.observer.unobserve(element)));\n    }\n    handler(entries) {\n        entries.forEach(entry => this.callback$.next(entry));\n    }\n}\nViewportService.ngInjectableDef = i0.ɵɵdefineInjectable({ token: ViewportService, factory: function ViewportService_Factory(t) { return new (t || ViewportService)(); }, providedIn: 'root' });\n/*@__PURE__*/ i0.ɵsetClassMetadata(ViewportService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root',\n            }]\n    }], function () { return []; }, null);\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable, Optional, SkipSelf, NgModule, ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation, ɵɵdefineInjectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinInitialized, mixinDisabled } from '@angular/material/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/material/tooltip';\nimport * as ɵngcc4 from '@angular/material/form-field';\nimport * as ɵngcc5 from '@angular/material/select';\nimport * as ɵngcc6 from '@angular/material/core';\n\nconst _c0 = [1, \"mat-paginator\"];\nconst _c1 = [1, \"mat-paginator-outer-container\"];\nconst _c2 = [1, \"mat-paginator-container\"];\nconst _c3 = [\"class\", \"mat-paginator-page-size\", 4, \"ngIf\"];\nconst _c4 = [1, \"mat-paginator-range-actions\"];\nconst _c5 = [1, \"mat-paginator-range-label\"];\nconst _c6 = [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"];\nconst _c7 = [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-previous\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"];\nconst _c8 = [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", 1, \"mat-paginator-icon\"];\nconst _c9 = [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"];\nconst _c10 = [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-next\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"];\nconst _c11 = [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"];\nconst _c12 = [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"];\nconst _c13 = [1, \"mat-paginator-page-size\"];\nconst _c14 = [1, \"mat-paginator-page-size-label\"];\nconst _c15 = [\"class\", \"mat-paginator-page-size-select\", 3, \"color\", 4, \"ngIf\"];\nconst _c16 = [4, \"ngIf\"];\nconst _c17 = [1, \"mat-paginator-page-size-select\", 3, \"color\"];\nconst _c18 = [3, \"value\", \"disabled\", \"aria-label\", \"selectionChange\"];\nconst _c19 = [3, \"value\", 4, \"ngFor\", \"ngForOf\"];\nconst _c20 = [3, \"value\"];\nfunction MatPaginator_div_2_mat_form_field_3_mat_option_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-option\", _c20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pageSizeOption_r89 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", pageSizeOption_r89);\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵtextInterpolate(pageSizeOption_r89);\n} }\nfunction MatPaginator_div_2_mat_form_field_3_Template(rf, ctx) { if (rf & 1) {\n    const _r91 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-form-field\", _c17);\n    ɵngcc0.ɵɵelementStart(1, \"mat-select\", _c18);\n    ɵngcc0.ɵɵlistener(\"selectionChange\", function MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r91); const ctx_r90 = ɵngcc0.ɵɵnextContext(2); return ctx_r90._changePageSize($event.value); });\n    ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_mat_form_field_3_mat_option_2_Template, 2, 2, \"mat-option\", _c19);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r86 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"color\", ctx_r86.color);\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r86.pageSize)(\"disabled\", ctx_r86.disabled)(\"aria-label\", ctx_r86._intl.itemsPerPageLabel);\n    ɵngcc0.ɵɵselect(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r86._displayedPageSizeOptions);\n} }\nfunction MatPaginator_div_2_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r87 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r87.pageSize);\n} }\nfunction MatPaginator_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", _c13);\n    ɵngcc0.ɵɵelementStart(1, \"div\", _c14);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, MatPaginator_div_2_mat_form_field_3_Template, 3, 5, \"mat-form-field\", _c15);\n    ɵngcc0.ɵɵtemplate(4, MatPaginator_div_2_div_4_Template, 2, 1, \"div\", _c16);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r83 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵselect(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r83._intl.itemsPerPageLabel);\n    ɵngcc0.ɵɵselect(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r83._displayedPageSizeOptions.length > 1);\n    ɵngcc0.ɵɵselect(4);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r83._displayedPageSizeOptions.length <= 1);\n} }\nconst _c21 = [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"];\nconst _c22 = [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"];\nfunction MatPaginator_button_6_Template(rf, ctx) { if (rf & 1) {\n    const _r93 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", _c21);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_6_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r93); const ctx_r92 = ɵngcc0.ɵɵnextContext(); return ctx_r92.firstPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", _c8);\n    ɵngcc0.ɵɵelement(2, \"path\", _c22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r84 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r84._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r84._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r84._previousButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r84._intl.firstPageLabel);\n} }\nconst _c23 = [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"];\nconst _c24 = [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"];\nfunction MatPaginator_button_13_Template(rf, ctx) { if (rf & 1) {\n    const _r95 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵnamespaceHTML();\n    ɵngcc0.ɵɵelementStart(0, \"button\", _c23);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_13_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r95); const ctx_r94 = ɵngcc0.ɵɵnextContext(); return ctx_r94.lastPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", _c8);\n    ɵngcc0.ɵɵelement(2, \"path\", _c24);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r85 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r85._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r85._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r85._nextButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r85._intl.lastPageLabel);\n} }\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * A label for the page size selector.\n         */\n        this.itemsPerPageLabel = 'Items per page:';\n        /**\n         * A label for the button that increments the current page.\n         */\n        this.nextPageLabel = 'Next page';\n        /**\n         * A label for the button that decrements the current page.\n         */\n        this.previousPageLabel = 'Previous page';\n        /**\n         * A label for the button that moves to the first page.\n         */\n        this.firstPageLabel = 'First page';\n        /**\n         * A label for the button that moves to the last page.\n         */\n        this.lastPageLabel = 'Last page';\n        /**\n         * A label for the range of items within the current page and the length of the whole list.\n         */\n        this.getRangeLabel = (/**\n         * @param {?} page\n         * @param {?} pageSize\n         * @param {?} length\n         * @return {?}\n         */\n        (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            /** @type {?} */\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            /** @type {?} */\n            const endIndex = startIndex < length ?\n                Math.min(startIndex + pageSize, length) :\n                startIndex + pageSize;\n            return `${startIndex + 1} - ${endIndex} of ${length}`;\n        });\n    }\n}\nMatPaginatorIntl.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: MatPaginatorIntl, factory: function MatPaginatorIntl_Factory(t) { return new (t || MatPaginatorIntl)(); }, providedIn: 'root' });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatPaginatorIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, { constructor: [], changes: [], itemsPerPageLabel: [], nextPageLabel: [], previousPageLabel: [], firstPageLabel: [], lastPageLabel: [], getRangeLabel: [] });\n/** @nocollapse */ MatPaginatorIntl.ngInjectableDef = ɵɵdefineInjectable({ factory: function MatPaginatorIntl_Factory() { return new MatPaginatorIntl(); }, token: MatPaginatorIntl, providedIn: \"root\" });\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The default page size if there is no page size and there are no provided page size options.\n * @type {?}\n */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\n// Boilerplate for applying mixins to MatPaginator.\n/**\n * \\@docs-private\n */\nclass MatPaginatorBase {\n}\n/** @type {?} */\nconst _MatPaginatorBase = mixinDisabled(mixinInitialized(MatPaginatorBase));\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    /**\n     * @param {?} _intl\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_intl, _changeDetectorRef) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /**\n         * Event emitted when the paginator changes the page size or page index.\n         */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n    /**\n     * The zero-based page index of the displayed list of items. Defaulted to 0.\n     * @return {?}\n     */\n    get pageIndex() { return this._pageIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The length of the total number of items that are being paginated. Defaulted to 0.\n     * @return {?}\n     */\n    get length() { return this._length; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Number of items to display on a page. By default set to 50.\n     * @return {?}\n     */\n    get pageSize() { return this._pageSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /**\n     * The set of provided page size options to display to the user.\n     * @return {?}\n     */\n    get pageSizeOptions() { return this._pageSizeOptions; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map((/**\n         * @param {?} p\n         * @return {?}\n         */\n        p => coerceNumberProperty(p)));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /**\n     * Whether to hide the page size selection UI from the user.\n     * @return {?}\n     */\n    get hidePageSize() { return this._hidePageSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to show the first/last buttons UI to the user.\n     * @return {?}\n     */\n    get showFirstLastButtons() { return this._showFirstLastButtons; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /**\n     * Advances to the next page if it exists.\n     * @return {?}\n     */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex++;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move back to the previous page if it exists.\n     * @return {?}\n     */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex--;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move to the first page if not already there.\n     * @return {?}\n     */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move to the last page if not already there.\n     * @return {?}\n     */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Whether there is a previous page.\n     * @return {?}\n     */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /**\n     * Whether there is a next page.\n     * @return {?}\n     */\n    hasNextPage() {\n        /** @type {?} */\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /**\n     * Calculate the number of pages\n     * @return {?}\n     */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     * @param {?} pageSize\n     * @return {?}\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        /** @type {?} */\n        const startIndex = this.pageIndex * this.pageSize;\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Checks whether the buttons for going forwards should be disabled.\n     * @return {?}\n     */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /**\n     * Checks whether the buttons for going backwards should be disabled.\n     * @return {?}\n     */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     * @private\n     * @return {?}\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize = this.pageSizeOptions.length != 0 ?\n                this.pageSizeOptions[0] :\n                DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => a - b));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Emits an event notifying that a change of the paginator's properties has been triggered.\n     * @private\n     * @param {?} previousPageIndex\n     * @return {?}\n     */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length\n        });\n    }\n}\nMatPaginator.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatPaginator, selectors: [[\"mat-paginator\"]], factory: function MatPaginator_Factory(t) { return new (t || MatPaginator)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef)); }, hostBindings: function MatPaginator_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c0);\n    } }, inputs: { disabled: \"disabled\", pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\", color: \"color\" }, outputs: { page: \"page\" }, exportAs: [\"matPaginator\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], consts: 14, vars: 14, template: function MatPaginator_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", _c1);\n        ɵngcc0.ɵɵelementStart(1, \"div\", _c2);\n        ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_Template, 5, 3, \"div\", _c3);\n        ɵngcc0.ɵɵelementStart(3, \"div\", _c4);\n        ɵngcc0.ɵɵelementStart(4, \"div\", _c5);\n        ɵngcc0.ɵɵtext(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, MatPaginator_button_6_Template, 3, 5, \"button\", _c6);\n        ɵngcc0.ɵɵelementStart(7, \"button\", _c7);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener($event) { return ctx.previousPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(8, \"svg\", _c8);\n        ɵngcc0.ɵɵelement(9, \"path\", _c9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelementStart(10, \"button\", _c10);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener($event) { return ctx.nextPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(11, \"svg\", _c8);\n        ɵngcc0.ɵɵelement(12, \"path\", _c11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(13, MatPaginator_button_13_Template, 3, 5, \"button\", _c12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵselect(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hidePageSize);\n        ɵngcc0.ɵɵselect(5);\n        ɵngcc0.ɵɵtextInterpolate(ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length));\n        ɵngcc0.ɵɵselect(6);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n        ɵngcc0.ɵɵselect(7);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._previousButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n        ɵngcc0.ɵɵselect(10);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._nextButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n        ɵngcc0.ɵɵselect(13);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton, ɵngcc3.MatTooltip, ɵngcc4.MatFormField, ɵngcc5.MatSelect, ɵngcc1.NgForOf, ɵngcc6.MatOption], styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatPaginator, [{\n        type: Component,\n        args: [{ selector: 'mat-paginator',\n                exportAs: 'matPaginator',\n                template: \"<div class=\\\"mat-paginator-outer-container\\\"><div class=\\\"mat-paginator-container\\\"><div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\"><div class=\\\"mat-paginator-page-size-label\\\">{{_intl.itemsPerPageLabel}}</div><mat-form-field *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\" [color]=\\\"color\\\" class=\\\"mat-paginator-page-size-select\\\"><mat-select [value]=\\\"pageSize\\\" [disabled]=\\\"disabled\\\" [aria-label]=\\\"_intl.itemsPerPageLabel\\\" (selectionChange)=\\\"_changePageSize($event.value)\\\"><mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">{{pageSizeOption}}</mat-option></mat-select></mat-form-field><div *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div></div><div class=\\\"mat-paginator-range-actions\\\"><div class=\\\"mat-paginator-range-label\\\">{{_intl.getRangeLabel(pageIndex, pageSize, length)}}</div><button mat-icon-button type=\\\"button\\\" class=\\\"mat-paginator-navigation-first\\\" (click)=\\\"firstPage()\\\" [attr.aria-label]=\\\"_intl.firstPageLabel\\\" [matTooltip]=\\\"_intl.firstPageLabel\\\" [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\" [matTooltipPosition]=\\\"'above'\\\" [disabled]=\\\"_previousButtonsDisabled()\\\" *ngIf=\\\"showFirstLastButtons\\\"><svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\"><path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/></svg></button> <button mat-icon-button type=\\\"button\\\" class=\\\"mat-paginator-navigation-previous\\\" (click)=\\\"previousPage()\\\" [attr.aria-label]=\\\"_intl.previousPageLabel\\\" [matTooltip]=\\\"_intl.previousPageLabel\\\" [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\" [matTooltipPosition]=\\\"'above'\\\" [disabled]=\\\"_previousButtonsDisabled()\\\"><svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\"><path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/></svg></button> <button mat-icon-button type=\\\"button\\\" class=\\\"mat-paginator-navigation-next\\\" (click)=\\\"nextPage()\\\" [attr.aria-label]=\\\"_intl.nextPageLabel\\\" [matTooltip]=\\\"_intl.nextPageLabel\\\" [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\" [matTooltipPosition]=\\\"'above'\\\" [disabled]=\\\"_nextButtonsDisabled()\\\"><svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\"><path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/></svg></button> <button mat-icon-button type=\\\"button\\\" class=\\\"mat-paginator-navigation-last\\\" (click)=\\\"lastPage()\\\" [attr.aria-label]=\\\"_intl.lastPageLabel\\\" [matTooltip]=\\\"_intl.lastPageLabel\\\" [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\" [matTooltipPosition]=\\\"'above'\\\" [disabled]=\\\"_nextButtonsDisabled()\\\" *ngIf=\\\"showFirstLastButtons\\\"><svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\"><path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/></svg></button></div></div></div>\",\n                styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\"],\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-paginator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: MatPaginatorIntl }, { type: ChangeDetectorRef }]; }, { constructor: [], _intl: [], _changeDetectorRef: [], _pageIndex: [], _length: [], _pageSizeOptions: [], _hidePageSize: [], _showFirstLastButtons: [], page: [{\n            type: Output\n        }], _intlChanges: [], pageIndex: [{\n            type: Input\n        }], pageIndex: [], length: [{\n            type: Input\n        }], length: [], pageSize: [{\n            type: Input\n        }], pageSize: [], _pageSize: [], pageSizeOptions: [{\n            type: Input\n        }], pageSizeOptions: [], hidePageSize: [{\n            type: Input\n        }], hidePageSize: [], showFirstLastButtons: [{\n            type: Input\n        }], showFirstLastButtons: [], ngOnInit: [], _initialized: [], ngOnDestroy: [], nextPage: [], previousPage: [], firstPage: [], lastPage: [], hasPreviousPage: [], hasNextPage: [], getNumberOfPages: [], _changePageSize: [], _nextButtonsDisabled: [], _previousButtonsDisabled: [], _updateDisplayedPageSizeOptions: [], _displayedPageSizeOptions: [], _emitPageEvent: [], color: [{\n            type: Input\n        }] });\n/** @nocollapse */\nMatPaginator.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef }\n];\nMatPaginator.propDecorators = {\n    color: [{ type: Input }],\n    pageIndex: [{ type: Input }],\n    length: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    pageSizeOptions: [{ type: Input }],\n    hidePageSize: [{ type: Input }],\n    showFirstLastButtons: [{ type: Input }],\n    page: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatPaginatorModule {\n}\nMatPaginatorModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: MatPaginatorModule });\nMatPaginatorModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function MatPaginatorModule_Factory(t) { return new (t || MatPaginatorModule)(); }, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatSelectModule,\n            MatTooltipModule,\n        ]] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(MatPaginatorModule, { declarations: function () { return [MatPaginator]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatTooltipModule]; }, exports: function () { return [MatPaginator]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatPaginatorModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatSelectModule,\n                    MatTooltipModule,\n                ],\n                exports: [MatPaginator],\n                declarations: [MatPaginator],\n                providers: [MAT_PAGINATOR_INTL_PROVIDER]\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatPaginatorModule, PageEvent, MatPaginator, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginatorIntl, MAT_PAGINATOR_INTL_PROVIDER };\n\n//# sourceMappingURL=paginator.js.map","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { untilDestroy } from '../../operators/untilDestroy';\nimport { ViewportService } from './viewport.service';\nimport { filter, take } from 'rxjs/operators';\n\n@Directive({\n  selector: '[inViewport]',\n})\nexport class InViewportDirective implements OnInit, OnDestroy {\n  @Input() public preRender = true;\n  @Input() public oneTime = false;\n  @Output() readonly inViewport = new EventEmitter<Partial<IntersectionObserverEntry>>();\n\n  constructor(\n    private readonly elementRef: ElementRef,\n    private viewportService: ViewportService,\n    @Inject(PLATFORM_ID) private platformId: object,\n  ) {}\n\n  public ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.oneTime) {\n        this.viewportService\n          .observe(this.elementRef.nativeElement)\n          .pipe(\n            untilDestroy(this),\n            filter(entry => entry.intersectionRatio >= 0.5),\n            take(1),\n          )\n          .subscribe((entry: IntersectionObserverEntry) => {\n            this.inViewport.emit(entry);\n          });\n      } else {\n        this.viewportService\n          .observe(this.elementRef.nativeElement)\n          .pipe(untilDestroy(this))\n          .subscribe((entry: IntersectionObserverEntry) => {\n            this.inViewport.emit(entry);\n          });\n      }\n    } else {\n      if (this.preRender) {\n        this.inViewport.emit({ isIntersecting: true, intersectionRatio: 1 });\n      }\n    }\n  }\n\n  ngOnDestroy() {}\n}\n","import { Directive, ElementRef, EventEmitter, Inject, Input, Output, PLATFORM_ID, } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { untilDestroy } from '../../operators/untilDestroy';\nimport { ViewportService } from './viewport.service';\nimport { filter, take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./viewport.service\";\nexport class InViewportDirective {\n    constructor(elementRef, viewportService, platformId) {\n        this.elementRef = elementRef;\n        this.viewportService = viewportService;\n        this.platformId = platformId;\n        this.preRender = true;\n        this.oneTime = false;\n        this.inViewport = new EventEmitter();\n    }\n    ngOnInit() {\n        if (isPlatformBrowser(this.platformId)) {\n            if (this.oneTime) {\n                this.viewportService\n                    .observe(this.elementRef.nativeElement)\n                    .pipe(untilDestroy(this), filter(entry => entry.intersectionRatio >= 0.5), take(1))\n                    .subscribe((entry) => {\n                    this.inViewport.emit(entry);\n                });\n            }\n            else {\n                this.viewportService\n                    .observe(this.elementRef.nativeElement)\n                    .pipe(untilDestroy(this))\n                    .subscribe((entry) => {\n                    this.inViewport.emit(entry);\n                });\n            }\n        }\n        else {\n            if (this.preRender) {\n                this.inViewport.emit({ isIntersecting: true, intersectionRatio: 1 });\n            }\n        }\n    }\n    ngOnDestroy() { }\n}\nInViewportDirective.ngDirectiveDef = i0.ɵɵdefineDirective({ type: InViewportDirective, selectors: [[\"\", \"inViewport\", \"\"]], factory: function InViewportDirective_Factory(t) { return new (t || InViewportDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ViewportService), i0.ɵɵdirectiveInject(PLATFORM_ID)); }, inputs: { preRender: \"preRender\", oneTime: \"oneTime\" }, outputs: { inViewport: \"inViewport\" } });\n/*@__PURE__*/ i0.ɵsetClassMetadata(InViewportDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[inViewport]',\n            }]\n    }], function () { return [{ type: i0.ElementRef }, { type: i1.ViewportService }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, { preRender: [{\n            type: Input\n        }], oneTime: [{\n            type: Input\n        }], inViewport: [{\n            type: Output\n        }] });\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ThemePickerComponent } from './theme-picker.component';\nimport { ThemePickerServiceModule } from './theme-picker-service.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatGridListModule,\n    MatTooltipModule,\n    ThemePickerServiceModule,\n  ],\n  exports: [ThemePickerComponent],\n  declarations: [ThemePickerComponent],\n})\nexport class ThemePickerModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ThemePickerComponent } from './theme-picker.component';\nimport { ThemePickerServiceModule } from './theme-picker-service.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport * as i0 from \"@angular/core\";\nexport class ThemePickerModule {\n}\nThemePickerModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: ThemePickerModule });\nThemePickerModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function ThemePickerModule_Factory(t) { return new (t || ThemePickerModule)(); }, imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatIconModule,\n            MatMenuModule,\n            MatGridListModule,\n            MatTooltipModule,\n            ThemePickerServiceModule,\n        ]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(ThemePickerModule, { declarations: [ThemePickerComponent], imports: [CommonModule,\n        MatButtonModule,\n        MatIconModule,\n        MatMenuModule,\n        MatGridListModule,\n        MatTooltipModule,\n        ThemePickerServiceModule], exports: [ThemePickerComponent] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(ThemePickerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatIconModule,\n                    MatMenuModule,\n                    MatGridListModule,\n                    MatTooltipModule,\n                    ThemePickerServiceModule,\n                ],\n                exports: [ThemePickerComponent],\n                declarations: [ThemePickerComponent],\n            }]\n    }], null, null);\n","export * from './lib/theme-picker.module';\n","import { MonoTypeOperatorFunction, Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n// create a symbol identify the observable I add to\n// the component so it doesn't conflict with anything.\n// I need this so I'm able to add the desired behaviour to the component.\nexport const destroy$ = Symbol('destroy$');\n\n/**\n * An operator that takes until destroy it takes a components this a parameter\n * returns a pipeable RxJS operator.\n */\nexport const untilDestroy = <T>(component: any): MonoTypeOperatorFunction<T> => {\n  if (component[destroy$] === undefined) {\n    // only hookup each component once.\n    addDestroyObservableToComponent(component);\n  }\n\n  // pipe in the takeUntil destroy$ and return the source unaltered\n  return takeUntil<T>(component[destroy$]);\n};\n\n/**\n * @internal\n */\nexport function addDestroyObservableToComponent(component: any) {\n  component[destroy$] = new Observable<void>(observer => {\n    // keep track of the original destroy function,\n    // the user might do something in there\n    const orignalDestroy = component.ngOnDestroy;\n    if (orignalDestroy == null) {\n      // Angular does not support dynamic added destroy methods\n      // so make sure there is one.\n      throw new Error('untilDestroy operator needs the component to have an ngOnDestroy method');\n    }\n    // replace the ngOndestroy\n    component.ngOnDestroy = () => {\n      // fire off the destroy observable\n      observer.next();\n      // complete the observable\n      observer.complete();\n      // and at last, call the original destroy\n      orignalDestroy.call(component);\n    };\n    // return cleanup function.\n    return (_: any) => (component[destroy$] = undefined);\n  });\n}\n","import { Injectable } from '@angular/core';\nimport { ThemePickerServiceModule } from './theme-picker-service.module';\n\n/**\n * Class for managing stylesheets. Stylesheets are loaded into named slots so that they can be\n * removed or changed later.\n */\n@Injectable({ providedIn: ThemePickerServiceModule })\nexport class StyleManagerService {\n  /**\n   * Set the stylesheet with the specified key.\n   */\n  setStyle(key: string, href: string) {\n    getLinkElementForKey(key).setAttribute('href', href);\n  }\n\n  /**\n   * Remove the stylesheet with the specified key.\n   */\n  removeStyle(key: string) {\n    const existingLinkElement = getExistingLinkElementByKey(key);\n    if (existingLinkElement) {\n      document.head.removeChild(existingLinkElement);\n    }\n  }\n}\n\nfunction getLinkElementForKey(key: string) {\n  return getExistingLinkElementByKey(key) || createLinkElementWithKey(key);\n}\n\nfunction getExistingLinkElementByKey(key: string) {\n  return document.head.querySelector(`link[rel=\"stylesheet\"].${getClassNameForKey(key)}`);\n}\n\nfunction createLinkElementWithKey(key: string) {\n  const linkEl = document.createElement('link');\n  linkEl.setAttribute('rel', 'stylesheet');\n  linkEl.classList.add(getClassNameForKey(key));\n  document.head.appendChild(linkEl);\n  return linkEl;\n}\n\nfunction getClassNameForKey(key: string) {\n  return `style-manager-${key}`;\n}\n","import { Injectable } from '@angular/core';\nimport { ThemePickerServiceModule } from './theme-picker-service.module';\nimport * as i0 from \"@angular/core\";\n/**\n * Class for managing stylesheets. Stylesheets are loaded into named slots so that they can be\n * removed or changed later.\n */\nexport class StyleManagerService {\n    /**\n     * Set the stylesheet with the specified key.\n     */\n    setStyle(key, href) {\n        getLinkElementForKey(key).setAttribute('href', href);\n    }\n    /**\n     * Remove the stylesheet with the specified key.\n     */\n    removeStyle(key) {\n        const existingLinkElement = getExistingLinkElementByKey(key);\n        if (existingLinkElement) {\n            document.head.removeChild(existingLinkElement);\n        }\n    }\n}\nStyleManagerService.ngInjectableDef = i0.ɵɵdefineInjectable({ token: StyleManagerService, factory: function StyleManagerService_Factory(t) { return new (t || StyleManagerService)(); }, providedIn: ThemePickerServiceModule });\n/*@__PURE__*/ i0.ɵsetClassMetadata(StyleManagerService, [{\n        type: Injectable,\n        args: [{ providedIn: ThemePickerServiceModule }]\n    }], null, null);\nfunction getLinkElementForKey(key) {\n    return getExistingLinkElementByKey(key) || createLinkElementWithKey(key);\n}\nfunction getExistingLinkElementByKey(key) {\n    return document.head.querySelector(`link[rel=\"stylesheet\"].${getClassNameForKey(key)}`);\n}\nfunction createLinkElementWithKey(key) {\n    const linkEl = document.createElement('link');\n    linkEl.setAttribute('rel', 'stylesheet');\n    linkEl.classList.add(getClassNameForKey(key));\n    document.head.appendChild(linkEl);\n    return linkEl;\n}\nfunction getClassNameForKey(key) {\n    return `style-manager-${key}`;\n}\n","import * as tslib_1 from \"tslib\";\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, HostBinding } from '@angular/core';\nimport { StyleManagerService } from './style-manager.service';\nimport { Select, Store } from '@ngxs/store';\nimport { themes, PreferenceState, ChangeTheme } from '@ngx-starter-kit/core';\nimport { untilDestroy } from '@ngx-starter-kit/ngx-utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngxs/store\";\nimport * as i2 from \"./style-manager.service\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/tooltip\";\nimport * as i5 from \"@angular/material/menu\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/material/grid-list\";\nimport * as i8 from \"@angular/common\";\nconst _c0 = [\"mat-icon-button\", \"\", \"matTooltip\", \"Select a theme!\", \"tabindex\", \"-1\", 3, \"matMenuTriggerFor\"];\nconst _c1 = [\"x-position\", \"before\", 1, \"default-theme-picker-menu\"];\nconst _c2 = [\"themeMenu\", \"matMenu\"];\nconst _c3 = [\"cols\", \"2\"];\nconst _c4 = [4, \"ngFor\", \"ngForOf\"];\nconst _c5 = [\"mat-menu-item\", \"\", 3, \"click\"];\nconst _c6 = [1, \"default-theme-picker-swatch\"];\nconst _c7 = [\"class\", \"default-theme-chosen-icon\", 4, \"ngIf\"];\nconst _c8 = [1, \"default-theme-picker-primary\"];\nconst _c9 = [1, \"default-theme-chosen-icon\"];\nfunction ThemePickerComponent_mat_grid_tile_6_mat_icon_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", _c9);\n    i0.ɵɵtext(1, \"check_circle\");\n    i0.ɵɵelementEnd();\n} }\nfunction ThemePickerComponent_mat_grid_tile_6_Template(rf, ctx) { if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-grid-tile\");\n    i0.ɵɵelementStart(1, \"div\", _c5);\n    i0.ɵɵlistener(\"click\", function ThemePickerComponent_mat_grid_tile_6_Template_div_click_1_listener($event) { i0.ɵɵrestoreView(_r11); const item_r8 = ctx.$implicit; const ctx_r10 = i0.ɵɵnextContext(); return ctx_r10.changeTheme(item_r8.key); });\n    i0.ɵɵelementStart(2, \"div\", _c6);\n    i0.ɵɵtemplate(3, ThemePickerComponent_mat_grid_tile_6_mat_icon_3_Template, 2, 0, \"mat-icon\", _c7);\n    i0.ɵɵelementStart(4, \"div\", _c8);\n    i0.ɵɵstyling();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵselect(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.currentTheme === item_r8.key);\n    i0.ɵɵselect(4);\n    i0.ɵɵstyleSanitizer(i0.ɵɵdefaultStyleSanitizer);\n    i0.ɵɵstyleProp(\"background\", item_r8.value.primary);\n    i0.ɵɵstylingApply();\n} }\nexport class ThemePickerComponent {\n    constructor(store, styleManager) {\n        this.store = store;\n        this.styleManager = styleManager;\n        this.ariaHidden = true;\n        this.allThemes = themes;\n    }\n    changeTheme(themeName) {\n        this.store.dispatch(new ChangeTheme(themeName));\n    }\n    ngOnInit() {\n        // this.installTheme(this.store.selectSnapshot(PreferenceState.activeThemeName));\n        this.activeThemeName$.pipe(untilDestroy(this)).subscribe(themeName => {\n            this.installTheme(themeName);\n        });\n    }\n    ngOnDestroy() { }\n    installTheme(themeName) {\n        console.log(`installing ${themeName}`);\n        if (themeName) {\n            this.currentTheme = themeName;\n            const theme = this.allThemes.get(themeName);\n            if (theme.isDefault) {\n                this.styleManager.removeStyle('theme');\n            }\n            else {\n                this.styleManager.setStyle('theme', `assets/themes/${theme.href}`);\n            }\n        }\n    }\n}\nThemePickerComponent.ngComponentDef = i0.ɵɵdefineComponent({ type: ThemePickerComponent, selectors: [[\"theme-picker\"]], factory: function ThemePickerComponent_Factory(t) { return new (t || ThemePickerComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.StyleManagerService)); }, hostBindings: function ThemePickerComponent_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        i0.ɵɵallocHostVars(1);\n    } if (rf & 2) {\n        i0.ɵɵattribute(\"aria-hidden\", ctx.ariaHidden);\n    } }, consts: 8, vars: 4, template: function ThemePickerComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", _c0);\n        i0.ɵɵelementStart(1, \"mat-icon\");\n        i0.ɵɵtext(2, \"format_color_fill\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-menu\", _c1, _c2);\n        i0.ɵɵelementStart(5, \"mat-grid-list\", _c3);\n        i0.ɵɵtemplate(6, ThemePickerComponent_mat_grid_tile_6_Template, 5, 2, \"mat-grid-tile\", _c4);\n        i0.ɵɵpipe(7, \"keyvalue\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r6 = i0.ɵɵreference(4);\n        i0.ɵɵproperty(\"matMenuTriggerFor\", _r6);\n        i0.ɵɵselect(6);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(7, 2, ctx.allThemes));\n    } }, directives: [i3.MatButton, i4.MatTooltip, i5.MatMenuTrigger, i6.MatIcon, i5._MatMenu, i7.MatGridList, i8.NgForOf, i7.MatGridTile, i5.MatMenuItem, i8.NgIf], pipes: [i8.KeyValuePipe], styles: [\".default-theme-picker-menu .mat-menu-content{padding:8px}.default-theme-picker-menu [mat-menu-item]{flex:0 0 auto;padding:0;overflow:hidden}.default-theme-picker-menu .default-theme-picker-swatch{position:relative;width:36px;height:36px;margin:6px;border-radius:50%;overflow:hidden}.default-theme-picker-menu .default-theme-picker-swatch .default-theme-chosen-icon{color:#fff;position:absolute;left:50%;top:50%;transform:translate(-50%,-50%)}.default-theme-picker-menu .default-theme-picker-swatch::after{content:\\\"\\\";position:absolute;top:0;left:0;width:100%;height:100%;box-sizing:border-box;border:1px solid rgba(0,0,0,.2);border-radius:50%}.default-theme-picker-menu .default-theme-picker-primary{width:100%;height:100%}.default-theme-picker-menu .default-theme-picker-accent{position:absolute;bottom:6px;width:100%;height:6px}\"], encapsulation: 2, changeDetection: 0 });\ntslib_1.__decorate([\n    Select(PreferenceState.activeThemeName),\n    tslib_1.__metadata(\"design:type\", Object)\n], ThemePickerComponent.prototype, \"activeThemeName$\", void 0);\n/*@__PURE__*/ i0.ɵsetClassMetadata(ThemePickerComponent, [{\n        type: Component,\n        args: [{\n                selector: 'theme-picker',\n                templateUrl: './theme-picker.component.html',\n                styleUrls: ['./theme-picker.component.scss'],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n            }]\n    }], function () { return [{ type: i1.Store }, { type: i2.StyleManagerService }]; }, { ariaHidden: [{\n            type: HostBinding,\n            args: ['attr.aria-hidden']\n        }], activeThemeName$: [] });\n","<button mat-icon-button [matMenuTriggerFor]=\"themeMenu\" matTooltip=\"Select a theme!\" tabindex=\"-1\">\n  <mat-icon>format_color_fill</mat-icon>\n</button>\n\n<!-- TODO: replace use of `mat-menu` here with a custom overlay -->\n<mat-menu class=\"default-theme-picker-menu\" #themeMenu=\"matMenu\" x-position=\"before\">\n  <mat-grid-list cols=\"2\">\n    <mat-grid-tile *ngFor=\"let item of (allThemes | keyvalue)\">\n      <div mat-menu-item (click)=\"changeTheme(item.key)\">\n        <div class=\"default-theme-picker-swatch\">\n          <mat-icon class=\"default-theme-chosen-icon\" *ngIf=\"currentTheme === item.key\">check_circle</mat-icon>\n          <div class=\"default-theme-picker-primary\" [style.background]=\"item.value.primary\"></div>\n        </div>\n      </div>\n    </mat-grid-tile>\n  </mat-grid-list>\n</mat-menu>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, HostBinding, OnInit, OnDestroy } from '@angular/core';\nimport { StyleManagerService } from './style-manager.service';\nimport { Select, Store } from '@ngxs/store';\nimport { themes, PreferenceState, ThemeName, ChangeTheme } from '@ngx-starter-kit/core';\nimport { untilDestroy } from '@ngx-starter-kit/ngx-utils';\n\n@Component({\n  selector: 'theme-picker',\n  templateUrl: './theme-picker.component.html',\n  styleUrls: ['./theme-picker.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  // host: { 'aria-hidden': 'true' }\n})\nexport class ThemePickerComponent implements OnInit, OnDestroy {\n  @HostBinding('attr.aria-hidden') ariaHidden = true;\n  allThemes = themes;\n  @Select(PreferenceState.activeThemeName) activeThemeName$;\n  currentTheme: ThemeName;\n\n  constructor(private store: Store, public styleManager: StyleManagerService) {}\n\n  changeTheme(themeName: ThemeName) {\n    this.store.dispatch(new ChangeTheme(themeName));\n  }\n\n  ngOnInit(): void {\n    // this.installTheme(this.store.selectSnapshot(PreferenceState.activeThemeName));\n    this.activeThemeName$.pipe(untilDestroy(this)).subscribe(themeName => {\n      this.installTheme(themeName);\n    });\n  }\n\n  ngOnDestroy(): void {}\n\n  installTheme(themeName: ThemeName) {\n    console.log(`installing ${themeName}`);\n    if (themeName) {\n      this.currentTheme = themeName;\n      const theme = this.allThemes.get(themeName);\n      if (theme.isDefault) {\n        this.styleManager.removeStyle('theme');\n      } else {\n        this.styleManager.setStyle('theme', `assets/themes/${theme.href}`);\n      }\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval(period = 0, scheduler = async) {\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber, counter: 0, period }));\n        return subscriber;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, counter, period } = state;\n    subscriber.next(counter);\n    this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n//# sourceMappingURL=interval.js.map","import { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  imports: [FlexLayoutModule.withConfig({ useColumnBasisZero: false })],\n  exports: [FlexLayoutModule],\n})\nexport class SharedFlexLayoutModule {}\n","import { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/flex-layout\";\nexport class SharedFlexLayoutModule {\n}\nSharedFlexLayoutModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: SharedFlexLayoutModule });\nSharedFlexLayoutModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function SharedFlexLayoutModule_Factory(t) { return new (t || SharedFlexLayoutModule)(); }, imports: [[FlexLayoutModule.withConfig({ useColumnBasisZero: false })],\n        FlexLayoutModule] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(SharedFlexLayoutModule, { imports: [i1.FlexLayoutModule], exports: [FlexLayoutModule] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(SharedFlexLayoutModule, [{\n        type: NgModule,\n        args: [{\n                imports: [FlexLayoutModule.withConfig({ useColumnBasisZero: false })],\n                exports: [FlexLayoutModule],\n            }]\n    }], null, null);\n","import { NgModule } from '@angular/core';\nimport {\n  PERFECT_SCROLLBAR_CONFIG,\n  PerfectScrollbarConfigInterface,\n  PerfectScrollbarModule,\n} from 'ngx-perfect-scrollbar';\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true,\n  wheelPropagation: true,\n};\n\n@NgModule({\n  exports: [PerfectScrollbarModule],\n  providers: [{ provide: PERFECT_SCROLLBAR_CONFIG, useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG }],\n})\nexport class SharedPerfectScrollbarModule {}\n","import { NgModule } from '@angular/core';\nimport { PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarModule, } from 'ngx-perfect-scrollbar';\nimport * as i0 from \"@angular/core\";\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG = {\n    suppressScrollX: true,\n    wheelPropagation: true,\n};\nexport class SharedPerfectScrollbarModule {\n}\nSharedPerfectScrollbarModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: SharedPerfectScrollbarModule });\nSharedPerfectScrollbarModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function SharedPerfectScrollbarModule_Factory(t) { return new (t || SharedPerfectScrollbarModule)(); }, providers: [{ provide: PERFECT_SCROLLBAR_CONFIG, useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG }], imports: [PerfectScrollbarModule] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(SharedPerfectScrollbarModule, { exports: [PerfectScrollbarModule] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(SharedPerfectScrollbarModule, [{\n        type: NgModule,\n        args: [{\n                exports: [PerfectScrollbarModule],\n                providers: [{ provide: PERFECT_SCROLLBAR_CONFIG, useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG }],\n            }]\n    }], null, null);\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgLetModule, RouterLinkMatchModule } from '@ngx-starter-kit/ngx-utils';\nimport { SharedFlexLayoutModule } from './shared-flex-layout.module';\nimport { SharedPerfectScrollbarModule } from './shared-perfect-scrollbar.module';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [\n    CommonModule,\n    NgLetModule,\n    ReactiveFormsModule,\n    RouterLinkMatchModule,\n    SharedFlexLayoutModule,\n    SharedPerfectScrollbarModule,\n  ],\n})\nexport class SharedModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgLetModule, RouterLinkMatchModule } from '@ngx-starter-kit/ngx-utils';\nimport { SharedFlexLayoutModule } from './shared-flex-layout.module';\nimport { SharedPerfectScrollbarModule } from './shared-perfect-scrollbar.module';\nimport * as i0 from \"@angular/core\";\nexport class SharedModule {\n}\nSharedModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: SharedModule });\nSharedModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function SharedModule_Factory(t) { return new (t || SharedModule)(); }, imports: [[CommonModule],\n        CommonModule,\n        NgLetModule,\n        ReactiveFormsModule,\n        RouterLinkMatchModule,\n        SharedFlexLayoutModule,\n        SharedPerfectScrollbarModule] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(SharedModule, { imports: [CommonModule], exports: [CommonModule,\n        NgLetModule,\n        ReactiveFormsModule,\n        RouterLinkMatchModule,\n        SharedFlexLayoutModule,\n        SharedPerfectScrollbarModule] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(SharedModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [\n                    CommonModule,\n                    NgLetModule,\n                    ReactiveFormsModule,\n                    RouterLinkMatchModule,\n                    SharedFlexLayoutModule,\n                    SharedPerfectScrollbarModule,\n                ],\n            }]\n    }], null, null);\n","import { NgModule } from '@angular/core';\n\nimport { MAT_DATE_FORMATS, MAT_DATE_LOCALE, MatDateFormats, MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\n\nconst MODULE_EXPORTS = [MatDatepickerModule, MatNativeDateModule];\n\nconst DATE_FORMATS: MatDateFormats = {\n  parse: {\n    dateInput: 'LL',\n  },\n  display: {\n    dateInput: 'LL',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n@NgModule({\n  exports: MODULE_EXPORTS,\n  providers: [{ provide: MAT_DATE_FORMATS, useValue: DATE_FORMATS }, { provide: MAT_DATE_LOCALE, useValue: 'en-GB' }],\n})\nexport class SharedMaterialDateModule {}\n","import { NgModule } from '@angular/core';\nimport { MAT_DATE_FORMATS, MAT_DATE_LOCALE, MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport * as i0 from \"@angular/core\";\nconst MODULE_EXPORTS = [MatDatepickerModule, MatNativeDateModule];\nconst DATE_FORMATS = {\n    parse: {\n        dateInput: 'LL',\n    },\n    display: {\n        dateInput: 'LL',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\nexport class SharedMaterialDateModule {\n}\nSharedMaterialDateModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: SharedMaterialDateModule });\nSharedMaterialDateModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function SharedMaterialDateModule_Factory(t) { return new (t || SharedMaterialDateModule)(); }, providers: [{ provide: MAT_DATE_FORMATS, useValue: DATE_FORMATS }, { provide: MAT_DATE_LOCALE, useValue: 'en-GB' }], imports: [MatDatepickerModule, MatNativeDateModule] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(SharedMaterialDateModule, { exports: [MatDatepickerModule, MatNativeDateModule] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(SharedMaterialDateModule, [{\n        type: NgModule,\n        args: [{\n                exports: MODULE_EXPORTS,\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: DATE_FORMATS }, { provide: MAT_DATE_LOCALE, useValue: 'en-GB' }],\n            }]\n    }], null, null);\n","import { Inject, OnInit } from '@angular/core';\nimport { Entity } from './entity.model';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nexport abstract class EntityFormComponent<TEntity extends Entity> implements OnInit {\n  title: string;\n  entity: TEntity;\n  entityForm: FormGroup;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) protected data: { title: string; payload: TEntity },\n    protected dialogRef: MatDialogRef<EntityFormComponent<TEntity>>,\n  ) {\n    this.title = data.title;\n    this.entity = data.payload;\n  }\n\n  abstract buildForm(entity: TEntity);\n\n  ngOnInit() {\n    this.buildForm(this.entity);\n  }\n\n  submit() {\n    this.dialogRef.close(this.entityForm.value as Partial<TEntity>);\n  }\n}\n","import { ElementRef, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { concatMap, filter, map } from 'rxjs/operators';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { untilDestroy } from '@ngx-starter-kit/ngx-utils';\nimport { parseISO } from 'date-fns/esm';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"filter\"];\nexport class EntitiesComponent {\n    // TODO: make them optional abstract end\n    constructor(entityService) {\n        this.entityService = entityService;\n        this.dataSource = new MatTableDataSource([]);\n        this.selection = new SelectionModel(false, []);\n        this.title = null;\n        this.showToolbar = false;\n        this.showColumnFilter = false;\n        this.showActionColumn = false;\n        this.maxSelectable = 1;\n        this.actionColumn = 'Actions';\n        this.selectColumn = 'select';\n        this.loading$ = entityService.loading$;\n    }\n    ngOnInit() {\n        this.selection = new SelectionModel(this.maxSelectable > 1, []);\n        this.update().subscribe();\n        if (this.filterPredicate) {\n            this.dataSource.filterPredicate = this.filterPredicate;\n        }\n        // remove first selected entity if more then max selected.\n        if (this.maxSelectable > 1) {\n            // is multi select mode?\n            this.selection.changed\n                .pipe(\n            // tap(console.log),\n            filter((sc) => sc.added.length > 0), filter(_ => this.selection.selected.length > this.maxSelectable), untilDestroy(this))\n                .subscribe(_ => this.selection.deselect(this.selection.selected.shift()));\n        }\n        // fromEvent(this.filterRef.nativeElement, 'keyup')\n        //   .pipe(\n        //     debounceTime(150),\n        //     distinctUntilChanged()\n        //   ).subscribe(() => {\n        //   this.paginator.pageIndex = 0;\n        //   this.applyFilter(this.filterRef.nativeElement.value)\n        // });\n    }\n    ngOnDestroy() { }\n    ngAfterViewInit() {\n        // Needs to be set up after the view is initialized since the data source will look at the sort\n        // and paginator's initial values to know what data should be rendered.\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n    }\n    getById(id) {\n        return this.entityService.getById(id);\n    }\n    delete(item) {\n        return this.entityService.delete(item.id).pipe(concatMap(_ => this.update()));\n    }\n    updateOrCreate(entity, id) {\n        if (id) {\n            return this.entityService.put(id, entity).pipe(concatMap(_ => this.update()));\n        }\n        else {\n            return this.entityService.post(entity).pipe(concatMap(_ => this.update()));\n        }\n    }\n    /**\n     * Overwrite this method, to get the data your way.\n     */\n    getData() {\n        return this.entityService.getAll();\n    }\n    update() {\n        return this.getData().pipe(map(result => {\n            this.dataSource = new MatTableDataSource(result);\n            this.dataSource.sort = this.sort;\n            this.dataSource.paginator = this.paginator;\n            // return nothing as we don't need.\n            // return result\n        }));\n    }\n    /** Whether all filtered rows are selected. */\n    isAllFilteredRowsSelected() {\n        return this.dataSource.filteredData.every(data => this.selection.isSelected(data));\n    }\n    /** Whether the selection it totally matches the filtered rows. */\n    isMasterToggleChecked() {\n        return (this.selection.hasValue() &&\n            this.isAllFilteredRowsSelected() &&\n            this.selection.selected.length >= this.dataSource.filteredData.length);\n    }\n    /**\n     * Whether there is a selection that doesn't capture all the\n     * filtered rows there are no filtered rows displayed.\n     */\n    isMasterToggleIndeterminate() {\n        return this.selection.hasValue() && (!this.isAllFilteredRowsSelected() || !this.dataSource.filteredData.length);\n    }\n    /** Selects all filtered rows if they are not all selected; otherwise clear selection. */\n    masterToggle() {\n        if (this.isMasterToggleChecked()) {\n            this.selection.clear();\n        }\n        else {\n            this.dataSource.filteredData.forEach(data => this.selection.select(data));\n        }\n    }\n    applyFilter(filterValue) {\n        filterValue = filterValue.trim(); // Remove whitespace\n        filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n        this.dataSource.filter = filterValue;\n    }\n    get displayedColumns() {\n        // prettier-ignore\n        let displayedColumns = this.columns\n            .filter(column => column.visible)\n            .map(x => x.property);\n        if (this.maxSelectable > 0) {\n            displayedColumns.unshift(this.selectColumn);\n        }\n        if (this.showActionColumn) {\n            displayedColumns = displayedColumns.concat(this.actionColumn);\n        }\n        return displayedColumns;\n    }\n    selectRow(entity) {\n        if (this.maxSelectable > 0) {\n            this.selection.toggle(entity);\n            if (this.selection.isSelected(entity)) {\n                this.showDetails(entity);\n            }\n            else {\n                this.showDetails(undefined);\n            }\n        }\n    }\n    getRouteAnimation(outlet) {\n        return outlet.activatedRouteData.depth || 5;\n        // return outlet.isActivated ? outlet.activatedRoute : ''\n    }\n    /**\n     * will be called with entity or undefined\n     */\n    showDetails(entity) { }\n    toggleColumnVisibility(column, event) {\n        event.stopPropagation();\n        event.stopImmediatePropagation();\n        column.visible = !column.visible;\n    }\n    stringToDate(date) {\n        const isString = s => typeof s === 'string' || s instanceof String;\n        return isString(date) ? parseISO(date) : date;\n    }\n}\nEntitiesComponent.ngBaseDef = i0.ɵɵdefineBase({ viewQuery: function (rf, ctx) { if (rf & 1) {\n        i0.ɵɵstaticViewQuery(MatPaginator, true);\n        i0.ɵɵstaticViewQuery(MatSort, true);\n        i0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        i0.ɵɵqueryRefresh((_t = i0.ɵɵloadQuery())) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh((_t = i0.ɵɵloadQuery())) && (ctx.sort = _t.first);\n        i0.ɵɵqueryRefresh((_t = i0.ɵɵloadQuery())) && (ctx.filterRef = _t.first);\n    } } });\n","import { AfterViewInit, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { EntityService } from './entity.service';\nimport { Entity, EntityColumnDef } from './entity.model';\nimport { concatMap, filter, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { EntityFormComponent } from './entity-form.component';\nimport { ComponentType } from '@angular/cdk/portal/typings/portal';\nimport { SelectionChange, SelectionModel } from '@angular/cdk/collections';\nimport { untilDestroy } from '@ngx-starter-kit/ngx-utils';\nimport { parseISO } from 'date-fns/esm';\n\nexport abstract class EntitiesComponent<TEntity extends Entity, TService extends EntityService<TEntity>>\n  implements OnInit, OnDestroy, AfterViewInit {\n  dataSource = new MatTableDataSource<TEntity>([]);\n  selection = new SelectionModel<TEntity>(false, []);\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild('filter', { static: true }) filterRef: ElementRef;\n\n  readonly loading$;\n  readonly columns: Array<EntityColumnDef<TEntity>>;\n  readonly title?: string = null;\n  readonly showToolbar?: boolean = false;\n  readonly showColumnFilter?: boolean = false;\n  readonly showActionColumn?: boolean = false;\n  readonly maxSelectable?: number = 1;\n  readonly actionColumn?: string = 'Actions';\n  readonly selectColumn?: string = 'select';\n  // TODO: make them optional abstract\n  readonly formRef?: ComponentType<EntityFormComponent<TEntity>>;\n  getNewEntity?(): TEntity;\n  filterPredicate?(entity: TEntity, filter: string): boolean;\n  // TODO: make them optional abstract end\n\n  constructor(protected entityService: TService) {\n    this.loading$ = entityService.loading$;\n  }\n\n  ngOnInit() {\n    this.selection = new SelectionModel<TEntity>(this.maxSelectable > 1, []);\n\n    this.update().subscribe();\n    if (this.filterPredicate) {\n      this.dataSource.filterPredicate = this.filterPredicate;\n    }\n\n    // remove first selected entity if more then max selected.\n    if (this.maxSelectable > 1) {\n      // is multi select mode?\n      this.selection.changed\n        .pipe(\n          // tap(console.log),\n          filter((sc: SelectionChange<TEntity>) => sc.added.length > 0),\n          filter(_ => this.selection.selected.length > this.maxSelectable),\n          untilDestroy(this),\n        )\n        .subscribe(_ => this.selection.deselect(this.selection.selected.shift()));\n    }\n\n    // fromEvent(this.filterRef.nativeElement, 'keyup')\n    //   .pipe(\n    //     debounceTime(150),\n    //     distinctUntilChanged()\n    //   ).subscribe(() => {\n    //   this.paginator.pageIndex = 0;\n    //   this.applyFilter(this.filterRef.nativeElement.value)\n    // });\n  }\n\n  ngOnDestroy() {}\n\n  ngAfterViewInit() {\n    // Needs to be set up after the view is initialized since the data source will look at the sort\n    // and paginator's initial values to know what data should be rendered.\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  getById(id: number) {\n    return this.entityService.getById(id);\n  }\n\n  delete(item: TEntity) {\n    return this.entityService.delete(item.id).pipe(concatMap(_ => this.update()));\n  }\n\n  updateOrCreate(entity: TEntity, id: number) {\n    if (id) {\n      return this.entityService.put(id, entity).pipe(concatMap(_ => this.update()));\n    } else {\n      return this.entityService.post(entity).pipe(concatMap(_ => this.update()));\n    }\n  }\n\n  /**\n   * Overwrite this method, to get the data your way.\n   */\n  getData(): Observable<TEntity[]> {\n    return this.entityService.getAll();\n  }\n\n  protected update() {\n    return this.getData().pipe(\n      map(result => {\n        this.dataSource = new MatTableDataSource<TEntity>(result);\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n        // return nothing as we don't need.\n        // return result\n      }),\n    );\n  }\n\n  /** Whether all filtered rows are selected. */\n  isAllFilteredRowsSelected() {\n    return this.dataSource.filteredData.every(data => this.selection.isSelected(data));\n  }\n\n  /** Whether the selection it totally matches the filtered rows. */\n  isMasterToggleChecked() {\n    return (\n      this.selection.hasValue() &&\n      this.isAllFilteredRowsSelected() &&\n      this.selection.selected.length >= this.dataSource.filteredData.length\n    );\n  }\n\n  /**\n   * Whether there is a selection that doesn't capture all the\n   * filtered rows there are no filtered rows displayed.\n   */\n  isMasterToggleIndeterminate() {\n    return this.selection.hasValue() && (!this.isAllFilteredRowsSelected() || !this.dataSource.filteredData.length);\n  }\n\n  /** Selects all filtered rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isMasterToggleChecked()) {\n      this.selection.clear();\n    } else {\n      this.dataSource.filteredData.forEach(data => this.selection.select(data));\n    }\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  get displayedColumns(): string[] {\n    // prettier-ignore\n    let displayedColumns = this.columns\n      .filter(column => column.visible)\n      .map(x => x.property);\n\n    if (this.maxSelectable > 0) {\n      displayedColumns.unshift(this.selectColumn);\n    }\n    if (this.showActionColumn) {\n      displayedColumns = displayedColumns.concat(this.actionColumn);\n    }\n    return displayedColumns;\n  }\n\n  selectRow(entity: TEntity) {\n    if (this.maxSelectable > 0) {\n      this.selection.toggle(entity);\n      if (this.selection.isSelected(entity)) {\n        this.showDetails(entity);\n      } else {\n        this.showDetails(undefined);\n      }\n    }\n  }\n\n  getRouteAnimation(outlet) {\n    return outlet.activatedRouteData.depth || 5;\n    // return outlet.isActivated ? outlet.activatedRoute : ''\n  }\n\n  /**\n   * will be called with entity or undefined\n   */\n  showDetails(entity: TEntity) {}\n\n  toggleColumnVisibility(column, event) {\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    column.visible = !column.visible;\n  }\n\n  protected stringToDate(date: string | number | Date): number | Date {\n    const isString = s => typeof s === 'string' || s instanceof String;\n    return isString(date) ? parseISO(date) : date;\n  }\n}\n","import { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { environment } from '@env/environment';\nimport { Entity } from './entity.model';\nimport { catchError, finalize, retry } from 'rxjs/operators';\nimport { format } from 'date-fns/esm';\nimport { IPagination } from './pagination';\n\nexport interface Filter {\n  [name: string]: string | string[];\n}\n\nexport abstract class EntityService<T extends Entity> {\n  protected readonly baseUrl = environment.API_BASE_URL;\n  protected loadingSubject = new BehaviorSubject<boolean>(false);\n  public loading$ = this.loadingSubject.asObservable();\n\n  protected abstract entityPath: string;\n\n  constructor(protected httpClient: HttpClient) {}\n\n  getById(id: number | string) {\n    // this.loadingSubject.next(true);\n    return this.httpClient.get<T>(`${this.baseUrl}/${this.entityPath}/${id}`).pipe(\n      catchError(this.handleError),\n      // finalize(() => this.loadingSubject.next(false))\n    );\n  }\n\n  // findAll(filter: Filter, order = 'DESC', skip = 0, take = 100): Observable<IPagination<T>> | Observable<never> {\n  findAll(filter: Filter, order = 'DESC', skip = 0, take = 100): Observable<T[]> | Observable<never> {\n    this.loadingSubject.next(true);\n    return this.httpClient\n      .get<T[]>(`${this.baseUrl}/${this.entityPath}`, {\n        params: new HttpParams()\n          .set('filter', 'filter TODO')\n          .set('order', order)\n          .set('skip', skip.toString())\n          .set('take', take.toString()),\n      })\n      .pipe(\n        retry(3), // retry a failed request up to 3 times\n        catchError(this.handleError),\n        finalize(() => this.loadingSubject.next(false)),\n      );\n  }\n\n  // getAll(): Observable<IPagination<T>> {\n  getAll(): Observable<T[]> {\n    this.loadingSubject.next(true);\n    return this.httpClient.get<T[]>(`${this.baseUrl}/${this.entityPath}`).pipe(\n      retry(3), // retry a failed request up to 3 times\n      catchError(this.handleError),\n      finalize(() => this.loadingSubject.next(false)),\n    );\n  }\n\n  delete(id: number | string) {\n    this.loadingSubject.next(true);\n    return this.httpClient.delete(`${this.baseUrl}/${this.entityPath}/${id}`).pipe(\n      catchError(this.handleError),\n      finalize(() => this.loadingSubject.next(false)),\n    );\n  }\n\n  post(entity: T) {\n    this.loadingSubject.next(true);\n    return this.httpClient.post(`${this.baseUrl}/${this.entityPath}`, entity).pipe(\n      catchError(this.handleError),\n      finalize(() => this.loadingSubject.next(false)),\n    );\n  }\n\n  put(id: number | string, entity: T) {\n    console.log(entity);\n    this.loadingSubject.next(true);\n    return this.httpClient.put(`${this.baseUrl}/${this.entityPath}/${id}`, entity).pipe(\n      catchError(this.handleError),\n      finalize(() => this.loadingSubject.next(false)),\n    );\n  }\n\n  protected handleError(error: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage: string;\n    if (typeof error === 'string') {\n      errorMessage = error;\n    } else {\n      if (error.error instanceof ErrorEvent) {\n        // A client-side or network error occurred. Handle it accordingly.\n        errorMessage = `An error occurred: ${error.error.message}`;\n      } else {\n        // The backend returned an unsuccessful response code.\n        // The response body may contain clues as to what went wrong,\n        errorMessage = `Backend returned code ${error.status}, with body ${error.message}`;\n      }\n    }\n    console.error(error);\n    // return an ErrorObservable with a user-facing error message\n    return throwError(errorMessage);\n  }\n\n  protected convertToJson(body: any) {\n    const temporalFunctionToJson = Date.prototype.toJSON;\n    Date.prototype.toJSON = function() {\n      return format(this, 'YYYY-MM-DD');\n    };\n\n    const jsonBody = JSON.stringify(body);\n\n    Date.prototype.toJSON = temporalFunctionToJson;\n    return jsonBody;\n  }\n}\n","import { TemplateRef } from '@angular/core';\n\nexport abstract class Entity {\n  abstract get id(): number | string;\n  [key: string]: any;\n  constructor(init?: Partial<Entity>) {\n    Object.assign(this, init);\n  }\n}\n\nexport class EntityColumnDef<T> {\n  readonly property: string;\n  readonly header = this.property;\n  public visible = true;\n  readonly sticky?: 'start' | 'end';\n  readonly template?: TemplateRef<any>;\n  readonly displayFn = (entity: T) => entity[this.property];\n\n  public constructor(init?: Partial<EntityColumnDef<T>>) {\n    Object.assign(this, init);\n  }\n}\n","export * from './lib/shared.module';\nexport * from './lib/shared-flex-layout.module';\nexport * from './lib/shared-perfect-scrollbar.module';\nexport * from './lib/shared-material-date.module';\n\nexport * from './lib/containers/entity/entity-form.component';\nexport * from './lib/containers/entity/entity.component';\nexport * from './lib/containers/entity/entity.service';\nexport * from './lib/containers/entity/entity.model';\nexport * from './lib/containers/entity/pagination';\n","import { Subscriber } from '../Subscriber';\nexport function mapTo(value) {\n    return (source) => source.lift(new MapToOperator(value));\n}\nclass MapToOperator {\n    constructor(value) {\n        this.value = value;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    }\n}\nclass MapToSubscriber extends Subscriber {\n    constructor(destination, value) {\n        super(destination);\n        this.value = value;\n    }\n    _next(x) {\n        this.destination.next(this.value);\n    }\n}\n//# sourceMappingURL=mapTo.js.map","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * <ul>\n *   <li *ngFor=\"let object of myArray | groupBy:'color'\"></li>\n * </ul>\n */\n@Pipe({ name: 'groupBy' })\nexport class GroupByPipe<T> implements PipeTransform {\n  transform(collection: Array<T>, property: string): Array<{ key: string; value: [T] }> {\n    // prevents the application from breaking if the array of objects doesn't exist yet\n    if (!collection) {\n      return null;\n    }\n\n    const groupedCollection = collection.reduce((previous, current) => {\n      if (!previous[current[property]]) {\n        previous[current[property]] = [current];\n      } else {\n        previous[current[property]].push(current);\n      }\n\n      return previous;\n    }, {});\n\n    // this will return an array of objects, each object containing a group of objects\n    return Object.keys(groupedCollection).map(key => ({\n      key,\n      value: groupedCollection[key],\n    }));\n  }\n}\n","import { Pipe } from '@angular/core';\nimport * as i0 from \"@angular/core\";\n/**\n * <ul>\n *   <li *ngFor=\"let object of myArray | groupBy:'color'\"></li>\n * </ul>\n */\nexport class GroupByPipe {\n    transform(collection, property) {\n        // prevents the application from breaking if the array of objects doesn't exist yet\n        if (!collection) {\n            return null;\n        }\n        const groupedCollection = collection.reduce((previous, current) => {\n            if (!previous[current[property]]) {\n                previous[current[property]] = [current];\n            }\n            else {\n                previous[current[property]].push(current);\n            }\n            return previous;\n        }, {});\n        // this will return an array of objects, each object containing a group of objects\n        return Object.keys(groupedCollection).map(key => ({\n            key,\n            value: groupedCollection[key],\n        }));\n    }\n}\nGroupByPipe.ngPipeDef = i0.ɵɵdefinePipe({ name: \"groupBy\", type: GroupByPipe, factory: function GroupByPipe_Factory(t) { return new (t || GroupByPipe)(); }, pure: true });\n/*@__PURE__*/ i0.ɵsetClassMetadata(GroupByPipe, [{\n        type: Pipe,\n        args: [{ name: 'groupBy' }]\n    }], null, null);\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { animate, animateChild, query, state, style, transition, trigger } from '@angular/animations';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { A, DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, RIGHT_ARROW, SPACE, UP_ARROW, hasModifierKey } from '@angular/cdk/keycodes';\nimport { CdkConnectedOverlay, Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { Attribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, Directive, ElementRef, EventEmitter, Inject, InjectionToken, Input, isDevMode, NgZone, Optional, Output, Self, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { _countGroupLabelsBeforeOption, _getOptionScrollPosition, ErrorStateMatcher, MAT_OPTION_PARENT_COMPONENT, MatOptgroup, MatOption, mixinDisabled, mixinDisableRipple, mixinErrorState, mixinTabIndex, MatCommonModule, MatOptionModule } from '@angular/material/core';\nimport { MatFormField, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { defer, merge, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, startWith, switchMap, take, takeUntil } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/overlay';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nconst _c2 = [\"role\", \"listbox\", 1, \"mat-select\"];\nconst _c3 = [\"cdk-overlay-origin\", \"\", \"aria-hidden\", \"true\", 1, \"mat-select-trigger\", 3, \"click\"];\nconst _c4 = [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"];\nconst _c5 = [1, \"mat-select-value\", 3, \"ngSwitch\"];\nconst _c6 = [\"class\", \"mat-select-placeholder\", 4, \"ngSwitchCase\"];\nconst _c7 = [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"];\nconst _c8 = [1, \"mat-select-arrow-wrapper\"];\nconst _c9 = [1, \"mat-select-arrow\"];\nconst _c10 = [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"];\nconst _c11 = [1, \"mat-select-placeholder\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", _c11);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r74 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r74.placeholder || \"\\u00A0\");\n} }\nconst _c12 = [1, \"mat-select-value-text\", 3, \"ngSwitch\"];\nconst _c13 = [4, \"ngSwitchDefault\"];\nconst _c14 = [4, \"ngSwitchCase\"];\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r77 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r77.triggerValue || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", _c12);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", _c13);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_2_Template, 1, 0, undefined, _c14);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r75 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r75.customTrigger);\n    ɵngcc0.ɵɵselect(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nconst _c15 = [1, \"mat-select-panel-wrap\"];\nconst _c16 = [3, \"ngClass\", \"keydown\"];\nconst _c17 = [\"panel\", \"\"];\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r81 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", _c15);\n    ɵngcc0.ɵɵelementStart(1, \"div\", _c16, _c17);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r81); const ctx_r80 = ɵngcc0.ɵɵnextContext(); return ctx_r80._panelDoneAnimatingStream.next($event.toState); });\n    ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r81); const ctx_r82 = ɵngcc0.ɵɵnextContext(); return ctx_r82._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r76 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r76._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r76._transformOrigin);\n    ɵngcc0.ɵɵstyleProp(\"font-size\", ctx_r76._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r76.panelClass)(\"@transformPanel\", ctx_r76.multiple ? \"showing-multiple\" : \"showing\");\n} }\nconst _c18 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c19 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            // 32px = 2 * 16px padding\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            // 64px = 48px padding on the left + 16px padding on the right\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     * @deprecated Not used anymore. To be removed.\n     * \\@breaking-change 8.0.0\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst transformPanel = matSelectAnimations.transformPanel;\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst fadeInContent = matSelectAnimations.fadeInContent;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * The max height of the select's overlay panel\n * @type {?}\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis\n * @type {?}\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @type {?}\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @type {?}\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 20 = 44\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n * @type {?}\n */\nlet SELECT_MULTIPLE_PANEL_PADDING_X = 0;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n * @type {?}\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Injection token that determines the scroll handling while a select is open.\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nclass MatSelectChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// Boilerplate for applying mixins to MatSelect.\n/**\n * \\@docs-private\n */\nclass MatSelectBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\n/** @type {?} */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]], factory: function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger'\n            }]\n    }], null, null);\nclass MatSelect extends _MatSelectMixinBase {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _changeDetectorRef\n     * @param {?} _ngZone\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} elementRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _parentFormField\n     * @param {?} ngControl\n     * @param {?} tabIndex\n     * @param {?} scrollStrategyFactory\n     * @param {?=} _liveAnnouncer\n     */\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        this._panelOpen = false;\n        /**\n         * Whether filling out the select is required in the form.\n         */\n        this._required = false;\n        /**\n         * The scroll position of the overlay panel, calculated to center the selected option.\n         */\n        this._scrollTop = 0;\n        /**\n         * Whether the component is in multiple selection mode.\n         */\n        this._multiple = false;\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        /**\n         * Unique id for this input.\n         */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * The cached font-size of the trigger element.\n         */\n        this._triggerFontSize = 0;\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        this._optionIds = '';\n        /**\n         * The value of the select panel's transform-origin property.\n         */\n        this._transformOrigin = 'top';\n        /**\n         * Emits when the panel element is finished transforming in.\n         */\n        this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /**\n         * Whether the component is disabling centering of the active option over the trigger.\n         */\n        this._disableOptionCentering = false;\n        this._focused = false;\n        /**\n         * A name for this control that can be used by `mat-form-field`.\n         */\n        this.controlType = 'mat-select';\n        /**\n         * Aria label of the select. If not specified, the placeholder will be used as label.\n         */\n        this.ariaLabel = '';\n        /**\n         * Combined stream of all of the child options' change events.\n         */\n        this.optionSelectionChanges = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap((/**\n                 * @return {?}\n                 */\n                () => merge(...options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange))))));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelectionChanges)));\n        }))));\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        this._openedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        this._closedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the selected value has been changed by the user.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    /**\n     * Whether the select is focused.\n     * @return {?}\n     */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * \\@breaking-change 8.0.0\n     * @param {?} value\n     * @return {?}\n     */\n    set focused(value) {\n        this._focused = value;\n    }\n    /**\n     * Placeholder to be shown if no value has been selected.\n     * @return {?}\n     */\n    get placeholder() { return this._placeholder; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the component is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the user should be allowed to select multiple options.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        if (this._selectionModel) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to center the active option over the trigger.\n     * @return {?}\n     */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Value of the select control.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n    /**\n     * Unique id of the element.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n                this.openedChange.emit(true);\n            }\n            else {\n                this.openedChange.emit(false);\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.onChange.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.added.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.select()));\n            event.removed.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.deselect()));\n        }));\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._resetOptions();\n            this._initializeSelection();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                this.overlayDir.overlayRef.overlayElement) {\n                this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n            }\n        }));\n    }\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Whether or not the overlay panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /**\n     * The currently selected option.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The value displayed in the trigger.\n     * @return {?}\n     */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            /** @type {?} */\n            const selectedOptions = this._selectionModel.selected.map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.viewValue));\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /**\n     * Handles keyboard events while the select is closed.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClosedKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        /** @type {?} */\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        /** @type {?} */\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if ((isOpenKey && !hasModifierKey(event)) || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            /** @type {?} */\n            const previouslySelectedOption = this.selected;\n            if (keyCode === HOME || keyCode === END) {\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n            /** @type {?} */\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            // @breaking-change 8.0.0 remove null check for _liveAnnouncer.\n            if (this._liveAnnouncer && selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(((/** @type {?} */ (selectedOption))).viewValue, 10000);\n            }\n        }\n    }\n    /**\n     * Handles keyboard events when the selected is open.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleOpenKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        /** @type {?} */\n        const manager = this._keyManager;\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        }\n        else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            /** @type {?} */\n            const hasDeselectedOptions = this.options.some((/**\n             * @param {?} opt\n             * @return {?}\n             */\n            opt => !opt.disabled && !opt.selected));\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            }));\n        }\n        else {\n            /** @type {?} */\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._setPseudoCheckboxPaddingSize();\n            this._changeDetectorRef.detectChanges();\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        }));\n    }\n    /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    // TODO(josephperrott): Remove after 2018 spec updates are fully merged.\n    /**\n     * Sets the pseudo checkbox padding size based on the width of the pseudo checkbox.\n     * @private\n     * @return {?}\n     */\n    _setPseudoCheckboxPaddingSize() {\n        if (!SELECT_MULTIPLE_PANEL_PADDING_X && this.multiple) {\n            /** @type {?} */\n            const pseudoCheckbox = this.panel.nativeElement.querySelector('.mat-pseudo-checkbox');\n            if (pseudoCheckbox) {\n                SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + pseudoCheckbox.offsetWidth;\n            }\n        }\n    }\n    /**\n     * Whether the select has a value.\n     * @return {?}\n     */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            /** @type {?} */\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this.options.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        }));\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Restore focus to the trigger before closing. Ensures that the focus\n            // position won't be lost if the user got focus into the overlay.\n            this.focus();\n            this.close();\n        }));\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen && this.panel) {\n                this._scrollActiveOptionIntoView();\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        }));\n    }\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @private\n     * @return {?}\n     */\n    _resetOptions() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        }));\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._stateChanges)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n        this._setOptionIds();\n    }\n    /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _onSelect(option, isUserInput) {\n        /** @type {?} */\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            option.selected ? this._selectionModel.select(option) : this._selectionModel.deselect(option);\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this.multiple) {\n            /** @type {?} */\n            const options = this.options.toArray();\n            this._selectionModel.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = ((/** @type {?} */ (this.selected))).map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.value));\n        }\n        else {\n            valueToEmit = this.selected ? ((/** @type {?} */ (this.selected))).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    _setOptionIds() {\n        this._optionIds = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.id)).join(' ');\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    _scrollActiveOptionIntoView() {\n        /** @type {?} */\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /**\n     * Focuses the select element.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Gets the index of the provided option in the option list.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.reduce((/**\n         * @param {?} result\n         * @param {?} current\n         * @param {?} index\n         * @return {?}\n         */\n        (result, current, index) => {\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }), undefined);\n    }\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayPosition() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const items = this._getItemCount();\n        /** @type {?} */\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        /** @type {?} */\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        /** @type {?} */\n        let selectedOptionOffset = this.empty ? 0 : (/** @type {?} */ (this._getOptionIndex(this._selectionModel.selected[0])));\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /** @type {?} */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        /** @type {?} */\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        /** @type {?} */\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    /**\n     * Returns the aria-label of the select component.\n     * @return {?}\n     */\n    _getAriaLabel() {\n        // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n        // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n        return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n    }\n    /**\n     * Returns the aria-labelledby of the select component.\n     * @return {?}\n     */\n    _getAriaLabelledby() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n        // computed label. `this.ariaLabel` is only the user-specified label.\n        if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n            this._getAriaLabel()) {\n            return null;\n        }\n        return this._parentFormField._labelId || null;\n    }\n    /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayOffsetX() {\n        /** @type {?} */\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        /** @type {?} */\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            /** @type {?} */\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        /** @type {?} */\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        /** @type {?} */\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @private\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        /** @type {?} */\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            /** @type {?} */\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            /** @type {?} */\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            /** @type {?} */\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @private\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const panelHeightTop = Math.abs(this._offsetY);\n        /** @type {?} */\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @private\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @private\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @private\n     * @return {?}\n     */\n    _getOriginBasedOnOption() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @private\n     * @return {?}\n     */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    /**\n     * Calculates the height of the select's options.\n     * @private\n     * @return {?}\n     */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty;\n    }\n}\nMatSelect.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], factory: function MatSelect_Factory(t) { return new (t || MatSelect)(ɵngcc0.ɵɵdirectiveInject(ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Directionality, 8), ɵngcc0.ɵɵdirectiveInject(NgForm, 8), ɵngcc0.ɵɵdirectiveInject(FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(MatFormField, 8), ɵngcc0.ɵɵdirectiveInject(NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(LiveAnnouncer)); }, contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSelectTrigger, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatSelect_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, hostBindings: function MatSelect_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(15);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSelect_focus_HostBindingHandler($event) { return ctx._onFocus(); });\n        ɵngcc0.ɵɵlistener(\"blur\", function MatSelect_blur_HostBindingHandler($event) { return ctx._onBlur(); });\n        ɵngcc0.ɵɵelementHostAttrs(_c2);\n        ɵngcc0.ɵɵstyling();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-label\", ctx._getAriaLabel())(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-owns\", ctx.panelOpen ? ctx._optionIds : null)(\"aria-multiselectable\", ctx.multiple)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-select-invalid\", ctx.errorState);\n        ɵngcc0.ɵɵclassProp(\"mat-select-required\", ctx.required);\n        ɵngcc0.ɵɵclassProp(\"mat-select-empty\", ctx.empty);\n        ɵngcc0.ɵɵstylingApply();\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", disableOptionCentering: \"disableOptionCentering\", compareWith: \"compareWith\", value: \"value\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()], ngContentSelectors: _c19, consts: 9, vars: 9, template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c18);\n        ɵngcc0.ɵɵelementStart(0, \"div\", _c3, _c4);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener($event) { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", _c5);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", _c6);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", _c7);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", _c8);\n        ɵngcc0.ɵɵelement(7, \"div\", _c9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 7, \"ng-template\", _c10);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener($event) { return ctx.close(); });\n        ɵngcc0.ɵɵlistener(\"attach\", function MatSelect_Template_ng_template_attach_8_listener($event) { return ctx._onAttached(); });\n        ɵngcc0.ɵɵlistener(\"detach\", function MatSelect_Template_ng_template_detach_8_listener($event) { return ctx.close(); });\n    } if (rf & 2) {\n        const _r72 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵselect(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵselect(4);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵselect(5);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵselect(8);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r72)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc1.CdkOverlayOrigin, ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase, ɵngcc1.CdkConnectedOverlay, ɵngcc2.NgSwitchDefault, ɵngcc2.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:0}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform .4s cubic-bezier(.25,.8,.25,1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}@media (-ms-high-contrast:active){.mat-select-panel{outline:solid 1px}}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{ selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin class=\\\"mat-select-trigger\\\" aria-hidden=\\\"true\\\" (click)=\\\"toggle()\\\" #origin=\\\"cdkOverlayOrigin\\\" #trigger><div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\"><span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\u00A0'}}</span> <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\"><span *ngSwitchDefault>{{triggerValue || '\\u00A0'}}</span><ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content></span></div><div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div></div><ng-template cdk-connected-overlay cdkConnectedOverlayLockPosition cdkConnectedOverlayHasBackdrop cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\" [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\" [cdkConnectedOverlayOrigin]=\\\"origin\\\" [cdkConnectedOverlayOpen]=\\\"panelOpen\\\" [cdkConnectedOverlayPositions]=\\\"_positions\\\" [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\" [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\" (backdropClick)=\\\"close()\\\" (attach)=\\\"_onAttached()\\\" (detach)=\\\"close()\\\"><div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]><div #panel class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\" [ngClass]=\\\"panelClass\\\" [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\" (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\" [style.transformOrigin]=\\\"_transformOrigin\\\" [style.font-size.px]=\\\"_triggerFontSize\\\" (keydown)=\\\"_handleKeydown($event)\\\"><ng-content></ng-content></div></div></ng-template>\",\n                styles: [\".mat-select{display:inline-block;width:100%;outline:0}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform .4s cubic-bezier(.25,.8,.25,1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}@media (-ms-high-contrast:active){.mat-select-panel{outline:solid 1px}}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\"],\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    'class': 'mat-select',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ]\n            }]\n    }], function () { return [{ type: ViewportRuler }, { type: ChangeDetectorRef }, { type: NgZone }, { type: ErrorStateMatcher }, { type: ElementRef }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }, { type: NgForm, decorators: [{\n                type: Optional\n            }] }, { type: FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: MatFormField, decorators: [{\n                type: Optional\n            }] }, { type: NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: LiveAnnouncer }]; }, { constructor: [], _viewportRuler: [], _changeDetectorRef: [], _ngZone: [], _dir: [], _parentFormField: [], ngControl: [], _liveAnnouncer: [], _panelOpen: [], _required: [], _scrollTop: [], _multiple: [], _compareWith: [], _uid: [], _destroy: [], _triggerFontSize: [], _onChange: [], _onTouched: [], _optionIds: [], _transformOrigin: [], _panelDoneAnimatingStream: [], _offsetY: [], _positions: [], _disableOptionCentering: [], _focused: [], controlType: [], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], optionSelectionChanges: [], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], _scrollStrategyFactory: [], _scrollStrategy: [], tabIndex: [], id: [{\n            type: Input\n        }], id: [], focused: [], focused: [], placeholder: [{\n            type: Input\n        }], placeholder: [], _placeholder: [], required: [{\n            type: Input\n        }], required: [], multiple: [{\n            type: Input\n        }], multiple: [], disableOptionCentering: [{\n            type: Input\n        }], disableOptionCentering: [], compareWith: [{\n            type: Input\n        }], compareWith: [], value: [{\n            type: Input\n        }], value: [], _value: [], _id: [], ngOnInit: [], _selectionModel: [], _triggerRect: [], ngAfterContentInit: [], ngDoCheck: [], ngOnChanges: [], ngOnDestroy: [], toggle: [], open: [], close: [], writeValue: [], registerOnChange: [], registerOnTouched: [], setDisabledState: [], disabled: [], panelOpen: [], selected: [], triggerValue: [], _isRtl: [], _handleKeydown: [], _handleClosedKeydown: [], _handleOpenKeydown: [], _onFocus: [], _onBlur: [], _onAttached: [], _getPanelTheme: [], _setPseudoCheckboxPaddingSize: [], empty: [], _initializeSelection: [], _setSelectionByValue: [], _selectValue: [], _initKeyManager: [], _keyManager: [], _resetOptions: [], _onSelect: [], _sortValues: [], _propagateChanges: [], _setOptionIds: [], _highlightCorrectOption: [], _scrollActiveOptionIntoView: [], focus: [], _getOptionIndex: [], _calculateOverlayPosition: [], _calculateOverlayScroll: [], _getAriaLabel: [], _getAriaLabelledby: [], _getAriaActiveDescendant: [], _calculateOverlayOffsetX: [], _calculateOverlayOffsetY: [], _checkOverlayWithinViewport: [], _adjustPanelUp: [], _adjustPanelDown: [], _getOriginBasedOnOption: [], _getItemCount: [], _getItemHeight: [], setDescribedByIds: [], _ariaDescribedby: [], onContainerClick: [], shouldLabelFloat: [], trigger: [{\n            type: ViewChild,\n            args: ['trigger', { static: false }]\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel', { static: false }]\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay, { static: false }]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup]\n        }], panelClass: [{\n            type: Input\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MatSelectTrigger, { static: false }]\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] });\n/** @nocollapse */\nMatSelect.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer }\n];\nMatSelect.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger', { static: false },] }],\n    panel: [{ type: ViewChild, args: ['panel', { static: false },] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay, { static: false },] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup,] }],\n    panelClass: [{ type: Input }],\n    customTrigger: [{ type: ContentChild, args: [MatSelectTrigger, { static: false },] }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSelectModule {\n}\nMatSelectModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ],\n        MatFormFieldModule, MatOptionModule, MatCommonModule] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect,\n        MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule, MatCommonModule]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatSelectModule, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MatSelectChange, MatSelectTrigger, MatSelect, matSelectAnimations, transformPanel, fadeInContent };\n\n//# sourceMappingURL=select.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ChangeDetectionStrategy, Component, ContentChild, ContentChildren, Directive, ElementRef, Optional, ViewEncapsulation, ChangeDetectorRef, Attribute, EventEmitter, forwardRef, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { MatLine, setLines, mixinDisableRipple, MatCommonModule, MatLineModule, MatPseudoCheckboxModule, MatRippleModule } from '@angular/material/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { SPACE, ENTER, HOME, END, UP_ARROW, DOWN_ARROW, A, hasModifierKey } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatList.\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/core';\n\nconst _c0 = [\"role\", \"navigation\", 1, \"mat-nav-list\", \"mat-list-base\"];\nconst _c1 = [\"*\"];\nconst _c2 = [1, \"mat-list\", \"mat-list-base\"];\nconst _c3 = [1, \"mat-list-avatar\"];\nconst _c4 = [1, \"mat-list-icon\"];\nconst _c5 = [1, \"mat-subheader\"];\nconst _c6 = [1, \"mat-list-item\"];\nconst _c7 = [1, \"mat-list-item-content\"];\nconst _c8 = [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"];\nconst _c9 = [1, \"mat-list-text\"];\nconst _c10 = [[[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c11 = [\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c12 = [\"text\"];\nconst _c13 = [\"role\", \"option\", \"tabindex\", \"-1\", 1, \"mat-list-item\", \"mat-list-option\"];\nconst _c14 = [3, \"state\", \"disabled\"];\nconst _c15 = [\"text\", \"\"];\nconst _c16 = [\"*\", [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]]];\nconst _c17 = [\"*\", \"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"];\nconst _c18 = [\"role\", \"listbox\", \"aria-multiselectable\", \"true\", 1, \"mat-selection-list\", \"mat-list-base\"];\nclass MatListBase {\n}\n/** @type {?} */\nconst _MatListMixinBase = mixinDisableRipple(MatListBase);\n// Boilerplate for applying mixins to MatListItem.\n/**\n * \\@docs-private\n */\nclass MatListItemBase {\n}\n/** @type {?} */\nconst _MatListItemMixinBase = mixinDisableRipple(MatListItemBase);\nclass MatNavList extends _MatListMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatNavList.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatNavList, selectors: [[\"mat-nav-list\"]], factory: function MatNavList_Factory(t) { return ɵMatNavList_BaseFactory(t || MatNavList); }, hostBindings: function MatNavList_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c0);\n    } }, inputs: { disableRipple: \"disableRipple\" }, exportAs: [\"matNavList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()], ngContentSelectors: _c1, consts: 1, vars: 0, template: function MatNavList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\"], encapsulation: 2, changeDetection: 0 });\nconst ɵMatNavList_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatNavList);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatNavList, [{\n        type: Component,\n        args: [{ selector: 'mat-nav-list',\n                exportAs: 'matNavList',\n                host: {\n                    'role': 'navigation',\n                    'class': 'mat-nav-list mat-list-base'\n                },\n                template: \"<ng-content></ng-content>\",\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\"],\n                inputs: ['disableRipple'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], null, { constructor: [], _stateChanges: [], ngOnChanges: [], ngOnDestroy: [] });\nclass MatList extends _MatListMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n        if (this._getListType() === 'action-list') {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _getListType() {\n        /** @type {?} */\n        const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n        if (nodeName === 'mat-list') {\n            return 'list';\n        }\n        if (nodeName === 'mat-action-list') {\n            return 'action-list';\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatList.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatList, selectors: [[\"mat-list\"], [\"mat-action-list\"]], factory: function MatList_Factory(t) { return new (t || MatList)(ɵngcc0.ɵɵdirectiveInject(ElementRef)); }, hostBindings: function MatList_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c2);\n    } }, inputs: { disableRipple: \"disableRipple\" }, exportAs: [\"matList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()], ngContentSelectors: _c1, consts: 1, vars: 0, template: function MatList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatList, [{\n        type: Component,\n        args: [{ selector: 'mat-list, mat-action-list',\n                exportAs: 'matList',\n                template: \"<ng-content></ng-content>\",\n                host: {\n                    'class': 'mat-list mat-list-base'\n                },\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\"],\n                inputs: ['disableRipple'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ElementRef }]; }, { constructor: [], _elementRef: [], _stateChanges: [], _getListType: [], ngOnChanges: [], ngOnDestroy: [] });\n/** @nocollapse */\nMatList.ctorParameters = () => [\n    { type: ElementRef }\n];\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListAvatarCssMatStyler {\n}\nMatListAvatarCssMatStyler.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatListAvatarCssMatStyler, selectors: [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"matListAvatar\", \"\"]], factory: function MatListAvatarCssMatStyler_Factory(t) { return new (t || MatListAvatarCssMatStyler)(); }, hostBindings: function MatListAvatarCssMatStyler_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c3);\n    } } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatListAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-avatar], [matListAvatar]',\n                host: { 'class': 'mat-list-avatar' }\n            }]\n    }], null, null);\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListIconCssMatStyler {\n}\nMatListIconCssMatStyler.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatListIconCssMatStyler, selectors: [[\"\", \"mat-list-icon\", \"\"], [\"\", \"matListIcon\", \"\"]], factory: function MatListIconCssMatStyler_Factory(t) { return new (t || MatListIconCssMatStyler)(); }, hostBindings: function MatListIconCssMatStyler_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c4);\n    } } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatListIconCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-icon], [matListIcon]',\n                host: { 'class': 'mat-list-icon' }\n            }]\n    }], null, null);\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatListSubheaderCssMatStyler, selectors: [[\"\", \"mat-subheader\", \"\"], [\"\", \"matSubheader\", \"\"]], factory: function MatListSubheaderCssMatStyler_Factory(t) { return new (t || MatListSubheaderCssMatStyler)(); }, hostBindings: function MatListSubheaderCssMatStyler_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c5);\n    } } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatListSubheaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-subheader], [matSubheader]',\n                host: { 'class': 'mat-subheader' }\n            }]\n    }], null, null);\n/**\n * An item within a Material Design list.\n */\nclass MatListItem extends _MatListItemMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?=} navList\n     * @param {?=} list\n     */\n    constructor(_element, _changeDetectorRef, navList, list) {\n        super();\n        this._element = _element;\n        this._isInteractiveList = false;\n        this._destroyed = new Subject();\n        this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        this._list = navList || list;\n        // If no type attributed is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        if (this._list) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                _changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return !this._isInteractiveList || this.disableRipple ||\n            !!(this._list && this._list.disableRipple);\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nMatListItem.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatListItem, selectors: [[\"mat-list-item\"], [\"a\", \"mat-list-item\", \"\"], [\"button\", \"mat-list-item\", \"\"]], factory: function MatListItem_Factory(t) { return new (t || MatListItem)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatNavList, 8), ɵngcc0.ɵɵdirectiveInject(MatList, 8)); }, contentQueries: function MatListItem_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, hostBindings: function MatListItem_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(2);\n        ɵngcc0.ɵɵelementHostAttrs(_c6);\n        ɵngcc0.ɵɵstyling();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-avatar\", ctx._avatar || ctx._icon);\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon);\n        ɵngcc0.ɵɵstylingApply();\n    } }, inputs: { disableRipple: \"disableRipple\" }, exportAs: [\"matListItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c11, consts: 6, vars: 2, template: function MatListItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c10);\n        ɵngcc0.ɵɵelementStart(0, \"div\", _c7);\n        ɵngcc0.ɵɵelement(1, \"div\", _c8);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", _c9);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(5, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵselect(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n    } }, directives: [ɵngcc1.MatRipple], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatListItem, [{\n        type: Component,\n        args: [{ selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n                exportAs: 'matListItem',\n                host: {\n                    'class': 'mat-list-item',\n                    // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                    '[class.mat-list-item-avatar]': '_avatar || _icon',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon'\n                },\n                inputs: ['disableRipple'],\n                template: \"<div class=\\\"mat-list-item-content\\\"><div class=\\\"mat-list-item-ripple\\\" mat-ripple [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div><ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\"></ng-content><div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div><ng-content></ng-content></div>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ElementRef }, { type: ChangeDetectorRef }, { type: MatNavList, decorators: [{\n                type: Optional\n            }] }, { type: MatList, decorators: [{\n                type: Optional\n            }] }]; }, { constructor: [], _element: [], _isInteractiveList: [], _destroyed: [], _list: [], ngAfterContentInit: [], ngOnDestroy: [], _isRippleDisabled: [], _getHostElement: [], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler, { static: false }]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler, { static: false }]\n        }] });\n/** @nocollapse */\nMatListItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatNavList, decorators: [{ type: Optional }] },\n    { type: MatList, decorators: [{ type: Optional }] }\n];\nMatListItem.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler, { static: false },] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler, { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass MatSelectionListBase {\n}\n/** @type {?} */\nconst _MatSelectionListMixinBase = mixinDisableRipple(MatSelectionListBase);\n/**\n * \\@docs-private\n */\nclass MatListOptionBase {\n}\n/** @type {?} */\nconst _MatListOptionMixinBase = mixinDisableRipple(MatListOptionBase);\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSelectionList)),\n    multi: true\n};\n/**\n * Change event that is being fired whenever the selected state of an option changes.\n */\nclass MatSelectionListChange {\n    /**\n     * @param {?} source\n     * @param {?} option\n     */\n    constructor(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetector\n     * @param {?} selectionList\n     */\n    constructor(_element, _changeDetector, selectionList) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this.selectionList = selectionList;\n        this._selected = false;\n        this._disabled = false;\n        this._hasFocus = false;\n        /**\n         * Whether the label should appear before or after the checkbox. Defaults to 'after'\n         */\n        this.checkboxPosition = 'after';\n    }\n    /**\n     * Theme color of the list option. This sets the color of the checkbox.\n     * @return {?}\n     */\n    get color() { return this._color || this.selectionList.color; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set color(newValue) { this._color = newValue; }\n    /**\n     * Value of the option\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (this.selected && newValue !== this.value) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || (this.selectionList && this.selectionList.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Whether the option is selected.\n     * @return {?}\n     */\n    get selected() { return this.selectionList.selectedOptions.isSelected(this); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        /** @type {?} */\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            this.selectionList._reportValueChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const list = this.selectionList;\n        if (list._value && list._value.some((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => list.compareWith(value, this._value)))) {\n            this._setSelected(true);\n        }\n        /** @type {?} */\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetector.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this.selected = false;\n            }));\n        }\n        /** @type {?} */\n        const hadFocus = this._hasFocus;\n        /** @type {?} */\n        const newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    }\n    /**\n     * Toggles the selection state of the option.\n     * @return {?}\n     */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /**\n     * Allows for programmatic focusing of the option.\n     * @return {?}\n     */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * \\@docs-private\n     * @return {?}\n     */\n    getLabel() {\n        return this._text ? (this._text.nativeElement.textContent || '') : '';\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        if (!this.disabled) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent(this);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleFocus() {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    }\n    /**\n     * @return {?}\n     */\n    _handleBlur() {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * Sets the selected state of the option. Returns whether the value has changed.\n     * @param {?} selected\n     * @return {?}\n     */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this._changeDetector.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     * @return {?}\n     */\n    _markForCheck() {\n        this._changeDetector.markForCheck();\n    }\n}\nMatListOption.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatListOption, selectors: [[\"mat-list-option\"]], factory: function MatListOption_Factory(t) { return new (t || MatListOption)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                     * @return {?}\n                     */() => MatSelectionList)))); }, contentQueries: function MatListOption_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, viewQuery: function MatListOption_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c12, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._text = _t.first);\n    } }, hostBindings: function MatListOption_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(6);\n        ɵngcc0.ɵɵlistener(\"focus\", function MatListOption_focus_HostBindingHandler($event) { return ctx._handleFocus(); });\n        ɵngcc0.ɵɵlistener(\"blur\", function MatListOption_blur_HostBindingHandler($event) { return ctx._handleBlur(); });\n        ɵngcc0.ɵɵlistener(\"click\", function MatListOption_click_HostBindingHandler($event) { return ctx._handleClick(); });\n        ɵngcc0.ɵɵelementHostAttrs(_c13);\n        ɵngcc0.ɵɵstyling();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon);\n        ɵngcc0.ɵɵclassProp(\"mat-primary\", ctx.color === \"primary\");\n        ɵngcc0.ɵɵclassProp(\"mat-warn\", ctx.color === \"warn\");\n        ɵngcc0.ɵɵstylingApply();\n    } }, inputs: { disableRipple: \"disableRipple\", checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", selected: \"selected\", disabled: \"disabled\" }, exportAs: [\"matListOption\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c17, consts: 7, vars: 5, template: function MatListOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c16);\n        ɵngcc0.ɵɵelementStart(0, \"div\", _c7);\n        ɵngcc0.ɵɵstyling();\n        ɵngcc0.ɵɵelement(1, \"div\", _c8);\n        ɵngcc0.ɵɵelement(2, \"mat-pseudo-checkbox\", _c14);\n        ɵngcc0.ɵɵelementStart(3, \"div\", _c9, _c15);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-content-reverse\", ctx.checkboxPosition == \"after\");\n        ɵngcc0.ɵɵstylingApply();\n        ɵngcc0.ɵɵselect(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n        ɵngcc0.ɵɵselect(2);\n        ɵngcc0.ɵɵproperty(\"state\", ctx.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx.disabled);\n    } }, directives: [ɵngcc1.MatRipple, ɵngcc1.MatPseudoCheckbox], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatListOption, [{\n        type: Component,\n        args: [{ selector: 'mat-list-option',\n                exportAs: 'matListOption',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'option',\n                    'class': 'mat-list-item mat-list-option',\n                    '(focus)': '_handleFocus()',\n                    '(blur)': '_handleBlur()',\n                    '(click)': '_handleClick()',\n                    'tabindex': '-1',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                    // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                    // its theme. The accent theme palette is the default and doesn't need to be set.\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    '[attr.aria-selected]': 'selected',\n                    '[attr.aria-disabled]': 'disabled'\n                },\n                template: \"<div class=\\\"mat-list-item-content\\\" [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\"><div mat-ripple class=\\\"mat-list-item-ripple\\\" [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div><mat-pseudo-checkbox [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox><div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div><ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\"></ng-content></div>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ElementRef }, { type: ChangeDetectorRef }, { type: MatSelectionList, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatSelectionList))]\n            }] }]; }, { constructor: [], _element: [], _changeDetector: [], selectionList: [], _selected: [], _disabled: [], _hasFocus: [], checkboxPosition: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], color: [], _color: [], value: [{\n            type: Input\n        }], value: [], selected: [{\n            type: Input\n        }], selected: [], _value: [], disabled: [{\n            type: Input\n        }], disabled: [], ngOnInit: [], ngAfterContentInit: [], ngOnDestroy: [], toggle: [], focus: [], getLabel: [], _isRippleDisabled: [], _handleClick: [], _handleFocus: [], _handleBlur: [], _getHostElement: [], _setSelected: [], _markForCheck: [], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler, { static: false }]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler, { static: false }]\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine]\n        }], _text: [{\n            type: ViewChild,\n            args: ['text', { static: false }]\n        }] });\n/** @nocollapse */\nMatListOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatSelectionList, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSelectionList)),] }] }\n];\nMatListOption.propDecorators = {\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler, { static: false },] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler, { static: false },] }],\n    _lines: [{ type: ContentChildren, args: [MatLine,] }],\n    _text: [{ type: ViewChild, args: ['text', { static: false },] }],\n    checkboxPosition: [{ type: Input }],\n    color: [{ type: Input }],\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    selected: [{ type: Input }]\n};\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} tabIndex\n     */\n    constructor(_element, tabIndex) {\n        super();\n        this._element = _element;\n        /**\n         * Emits a change event whenever the selected state of an option changes.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Tabindex of the selection list.\n         */\n        this.tabIndex = 0;\n        /**\n         * Theme color of the selection list. This sets the checkbox color for all list options.\n         */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (/**\n         * @param {?} a1\n         * @param {?} a2\n         * @return {?}\n         */\n        (a1, a2) => a1 === a2);\n        this._disabled = false;\n        /**\n         * The currently selected options.\n         */\n        this.selectedOptions = new SelectionModel(true);\n        /**\n         * View to model callback that should be called whenever the selected options change.\n         */\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * Emits when the list has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * View to model callback that should be called if the list or its options lost focus.\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /**\n     * Whether the selection list is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n        // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n        // changed its state. Since we know that a change to `disabled` property of the list affects\n        // the state of the options, we manually mark each option for check.\n        this._markOptionsForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate((/**\n         * @return {?}\n         */\n        () => false))\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        // Sync external changes to the model back to the options.\n        this.selectedOptions.onChange.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event.added) {\n                for (let item of event.added) {\n                    item.selected = true;\n                }\n            }\n            if (event.removed) {\n                for (let item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const disableRippleChanges = changes['disableRipple'];\n        /** @type {?} */\n        const colorChanges = changes['color'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (colorChanges && !colorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /**\n     * Focuses the selection list.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /**\n     * Selects all of the options.\n     * @return {?}\n     */\n    selectAll() {\n        this._setAllOptionsSelected(true);\n    }\n    /**\n     * Deselects all of the options.\n     * @return {?}\n     */\n    deselectAll() {\n        this._setAllOptionsSelected(false);\n    }\n    /**\n     * Sets the focused option of the selection-list.\n     * @param {?} option\n     * @return {?}\n     */\n    _setFocusedOption(option) {\n        this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @param {?} option\n     * @return {?} Currently-active item.\n     */\n    _removeOptionFromList(option) {\n        /** @type {?} */\n        const optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    }\n    /**\n     * Passes relevant key presses to our key manager.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const previousFocusIndex = manager.activeItemIndex;\n        /** @type {?} */\n        const hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifier) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            case A:\n                if (hasModifierKey(event, 'ctrlKey')) {\n                    this.options.find((/**\n                     * @param {?} option\n                     * @return {?}\n                     */\n                    option => !option.selected)) ? this.selectAll() : this.deselectAll();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                manager.onKeydown(event);\n        }\n        if ((keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    }\n    /**\n     * Reports a value change to the ControlValueAccessor\n     * @return {?}\n     */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            /** @type {?} */\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /**\n     * Emits a change event if the selected state of an option changed.\n     * @param {?} option\n     * @return {?}\n     */\n    _emitChangeEvent(option) {\n        this.selectionChange.emit(new MatSelectionListChange(this, option));\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} values\n     * @return {?}\n     */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Sets the selected options based on the specified values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _setOptionsFromValues(values) {\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._setSelected(false)));\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            /** @type {?} */\n            const correspondingOption = this.options.find((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            }));\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        }));\n    }\n    /**\n     * Returns the values of the selected options.\n     * @private\n     * @return {?}\n     */\n    _getSelectedOptionValues() {\n        return this.options.filter((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.selected)).map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.value));\n    }\n    /**\n     * Toggles the state of the currently focused option if enabled.\n     * @private\n     * @return {?}\n     */\n    _toggleFocusedOption() {\n        /** @type {?} */\n        let focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            /** @type {?} */\n            let focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     * @private\n     * @param {?} isSelected\n     * @return {?}\n     */\n    _setAllOptionsSelected(isSelected) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        /** @type {?} */\n        let hasChanged = false;\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => {\n            if (option._setSelected(isSelected)) {\n                hasChanged = true;\n            }\n        }));\n        if (hasChanged) {\n            this._reportValueChange();\n        }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @private\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of options.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.options.length;\n    }\n    /**\n     * Returns the index of the specified list option.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.toArray().indexOf(option);\n    }\n    /**\n     * Marks all the options to be checked in the next change detection run.\n     * @private\n     * @return {?}\n     */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option._markForCheck()));\n        }\n    }\n}\nMatSelectionList.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatSelectionList, selectors: [[\"mat-selection-list\"]], factory: function MatSelectionList_Factory(t) { return new (t || MatSelectionList)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵinjectAttribute('tabindex')); }, contentQueries: function MatSelectionList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListOption, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostBindings: function MatSelectionList_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(2);\n        ɵngcc0.ɵɵlistener(\"blur\", function MatSelectionList_blur_HostBindingHandler($event) { return ctx._onTouched(); });\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelectionList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n        ɵngcc0.ɵɵelementHostAttrs(_c18);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled.toString());\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", color: \"color\", compareWith: \"compareWith\", disabled: \"disabled\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"matSelectionList\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SELECTION_LIST_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()], ngContentSelectors: _c1, consts: 1, vars: 0, template: function MatSelectionList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatSelectionList, [{\n        type: Component,\n        args: [{ selector: 'mat-selection-list',\n                exportAs: 'matSelectionList',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'listbox',\n                    '[tabIndex]': 'tabIndex',\n                    'class': 'mat-selection-list mat-list-base',\n                    '(blur)': '_onTouched()',\n                    '(keydown)': '_keydown($event)',\n                    'aria-multiselectable': 'true',\n                    '[attr.aria-disabled]': 'disabled.toString()'\n                },\n                template: '<ng-content></ng-content>',\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\"],\n                encapsulation: ViewEncapsulation.None,\n                providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { constructor: [], _element: [], selectionChange: [{\n            type: Output\n        }], tabIndex: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], _disabled: [], selectedOptions: [], _onChange: [], _destroyed: [], _onTouched: [], disabled: [{\n            type: Input\n        }], disabled: [], ngAfterContentInit: [], _keyManager: [], ngOnChanges: [], ngOnDestroy: [], _isDestroyed: [], focus: [], selectAll: [], deselectAll: [], _setFocusedOption: [], _removeOptionFromList: [], _keydown: [], _reportValueChange: [], _value: [], _emitChangeEvent: [], writeValue: [], setDisabledState: [], registerOnChange: [], registerOnTouched: [], _setOptionsFromValues: [], _getSelectedOptionValues: [], _toggleFocusedOption: [], _setAllOptionsSelected: [], _isValidIndex: [], _getOptionIndex: [], _markOptionsForCheck: [], options: [{\n            type: ContentChildren,\n            args: [MatListOption, { descendants: true }]\n        }] });\n/** @nocollapse */\nMatSelectionList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatSelectionList.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatListOption, { descendants: true },] }],\n    selectionChange: [{ type: Output }],\n    tabIndex: [{ type: Input }],\n    color: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatListModule {\n}\nMatListModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: MatListModule });\nMatListModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function MatListModule_Factory(t) { return new (t || MatListModule)(); }, imports: [[MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n        MatLineModule,\n        MatCommonModule,\n        MatPseudoCheckboxModule,\n        MatDividerModule] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(MatListModule, { declarations: function () { return [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatSelectionList,\n        MatListOption]; }, imports: function () { return [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule]; }, exports: function () { return [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatLineModule,\n        MatCommonModule,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatPseudoCheckboxModule,\n        MatSelectionList,\n        MatListOption,\n        MatDividerModule]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n                exports: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatPseudoCheckboxModule,\n                    MatSelectionList,\n                    MatListOption,\n                    MatDividerModule\n                ],\n                declarations: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatSelectionList,\n                    MatListOption\n                ]\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatListModule, MatNavList, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatListItem, MAT_SELECTION_LIST_VALUE_ACCESSOR, MatSelectionListChange, MatListOption, MatSelectionList };\n\n//# sourceMappingURL=list.js.map","import { NgModule } from '@angular/core';\n\n@NgModule({})\nexport class ThemePickerServiceModule {}\n","import { NgModule } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class ThemePickerServiceModule {\n}\nThemePickerServiceModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: ThemePickerServiceModule });\nThemePickerServiceModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function ThemePickerServiceModule_Factory(t) { return new (t || ThemePickerServiceModule)(); } });\n/*@__PURE__*/ i0.ɵsetClassMetadata(ThemePickerServiceModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null);\n","import toDate from '../toDate/index.js';\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * var result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import lightFormatters from '../lightFormatters/index.js';\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js';\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js';\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js';\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js';\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport addLeadingZeros from '../../addLeadingZeros/index.js';\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","import addLeadingZeros from '../../addLeadingZeros/index.js';\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from '../toInteger/index.js';\nimport getUTCWeekYear from '../getUTCWeekYear/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getUTCISOWeekYear from '../getUTCISOWeekYear/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from '../../toDate/index.js';\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token) {\n  if (token === 'YYYY') {\n    throw new RangeError('Use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'YY') {\n    throw new RangeError('Use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'D') {\n    throw new RangeError('Use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr');\n  } else if (token === 'DD') {\n    throw new RangeError('Use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr');\n  }\n}","import isValid from '../isValid/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/formatters/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js'; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'(.*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from '../toDate/index.js';\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `true`        |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ChangeDetectionStrategy, Component, Input, ViewEncapsulation, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"role\", \"separator\", 1, \"mat-divider\"];\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /**\n     * Whether the divider is vertically aligned.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) { this._vertical = coerceBooleanProperty(value); }\n    /**\n     * Whether the divider is an inset divider.\n     * @return {?}\n     */\n    get inset() { return this._inset; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set inset(value) { this._inset = coerceBooleanProperty(value); }\n}\nMatDivider.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatDivider, selectors: [[\"mat-divider\"]], factory: function MatDivider_Factory(t) { return new (t || MatDivider)(); }, hostBindings: function MatDivider_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(4);\n        ɵngcc0.ɵɵelementHostAttrs(_c0);\n        ɵngcc0.ɵɵstyling();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical);\n        ɵngcc0.ɵɵclassProp(\"mat-divider-horizontal\", !ctx.vertical);\n        ɵngcc0.ɵɵclassProp(\"mat-divider-inset\", ctx.inset);\n        ɵngcc0.ɵɵstylingApply();\n    } }, inputs: { vertical: \"vertical\", inset: \"inset\" }, consts: 0, vars: 0, template: function MatDivider_Template(rf, ctx) { }, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatDivider, [{\n        type: Component,\n        args: [{ selector: 'mat-divider',\n                host: {\n                    'role': 'separator',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-divider-vertical]': 'vertical',\n                    '[class.mat-divider-horizontal]': '!vertical',\n                    '[class.mat-divider-inset]': 'inset',\n                    'class': 'mat-divider'\n                },\n                template: '',\n                styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return []; }, { constructor: [], _vertical: [], _inset: [], vertical: [{\n            type: Input\n        }], vertical: [], inset: [{\n            type: Input\n        }], inset: [] });\nMatDivider.propDecorators = {\n    vertical: [{ type: Input }],\n    inset: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDividerModule {\n}\nMatDividerModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: MatDividerModule });\nMatDividerModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function MatDividerModule_Factory(t) { return new (t || MatDividerModule)(); }, imports: [[MatCommonModule, CommonModule],\n        MatCommonModule] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(MatDividerModule, { declarations: function () { return [MatDivider]; }, imports: function () { return [MatCommonModule, CommonModule]; }, exports: function () { return [MatDivider,\n        MatCommonModule]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatDividerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, CommonModule],\n                exports: [MatDivider, MatCommonModule],\n                declarations: [MatDivider]\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatDivider, MatDividerModule };\n\n//# sourceMappingURL=divider.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable, NgModule, ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, forwardRef, Inject, Input, Optional, Output, ViewChild, ViewEncapsulation, ElementRef, NgZone, InjectionToken, ViewContainerRef, Directive, Attribute, ContentChild, ɵɵdefineInjectable } from '@angular/core';\nimport { Subject, merge, Subscription, of } from 'rxjs';\nimport { take, filter } from 'rxjs/operators';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW, SPACE, ESCAPE } from '@angular/cdk/keycodes';\nimport { DateAdapter, MAT_DATE_FORMATS, mixinColor } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ComponentPortal, PortalModule } from '@angular/cdk/portal';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { MatFormField } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { A11yModule } from '@angular/cdk/a11y';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @param {?} provider\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/cdk/portal';\n\nconst _c0 = [\"role\", \"grid\", \"aria-readonly\", \"true\", 1, \"mat-calendar-body\"];\nconst _c1 = [\"mat-calendar-body\", \"\"];\nconst _c2 = [\"aria-hidden\", \"true\", 4, \"ngIf\"];\nconst _c3 = [\"role\", \"row\", 4, \"ngFor\", \"ngForOf\"];\nconst _c4 = [\"aria-hidden\", \"true\"];\nconst _c5 = [1, \"mat-calendar-body-label\"];\nfunction MatCalendarBody_tr_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", _c4);\n    ɵngcc0.ɵɵelementStart(1, \"td\", _c5);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r41 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r41._cellPadding);\n    ɵngcc0.ɵɵstyleProp(\"padding-bottom\", ctx_r41._cellPadding);\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r41.numCols);\n    ɵngcc0.ɵɵselect(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r41.label);\n} }\nconst _c6 = [\"role\", \"row\"];\nconst _c7 = [\"aria-hidden\", \"true\", \"class\", \"mat-calendar-body-label\", 3, \"paddingTop\", \"paddingBottom\", 4, \"ngIf\"];\nconst _c8 = [\"role\", \"gridcell\", \"class\", \"mat-calendar-body-cell\", \"role\", \"button\", 3, \"ngClass\", \"tabindex\", \"mat-calendar-body-disabled\", \"mat-calendar-body-active\", \"width\", \"paddingTop\", \"paddingBottom\", \"click\", 4, \"ngFor\", \"ngForOf\"];\nconst _c9 = [\"aria-hidden\", \"true\", 1, \"mat-calendar-body-label\"];\nfunction MatCalendarBody_tr_1_td_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", _c9);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r45 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r45._cellPadding);\n    ɵngcc0.ɵɵstyleProp(\"padding-bottom\", ctx_r45._cellPadding);\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r45._firstRowOffset);\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r45._firstRowOffset >= ctx_r45.labelMinRequiredCells ? ctx_r45.label : \"\");\n} }\nconst _c10 = [\"role\", \"gridcell\", \"role\", \"button\", 1, \"mat-calendar-body-cell\", 3, \"ngClass\", \"tabindex\", \"click\"];\nconst _c11 = [1, \"mat-calendar-body-cell-content\"];\nfunction MatCalendarBody_tr_1_td_2_Template(rf, ctx) { if (rf & 1) {\n    const _r50 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\", _c10);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵlistener(\"click\", function MatCalendarBody_tr_1_td_2_Template_td_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r50); const item_r47 = ctx.$implicit; const ctx_r49 = ɵngcc0.ɵɵnextContext(2); return ctx_r49._cellClicked(item_r47); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", _c11);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r47 = ctx.$implicit;\n    const colIndex_r48 = ctx.index;\n    const rowIndex_r44 = ɵngcc0.ɵɵnextContext().index;\n    const ctx_r46 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r46._cellWidth);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r46._cellPadding);\n    ɵngcc0.ɵɵstyleProp(\"padding-bottom\", ctx_r46._cellPadding);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-disabled\", !item_r47.enabled);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-active\", ctx_r46._isActiveCell(rowIndex_r44, colIndex_r48));\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵproperty(\"ngClass\", item_r47.cssClasses)(\"tabindex\", ctx_r46._isActiveCell(rowIndex_r44, colIndex_r48) ? 0 : 0 - 1);\n    ɵngcc0.ɵɵattribute(\"aria-label\", item_r47.ariaLabel)(\"aria-disabled\", !item_r47.enabled || null)(\"aria-selected\", ctx_r46.selectedValue === item_r47.value);\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-selected\", ctx_r46.selectedValue === item_r47.value);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-today\", ctx_r46.todayValue === item_r47.value);\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵselect(2);\n    ɵngcc0.ɵɵtextInterpolate(item_r47.displayValue);\n} }\nfunction MatCalendarBody_tr_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", _c6);\n    ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_td_1_Template, 2, 4, \"td\", _c7);\n    ɵngcc0.ɵɵtemplate(2, MatCalendarBody_tr_1_td_2_Template, 3, 13, \"td\", _c8);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r43 = ctx.$implicit;\n    const rowIndex_r44 = ctx.index;\n    const ctx_r42 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", rowIndex_r44 === 0 && ctx_r42._firstRowOffset);\n    ɵngcc0.ɵɵselect(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r43);\n} }\nconst _c12 = [\"role\", \"presentation\", 1, \"mat-calendar-table\"];\nconst _c13 = [1, \"mat-calendar-table-header\"];\nconst _c14 = [4, \"ngFor\", \"ngForOf\"];\nconst _c15 = [\"colspan\", \"7\", \"aria-hidden\", \"true\", 1, \"mat-calendar-table-header-divider\"];\nconst _c16 = [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"activeCell\", \"selectedValueChange\", \"keydown\"];\nfunction MatMonthView_th_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const day_r53 = ctx.$implicit;\n    ɵngcc0.ɵɵattribute(\"aria-label\", day_r53.long);\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵtextInterpolate(day_r53.narrow);\n} }\nconst _c17 = [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"];\nconst _c18 = [\"mat-calendar-body\", \"\", 3, \"rows\", \"todayValue\", \"selectedValue\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"];\nconst _c19 = [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"];\nconst _c20 = [1, \"mat-calendar-header\"];\nconst _c21 = [1, \"mat-calendar-controls\"];\nconst _c22 = [\"mat-button\", \"\", \"type\", \"button\", \"cdkAriaLive\", \"polite\", 1, \"mat-calendar-period-button\", 3, \"click\"];\nconst _c23 = [1, \"mat-calendar-arrow\"];\nconst _c24 = [1, \"mat-calendar-spacer\"];\nconst _c25 = [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-previous-button\", 3, \"disabled\", \"click\"];\nconst _c26 = [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-next-button\", 3, \"disabled\", \"click\"];\nconst _c27 = [\"*\"];\nconst _c28 = [1, \"mat-calendar\"];\nconst _c29 = [3, \"cdkPortalOutlet\"];\nconst _c30 = [\"cdkMonitorSubtreeFocus\", \"\", \"tabindex\", \"-1\", 1, \"mat-calendar-content\", 3, \"ngSwitch\"];\nconst _c31 = [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"selectedChange\", \"_userSelection\", 4, \"ngSwitchCase\"];\nconst _c32 = [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\", 4, \"ngSwitchCase\"];\nconst _c33 = [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\", 4, \"ngSwitchCase\"];\nfunction MatCalendar_ng_template_0_Template(rf, ctx) { }\nconst _c34 = [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"selectedChange\", \"_userSelection\"];\nfunction MatCalendar_mat_month_view_2_Template(rf, ctx) { if (rf & 1) {\n    const _r59 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-month-view\", _c34);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r59); const ctx_r58 = ɵngcc0.ɵɵnextContext(); return ctx_r58.activeDate = $event; });\n    ɵngcc0.ɵɵlistener(\"selectedChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r59); const ctx_r60 = ɵngcc0.ɵɵnextContext(); return ctx_r60._dateSelected($event); });\n    ɵngcc0.ɵɵlistener(\"_userSelection\", function MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r59); const ctx_r61 = ɵngcc0.ɵɵnextContext(); return ctx_r61._userSelected(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r55 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r55.activeDate)(\"selected\", ctx_r55.selected)(\"dateFilter\", ctx_r55.dateFilter)(\"maxDate\", ctx_r55.maxDate)(\"minDate\", ctx_r55.minDate)(\"dateClass\", ctx_r55.dateClass);\n} }\nconst _c35 = [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\"];\nfunction MatCalendar_mat_year_view_3_Template(rf, ctx) { if (rf & 1) {\n    const _r63 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-year-view\", _c35);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r63); const ctx_r62 = ɵngcc0.ɵɵnextContext(); return ctx_r62.activeDate = $event; });\n    ɵngcc0.ɵɵlistener(\"monthSelected\", function MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r63); const ctx_r64 = ɵngcc0.ɵɵnextContext(); return ctx_r64._monthSelectedInYearView($event); });\n    ɵngcc0.ɵɵlistener(\"selectedChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r63); const ctx_r65 = ɵngcc0.ɵɵnextContext(); return ctx_r65._goToDateInView($event, \"month\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r56 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r56.activeDate)(\"selected\", ctx_r56.selected)(\"dateFilter\", ctx_r56.dateFilter)(\"maxDate\", ctx_r56.maxDate)(\"minDate\", ctx_r56.minDate);\n} }\nconst _c36 = [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\"];\nfunction MatCalendar_mat_multi_year_view_4_Template(rf, ctx) { if (rf & 1) {\n    const _r67 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-multi-year-view\", _c36);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r67); const ctx_r66 = ɵngcc0.ɵɵnextContext(); return ctx_r66.activeDate = $event; });\n    ɵngcc0.ɵɵlistener(\"yearSelected\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r67); const ctx_r68 = ɵngcc0.ɵɵnextContext(); return ctx_r68._yearSelectedInMultiYearView($event); });\n    ɵngcc0.ɵɵlistener(\"selectedChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r67); const ctx_r69 = ɵngcc0.ɵɵnextContext(); return ctx_r69._goToDateInView($event, \"year\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r57 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r57.activeDate)(\"selected\", ctx_r57.selected)(\"dateFilter\", ctx_r57.dateFilter)(\"maxDate\", ctx_r57.maxDate)(\"minDate\", ctx_r57.minDate);\n} }\nconst _c37 = [1, \"mat-datepicker-content\"];\nconst _c38 = [\"cdkTrapFocus\", \"\", 3, \"id\", \"ngClass\", \"startAt\", \"startView\", \"minDate\", \"maxDate\", \"dateFilter\", \"headerComponent\", \"selected\", \"dateClass\", \"selectedChange\", \"yearSelected\", \"monthSelected\", \"_userSelection\"];\nconst _c39 = [\"aria-haspopup\", \"dialog\"];\nconst _c40 = [\"button\"];\nconst _c41 = [1, \"mat-datepicker-toggle\"];\nconst _c42 = [\"mat-icon-button\", \"\", \"type\", \"button\", \"aria-haspopup\", \"dialog\", 3, \"disabled\", \"disableRipple\", \"click\"];\nconst _c43 = [\"button\", \"\"];\nconst _c44 = [\"class\", \"mat-datepicker-toggle-default-icon\", \"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 4, \"ngIf\"];\nconst _c45 = [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 1, \"mat-datepicker-toggle-default-icon\"];\nconst _c46 = [\"d\", \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"];\nfunction MatDatepickerToggle__svg_svg_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", _c45);\n    ɵngcc0.ɵɵelement(1, \"path\", _c46);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c47 = [[[\"\", \"matDatepickerToggleIcon\", \"\"]]];\nconst _c48 = [\"[matDatepickerToggleIcon]\"];\nfunction createMissingDateImplError(provider) {\n    return Error(`MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Datepicker data that requires internationalization.\n */\nclass MatDatepickerIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * A label for the calendar popup (used by screen readers).\n         */\n        this.calendarLabel = 'Calendar';\n        /**\n         * A label for the button used to open the calendar popup (used by screen readers).\n         */\n        this.openCalendarLabel = 'Open calendar';\n        /**\n         * A label for the previous month button (used by screen readers).\n         */\n        this.prevMonthLabel = 'Previous month';\n        /**\n         * A label for the next month button (used by screen readers).\n         */\n        this.nextMonthLabel = 'Next month';\n        /**\n         * A label for the previous year button (used by screen readers).\n         */\n        this.prevYearLabel = 'Previous year';\n        /**\n         * A label for the next year button (used by screen readers).\n         */\n        this.nextYearLabel = 'Next year';\n        /**\n         * A label for the previous multi-year button (used by screen readers).\n         */\n        this.prevMultiYearLabel = 'Previous 20 years';\n        /**\n         * A label for the next multi-year button (used by screen readers).\n         */\n        this.nextMultiYearLabel = 'Next 20 years';\n        /**\n         * A label for the 'switch to month view' button (used by screen readers).\n         */\n        this.switchToMonthViewLabel = 'Choose date';\n        /**\n         * A label for the 'switch to year view' button (used by screen readers).\n         */\n        this.switchToMultiYearViewLabel = 'Choose month and year';\n    }\n}\nMatDatepickerIntl.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: MatDatepickerIntl, factory: function MatDatepickerIntl_Factory(t) { return new (t || MatDatepickerIntl)(); }, providedIn: 'root' });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatDatepickerIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, { constructor: [], changes: [], calendarLabel: [], openCalendarLabel: [], prevMonthLabel: [], nextMonthLabel: [], prevYearLabel: [], nextYearLabel: [], prevMultiYearLabel: [], nextMultiYearLabel: [], switchToMonthViewLabel: [], switchToMultiYearViewLabel: [] });\n/** @nocollapse */ MatDatepickerIntl.ngInjectableDef = ɵɵdefineInjectable({ factory: function MatDatepickerIntl_Factory() { return new MatDatepickerIntl(); }, token: MatDatepickerIntl, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * \\@docs-private\n */\nclass MatCalendarCell {\n    /**\n     * @param {?} value\n     * @param {?} displayValue\n     * @param {?} ariaLabel\n     * @param {?} enabled\n     * @param {?=} cssClasses\n     */\n    constructor(value, displayValue, ariaLabel, enabled, cssClasses) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n        this.cssClasses = cssClasses;\n    }\n}\n/**\n * An internal component used to display calendar data in a table.\n * \\@docs-private\n */\nclass MatCalendarBody {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _ngZone) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * The number of columns in the table.\n         */\n        this.numCols = 7;\n        /**\n         * The cell number of the active cell in the table.\n         */\n        this.activeCell = 0;\n        /**\n         * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n         * maintained even as the table resizes.\n         */\n        this.cellAspectRatio = 1;\n        /**\n         * Emits when a new value is selected.\n         */\n        this.selectedValueChange = new EventEmitter();\n    }\n    /**\n     * @param {?} cell\n     * @return {?}\n     */\n    _cellClicked(cell) {\n        if (cell.enabled) {\n            this.selectedValueChange.emit(cell.value);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const columnChanges = changes['numCols'];\n        const { rows, numCols } = this;\n        if (changes['rows'] || columnChanges) {\n            this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n        if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n            this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n        }\n        if (columnChanges || !this._cellWidth) {\n            this._cellWidth = `${100 / numCols}%`;\n        }\n    }\n    /**\n     * @param {?} rowIndex\n     * @param {?} colIndex\n     * @return {?}\n     */\n    _isActiveCell(rowIndex, colIndex) {\n        /** @type {?} */\n        let cellNumber = rowIndex * this.numCols + colIndex;\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n        return cellNumber == this.activeCell;\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n                if (activeCell) {\n                    activeCell.focus();\n                }\n            }));\n        }));\n    }\n}\nMatCalendarBody.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatCalendarBody, selectors: [[\"\", \"mat-calendar-body\", \"\"]], factory: function MatCalendarBody_Factory(t) { return new (t || MatCalendarBody)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(NgZone)); }, hostBindings: function MatCalendarBody_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c0);\n    } }, inputs: { numCols: \"numCols\", activeCell: \"activeCell\", cellAspectRatio: \"cellAspectRatio\", label: \"label\", rows: \"rows\", todayValue: \"todayValue\", selectedValue: \"selectedValue\", labelMinRequiredCells: \"labelMinRequiredCells\" }, outputs: { selectedValueChange: \"selectedValueChange\" }, exportAs: [\"matCalendarBody\"], features: [ɵngcc0.ɵɵNgOnChangesFeature()], attrs: _c1, consts: 2, vars: 2, template: function MatCalendarBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendarBody_tr_0_Template, 3, 4, \"tr\", _c2);\n        ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_Template, 3, 2, \"tr\", _c3);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._firstRowOffset < ctx.labelMinRequiredCells);\n        ɵngcc0.ɵɵselect(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.rows);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgClass], styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.71429%;padding-right:4.71429%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:0;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}@media (-ms-high-contrast:active){.mat-calendar-body-cell-content{border:none}}@media (-ms-high-contrast:active){.mat-calendar-body-selected,.mat-datepicker-popup:not(:empty){outline:solid 1px}.mat-calendar-body-today{outline:dotted 1px}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}}[dir=rtl] .mat-calendar-body-label{text-align:right}\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatCalendarBody, [{\n        type: Component,\n        args: [{ selector: '[mat-calendar-body]',\n                template: \"<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\"><td class=\\\"mat-calendar-body-label\\\" [attr.colspan]=\\\"numCols\\\" [style.paddingTop]=\\\"_cellPadding\\\" [style.paddingBottom]=\\\"_cellPadding\\\">{{label}}</td></tr><tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\"><td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\" aria-hidden=\\\"true\\\" class=\\\"mat-calendar-body-label\\\" [attr.colspan]=\\\"_firstRowOffset\\\" [style.paddingTop]=\\\"_cellPadding\\\" [style.paddingBottom]=\\\"_cellPadding\\\">{{_firstRowOffset >= labelMinRequiredCells ? label : ''}}</td><td *ngFor=\\\"let item of row; let colIndex = index\\\" role=\\\"gridcell\\\" class=\\\"mat-calendar-body-cell\\\" [ngClass]=\\\"item.cssClasses\\\" [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\" [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\" [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\" [attr.aria-label]=\\\"item.ariaLabel\\\" [attr.aria-disabled]=\\\"!item.enabled || null\\\" [attr.aria-selected]=\\\"selectedValue === item.value\\\" (click)=\\\"_cellClicked(item)\\\" [style.width]=\\\"_cellWidth\\\" [style.paddingTop]=\\\"_cellPadding\\\" role=\\\"button\\\" [style.paddingBottom]=\\\"_cellPadding\\\"><div class=\\\"mat-calendar-body-cell-content\\\" [class.mat-calendar-body-selected]=\\\"selectedValue === item.value\\\" [class.mat-calendar-body-today]=\\\"todayValue === item.value\\\">{{item.displayValue}}</div></td></tr>\",\n                styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.71429%;padding-right:4.71429%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:0;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}@media (-ms-high-contrast:active){.mat-calendar-body-cell-content{border:none}}@media (-ms-high-contrast:active){.mat-calendar-body-selected,.mat-datepicker-popup:not(:empty){outline:solid 1px}.mat-calendar-body-today{outline:dotted 1px}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}}[dir=rtl] .mat-calendar-body-label{text-align:right}\"],\n                host: {\n                    'class': 'mat-calendar-body',\n                    'role': 'grid',\n                    'aria-readonly': 'true'\n                },\n                exportAs: 'matCalendarBody',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ElementRef }, { type: NgZone }]; }, { constructor: [], _elementRef: [], _ngZone: [], numCols: [{\n            type: Input\n        }], activeCell: [{\n            type: Input\n        }], cellAspectRatio: [{\n            type: Input\n        }], selectedValueChange: [{\n            type: Output\n        }], _cellClicked: [], ngOnChanges: [], _firstRowOffset: [], _cellPadding: [], _cellWidth: [], _isActiveCell: [], _focusActiveCell: [], label: [{\n            type: Input\n        }], rows: [{\n            type: Input\n        }], todayValue: [{\n            type: Input\n        }], selectedValue: [{\n            type: Input\n        }], labelMinRequiredCells: [{\n            type: Input\n        }] });\n/** @nocollapse */\nMatCalendarBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nMatCalendarBody.propDecorators = {\n    label: [{ type: Input }],\n    rows: [{ type: Input }],\n    todayValue: [{ type: Input }],\n    selectedValue: [{ type: Input }],\n    labelMinRequiredCells: [{ type: Input }],\n    numCols: [{ type: Input }],\n    activeCell: [{ type: Input }],\n    cellAspectRatio: [{ type: Input }],\n    selectedValueChange: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatMonthView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateFormats\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        /**\n         * Emits when a new date is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedDate = this._getDateInCurrentMonth(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._init();\n    }\n    /**\n     * Handles when a new date is selected.\n     * @param {?} date\n     * @return {?}\n     */\n    _dateSelected(date) {\n        if (this._selectedDate != date) {\n            /** @type {?} */\n            const selectedYear = this._dateAdapter.getYear(this.activeDate);\n            /** @type {?} */\n            const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n            /** @type {?} */\n            const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n            this.selectedChange.emit(selectedDate);\n        }\n        this._userSelection.emit();\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in month view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                    this._dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this._dateSelected(this._dateAdapter.getDate(this._activeDate));\n                    this._userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * Initializes this month view.\n     * @return {?}\n     */\n    _init() {\n        this._selectedDate = this._getDateInCurrentMonth(this.selected);\n        this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n        this._monthLabel =\n            this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n                .toLocaleUpperCase();\n        /** @type {?} */\n        let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n        this._initWeekdays();\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Initializes the weekdays.\n     * @private\n     * @return {?}\n     */\n    _initWeekdays() {\n        /** @type {?} */\n        const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        /** @type {?} */\n        const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n        /** @type {?} */\n        const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        /** @type {?} */\n        let weekdays = longWeekdays.map((/**\n         * @param {?} long\n         * @param {?} i\n         * @return {?}\n         */\n        (long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        }));\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    }\n    /**\n     * Creates MatCalendarCells for the dates in this month.\n     * @private\n     * @return {?}\n     */\n    _createWeekCells() {\n        /** @type {?} */\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        /** @type {?} */\n        const dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell == DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            /** @type {?} */\n            const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n            /** @type {?} */\n            const enabled = this._shouldEnableDate(date);\n            /** @type {?} */\n            const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            /** @type {?} */\n            const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n            this._weeks[this._weeks.length - 1]\n                .push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n        }\n    }\n    /**\n     * Date filter for the month\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _shouldEnableDate(date) {\n        return !!date &&\n            (!this.dateFilter || this.dateFilter(date)) &&\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0);\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _getDateInCurrentMonth(date) {\n        return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n            this._dateAdapter.getDate(date) : null;\n    }\n    /**\n     * Checks whether the 2 dates are non-null and fall within the same month of the same year.\n     * @private\n     * @param {?} d1\n     * @param {?} d2\n     * @return {?}\n     */\n    _hasSameMonthAndYear(d1, d2) {\n        return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatMonthView.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatMonthView, selectors: [[\"mat-month-view\"]], factory: function MatMonthView_Factory(t) { return new (t || MatMonthView)(ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(Directionality, 8)); }, viewQuery: function MatMonthView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", _userSelection: \"_userSelection\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMonthView\"], consts: 7, vars: 7, template: function MatMonthView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", _c12);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", _c13);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵtemplate(3, MatMonthView_th_3_Template, 2, 2, \"th\", _c14);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tr\");\n        ɵngcc0.ɵɵelement(5, \"th\", _c15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"tbody\", _c16);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMonthView_Template_tbody_selectedValueChange_6_listener($event) { return ctx._dateSelected($event); });\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatMonthView_Template_tbody_keydown_6_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵselect(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._weekdays);\n        ɵngcc0.ɵɵselect(6);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._monthLabel)(\"rows\", ctx._weeks)(\"todayValue\", ctx._todayDate)(\"selectedValue\", ctx._selectedDate)(\"labelMinRequiredCells\", 3)(\"activeCell\", ctx._dateAdapter.getDate(ctx.activeDate) - 1);\n    } }, directives: [ɵngcc1.NgForOf, MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatMonthView, [{\n        type: Component,\n        args: [{ selector: 'mat-month-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">{{day.narrow}}</th></tr><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\" aria-hidden=\\\"true\\\"></th></tr></thead><tbody mat-calendar-body [label]=\\\"_monthLabel\\\" [rows]=\\\"_weeks\\\" [todayValue]=\\\"_todayDate\\\" [selectedValue]=\\\"_selectedDate\\\" [labelMinRequiredCells]=\\\"3\\\" [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\" (selectedValueChange)=\\\"_dateSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n                exportAs: 'matMonthView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { constructor: [], _changeDetectorRef: [], _dateFormats: [], _dateAdapter: [], _dir: [], selectedChange: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], _activeDate: [], activeDate: [{\n            type: Input\n        }], activeDate: [], selected: [{\n            type: Input\n        }], selected: [], _selected: [], _selectedDate: [], minDate: [{\n            type: Input\n        }], minDate: [], _minDate: [], maxDate: [{\n            type: Input\n        }], maxDate: [], _maxDate: [], ngAfterContentInit: [], _dateSelected: [], _handleCalendarBodyKeydown: [], _init: [], _todayDate: [], _monthLabel: [], _firstWeekOffset: [], _focusActiveCell: [], _initWeekdays: [], _weekdays: [], _createWeekCells: [], _weeks: [], _shouldEnableDate: [], _getDateInCurrentMonth: [], _hasSameMonthAndYear: [], _getValidDateOrNull: [], _isRtl: [], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody, { static: false }]\n        }] });\n/** @nocollapse */\nMatMonthView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMonthView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody, { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst yearsPerPage = 24;\n/** @type {?} */\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatMultiYearView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        /**\n         * Emits when a new year is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected year. This doesn't imply a change on the selected date\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this multi-year view (everything other than the year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        let oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._init();\n    }\n    /**\n     * Initializes this multi-year view.\n     * @return {?}\n     */\n    _init() {\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n        // We want a range years such that we maximize the number of\n        // enabled dates visible at once. This prevents issues where the minimum year\n        // is the last item of a page OR the maximum year is the first item of a page.\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view.\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this._activeDate);\n        /** @type {?} */\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n        this._years = [];\n        for (let i = 0, row = []; i < yearsPerPage; i++) {\n            row.push(minYearOfPage + i);\n            if (row.length == yearsPerRow) {\n                this._years.push(row.map((/**\n                 * @param {?} year\n                 * @return {?}\n                 */\n                year => this._createCellForYear(year))));\n                row = [];\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Handles when a new year is selected.\n     * @param {?} year\n     * @return {?}\n     */\n    _yearSelected(year) {\n        this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n        /** @type {?} */\n        let month = this._dateAdapter.getMonth(this.activeDate);\n        /** @type {?} */\n        let daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in multi-year view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this._yearSelected(this._dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * @return {?}\n     */\n    _getActiveCell() {\n        return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Creates an MatCalendarCell for the given year.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    _createCellForYear(year) {\n        /** @type {?} */\n        let yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\n        return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n    }\n    /**\n     * Whether the given year is enabled.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    _shouldEnableYear(year) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n        /** @type {?} */\n        const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatMultiYearView.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatMultiYearView, selectors: [[\"mat-multi-year-view\"]], factory: function MatMultiYearView_Factory(t) { return new (t || MatMultiYearView)(ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(Directionality, 8)); }, viewQuery: function MatMultiYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMultiYearView\"], consts: 5, vars: 6, template: function MatMultiYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", _c12);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", _c13);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", _c17);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", _c18);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMultiYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._yearSelected($event); });\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatMultiYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵselect(4);\n        ɵngcc0.ɵɵproperty(\"rows\", ctx._years)(\"todayValue\", ctx._todayYear)(\"selectedValue\", ctx._selectedYear)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._getActiveCell());\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatMultiYearView, [{\n        type: Component,\n        args: [{ selector: 'mat-multi-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr></thead><tbody mat-calendar-body [rows]=\\\"_years\\\" [todayValue]=\\\"_todayYear\\\" [selectedValue]=\\\"_selectedYear\\\" [numCols]=\\\"4\\\" [cellAspectRatio]=\\\"4 / 7\\\" [activeCell]=\\\"_getActiveCell()\\\" (selectedValueChange)=\\\"_yearSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n                exportAs: 'matMultiYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ChangeDetectorRef }, { type: DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { constructor: [], _changeDetectorRef: [], _dateAdapter: [], _dir: [], selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], _activeDate: [], activeDate: [{\n            type: Input\n        }], activeDate: [], selected: [{\n            type: Input\n        }], selected: [], _selected: [], _selectedYear: [], minDate: [{\n            type: Input\n        }], minDate: [], _minDate: [], maxDate: [{\n            type: Input\n        }], maxDate: [], _maxDate: [], ngAfterContentInit: [], _init: [], _todayYear: [], _years: [], _yearSelected: [], _handleCalendarBodyKeydown: [], _getActiveCell: [], _focusActiveCell: [], _createCellForYear: [], _shouldEnableYear: [], _getValidDateOrNull: [], _isRtl: [], dateFilter: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody, { static: false }]\n        }] });\n/** @nocollapse */\nMatMultiYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMultiYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody, { static: false },] }]\n};\n/**\n * @template D\n * @param {?} dateAdapter\n * @param {?} date1\n * @param {?} date2\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n    /** @type {?} */\n    const year1 = dateAdapter.getYear(date1);\n    /** @type {?} */\n    const year2 = dateAdapter.getYear(date2);\n    /** @type {?} */\n    const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n    return Math.floor((year1 - startingYear) / yearsPerPage) ===\n        Math.floor((year2 - startingYear) / yearsPerPage);\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n * @template D\n * @param {?} dateAdapter\n * @param {?} activeDate\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n    /** @type {?} */\n    const activeYear = dateAdapter.getYear(activeDate);\n    return euclideanModulo((activeYear - getStartingYear(dateAdapter, minDate, maxDate)), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n * @template D\n * @param {?} dateAdapter\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n    /** @type {?} */\n    let startingYear = 0;\n    if (maxDate) {\n        /** @type {?} */\n        const maxYear = dateAdapter.getYear(maxDate);\n        startingYear = maxYear - yearsPerPage + 1;\n    }\n    else if (minDate) {\n        startingYear = dateAdapter.getYear(minDate);\n    }\n    return startingYear;\n}\n/**\n * Gets remainder that is non-negative, even if first number is negative\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction euclideanModulo(a, b) {\n    return (a % b + b) % b;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An internal component used to display a single year in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatYearView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateFormats\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        /**\n         * Emits when a new month is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected month. This doesn't imply a change on the selected date\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this year view (everything other than the year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        let oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedMonth = this._getMonthInCurrentYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._init();\n    }\n    /**\n     * Handles when a new month is selected.\n     * @param {?} month\n     * @return {?}\n     */\n    _monthSelected(month) {\n        /** @type {?} */\n        const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        this.monthSelected.emit(normalizedDate);\n        /** @type {?} */\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n        this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in year view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this._monthSelected(this._dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * Initializes this year view.\n     * @return {?}\n     */\n    _init() {\n        this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n        /** @type {?} */\n        let monthNames = this._dateAdapter.getMonthNames('short');\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map((/**\n         * @param {?} row\n         * @return {?}\n         */\n        row => row.map((/**\n         * @param {?} month\n         * @return {?}\n         */\n        month => this._createCellForMonth(month, monthNames[month])))));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _getMonthInCurrentYear(date) {\n        return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n            this._dateAdapter.getMonth(date) : null;\n    }\n    /**\n     * Creates an MatCalendarCell for the given month.\n     * @private\n     * @param {?} month\n     * @param {?} monthName\n     * @return {?}\n     */\n    _createCellForMonth(month, monthName) {\n        /** @type {?} */\n        let ariaLabel = this._dateAdapter.format(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1), this._dateFormats.display.monthYearA11yLabel);\n        return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month));\n    }\n    /**\n     * Whether the given month is enabled.\n     * @private\n     * @param {?} month\n     * @return {?}\n     */\n    _shouldEnableMonth(month) {\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this.activeDate);\n        if (month === undefined || month === null ||\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n        if (!this.dateFilter) {\n            return true;\n        }\n        /** @type {?} */\n        const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    _isYearAndMonthAfterMaxDate(year, month) {\n        if (this.maxDate) {\n            /** @type {?} */\n            const maxYear = this._dateAdapter.getYear(this.maxDate);\n            /** @type {?} */\n            const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    _isYearAndMonthBeforeMinDate(year, month) {\n        if (this.minDate) {\n            /** @type {?} */\n            const minYear = this._dateAdapter.getYear(this.minDate);\n            /** @type {?} */\n            const minMonth = this._dateAdapter.getMonth(this.minDate);\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatYearView.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatYearView, selectors: [[\"mat-year-view\"]], factory: function MatYearView_Factory(t) { return new (t || MatYearView)(ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(Directionality, 8)); }, viewQuery: function MatYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\" }, outputs: { selectedChange: \"selectedChange\", monthSelected: \"monthSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matYearView\"], consts: 5, vars: 8, template: function MatYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", _c12);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", _c13);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", _c17);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", _c19);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._monthSelected($event); });\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵselect(4);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._yearLabel)(\"rows\", ctx._months)(\"todayValue\", ctx._todayMonth)(\"selectedValue\", ctx._selectedMonth)(\"labelMinRequiredCells\", 2)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._dateAdapter.getMonth(ctx.activeDate));\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatYearView, [{\n        type: Component,\n        args: [{ selector: 'mat-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr></thead><tbody mat-calendar-body [label]=\\\"_yearLabel\\\" [rows]=\\\"_months\\\" [todayValue]=\\\"_todayMonth\\\" [selectedValue]=\\\"_selectedMonth\\\" [labelMinRequiredCells]=\\\"2\\\" [numCols]=\\\"4\\\" [cellAspectRatio]=\\\"4 / 7\\\" [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\" (selectedValueChange)=\\\"_monthSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n                exportAs: 'matYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { constructor: [], _changeDetectorRef: [], _dateFormats: [], _dateAdapter: [], _dir: [], selectedChange: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], _activeDate: [], activeDate: [{\n            type: Input\n        }], activeDate: [], selected: [{\n            type: Input\n        }], selected: [], _selected: [], _selectedMonth: [], minDate: [{\n            type: Input\n        }], minDate: [], _minDate: [], maxDate: [{\n            type: Input\n        }], maxDate: [], _maxDate: [], ngAfterContentInit: [], _monthSelected: [], _handleCalendarBodyKeydown: [], _init: [], _todayMonth: [], _yearLabel: [], _months: [], _focusActiveCell: [], _getMonthInCurrentYear: [], _createCellForMonth: [], _shouldEnableMonth: [], _isYearAndMonthAfterMaxDate: [], _isYearAndMonthBeforeMinDate: [], _getValidDateOrNull: [], _isRtl: [], dateFilter: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody, { static: false }]\n        }] });\n/** @nocollapse */\nMatYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody, { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default header for MatCalendar\n * @template D\n */\nclass MatCalendarHeader {\n    /**\n     * @param {?} _intl\n     * @param {?} calendar\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} changeDetectorRef\n     */\n    constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n        this._intl = _intl;\n        this.calendar = calendar;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this.calendar.stateChanges.subscribe((/**\n         * @return {?}\n         */\n        () => changeDetectorRef.markForCheck()));\n    }\n    /**\n     * The label for the current calendar view.\n     * @return {?}\n     */\n    get periodButtonText() {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter\n                .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                .toLocaleUpperCase();\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYearName(this.calendar.activeDate);\n        }\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view, and the last year is\n        // just yearsPerPage - 1 away.\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n        /** @type {?} */\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n        /** @type {?} */\n        const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n        return `${minYearOfPage} \\u2013 ${maxYearOfPage}`;\n    }\n    /**\n     * @return {?}\n     */\n    get periodButtonLabel() {\n        return this.calendar.currentView == 'month' ?\n            this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n    }\n    /**\n     * The label for the previous button.\n     * @return {?}\n     */\n    get prevButtonLabel() {\n        return {\n            'month': this._intl.prevMonthLabel,\n            'year': this._intl.prevYearLabel,\n            'multi-year': this._intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /**\n     * The label for the next button.\n     * @return {?}\n     */\n    get nextButtonLabel() {\n        return {\n            'month': this._intl.nextMonthLabel,\n            'year': this._intl.nextYearLabel,\n            'multi-year': this._intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /**\n     * Handles user clicks on the period label.\n     * @return {?}\n     */\n    currentPeriodClicked() {\n        this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /**\n     * Handles user clicks on the previous button.\n     * @return {?}\n     */\n    previousClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /**\n     * Handles user clicks on the next button.\n     * @return {?}\n     */\n    nextClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /**\n     * Whether the previous period button is enabled.\n     * @return {?}\n     */\n    previousEnabled() {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n        return !this.calendar.minDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n    /**\n     * Whether the next period button is enabled.\n     * @return {?}\n     */\n    nextEnabled() {\n        return !this.calendar.maxDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n    /**\n     * Whether the two dates represent the same view in the current view mode (month or year).\n     * @private\n     * @param {?} date1\n     * @param {?} date2\n     * @return {?}\n     */\n    _isSameView(date1, date2) {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n        }\n        // Otherwise we are in 'multi-year' view.\n        return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n    }\n}\nMatCalendarHeader.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatCalendarHeader, selectors: [[\"mat-calendar-header\"]], factory: function MatCalendarHeader_Factory(t) { return new (t || MatCalendarHeader)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                     * @return {?}\n                     */() => MatCalendar))), ɵngcc0.ɵɵdirectiveInject(DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef)); }, exportAs: [\"matCalendarHeader\"], ngContentSelectors: _c27, consts: 9, vars: 7, template: function MatCalendarHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", _c20);\n        ɵngcc0.ɵɵelementStart(1, \"div\", _c21);\n        ɵngcc0.ɵɵelementStart(2, \"button\", _c22);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_2_listener($event) { return ctx.currentPeriodClicked(); });\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelementStart(4, \"div\", _c23);\n        ɵngcc0.ɵɵstyling();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(5, \"div\", _c24);\n        ɵngcc0.ɵɵprojection(6);\n        ɵngcc0.ɵɵelementStart(7, \"button\", _c25);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_7_listener($event) { return ctx.previousClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(8, \"button\", _c26);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_8_listener($event) { return ctx.nextClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵselect(2);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.periodButtonLabel);\n        ɵngcc0.ɵɵselect(3);\n        ɵngcc0.ɵɵtextInterpolate(ctx.periodButtonText);\n        ɵngcc0.ɵɵselect(4);\n        ɵngcc0.ɵɵclassProp(\"mat-calendar-invert\", ctx.calendar.currentView != \"month\");\n        ɵngcc0.ɵɵstylingApply();\n        ɵngcc0.ɵɵselect(7);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.previousEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.prevButtonLabel);\n        ɵngcc0.ɵɵselect(8);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.nextEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.nextButtonLabel);\n    } }, directives: [ɵngcc2.MatButton, ɵngcc3.CdkAriaLive], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatCalendarHeader, [{\n        type: Component,\n        args: [{ selector: 'mat-calendar-header',\n                template: \"<div class=\\\"mat-calendar-header\\\"><div class=\\\"mat-calendar-controls\\\"><button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\" (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\" cdkAriaLive=\\\"polite\\\">{{periodButtonText}}<div class=\\\"mat-calendar-arrow\\\" [class.mat-calendar-invert]=\\\"calendar.currentView != 'month'\\\"></div></button><div class=\\\"mat-calendar-spacer\\\"></div><ng-content></ng-content><button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\" [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\" [attr.aria-label]=\\\"prevButtonLabel\\\"></button> <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\" [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\" [attr.aria-label]=\\\"nextButtonLabel\\\"></button></div></div>\",\n                exportAs: 'matCalendarHeader',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: MatCalendar, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatCalendar))]\n            }] }, { type: DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ChangeDetectorRef }]; }, { constructor: [], _intl: [], calendar: [], _dateAdapter: [], _dateFormats: [], periodButtonText: [], periodButtonLabel: [], prevButtonLabel: [], nextButtonLabel: [], currentPeriodClicked: [], previousClicked: [], nextClicked: [], previousEnabled: [], nextEnabled: [], _isSameView: [] });\n/** @nocollapse */\nMatCalendarHeader.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: MatCalendar, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatCalendar)),] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\n/**\n * A calendar that is used as part of the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatCalendar {\n    /**\n     * @param {?} _intl\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Used for scheduling that focus should be moved to the active cell on the next tick.\n         * We need to schedule it, rather than do it immediately, because we have to wait\n         * for Angular to re-evaluate the view children.\n         */\n        this._moveFocusOnNextTick = false;\n        /**\n         * Whether the calendar should be started in month or year view.\n         */\n        this.startView = 'month';\n        /**\n         * Emits when the currently selected date changes.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the year chosen in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits the month chosen in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits whenever there is a state change that the header may need to respond to.\n         */\n        this.stateChanges = new Subject();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._intlChanges = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            _changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * A date representing the period (month or year) to start the calendar in.\n     * @return {?}\n     */\n    get startAt() { return this._startAt; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set startAt(value) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     * @return {?}\n     */\n    get activeDate() { return this._clampedActiveDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Whether the calendar is in month view.\n     * @return {?}\n     */\n    get currentView() { return this._currentView; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set currentView(value) {\n        this._currentView = value;\n        this._moveFocusOnNextTick = true;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n        this.activeDate = this.startAt || this._dateAdapter.today();\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        if (this._moveFocusOnNextTick) {\n            this._moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n        if (change && !change.firstChange) {\n            /** @type {?} */\n            const view = this._getCurrentViewComponent();\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n                this._changeDetectorRef.detectChanges();\n                view._init();\n            }\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    focusActiveCell() {\n        this._getCurrentViewComponent()._focusActiveCell();\n    }\n    /**\n     * Updates today's date after an update of the active date\n     * @return {?}\n     */\n    updateTodaysDate() {\n        /** @type {?} */\n        let view = this.currentView == 'month' ? this.monthView :\n            (this.currentView == 'year' ? this.yearView : this.multiYearView);\n        view.ngAfterContentInit();\n    }\n    /**\n     * Handles date selection in the month view.\n     * @param {?} date\n     * @return {?}\n     */\n    _dateSelected(date) {\n        if (!this._dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    }\n    /**\n     * Handles year selection in the multiyear view.\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    _yearSelectedInMultiYearView(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Handles month selection in the year view.\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    _monthSelectedInYearView(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * @return {?}\n     */\n    _userSelected() {\n        this._userSelection.emit();\n    }\n    /**\n     * Handles year/month selection in the multi-year/year views.\n     * @param {?} date\n     * @param {?} view\n     * @return {?}\n     */\n    _goToDateInView(date, view) {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Returns the component instance that corresponds to the current calendar view.\n     * @private\n     * @return {?}\n     */\n    _getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\nMatCalendar.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatCalendar, selectors: [[\"mat-calendar\"]], factory: function MatCalendar_Factory(t) { return new (t || MatCalendar)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef)); }, viewQuery: function MatCalendar_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatMonthView, true);\n        ɵngcc0.ɵɵviewQuery(MatYearView, true);\n        ɵngcc0.ɵɵviewQuery(MatMultiYearView, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiYearView = _t.first);\n    } }, hostBindings: function MatCalendar_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c28);\n    } }, inputs: { startView: \"startView\", startAt: \"startAt\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", headerComponent: \"headerComponent\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", _userSelection: \"_userSelection\" }, exportAs: [\"matCalendar\"], features: [ɵngcc0.ɵɵNgOnChangesFeature()], consts: 5, vars: 5, template: function MatCalendar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendar_ng_template_0_Template, 0, 0, \"ng-template\", _c29);\n        ɵngcc0.ɵɵelementStart(1, \"div\", _c30);\n        ɵngcc0.ɵɵtemplate(2, MatCalendar_mat_month_view_2_Template, 1, 6, \"mat-month-view\", _c31);\n        ɵngcc0.ɵɵtemplate(3, MatCalendar_mat_year_view_3_Template, 1, 5, \"mat-year-view\", _c32);\n        ɵngcc0.ɵɵtemplate(4, MatCalendar_mat_multi_year_view_4_Template, 1, 5, \"mat-multi-year-view\", _c33);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._calendarHeaderPortal);\n        ɵngcc0.ɵɵselect(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.currentView);\n        ɵngcc0.ɵɵselect(2);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"month\");\n        ɵngcc0.ɵɵselect(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"year\");\n        ɵngcc0.ɵɵselect(4);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"multi-year\");\n    } }, directives: [ɵngcc4.CdkPortalOutlet, ɵngcc3.CdkMonitorFocus, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, MatMonthView,\n        MatYearView,\n        MatMultiYearView], styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:0}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-next-button,.mat-calendar-previous-button{position:relative}.mat-calendar-next-button::after,.mat-calendar-previous-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:'';margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-next-button,[dir=rtl] .mat-calendar-previous-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:'';position:absolute;top:0;left:-8px;right:-8px;height:1px}\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatCalendar, [{\n        type: Component,\n        args: [{ selector: 'mat-calendar',\n                template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template><div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\"><mat-month-view *ngSwitchCase=\\\"'month'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" [dateClass]=\\\"dateClass\\\" (selectedChange)=\\\"_dateSelected($event)\\\" (_userSelection)=\\\"_userSelected()\\\"></mat-month-view><mat-year-view *ngSwitchCase=\\\"'year'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" (monthSelected)=\\\"_monthSelectedInYearView($event)\\\" (selectedChange)=\\\"_goToDateInView($event, 'month')\\\"></mat-year-view><mat-multi-year-view *ngSwitchCase=\\\"'multi-year'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\" (selectedChange)=\\\"_goToDateInView($event, 'year')\\\"></mat-multi-year-view></div>\",\n                styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:0}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-next-button,.mat-calendar-previous-button{position:relative}.mat-calendar-next-button::after,.mat-calendar-previous-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:'';margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-next-button,[dir=rtl] .mat-calendar-previous-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:'';position:absolute;top:0;left:-8px;right:-8px;height:1px}\"],\n                host: {\n                    'class': 'mat-calendar'\n                },\n                exportAs: 'matCalendar',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ChangeDetectorRef }]; }, { constructor: [], _dateAdapter: [], _dateFormats: [], _changeDetectorRef: [], _moveFocusOnNextTick: [], startView: [{\n            type: Input\n        }], selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], stateChanges: [], _intlChanges: [], startAt: [{\n            type: Input\n        }], startAt: [], _startAt: [], selected: [{\n            type: Input\n        }], selected: [], _selected: [], minDate: [{\n            type: Input\n        }], minDate: [], _minDate: [], maxDate: [{\n            type: Input\n        }], maxDate: [], _maxDate: [], activeDate: [], activeDate: [], _clampedActiveDate: [], currentView: [], currentView: [], _currentView: [], ngAfterContentInit: [], _calendarHeaderPortal: [], ngAfterViewChecked: [], ngOnDestroy: [], ngOnChanges: [], focusActiveCell: [], updateTodaysDate: [], _dateSelected: [], _yearSelectedInMultiYearView: [], _monthSelectedInYearView: [], _userSelected: [], _goToDateInView: [], _getValidDateOrNull: [], _getCurrentViewComponent: [], headerComponent: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], monthView: [{\n            type: ViewChild,\n            args: [MatMonthView, { static: false }]\n        }], yearView: [{\n            type: ViewChild,\n            args: [MatYearView, { static: false }]\n        }], multiYearView: [{\n            type: ViewChild,\n            args: [MatMultiYearView, { static: false }]\n        }] });\n/** @nocollapse */\nMatCalendar.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\nMatCalendar.propDecorators = {\n    headerComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    monthView: [{ type: ViewChild, args: [MatMonthView, { static: false },] }],\n    yearView: [{ type: ViewChild, args: [MatYearView, { static: false },] }],\n    multiYearView: [{ type: ViewChild, args: [MatMultiYearView, { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material datepicker.\n * \\@docs-private\n * @type {?}\n */\nconst matDatepickerAnimations = {\n    /**\n     * Transforms the height of the datepicker's calendar.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * Fades in the content of the calendar.\n     */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n        // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate a unique ID for each datepicker instance.\n * @type {?}\n */\nlet datepickerUid = 0;\n/**\n * Injection token that determines the scroll handling while the calendar is open.\n * @type {?}\n */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n// Boilerplate for applying mixins to MatDatepickerContent.\n/**\n * \\@docs-private\n */\nclass MatDatepickerContentBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/** @type {?} */\nconst _MatDatepickerContentMixinBase = mixinColor(MatDatepickerContentBase);\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * \\@docs-private\n * @template D\n */\nclass MatDatepickerContent extends _MatDatepickerContentMixinBase {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        super(elementRef);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._calendar.focusActiveCell();\n    }\n}\nMatDatepickerContent.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerContent, selectors: [[\"mat-datepicker-content\"]], factory: function MatDatepickerContent_Factory(t) { return new (t || MatDatepickerContent)(ɵngcc0.ɵɵdirectiveInject(ElementRef)); }, viewQuery: function MatDatepickerContent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendar, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._calendar = _t.first);\n    } }, hostBindings: function MatDatepickerContent_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(2);\n        ɵngcc0.ɵɵelementHostAttrs(_c37);\n        ɵngcc0.ɵɵstyling();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@transformPanel\", \"enter\");\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-content-touch\", ctx.datepicker.touchUi);\n        ɵngcc0.ɵɵstylingApply();\n    } }, inputs: { color: \"color\" }, exportAs: [\"matDatepickerContent\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], consts: 1, vars: 11, template: function MatDatepickerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-calendar\", _c38);\n        ɵngcc0.ɵɵlistener(\"selectedChange\", function MatDatepickerContent_Template_mat_calendar_selectedChange_0_listener($event) { return ctx.datepicker.select($event); });\n        ɵngcc0.ɵɵlistener(\"yearSelected\", function MatDatepickerContent_Template_mat_calendar_yearSelected_0_listener($event) { return ctx.datepicker._selectYear($event); });\n        ɵngcc0.ɵɵlistener(\"monthSelected\", function MatDatepickerContent_Template_mat_calendar_monthSelected_0_listener($event) { return ctx.datepicker._selectMonth($event); });\n        ɵngcc0.ɵɵlistener(\"_userSelection\", function MatDatepickerContent_Template_mat_calendar__userSelection_0_listener($event) { return ctx.datepicker.close(); });\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx.datepicker.id)(\"ngClass\", ctx.datepicker.panelClass)(\"startAt\", ctx.datepicker.startAt)(\"startView\", ctx.datepicker.startView)(\"minDate\", ctx.datepicker._minDate)(\"maxDate\", ctx.datepicker._maxDate)(\"dateFilter\", ctx.datepicker._dateFilter)(\"headerComponent\", ctx.datepicker.calendarHeaderComponent)(\"selected\", ctx.datepicker._selected)(\"dateClass\", ctx.datepicker.dateClass)(\"@fadeInCalendar\", \"enter\");\n    } }, directives: [MatCalendar, ɵngcc3.CdkTrapFocus, ɵngcc1.NgClass], styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation:landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation:portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\"], encapsulation: 2, data: { animation: [\n            matDatepickerAnimations.transformPanel,\n            matDatepickerAnimations.fadeInCalendar,\n        ] }, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatDatepickerContent, [{\n        type: Component,\n        args: [{ selector: 'mat-datepicker-content',\n                template: \"<mat-calendar cdkTrapFocus [id]=\\\"datepicker.id\\\" [ngClass]=\\\"datepicker.panelClass\\\" [startAt]=\\\"datepicker.startAt\\\" [startView]=\\\"datepicker.startView\\\" [minDate]=\\\"datepicker._minDate\\\" [maxDate]=\\\"datepicker._maxDate\\\" [dateFilter]=\\\"datepicker._dateFilter\\\" [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\" [selected]=\\\"datepicker._selected\\\" [dateClass]=\\\"datepicker.dateClass\\\" [@fadeInCalendar]=\\\"'enter'\\\" (selectedChange)=\\\"datepicker.select($event)\\\" (yearSelected)=\\\"datepicker._selectYear($event)\\\" (monthSelected)=\\\"datepicker._selectMonth($event)\\\" (_userSelection)=\\\"datepicker.close()\\\"></mat-calendar>\",\n                styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation:landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation:portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\"],\n                host: {\n                    'class': 'mat-datepicker-content',\n                    '[@transformPanel]': '\"enter\"',\n                    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi'\n                },\n                animations: [\n                    matDatepickerAnimations.transformPanel,\n                    matDatepickerAnimations.fadeInCalendar,\n                ],\n                exportAs: 'matDatepickerContent',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['color']\n            }]\n    }], function () { return [{ type: ElementRef }]; }, { constructor: [], ngAfterViewInit: [], _calendar: [{\n            type: ViewChild,\n            args: [MatCalendar, { static: false }]\n        }] });\n/** @nocollapse */\nMatDatepickerContent.ctorParameters = () => [\n    { type: ElementRef }\n];\nMatDatepickerContent.propDecorators = {\n    _calendar: [{ type: ViewChild, args: [MatCalendar, { static: false },] }]\n};\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/**\n * Component responsible for managing the datepicker popup/dialog.\n * @template D\n */\nclass MatDatepicker {\n    /**\n     * @param {?} _dialog\n     * @param {?} _overlay\n     * @param {?} _ngZone\n     * @param {?} _viewContainerRef\n     * @param {?} scrollStrategy\n     * @param {?} _dateAdapter\n     * @param {?} _dir\n     * @param {?} _document\n     */\n    constructor(_dialog, _overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _document) {\n        this._dialog = _dialog;\n        this._overlay = _overlay;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._document = _document;\n        /**\n         * The view that the calendar should start in.\n         */\n        this.startView = 'month';\n        this._touchUi = false;\n        /**\n         * Emits selected year in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the datepicker has been opened.\n         */\n        this.openedStream = new EventEmitter();\n        /**\n         * Emits when the datepicker has been closed.\n         */\n        this.closedStream = new EventEmitter();\n        this._opened = false;\n        /**\n         * The id for the datepicker calendar.\n         */\n        this.id = `mat-datepicker-${datepickerUid++}`;\n        this._validSelected = null;\n        /**\n         * The element that was focused before the datepicker was opened.\n         */\n        this._focusedElementBeforeOpen = null;\n        /**\n         * Subscription to value changes in the associated input element.\n         */\n        this._inputSubscription = Subscription.EMPTY;\n        /**\n         * Emits when the datepicker is disabled.\n         */\n        this._disabledChange = new Subject();\n        /**\n         * Emits new selected date when selected date changes.\n         */\n        this._selectedChanged = new Subject();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * The date to open the calendar to initially.\n     * @return {?}\n     */\n    get startAt() {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set startAt(value) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * Color palette to use on the datepicker's calendar.\n     * @return {?}\n     */\n    get color() {\n        return this._color ||\n            (this._datepickerInput ? this._datepickerInput._getThemePalette() : undefined);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set color(value) {\n        this._color = value;\n    }\n    /**\n     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n     * than a popup and elements have more padding to allow for bigger touch targets.\n     * @return {?}\n     */\n    get touchUi() { return this._touchUi; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set touchUi(value) {\n        this._touchUi = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the datepicker pop-up should be disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled === undefined && this._datepickerInput ?\n            this._datepickerInput.disabled : !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._disabledChange.next(newValue);\n        }\n    }\n    /**\n     * Whether the calendar is open.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { value ? this.open() : this.close(); }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get _selected() { return this._validSelected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _selected(value) { this._validSelected = value; }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get _minDate() {\n        return this._datepickerInput && this._datepickerInput.min;\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get _maxDate() {\n        return this._datepickerInput && this._datepickerInput.max;\n    }\n    /**\n     * @return {?}\n     */\n    get _dateFilter() {\n        return this._datepickerInput && this._datepickerInput._dateFilter;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.close();\n        this._inputSubscription.unsubscribe();\n        this._disabledChange.complete();\n        if (this._popupRef) {\n            this._popupRef.dispose();\n            this._popupComponentRef = null;\n        }\n    }\n    /**\n     * Selects the given date\n     * @param {?} date\n     * @return {?}\n     */\n    select(date) {\n        /** @type {?} */\n        let oldValue = this._selected;\n        this._selected = date;\n        if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n            this._selectedChanged.next(date);\n        }\n    }\n    /**\n     * Emits the selected year in multiyear view\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    _selectYear(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Emits selected month in year view\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    _selectMonth(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param {?} input The datepicker input to register with this datepicker.\n     * @return {?}\n     */\n    _registerInput(input) {\n        if (this._datepickerInput) {\n            throw Error('A MatDatepicker can only be associated with a single input.');\n        }\n        this._datepickerInput = input;\n        this._inputSubscription =\n            this._datepickerInput._valueChange.subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            (value) => this._selected = value));\n    }\n    /**\n     * Open the calendar.\n     * @return {?}\n     */\n    open() {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this._datepickerInput) {\n            throw Error('Attempted to open an MatDatepicker with no associated input.');\n        }\n        if (this._document) {\n            this._focusedElementBeforeOpen = this._document.activeElement;\n        }\n        this.touchUi ? this._openAsDialog() : this._openAsPopup();\n        this._opened = true;\n        this.openedStream.emit();\n    }\n    /**\n     * Close the calendar.\n     * @return {?}\n     */\n    close() {\n        if (!this._opened) {\n            return;\n        }\n        if (this._popupRef && this._popupRef.hasAttached()) {\n            this._popupRef.detach();\n        }\n        if (this._dialogRef) {\n            this._dialogRef.close();\n            this._dialogRef = null;\n        }\n        if (this._calendarPortal && this._calendarPortal.isAttached) {\n            this._calendarPortal.detach();\n        }\n        /** @type {?} */\n        const completeClose = (/**\n         * @return {?}\n         */\n        () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this._focusedElementBeforeOpen = null;\n            }\n        });\n        if (this._focusedElementBeforeOpen &&\n            typeof this._focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this._focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        }\n        else {\n            completeClose();\n        }\n    }\n    /**\n     * Open the calendar as a dialog.\n     * @private\n     * @return {?}\n     */\n    _openAsDialog() {\n        // Usually this would be handled by `open` which ensures that we can only have one overlay\n        // open at a time, however since we reset the variables in async handlers some overlays\n        // may slip through if the user opens and closes multiple times in quick succession (e.g.\n        // by holding down the enter key).\n        if (this._dialogRef) {\n            this._dialogRef.close();\n        }\n        this._dialogRef = this._dialog.open(MatDatepickerContent, {\n            direction: this._dir ? this._dir.value : 'ltr',\n            viewContainerRef: this._viewContainerRef,\n            panelClass: 'mat-datepicker-dialog',\n        });\n        this._dialogRef.afterClosed().subscribe((/**\n         * @return {?}\n         */\n        () => this.close()));\n        this._dialogRef.componentInstance.datepicker = this;\n        this._setColor();\n    }\n    /**\n     * Open the calendar as a popup.\n     * @private\n     * @return {?}\n     */\n    _openAsPopup() {\n        if (!this._calendarPortal) {\n            this._calendarPortal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n        }\n        if (!this._popupRef) {\n            this._createPopup();\n        }\n        if (!this._popupRef.hasAttached()) {\n            this._popupComponentRef = this._popupRef.attach(this._calendarPortal);\n            this._popupComponentRef.instance.datepicker = this;\n            this._setColor();\n            // Update the position once the calendar has rendered.\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._popupRef.updatePosition();\n            }));\n        }\n    }\n    /**\n     * Create the popup.\n     * @private\n     * @return {?}\n     */\n    _createPopup() {\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this._createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'mat-overlay-transparent-backdrop',\n            direction: this._dir,\n            scrollStrategy: this._scrollStrategy(),\n            panelClass: 'mat-datepicker-popup',\n        });\n        this._popupRef = this._overlay.create(overlayConfig);\n        this._popupRef.overlayElement.setAttribute('role', 'dialog');\n        merge(this._popupRef.backdropClick(), this._popupRef.detachments(), this._popupRef.keydownEvents().pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // Closing on alt + up is only valid when there's an input associated with the datepicker.\n            return event.keyCode === ESCAPE ||\n                (this._datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n        })))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event) {\n                event.preventDefault();\n            }\n            this.close();\n        }));\n    }\n    /**\n     * Create the popup PositionStrategy.\n     * @private\n     * @return {?}\n     */\n    _createPopupPositionStrategy() {\n        return this._overlay.position()\n            .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())\n            .withTransformOriginOn('.mat-datepicker-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition()\n            .withPositions([\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'top'\n            },\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'bottom'\n            },\n            {\n                originX: 'end',\n                originY: 'bottom',\n                overlayX: 'end',\n                overlayY: 'top'\n            },\n            {\n                originX: 'end',\n                originY: 'top',\n                overlayX: 'end',\n                overlayY: 'bottom'\n            }\n        ]);\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Passes the current theme color along to the calendar overlay.\n     * @private\n     * @return {?}\n     */\n    _setColor() {\n        /** @type {?} */\n        const color = this.color;\n        if (this._popupComponentRef) {\n            this._popupComponentRef.instance.color = color;\n        }\n        if (this._dialogRef) {\n            this._dialogRef.componentInstance.color = color;\n        }\n    }\n}\nMatDatepicker.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatDatepicker, selectors: [[\"mat-datepicker\"]], factory: function MatDatepicker_Factory(t) { return new (t || MatDatepicker)(ɵngcc0.ɵɵdirectiveInject(MatDialog), ɵngcc0.ɵɵdirectiveInject(Overlay), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATEPICKER_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); }, inputs: { startView: \"startView\", startAt: \"startAt\", color: \"color\", touchUi: \"touchUi\", disabled: \"disabled\", opened: \"opened\", calendarHeaderComponent: \"calendarHeaderComponent\", panelClass: \"panelClass\", dateClass: \"dateClass\" }, outputs: { yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", openedStream: \"opened\", closedStream: \"closed\" }, exportAs: [\"matDatepicker\"], consts: 0, vars: 0, template: function MatDatepicker_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatDatepicker, [{\n        type: Component,\n        args: [{ selector: 'mat-datepicker',\n                template: '',\n                exportAs: 'matDatepicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: MatDialog }, { type: Overlay }, { type: NgZone }, { type: ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n            }] }, { type: DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { constructor: [], _dialog: [], _overlay: [], _ngZone: [], _viewContainerRef: [], _dateAdapter: [], _dir: [], _document: [], startView: [{\n            type: Input\n        }], _touchUi: [], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], _opened: [], id: [], _validSelected: [], _focusedElementBeforeOpen: [], _inputSubscription: [], _disabledChange: [], _selectedChanged: [], _scrollStrategy: [], startAt: [{\n            type: Input\n        }], startAt: [], _startAt: [], color: [{\n            type: Input\n        }], color: [], _color: [], touchUi: [{\n            type: Input\n        }], touchUi: [], disabled: [{\n            type: Input\n        }], disabled: [], _disabled: [], opened: [{\n            type: Input\n        }], opened: [], _selected: [], _selected: [], _minDate: [], _maxDate: [], _dateFilter: [], ngOnDestroy: [], _popupComponentRef: [], select: [], _selectYear: [], _selectMonth: [], _registerInput: [], _datepickerInput: [], open: [], close: [], _dialogRef: [], _openAsDialog: [], _openAsPopup: [], _calendarPortal: [], _createPopup: [], _popupRef: [], _createPopupPositionStrategy: [], _getValidDateOrNull: [], _setColor: [], calendarHeaderComponent: [{\n            type: Input\n        }], panelClass: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }] });\n/** @nocollapse */\nMatDatepicker.ctorParameters = () => [\n    { type: MatDialog },\n    { type: Overlay },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATEPICKER_SCROLL_STRATEGY,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatDatepicker.propDecorators = {\n    calendarHeaderComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    color: [{ type: Input }],\n    touchUi: [{ type: Input }],\n    disabled: [{ type: Input }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    panelClass: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    openedStream: [{ type: Output, args: ['opened',] }],\n    closedStream: [{ type: Output, args: ['closed',] }],\n    opened: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatDatepickerInput)),\n    multi: true\n};\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatDatepickerInput)),\n    multi: true\n};\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n * @template D\n */\nclass MatDatepickerInputEvent {\n    /**\n     * @param {?} target\n     * @param {?} targetElement\n     */\n    constructor(target, targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n}\n/**\n * Directive used to connect an input to a MatDatepicker.\n * @template D\n */\nclass MatDatepickerInput {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} _formField\n     */\n    constructor(_elementRef, _dateAdapter, _dateFormats, _formField) {\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._formField = _formField;\n        /**\n         * Emits when a `change` event is fired on this `<input>`.\n         */\n        this.dateChange = new EventEmitter();\n        /**\n         * Emits when an `input` event is fired on this `<input>`.\n         */\n        this.dateInput = new EventEmitter();\n        /**\n         * Emits when the value changes (either due to user input or programmatic change).\n         */\n        this._valueChange = new EventEmitter();\n        /**\n         * Emits when the disabled state has changed\n         */\n        this._disabledChange = new EventEmitter();\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._cvaOnChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._validatorOnChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._datepickerSubscription = Subscription.EMPTY;\n        this._localeSubscription = Subscription.EMPTY;\n        /**\n         * The form control validator for whether the input parses.\n         */\n        this._parseValidator = (/**\n         * @return {?}\n         */\n        () => {\n            return this._lastValueValid ?\n                null : { 'matDatepickerParse': { 'text': this._elementRef.nativeElement.value } };\n        });\n        /**\n         * The form control validator for the min date.\n         */\n        this._minValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return (!this.min || !controlValue ||\n                this._dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n                null : { 'matDatepickerMin': { 'min': this.min, 'actual': controlValue } };\n        });\n        /**\n         * The form control validator for the max date.\n         */\n        this._maxValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return (!this.max || !controlValue ||\n                this._dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n                null : { 'matDatepickerMax': { 'max': this.max, 'actual': controlValue } };\n        });\n        /**\n         * The form control validator for the date filter.\n         */\n        this._filterValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return !this._dateFilter || !controlValue || this._dateFilter(controlValue) ?\n                null : { 'matDatepickerFilter': true };\n        });\n        /**\n         * The combined form control validator for this input.\n         */\n        this._validator = Validators.compose([this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\n        /**\n         * Whether the last value set on the input was valid.\n         */\n        this._lastValueValid = false;\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.value = this.value;\n        }));\n    }\n    /**\n     * The datepicker that this input is associated with.\n     * @param {?} value\n     * @return {?}\n     */\n    set matDatepicker(value) {\n        if (!value) {\n            return;\n        }\n        this._datepicker = value;\n        this._datepicker._registerInput(this);\n        this._datepickerSubscription.unsubscribe();\n        this._datepickerSubscription = this._datepicker._selectedChanged.subscribe((/**\n         * @param {?} selected\n         * @return {?}\n         */\n        (selected) => {\n            this.value = selected;\n            this._cvaOnChange(selected);\n            this._onTouched();\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n            this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }));\n    }\n    /**\n     * Function that can be used to filter out dates within the datepicker.\n     * @param {?} value\n     * @return {?}\n     */\n    set matDatepickerFilter(value) {\n        this._dateFilter = value;\n        this._validatorOnChange();\n    }\n    /**\n     * The value of the input.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        value = this._dateAdapter.deserialize(value);\n        this._lastValueValid = !value || this._dateAdapter.isValid(value);\n        value = this._getValidDateOrNull(value);\n        /** @type {?} */\n        const oldDate = this.value;\n        this._value = value;\n        this._formatValue(value);\n        if (!this._dateAdapter.sameDate(oldDate, value)) {\n            this._valueChange.emit(value);\n        }\n    }\n    /**\n     * The minimum valid date.\n     * @return {?}\n     */\n    get min() { return this._min; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set min(value) {\n        this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    /**\n     * The maximum valid date.\n     * @return {?}\n     */\n    get max() { return this._max; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set max(value) {\n        this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    /**\n     * Whether the datepicker-input is disabled.\n     * @return {?}\n     */\n    get disabled() { return !!this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this._disabledChange.emit(newValue);\n        }\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        if (newValue && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._datepickerSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this._valueChange.complete();\n        this._disabledChange.complete();\n    }\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return this._validator ? this._validator(c) : null;\n    }\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\n     * @return {?}\n     */\n    getPopupConnectionElementRef() {\n        return this.getConnectedOverlayOrigin();\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return {?} The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._cvaOnChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        /** @type {?} */\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n        if (this._datepicker && isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n            this._datepicker.open();\n            event.preventDefault();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    _onInput(value) {\n        /** @type {?} */\n        let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n        this._lastValueValid = !date || this._dateAdapter.isValid(date);\n        date = this._getValidDateOrNull(date);\n        if (!this._dateAdapter.sameDate(date, this._value)) {\n            this._value = date;\n            this._cvaOnChange(date);\n            this._valueChange.emit(date);\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n        else {\n            this._validatorOnChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onChange() {\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /**\n     * Returns the palette used by the input's form field, if any.\n     * @return {?}\n     */\n    _getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /**\n     * Handles blur events on the input.\n     * @return {?}\n     */\n    _onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this._formatValue(this.value);\n        }\n        this._onTouched();\n    }\n    /**\n     * Formats a value and sets it on the input element.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _formatValue(value) {\n        this._elementRef.nativeElement.value =\n            value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\nMatDatepickerInput.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerInput, selectors: [[\"input\", \"matDatepicker\", \"\"]], factory: function MatDatepickerInput_Factory(t) { return new (t || MatDatepickerInput)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(MatFormField, 8)); }, hostBindings: function MatDatepickerInput_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(4);\n        ɵngcc0.ɵɵlistener(\"input\", function MatDatepickerInput_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); });\n        ɵngcc0.ɵɵlistener(\"change\", function MatDatepickerInput_change_HostBindingHandler($event) { return ctx._onChange(); });\n        ɵngcc0.ɵɵlistener(\"blur\", function MatDatepickerInput_blur_HostBindingHandler($event) { return ctx._onBlur(); });\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatDatepickerInput_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); });\n        ɵngcc0.ɵɵelementHostAttrs(_c39);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"aria-owns\", (ctx._datepicker == null ? null : ctx._datepicker.opened) && ctx._datepicker.id || null)(\"min\", ctx.min ? ctx._dateAdapter.toIso8601(ctx.min) : null)(\"max\", ctx.max ? ctx._dateAdapter.toIso8601(ctx.max) : null);\n    } }, inputs: { value: \"value\", matDatepicker: \"matDatepicker\", matDatepickerFilter: \"matDatepickerFilter\", min: \"min\", max: \"max\", disabled: \"disabled\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, exportAs: [\"matDatepickerInput\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_DATEPICKER_VALUE_ACCESSOR,\n            MAT_DATEPICKER_VALIDATORS,\n            { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n        ])] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatDatepickerInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matDatepicker]',\n                providers: [\n                    MAT_DATEPICKER_VALUE_ACCESSOR,\n                    MAT_DATEPICKER_VALIDATORS,\n                    { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n                ],\n                host: {\n                    'aria-haspopup': 'dialog',\n                    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n                    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n                    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)'\n                },\n                exportAs: 'matDatepickerInput'\n            }]\n    }], function () { return [{ type: ElementRef }, { type: DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: MatFormField, decorators: [{\n                type: Optional\n            }] }]; }, { constructor: [], _elementRef: [], _dateAdapter: [], _dateFormats: [], _formField: [], dateChange: [{\n            type: Output\n        }], dateInput: [{\n            type: Output\n        }], _valueChange: [], _disabledChange: [], _onTouched: [], _cvaOnChange: [], _validatorOnChange: [], _datepickerSubscription: [], _localeSubscription: [], _parseValidator: [], _minValidator: [], _maxValidator: [], _filterValidator: [], _validator: [], _lastValueValid: [], value: [{\n            type: Input\n        }], value: [], matDatepicker: [{\n            type: Input\n        }], _datepicker: [], matDatepickerFilter: [{\n            type: Input\n        }], _dateFilter: [], _value: [], min: [{\n            type: Input\n        }], min: [], _min: [], max: [{\n            type: Input\n        }], max: [], _max: [], disabled: [{\n            type: Input\n        }], disabled: [], _disabled: [], ngOnDestroy: [], registerOnValidatorChange: [], validate: [], getPopupConnectionElementRef: [], getConnectedOverlayOrigin: [], writeValue: [], registerOnChange: [], registerOnTouched: [], setDisabledState: [], _onKeydown: [], _onInput: [], _onChange: [], _getThemePalette: [], _onBlur: [], _formatValue: [], _getValidDateOrNull: [] });\n/** @nocollapse */\nMatDatepickerInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: MatFormField, decorators: [{ type: Optional }] }\n];\nMatDatepickerInput.propDecorators = {\n    matDatepicker: [{ type: Input }],\n    matDatepickerFilter: [{ type: Input }],\n    value: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    disabled: [{ type: Input }],\n    dateChange: [{ type: Output }],\n    dateInput: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Can be used to override the icon of a `matDatepickerToggle`.\n */\nclass MatDatepickerToggleIcon {\n}\nMatDatepickerToggleIcon.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerToggleIcon, selectors: [[\"\", \"matDatepickerToggleIcon\", \"\"]], factory: function MatDatepickerToggleIcon_Factory(t) { return new (t || MatDatepickerToggleIcon)(); } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatDatepickerToggleIcon, [{\n        type: Directive,\n        args: [{\n                selector: '[matDatepickerToggleIcon]'\n            }]\n    }], null, null);\n/**\n * @template D\n */\nclass MatDatepickerToggle {\n    /**\n     * @param {?} _intl\n     * @param {?} _changeDetectorRef\n     * @param {?} defaultTabIndex\n     */\n    constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._stateChanges = Subscription.EMPTY;\n        /** @type {?} */\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n    /**\n     * Whether the toggle button is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        if (this._disabled === undefined && this.datepicker) {\n            return this.datepicker.disabled;\n        }\n        return !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['datepicker']) {\n            this._watchStateChanges();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.unsubscribe();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._watchStateChanges();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _open(event) {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _watchStateChanges() {\n        /** @type {?} */\n        const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : of();\n        /** @type {?} */\n        const inputDisabled = this.datepicker && this.datepicker._datepickerInput ?\n            this.datepicker._datepickerInput._disabledChange : of();\n        /** @type {?} */\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            of();\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerDisabled, inputDisabled, datepickerToggled).subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n}\nMatDatepickerToggle.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerToggle, selectors: [[\"mat-datepicker-toggle\"]], factory: function MatDatepickerToggle_Factory(t) { return new (t || MatDatepickerToggle)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex')); }, contentQueries: function MatDatepickerToggle_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDatepickerToggleIcon, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n    } }, viewQuery: function MatDatepickerToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c40, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._button = _t.first);\n    } }, hostBindings: function MatDatepickerToggle_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(4);\n        ɵngcc0.ɵɵlistener(\"focus\", function MatDatepickerToggle_focus_HostBindingHandler($event) { return ctx._button.focus(); });\n        ɵngcc0.ɵɵelementHostAttrs(_c41);\n        ɵngcc0.ɵɵstyling();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", 0 - 1);\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-toggle-active\", ctx.datepicker && ctx.datepicker.opened);\n        ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx.datepicker && ctx.datepicker.color === \"accent\");\n        ɵngcc0.ɵɵclassProp(\"mat-warn\", ctx.datepicker && ctx.datepicker.color === \"warn\");\n        ɵngcc0.ɵɵstylingApply();\n    } }, inputs: { tabIndex: \"tabIndex\", disabled: \"disabled\", datepicker: [\"for\", \"datepicker\"], disableRipple: \"disableRipple\" }, exportAs: [\"matDatepickerToggle\"], features: [ɵngcc0.ɵɵNgOnChangesFeature()], ngContentSelectors: _c48, consts: 4, vars: 5, template: function MatDatepickerToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c47);\n        ɵngcc0.ɵɵelementStart(0, \"button\", _c42, _c43);\n        ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerToggle_Template_button_click_0_listener($event) { return ctx._open($event); });\n        ɵngcc0.ɵɵtemplate(2, MatDatepickerToggle__svg_svg_2_Template, 2, 0, \"svg\", _c44);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"disableRipple\", ctx.disableRipple);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.openCalendarLabel)(\"tabindex\", ctx.disabled ? 0 - 1 : ctx.tabIndex);\n        ɵngcc0.ɵɵselect(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._customIcon);\n    } }, directives: [ɵngcc2.MatButton, ɵngcc1.NgIf], styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatDatepickerToggle, [{\n        type: Component,\n        args: [{ selector: 'mat-datepicker-toggle',\n                template: \"<button #button mat-icon-button type=\\\"button\\\" aria-haspopup=\\\"dialog\\\" [attr.aria-label]=\\\"_intl.openCalendarLabel\\\" [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\" [disabled]=\\\"disabled\\\" [disableRipple]=\\\"disableRipple\\\" (click)=\\\"_open($event)\\\"><svg *ngIf=\\\"!_customIcon\\\" class=\\\"mat-datepicker-toggle-default-icon\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" fill=\\\"currentColor\\\" focusable=\\\"false\\\"><path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/></svg><ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content></button>\",\n                styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\"],\n                host: {\n                    'class': 'mat-datepicker-toggle',\n                    // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n                    // consumer may have provided, while still being able to receive focus.\n                    '[attr.tabindex]': '-1',\n                    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n                    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n                    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n                    '(focus)': '_button.focus()'\n                },\n                exportAs: 'matDatepickerToggle',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { constructor: [], _intl: [], _changeDetectorRef: [], _stateChanges: [], tabIndex: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], disabled: [], _disabled: [], ngOnChanges: [], ngOnDestroy: [], ngAfterContentInit: [], _open: [], _watchStateChanges: [], datepicker: [{\n            type: Input,\n            args: ['for']\n        }], disableRipple: [{\n            type: Input\n        }], _customIcon: [{\n            type: ContentChild,\n            args: [MatDatepickerToggleIcon, { static: false }]\n        }], _button: [{\n            type: ViewChild,\n            args: ['button', { static: false }]\n        }] });\n/** @nocollapse */\nMatDatepickerToggle.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatDatepickerToggle.propDecorators = {\n    datepicker: [{ type: Input, args: ['for',] }],\n    tabIndex: [{ type: Input }],\n    disabled: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    _customIcon: [{ type: ContentChild, args: [MatDatepickerToggleIcon, { static: false },] }],\n    _button: [{ type: ViewChild, args: ['button', { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDatepickerModule {\n}\nMatDatepickerModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: MatDatepickerModule });\nMatDatepickerModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function MatDatepickerModule_Factory(t) { return new (t || MatDatepickerModule)(); }, providers: [\n        MatDatepickerIntl,\n        MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n    ], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatDialogModule,\n            OverlayModule,\n            A11yModule,\n            PortalModule,\n        ]] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(MatDatepickerModule, { declarations: function () { return [MatCalendar,\n        MatCalendarBody,\n        MatDatepicker,\n        MatDatepickerContent,\n        MatDatepickerInput,\n        MatDatepickerToggle,\n        MatDatepickerToggleIcon,\n        MatMonthView,\n        MatYearView,\n        MatMultiYearView,\n        MatCalendarHeader]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatDialogModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule]; }, exports: function () { return [MatCalendar,\n        MatCalendarBody,\n        MatDatepicker,\n        MatDatepickerContent,\n        MatDatepickerInput,\n        MatDatepickerToggle,\n        MatDatepickerToggleIcon,\n        MatMonthView,\n        MatYearView,\n        MatMultiYearView,\n        MatCalendarHeader]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatDatepickerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatDialogModule,\n                    OverlayModule,\n                    A11yModule,\n                    PortalModule,\n                ],\n                exports: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                ],\n                declarations: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                ],\n                providers: [\n                    MatDatepickerIntl,\n                    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n                ],\n                entryComponents: [\n                    MatDatepickerContent,\n                    MatCalendarHeader,\n                ]\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatMultiYearView, yearsPerPage, yearsPerRow, MatDatepickerModule, MatCalendarHeader, MatCalendar, MatCalendarCell, MatCalendarBody, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MatDatepickerContent, MatDatepicker, matDatepickerAnimations, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, MatDatepickerInputEvent, MatDatepickerInput, MatDatepickerIntl, MatDatepickerToggleIcon, MatDatepickerToggle, MatMonthView, MatYearView };\n\n//# sourceMappingURL=datepicker.js.map","export const MASK_FLAGS = ['C', '&', 'a', 'A', '?', 'L', '9', '0', '#'];\n\nexport const KEYS = {\n  Ctrl: 17,\n  Z: 90,\n  Y: 89,\n  X: 88,\n  BACKSPACE: 8,\n  DELETE: 46,\n};\n\nexport class MaskHelper {\n  private cursorPrivate;\n  public get cursor() {\n    return this.cursorPrivate;\n  }\n  public data: boolean;\n\n  public parseValueByMask(value, maskOptions, cursor): string {\n    let inputValue: string = value;\n    const mask: string = maskOptions.format;\n    const literals: Map<number, string> = this.getMaskLiterals(mask);\n    const literalKeys: number[] = Array.from(literals.keys());\n    const nonLiteralIndeces: number[] = this.getNonLiteralIndeces(mask, literalKeys);\n\n    if (inputValue.length < mask.length) {\n      // BACKSPACE, DELETE\n      if (inputValue === '' && cursor === -1) {\n        this.cursorPrivate = 0;\n        return this.parseValueByMaskOnInit(value, maskOptions);\n      } // workaround for IE 'x' button\n\n      if (nonLiteralIndeces.indexOf(cursor + 1) !== -1) {\n        inputValue = this.insertCharAt(inputValue, cursor + 1, maskOptions.promptChar);\n        this.cursorPrivate = cursor + 1;\n      } else {\n        inputValue = this.insertCharAt(inputValue, cursor + 1, mask[cursor + 1]);\n        this.cursorPrivate = cursor + 1;\n        for (let i = this.cursorPrivate; i < 0; i--) {\n          if (literalKeys.indexOf(this.cursorPrivate) !== -1) {\n            this.cursorPrivate--;\n          } else {\n            break;\n          }\n        }\n      }\n    } else {\n      const char = inputValue[cursor];\n      let isCharValid = this.validateCharOnPostion(char, cursor, mask);\n      if (nonLiteralIndeces.indexOf(cursor) !== -1) {\n        inputValue = this.replaceCharAt(inputValue, cursor, '');\n        if (isCharValid) {\n          inputValue = this.replaceCharAt(inputValue, cursor, char);\n          this.cursorPrivate = cursor + 1;\n        } else {\n          this.cursorPrivate = cursor;\n        }\n      } else {\n        inputValue = this.replaceCharAt(inputValue, cursor, '');\n        this.cursorPrivate = ++cursor;\n        for (let i = cursor; i < mask.length; i++) {\n          if (literalKeys.indexOf(this.cursorPrivate) !== -1) {\n            this.cursorPrivate = ++cursor;\n          } else {\n            isCharValid = this.validateCharOnPostion(char, cursor, mask);\n            if (isCharValid) {\n              inputValue = this.replaceCharAt(inputValue, cursor, char);\n              this.cursorPrivate = ++cursor;\n              break;\n            } else {\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    return inputValue;\n  }\n\n  public parseMask(maskOptions): string {\n    let outputVal = '';\n    const mask: string = maskOptions.format;\n    const literals: Map<number, string> = this.getMaskLiterals(mask);\n\n    for (const maskSym of mask) {\n      outputVal += maskOptions.promptChar;\n    }\n\n    literals.forEach((val: string, key: number) => {\n      outputVal = this.replaceCharAt(outputVal, key, val);\n    });\n\n    return outputVal;\n  }\n\n  public parseValueByMaskOnInit(inputVal, maskOptions): string {\n    let outputVal = '';\n    let value = '';\n    const mask: string = maskOptions.format;\n    const literals: Map<number, string> = this.getMaskLiterals(mask);\n    const literalKeys: number[] = Array.from(literals.keys());\n    const nonLiteralIndeces: number[] = this.getNonLiteralIndeces(mask, literalKeys);\n    const literalValues: string[] = Array.from(literals.values());\n\n    if (inputVal != null) {\n      value = inputVal.toString();\n    }\n\n    for (const maskSym of mask) {\n      outputVal += maskOptions.promptChar;\n    }\n\n    literals.forEach((val: string, key: number) => {\n      outputVal = this.replaceCharAt(outputVal, key, val);\n    });\n\n    if (!value) {\n      return outputVal;\n    }\n\n    const nonLiteralValues: string[] = this.getNonLiteralValues(value, literalValues);\n\n    for (let i = 0; i < nonLiteralValues.length; i++) {\n      const char = nonLiteralValues[i];\n      const isCharValid = this.validateCharOnPostion(char, nonLiteralIndeces[i], mask);\n\n      if (!isCharValid && char !== maskOptions.promptChar) {\n        nonLiteralValues[i] = maskOptions.promptChar;\n      }\n    }\n\n    if (nonLiteralValues.length > nonLiteralIndeces.length) {\n      nonLiteralValues.splice(nonLiteralIndeces.length);\n    }\n\n    let pos = 0;\n    for (const nonLiteralValue of nonLiteralValues) {\n      const char = nonLiteralValue;\n      outputVal = this.replaceCharAt(outputVal, nonLiteralIndeces[pos++], char);\n    }\n\n    return outputVal;\n  }\n\n  public restoreValueFromMask(value, maskOptions): string {\n    let outputVal = '';\n    const mask: string = maskOptions.format;\n    const literals: Map<number, string> = this.getMaskLiterals(mask);\n    const literalValues: string[] = Array.from(literals.values());\n\n    for (const val of value) {\n      if (literalValues.indexOf(val) === -1) {\n        if (val !== maskOptions.promptChar) {\n          outputVal += val;\n        }\n      }\n    }\n\n    return outputVal;\n  }\n\n  public parseValueByMaskUponSelection(value, maskOptions, cursor, selection): string {\n    let isCharValid: boolean;\n    let inputValue: string = value;\n    const char: string = inputValue[cursor];\n    const mask: string = maskOptions.format;\n    const literals: Map<number, string> = this.getMaskLiterals(mask);\n    const literalKeys: number[] = Array.from(literals.keys());\n    const nonLiteralIndeces: number[] = this.getNonLiteralIndeces(mask, literalKeys);\n\n    if (!this.data) {\n      this.cursorPrivate = cursor < 0 ? ++cursor : cursor;\n      if (nonLiteralIndeces.indexOf(this.cursorPrivate) !== -1) {\n        isCharValid = this.validateCharOnPostion(char, this.cursorPrivate, mask);\n        inputValue = isCharValid\n          ? this.replaceCharAt(inputValue, this.cursorPrivate++, char)\n          : (inputValue = this.replaceCharAt(inputValue, this.cursorPrivate++, maskOptions.promptChar));\n        selection--;\n        if (selection > 0) {\n          for (let i = 0; i < selection; i++) {\n            cursor++;\n            inputValue =\n              nonLiteralIndeces.indexOf(cursor) !== -1\n                ? this.insertCharAt(inputValue, cursor, maskOptions.promptChar)\n                : this.insertCharAt(inputValue, cursor, mask[cursor]);\n          }\n        }\n      } else {\n        inputValue = this.replaceCharAt(inputValue, this.cursorPrivate, mask[this.cursorPrivate]);\n        this.cursorPrivate++;\n        selection--;\n        let isMarked = false;\n        if (selection > 0) {\n          cursor = this.cursorPrivate;\n          for (let i = 0; i < selection; i++) {\n            if (nonLiteralIndeces.indexOf(cursor) !== -1) {\n              isCharValid = this.validateCharOnPostion(char, cursor, mask);\n              if (isCharValid && !isMarked) {\n                inputValue = this.insertCharAt(inputValue, cursor, char);\n                cursor++;\n                this.cursorPrivate++;\n                isMarked = true;\n              } else {\n                inputValue = this.insertCharAt(inputValue, cursor, maskOptions.promptChar);\n                cursor++;\n              }\n            } else {\n              inputValue = this.insertCharAt(inputValue, cursor, mask[cursor]);\n              if (cursor === this.cursorPrivate) {\n                this.cursorPrivate++;\n              }\n              cursor++;\n            }\n          }\n        }\n      }\n    } else {\n      if (inputValue === '' && cursor === -1) {\n        this.cursorPrivate = 0;\n        return this.parseValueByMaskOnInit(value, maskOptions);\n      } // workaround for IE 'x' button\n\n      if (this.cursorPrivate < 0) {\n        this.cursorPrivate++;\n        cursor++;\n      }\n      cursor++;\n      this.cursorPrivate = cursor;\n      for (let i = 0; i < selection; i++) {\n        if (nonLiteralIndeces.indexOf(cursor) !== -1) {\n          inputValue = this.insertCharAt(inputValue, cursor, maskOptions.promptChar);\n          cursor++;\n        } else {\n          inputValue = this.insertCharAt(inputValue, cursor, mask[cursor]);\n          cursor++;\n        }\n      }\n    }\n\n    return inputValue;\n  }\n\n  public parseValueByMaskUponCopyPaste(value, maskOptions, cursor, clipboardData, selection): string {\n    let inputValue: string = value;\n    const mask: string = maskOptions.format;\n    const literals: Map<number, string> = this.getMaskLiterals(mask);\n    const literalKeys: number[] = Array.from(literals.keys());\n    const nonLiteralIndeces: number[] = this.getNonLiteralIndeces(mask, literalKeys);\n\n    const selectionEnd = cursor + selection;\n\n    this.cursorPrivate = cursor;\n    for (const clipboardSym of clipboardData) {\n      const char = clipboardSym;\n\n      if (this.cursorPrivate > mask.length) {\n        return inputValue;\n      }\n\n      if (nonLiteralIndeces.indexOf(this.cursorPrivate) !== -1) {\n        const isCharValid = this.validateCharOnPostion(char, this.cursorPrivate, mask);\n        if (isCharValid) {\n          inputValue = this.replaceCharAt(inputValue, this.cursorPrivate++, char);\n        }\n      } else {\n        for (let i = cursor; i < mask.length; i++) {\n          if (literalKeys.indexOf(this.cursorPrivate) !== -1) {\n            this.cursorPrivate++;\n          } else {\n            const isCharValid = this.validateCharOnPostion(char, this.cursorPrivate, mask);\n            if (isCharValid) {\n              inputValue = this.replaceCharAt(inputValue, this.cursorPrivate++, char);\n            }\n            break;\n          }\n        }\n      }\n\n      selection--;\n    }\n\n    if (selection > 0) {\n      for (let i = this.cursorPrivate; i < selectionEnd; i++) {\n        if (literalKeys.indexOf(this.cursorPrivate) !== -1) {\n          this.cursorPrivate++;\n        } else {\n          inputValue = this.replaceCharAt(inputValue, this.cursorPrivate++, maskOptions.promptChar);\n        }\n      }\n    }\n\n    return inputValue;\n  }\n\n  private validateCharOnPostion(inputChar: string, position: number, mask: string): boolean {\n    let regex: RegExp;\n    let isValid: boolean;\n    const letterOrDigitRegEx = '[\\\\d\\\\u00C0-\\\\u1FFF\\\\u2C00-\\\\uD7FFa-zA-Z]';\n    const letterDigitOrSpaceRegEx = '[\\\\d\\\\u00C0-\\\\u1FFF\\\\u2C00-\\\\uD7FFa-zA-Z\\\\u0020]';\n    const letterRegEx = '[\\\\u00C0-\\\\u1FFF\\\\u2C00-\\\\uD7FFa-zA-Z]';\n    const letteSpaceRegEx = '[\\\\u00C0-\\\\u1FFF\\\\u2C00-\\\\uD7FFa-zA-Z\\\\u0020]';\n    const digitRegEx = '[\\\\d]';\n    const digitSpaceRegEx = '[\\\\d\\\\u0020]';\n    const digitSpecialRegEx = '[\\\\d-\\\\+]';\n\n    switch (mask.charAt(position)) {\n      case 'C':\n        isValid = inputChar !== '';\n        break;\n      case '&':\n        regex = new RegExp('[\\\\u0020]');\n        isValid = !regex.test(inputChar);\n        break;\n      case 'a':\n        regex = new RegExp(letterDigitOrSpaceRegEx);\n        isValid = regex.test(inputChar);\n        break;\n      case 'A':\n        regex = new RegExp(letterOrDigitRegEx);\n        isValid = regex.test(inputChar);\n        break;\n      case '?':\n        regex = new RegExp(letteSpaceRegEx);\n        isValid = regex.test(inputChar);\n        break;\n      case 'L':\n        regex = new RegExp(letterRegEx);\n        isValid = regex.test(inputChar);\n        break;\n      case '0':\n        regex = new RegExp(digitRegEx);\n        isValid = regex.test(inputChar);\n        break;\n      case '9':\n        regex = new RegExp(digitSpaceRegEx);\n        isValid = regex.test(inputChar);\n        break;\n      case '#':\n        regex = new RegExp(digitSpecialRegEx);\n        isValid = regex.test(inputChar);\n        break;\n      default: {\n        isValid = null;\n      }\n    }\n\n    return isValid;\n  }\n  private replaceCharAt(strValue: string, index: number, char: string): string {\n    if (strValue !== undefined) {\n      return strValue.substring(0, index) + char + strValue.substring(index + 1);\n    }\n  }\n  private insertCharAt(strValue: string, index: number, char: string): string {\n    if (strValue !== undefined) {\n      return strValue.substring(0, index) + char + strValue.substring(index);\n    }\n  }\n  private getMaskLiterals(mask: string): Map<number, string> {\n    const literals = new Map<number, string>();\n\n    for (let i = 0; i < mask.length; i++) {\n      const char = mask.charAt(i);\n      if (MASK_FLAGS.indexOf(char) === -1) {\n        literals.set(i, char);\n      }\n    }\n\n    return literals;\n  }\n  private getNonLiteralIndeces(mask: string, literalKeys: number[]): number[] {\n    const nonLiteralsIndeces: number[] = new Array();\n\n    for (let i = 0; i < mask.length; i++) {\n      if (literalKeys.indexOf(i) === -1) {\n        nonLiteralsIndeces.push(i);\n      }\n    }\n\n    return nonLiteralsIndeces;\n  }\n  private getNonLiteralValues(value: string, literalValues: string[]): string[] {\n    const nonLiteralValues: string[] = new Array();\n\n    for (const val of value) {\n      if (literalValues.indexOf(val) === -1) {\n        nonLiteralValues.push(val);\n      }\n    }\n\n    return nonLiteralValues;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  NgModule,\n  OnInit,\n  Output,\n  PipeTransform,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { KEYS, MaskHelper } from './mask-helper';\n\nexport function isIE(): boolean {\n  return navigator.appVersion.indexOf('Trident/') > 0;\n}\n\nconst noop = () => {};\n\n@Directive({\n  providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: MaskDirective, multi: true }],\n  selector: '[ngxMask]',\n})\nexport class MaskDirective implements OnInit, ControlValueAccessor {\n  @Input('ngxMask') public mask: string;\n  @Input() public promptChar: string;\n  @Input() public includeLiterals: boolean;\n  @Input() public placeholder: string;\n  @Input() public displayValuePipe: PipeTransform;\n  @Input() public focusedValuePipe: PipeTransform;\n  @Input() private dataValue: string;\n  @Output() public valueChange = new EventEmitter<IMaskEventArgs>();\n  private get value() {\n    return this.nativeElement.value;\n  }\n  private set value(val) {\n    this.nativeElement.value = val;\n  }\n  private get nativeElement() {\n    return this.elementRef.nativeElement;\n  }\n\n  private get selectionStart() {\n    return this.nativeElement.selectionStart;\n  }\n\n  private get selectionEnd() {\n    return this.nativeElement.selectionEnd;\n  }\n\n  private ctrlDown: boolean;\n\n  private paste: boolean;\n\n  private selection: number;\n\n  private maskOptions = {\n    format: '',\n    promptChar: '',\n  };\n\n  private key;\n\n  private cursorOnPaste;\n\n  private valOnPaste;\n\n  private stopPropagation: boolean;\n\n  private maskHelper: MaskHelper;\n\n  private onTouchedCallback: () => void = noop;\n\n  private onChangeCallback: (_: any) => void = noop;\n\n  constructor(private elementRef: ElementRef) {\n    this.maskHelper = new MaskHelper();\n  }\n\n  public ngOnInit(): void {\n    if (this.promptChar && this.promptChar.length > 1) {\n      this.maskOptions.promptChar = this.promptChar = this.promptChar.substring(0, 1);\n    }\n\n    this.maskOptions.format = this.mask ? this.mask : 'CCCCCCCCCC';\n    this.maskOptions.promptChar = this.promptChar ? this.promptChar : '_';\n    this.nativeElement.setAttribute('placeholder', this.placeholder ? this.placeholder : this.maskOptions.format);\n  }\n\n  @HostListener('keydown', ['$event'])\n  public onKeydown(event): void {\n    const key = event.keyCode || event.charCode;\n\n    if (isIE() && this.stopPropagation) {\n      this.stopPropagation = false;\n    }\n\n    if (key === KEYS.Ctrl) {\n      this.ctrlDown = true;\n    }\n\n    if ((this.ctrlDown && key === KEYS.Z) || (this.ctrlDown && key === KEYS.Y)) {\n      event.preventDefault();\n    }\n\n    this.key = key;\n    this.selection = Math.abs(this.selectionEnd - this.selectionStart);\n  }\n\n  @HostListener('keyup', ['$event'])\n  public onKeyup(event): void {\n    const key = event.keyCode || event.charCode;\n\n    if (key === KEYS.Ctrl) {\n      this.ctrlDown = false;\n    }\n  }\n\n  @HostListener('paste', ['$event'])\n  public onPaste(event): void {\n    this.paste = true;\n\n    this.valOnPaste = this.value;\n    this.cursorOnPaste = this.getCursorPosition();\n  }\n\n  @HostListener('input', ['$event'])\n  public onInputChanged(event): void {\n    if (isIE() && this.stopPropagation) {\n      this.stopPropagation = false;\n      return;\n    }\n\n    if (this.paste) {\n      this.paste = false;\n\n      const clipboardData = this.value.substring(this.cursorOnPaste, this.getCursorPosition());\n      this.value = this.maskHelper.parseValueByMaskUponCopyPaste(\n        this.valOnPaste,\n        this.maskOptions,\n        this.cursorOnPaste,\n        clipboardData,\n        this.selection,\n      );\n\n      this.setCursorPosition(this.maskHelper.cursor);\n    } else {\n      const currentCursorPos = this.getCursorPosition();\n\n      this.maskHelper.data = this.key === KEYS.BACKSPACE || this.key === KEYS.DELETE;\n\n      this.value =\n        this.selection && this.selection !== 0\n          ? this.maskHelper.parseValueByMaskUponSelection(\n              this.value,\n              this.maskOptions,\n              currentCursorPos - 1,\n              this.selection,\n            )\n          : this.maskHelper.parseValueByMask(this.value, this.maskOptions, currentCursorPos - 1);\n\n      this.setCursorPosition(this.maskHelper.cursor);\n    }\n\n    const rawVal = this.maskHelper.restoreValueFromMask(this.value, this.maskOptions);\n\n    this.dataValue = this.includeLiterals ? this.value : rawVal;\n    this.onChangeCallback(this.dataValue);\n\n    this.valueChange.emit({ rawValue: rawVal, formattedValue: this.value });\n  }\n\n  @HostListener('focus', ['$event.target.value'])\n  public onFocus(value) {\n    if (this.focusedValuePipe) {\n      if (isIE()) {\n        this.stopPropagation = true;\n      }\n      this.value = this.focusedValuePipe.transform(value);\n    } else {\n      this.value = this.maskHelper.parseValueByMaskOnInit(this.value, this.maskOptions);\n    }\n  }\n\n  @HostListener('blur', ['$event.target.value'])\n  public onBlur(value) {\n    if (this.displayValuePipe) {\n      this.value = this.displayValuePipe.transform(value);\n    } else if (value === this.maskHelper.parseMask(this.maskOptions)) {\n      this.value = '';\n    }\n  }\n\n  private getCursorPosition(): number {\n    return this.nativeElement.selectionStart;\n  }\n\n  private setCursorPosition(start: number, end: number = start): void {\n    this.nativeElement.setSelectionRange(start, end);\n  }\n\n  public writeValue(value) {\n    if (this.promptChar && this.promptChar.length > 1) {\n      this.maskOptions.promptChar = this.promptChar.substring(0, 1);\n    }\n\n    this.value = value ? this.maskHelper.parseValueByMaskOnInit(value, this.maskOptions) : '';\n    if (this.displayValuePipe) {\n      this.value = this.displayValuePipe.transform(this.value);\n    }\n\n    this.dataValue = this.includeLiterals ? this.value : value;\n    this.onChangeCallback(this.dataValue);\n\n    this.valueChange.emit({ rawValue: value, formattedValue: this.value });\n  }\n\n  public registerOnChange(fn: (_: any) => void) {\n    this.onChangeCallback = fn;\n  }\n\n  public registerOnTouched(fn: () => void) {\n    this.onTouchedCallback = fn;\n  }\n}\n\nexport interface IMaskEventArgs {\n  rawValue: string;\n  formattedValue: string;\n}\n","import { Directive, ElementRef, EventEmitter, HostListener, Input, Output, } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { KEYS, MaskHelper } from './mask-helper';\nimport * as i0 from \"@angular/core\";\nexport function isIE() {\n    return navigator.appVersion.indexOf('Trident/') > 0;\n}\nconst noop = () => { };\nexport class MaskDirective {\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        this.valueChange = new EventEmitter();\n        this.maskOptions = {\n            format: '',\n            promptChar: '',\n        };\n        this.onTouchedCallback = noop;\n        this.onChangeCallback = noop;\n        this.maskHelper = new MaskHelper();\n    }\n    get value() {\n        return this.nativeElement.value;\n    }\n    set value(val) {\n        this.nativeElement.value = val;\n    }\n    get nativeElement() {\n        return this.elementRef.nativeElement;\n    }\n    get selectionStart() {\n        return this.nativeElement.selectionStart;\n    }\n    get selectionEnd() {\n        return this.nativeElement.selectionEnd;\n    }\n    ngOnInit() {\n        if (this.promptChar && this.promptChar.length > 1) {\n            this.maskOptions.promptChar = this.promptChar = this.promptChar.substring(0, 1);\n        }\n        this.maskOptions.format = this.mask ? this.mask : 'CCCCCCCCCC';\n        this.maskOptions.promptChar = this.promptChar ? this.promptChar : '_';\n        this.nativeElement.setAttribute('placeholder', this.placeholder ? this.placeholder : this.maskOptions.format);\n    }\n    onKeydown(event) {\n        const key = event.keyCode || event.charCode;\n        if (isIE() && this.stopPropagation) {\n            this.stopPropagation = false;\n        }\n        if (key === KEYS.Ctrl) {\n            this.ctrlDown = true;\n        }\n        if ((this.ctrlDown && key === KEYS.Z) || (this.ctrlDown && key === KEYS.Y)) {\n            event.preventDefault();\n        }\n        this.key = key;\n        this.selection = Math.abs(this.selectionEnd - this.selectionStart);\n    }\n    onKeyup(event) {\n        const key = event.keyCode || event.charCode;\n        if (key === KEYS.Ctrl) {\n            this.ctrlDown = false;\n        }\n    }\n    onPaste(event) {\n        this.paste = true;\n        this.valOnPaste = this.value;\n        this.cursorOnPaste = this.getCursorPosition();\n    }\n    onInputChanged(event) {\n        if (isIE() && this.stopPropagation) {\n            this.stopPropagation = false;\n            return;\n        }\n        if (this.paste) {\n            this.paste = false;\n            const clipboardData = this.value.substring(this.cursorOnPaste, this.getCursorPosition());\n            this.value = this.maskHelper.parseValueByMaskUponCopyPaste(this.valOnPaste, this.maskOptions, this.cursorOnPaste, clipboardData, this.selection);\n            this.setCursorPosition(this.maskHelper.cursor);\n        }\n        else {\n            const currentCursorPos = this.getCursorPosition();\n            this.maskHelper.data = this.key === KEYS.BACKSPACE || this.key === KEYS.DELETE;\n            this.value =\n                this.selection && this.selection !== 0\n                    ? this.maskHelper.parseValueByMaskUponSelection(this.value, this.maskOptions, currentCursorPos - 1, this.selection)\n                    : this.maskHelper.parseValueByMask(this.value, this.maskOptions, currentCursorPos - 1);\n            this.setCursorPosition(this.maskHelper.cursor);\n        }\n        const rawVal = this.maskHelper.restoreValueFromMask(this.value, this.maskOptions);\n        this.dataValue = this.includeLiterals ? this.value : rawVal;\n        this.onChangeCallback(this.dataValue);\n        this.valueChange.emit({ rawValue: rawVal, formattedValue: this.value });\n    }\n    onFocus(value) {\n        if (this.focusedValuePipe) {\n            if (isIE()) {\n                this.stopPropagation = true;\n            }\n            this.value = this.focusedValuePipe.transform(value);\n        }\n        else {\n            this.value = this.maskHelper.parseValueByMaskOnInit(this.value, this.maskOptions);\n        }\n    }\n    onBlur(value) {\n        if (this.displayValuePipe) {\n            this.value = this.displayValuePipe.transform(value);\n        }\n        else if (value === this.maskHelper.parseMask(this.maskOptions)) {\n            this.value = '';\n        }\n    }\n    getCursorPosition() {\n        return this.nativeElement.selectionStart;\n    }\n    setCursorPosition(start, end = start) {\n        this.nativeElement.setSelectionRange(start, end);\n    }\n    writeValue(value) {\n        if (this.promptChar && this.promptChar.length > 1) {\n            this.maskOptions.promptChar = this.promptChar.substring(0, 1);\n        }\n        this.value = value ? this.maskHelper.parseValueByMaskOnInit(value, this.maskOptions) : '';\n        if (this.displayValuePipe) {\n            this.value = this.displayValuePipe.transform(this.value);\n        }\n        this.dataValue = this.includeLiterals ? this.value : value;\n        this.onChangeCallback(this.dataValue);\n        this.valueChange.emit({ rawValue: value, formattedValue: this.value });\n    }\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n}\nMaskDirective.ngDirectiveDef = i0.ɵɵdefineDirective({ type: MaskDirective, selectors: [[\"\", \"ngxMask\", \"\"]], factory: function MaskDirective_Factory(t) { return new (t || MaskDirective)(i0.ɵɵdirectiveInject(i0.ElementRef)); }, hostBindings: function MaskDirective_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function MaskDirective_keydown_HostBindingHandler($event) { return ctx.onKeydown($event); });\n        i0.ɵɵlistener(\"keyup\", function MaskDirective_keyup_HostBindingHandler($event) { return ctx.onKeyup($event); });\n        i0.ɵɵlistener(\"paste\", function MaskDirective_paste_HostBindingHandler($event) { return ctx.onPaste($event); });\n        i0.ɵɵlistener(\"input\", function MaskDirective_input_HostBindingHandler($event) { return ctx.onInputChanged($event); });\n        i0.ɵɵlistener(\"focus\", function MaskDirective_focus_HostBindingHandler($event) { return ctx.onFocus($event.target.value); });\n        i0.ɵɵlistener(\"blur\", function MaskDirective_blur_HostBindingHandler($event) { return ctx.onBlur($event.target.value); });\n    } }, inputs: { mask: [\"ngxMask\", \"mask\"], promptChar: \"promptChar\", includeLiterals: \"includeLiterals\", placeholder: \"placeholder\", displayValuePipe: \"displayValuePipe\", focusedValuePipe: \"focusedValuePipe\", dataValue: \"dataValue\" }, outputs: { valueChange: \"valueChange\" }, features: [i0.ɵɵProvidersFeature([{ provide: NG_VALUE_ACCESSOR, useExisting: MaskDirective, multi: true }])] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(MaskDirective, [{\n        type: Directive,\n        args: [{\n                providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: MaskDirective, multi: true }],\n                selector: '[ngxMask]',\n            }]\n    }], function () { return [{ type: i0.ElementRef }]; }, { mask: [{\n            type: Input,\n            args: ['ngxMask']\n        }], promptChar: [{\n            type: Input\n        }], includeLiterals: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], displayValuePipe: [{\n            type: Input\n        }], focusedValuePipe: [{\n            type: Input\n        }], dataValue: [{\n            type: Input\n        }], valueChange: [{\n            type: Output\n        }], onKeydown: [{\n            type: HostListener,\n            args: ['keydown', ['$event']]\n        }], onKeyup: [{\n            type: HostListener,\n            args: ['keyup', ['$event']]\n        }], onPaste: [{\n            type: HostListener,\n            args: ['paste', ['$event']]\n        }], onInputChanged: [{\n            type: HostListener,\n            args: ['input', ['$event']]\n        }], onFocus: [{\n            type: HostListener,\n            args: ['focus', ['$event.target.value']]\n        }], onBlur: [{\n            type: HostListener,\n            args: ['blur', ['$event.target.value']]\n        }] });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { trigger, state, style, animate, transition, query, group } from '@angular/animations';\nimport { Directive, TemplateRef, ComponentFactoryResolver, ApplicationRef, Injector, ViewContainerRef, Inject, InjectionToken, ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation, Optional, Input, HostListener, ContentChild, ContentChildren, EventEmitter, NgZone, Output, QueryList, ViewChild, Self, NgModule } from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Subject, merge, Subscription, asapScheduler, of } from 'rxjs';\nimport { FocusMonitor, FocusKeyManager, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { mixinDisabled, mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, LEFT_ARROW, RIGHT_ARROW, DOWN_ARROW, UP_ARROW, HOME, END, hasModifierKey } from '@angular/cdk/keycodes';\nimport { startWith, switchMap, take, delay, filter, takeUntil } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/core';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [1, \"mat-menu-item\"];\nconst _c1 = [\"mat-menu-item\", \"\"];\nconst _c2 = [\"matRipple\", \"\", 1, \"mat-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"];\nconst _c3 = [\"*\"];\nconst _c4 = [\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-menu-panel\", 3, \"ngClass\", \"keydown\", \"click\"];\nconst _c5 = [1, \"mat-menu-content\"];\nfunction _MatMenu_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    const _r36 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", _c4);\n    ɵngcc0.ɵɵlistener(\"keydown\", function _MatMenu_ng_template_0_Template_div_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r36); const ctx_r35 = ɵngcc0.ɵɵnextContext(); return ctx_r35._handleKeydown($event); });\n    ɵngcc0.ɵɵlistener(\"click\", function _MatMenu_ng_template_0_Template_div_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r36); const ctx_r37 = ɵngcc0.ɵɵnextContext(); return ctx_r37.closed.emit(\"click\"); });\n    ɵngcc0.ɵɵlistener(\"@transformMenu.start\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r36); const ctx_r38 = ɵngcc0.ɵɵnextContext(); return ctx_r38._onAnimationStart($event); });\n    ɵngcc0.ɵɵlistener(\"@transformMenu.done\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r36); const ctx_r39 = ɵngcc0.ɵɵnextContext(); return ctx_r39._onAnimationDone($event); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", _c5);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r34 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r34._classList)(\"@transformMenu\", ctx_r34._panelAnimationState);\n} }\nconst _c6 = [\"aria-haspopup\", \"true\"];\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mat-menu-content, .mat-mdc-menu-content', animate('100ms linear', style({\n                opacity: 1\n            }))),\n            animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'scale(1)' })),\n        ])),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nclass MatMenuContent {\n    /**\n     * @param {?} _template\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _injector\n     * @param {?} _viewContainerRef\n     * @param {?} _document\n     */\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        /**\n         * Emits when the menu content has been attached.\n         */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * \\@docs-private\n     * @param {?=} context\n     * @return {?}\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        /** @type {?} */\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        (/** @type {?} */ (element.parentNode)).insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * \\@docs-private\n     * @return {?}\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\nMatMenuContent.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatMenuContent, selectors: [[\"ng-template\", \"matMenuContent\", \"\"]], factory: function MatMenuContent_Factory(t) { return new (t || MatMenuContent)(ɵngcc0.ɵɵdirectiveInject(TemplateRef), ɵngcc0.ɵɵdirectiveInject(ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ApplicationRef), ɵngcc0.ɵɵdirectiveInject(Injector), ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatMenuContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matMenuContent]'\n            }]\n    }], function () { return [{ type: TemplateRef }, { type: ComponentFactoryResolver }, { type: ApplicationRef }, { type: Injector }, { type: ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { constructor: [], _template: [], _componentFactoryResolver: [], _appRef: [], _injector: [], _viewContainerRef: [], _document: [], _attached: [], attach: [], _portal: [], _outlet: [], detach: [], ngOnDestroy: [] });\n/** @nocollapse */\nMatMenuContent.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ComponentFactoryResolver },\n    { type: ApplicationRef },\n    { type: Injector },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuMissingError() {\n    throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatMenuItem.\n/**\n * \\@docs-private\n */\nclass MatMenuItemBase {\n}\n/** @type {?} */\nconst _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n/**\n * This directive is intended to be used inside an mat-menu tag.\n * It exists mostly to set the role attribute.\n */\nclass MatMenuItem extends _MatMenuItemMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?=} document\n     * @param {?=} _focusMonitor\n     * @param {?=} _parentMenu\n     */\n    constructor(_elementRef, document, _focusMonitor, _parentMenu) {\n        // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n        super();\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        /**\n         * ARIA role for the menu item.\n         */\n        this.role = 'menuitem';\n        /**\n         * Stream that emits when the menu item is hovered.\n         */\n        this._hovered = new Subject();\n        /**\n         * Whether the menu item is highlighted.\n         */\n        this._highlighted = false;\n        /**\n         * Whether the menu item acts as a trigger for a sub-menu.\n         */\n        this._triggersSubmenu = false;\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef, false);\n        }\n        if (_parentMenu && _parentMenu.addItem) {\n            _parentMenu.addItem(this);\n        }\n        this._document = document;\n    }\n    /**\n     * Focuses the menu item.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n    }\n    /**\n     * Used to set the `tabindex`.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Returns the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * Prevents the default element actions if it is disabled.\n     * @param {?} event\n     * @return {?}\n     */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritte.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * Emits to the hover stream.\n     * @return {?}\n     */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritte.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        /** @type {?} */\n        let output = '';\n        if (element.childNodes) {\n            /** @type {?} */\n            const length = element.childNodes.length;\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n        return output.trim();\n    }\n}\nMatMenuItem.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatMenuItem, selectors: [[\"\", \"mat-menu-item\", \"\"]], factory: function MatMenuItem_Factory(t) { return new (t || MatMenuItem)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8)); }, hostBindings: function MatMenuItem_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) { return ctx._checkDisabled($event); });\n        ɵngcc0.ɵɵlistener(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler($event) { return ctx._handleMouseEnter(); });\n        ɵngcc0.ɵɵelementHostAttrs(_c0);\n        ɵngcc0.ɵɵstyling();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled.toString())(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"mat-menu-item-highlighted\", ctx._highlighted);\n        ɵngcc0.ɵɵclassProp(\"mat-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n        ɵngcc0.ɵɵstylingApply();\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\" }, exportAs: [\"matMenuItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c1, ngContentSelectors: _c3, consts: 2, vars: 2, template: function MatMenuItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelement(1, \"div\", _c2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵselect(1);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc1.MatRipple], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatMenuItem, [{\n        type: Component,\n        args: [{ selector: '[mat-menu-item]',\n                exportAs: 'matMenuItem',\n                inputs: ['disabled', 'disableRipple'],\n                host: {\n                    '[attr.role]': 'role',\n                    'class': 'mat-menu-item',\n                    '[class.mat-menu-item-highlighted]': '_highlighted',\n                    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.disabled]': 'disabled || null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: \"<ng-content></ng-content><div class=\\\"mat-menu-ripple\\\" matRipple [matRippleDisabled]=\\\"disableRipple || disabled\\\" [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\"\n            }]\n    }], function () { return [{ type: ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_PANEL]\n            }, {\n                type: Optional\n            }] }]; }, { constructor: [], _elementRef: [], _focusMonitor: [], _parentMenu: [], role: [{\n            type: Input\n        }], _hovered: [], _highlighted: [], _triggersSubmenu: [], _document: [], focus: [], ngOnDestroy: [], _getTabIndex: [], _getHostElement: [], _checkDisabled: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }], _handleMouseEnter: [{\n            type: HostListener,\n            args: ['mouseenter']\n        }], getLabel: [] });\n/** @nocollapse */\nMatMenuItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_PANEL,] }, { type: Optional }] }\n];\nMatMenuItem.propDecorators = {\n    role: [{ type: Input }],\n    _checkDisabled: [{ type: HostListener, args: ['click', ['$event'],] }],\n    _handleMouseEnter: [{ type: HostListener, args: ['mouseenter',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token to be used to override the default options for `mat-menu`.\n * @type {?}\n */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\n/**\n * Start elevation for the menu panel.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_BASE_ELEVATION = 4;\n/**\n * Base class with all of the `MatMenu` functionality.\n */\n// tslint:disable-next-line:class-name\nclass _MatMenuBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _defaultOptions\n     */\n    constructor(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /**\n         * Only the direct descendant menu items.\n         */\n        this._directDescendantItems = new QueryList();\n        /**\n         * Subscription to tab events on the menu panel\n         */\n        this._tabSubscription = Subscription.EMPTY;\n        /**\n         * Config object to be passed into the menu's ngClass\n         */\n        this._classList = {};\n        /**\n         * Current state of the panel animation.\n         */\n        this._panelAnimationState = 'void';\n        /**\n         * Emits whenever an animation on the menu completes.\n         */\n        this._animationDone = new Subject();\n        /**\n         * Class to be added to the backdrop element.\n         */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /**\n         * Event emitted when the menu is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * \\@breaking-change 8.0.0\n         */\n        this.close = this.closed;\n    }\n    /**\n     * Position of the menu in the X axis.\n     * @return {?}\n     */\n    get xPosition() { return this._xPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set xPosition(value) {\n        if (value !== 'before' && value !== 'after') {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /**\n     * Position of the menu in the Y axis.\n     * @return {?}\n     */\n    get yPosition() { return this._yPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below') {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /**\n     * Whether the menu should overlap its trigger.\n     * @return {?}\n     */\n    get overlapTrigger() { return this._overlapTrigger; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the menu has a backdrop.\n     * @return {?}\n     */\n    get hasBackdrop() { return this._hasBackdrop; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param {?} classes list of class names\n     * @return {?}\n     */\n    set panelClass(classes) {\n        /** @type {?} */\n        const previousPanelClass = this._previousPanelClass;\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((/**\n             * @param {?} className\n             * @return {?}\n             */\n            (className) => {\n                this._classList[className] = false;\n            }));\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((/**\n             * @param {?} className\n             * @return {?}\n             */\n            (className) => {\n                this._classList[className] = true;\n            }));\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    get classList() { return this.panelClass; }\n    /**\n     * @param {?} classes\n     * @return {?}\n     */\n    set classList(classes) { this.panelClass = classes; }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe((/**\n         * @return {?}\n         */\n        () => this.closed.emit('tab')));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._directDescendantItems.destroy();\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /**\n     * Stream that emits whenever the hovered menu item changes.\n     * @return {?}\n     */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        /** @type {?} */\n        const itemChanges = (/** @type {?} */ (this._directDescendantItems.changes));\n        return itemChanges.pipe(startWith(this._directDescendantItems), switchMap((/**\n         * @param {?} items\n         * @return {?}\n         */\n        items => merge(...items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._hovered))))));\n    }\n    /*\n       * Registers a menu item with the menu.\n       * @docs-private\n       * @deprecated No longer being used. To be removed.\n       * @breaking-change 9.0.0\n       */\n    /**\n     * @param {?} _item\n     * @return {?}\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * \\@docs-private\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 9.0.0\n     * @param {?} _item\n     * @return {?}\n     */\n    removeItem(_item) { }\n    /**\n     * Handle a keyboard event from the menu, delegating to the appropriate action.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifierKey(event)) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n        }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param {?=} origin Action from which the focus originated. Used to set the correct styling.\n     * @return {?}\n     */\n    focusFirstItem(origin = 'program') {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._keyManager.setFocusOrigin(origin).setFirstItemActive()));\n        }\n        else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     * @return {?}\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param {?} depth Number of parent menus that come before the menu.\n     * @return {?}\n     */\n    setElevation(depth) {\n        // The elevation starts at the base and increases by one for each level.\n        /** @type {?} */\n        const newElevation = `mat-elevation-z${MAT_MENU_BASE_ELEVATION + depth}`;\n        /** @type {?} */\n        const customElevation = Object.keys(this._classList).find((/**\n         * @param {?} c\n         * @return {?}\n         */\n        c => c.startsWith('mat-elevation-z')));\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * \\@docs-private\n     * @param {?=} posX Position of the menu along the x axis.\n     * @param {?=} posY Position of the menu along the y axis.\n     * @return {?}\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        /** @type {?} */\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n    }\n    /**\n     * Starts the enter animation.\n     * @return {?}\n     */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /**\n     * Resets the panel animation to its initial state.\n     * @return {?}\n     */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /**\n     * Callback that is invoked when the panel animation completes.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationStart(event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     * @private\n     * @return {?}\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((/**\n         * @param {?} items\n         * @return {?}\n         */\n        (items) => {\n            this._directDescendantItems.reset(items.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            item => item._parentMenu === this)));\n            this._directDescendantItems.notifyOnChanges();\n        }));\n    }\n}\n_MatMenuBase.ngBaseDef = ɵngcc0.ɵɵdefineBase({ inputs: { backdropClass: \"backdropClass\", xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\" }, outputs: { closed: \"closed\", close: \"close\" }, viewQuery: function (rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    } }, contentQueries: function (rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, false);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allItems = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n    } } });\n/** @nocollapse */\n_MatMenuBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n_MatMenuBase.propDecorators = {\n    _allItems: [{ type: ContentChildren, args: [MatMenuItem, { descendants: true },] }],\n    backdropClass: [{ type: Input }],\n    xPosition: [{ type: Input }],\n    yPosition: [{ type: Input }],\n    templateRef: [{ type: ViewChild, args: [TemplateRef, { static: false },] }],\n    items: [{ type: ContentChildren, args: [MatMenuItem,] }],\n    lazyContent: [{ type: ContentChild, args: [MatMenuContent, { static: false },] }],\n    overlapTrigger: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    panelClass: [{ type: Input, args: ['class',] }],\n    classList: [{ type: Input }],\n    closed: [{ type: Output }],\n    close: [{ type: Output }]\n};\n/**\n * \\@docs-private We show the \"_MatMenu\" class as \"MatMenu\" in the docs.\n */\nclass MatMenu extends _MatMenuBase {\n}\n// Note on the weird inheritance setup: we need three classes, because the MDC-based menu has to\n// extend `MatMenu`, however keeping a reference to it will cause the inlined template and styles\n// to be retained as well. The MDC menu also has to provide itself as a `MatMenu` in order for\n// queries and DI to work correctly, while still not referencing the actual menu class.\n// Class responsibility is split up as follows:\n// * _MatMenuBase - provides all the functionality without any of the Angular metadata.\n// * MatMenu - keeps the same name symbol name as the current menu and\n// is used as a provider for DI and query purposes.\n// * _MatMenu - the actual menu component implementation with the Angular metadata that should\n// be tree shaken away for MDC.\n/**\n * \\@docs-public MatMenu\n */\n// tslint:disable-next-line:class-name\nclass _MatMenu extends MatMenu {\n    /**\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} defaultOptions\n     */\n    constructor(elementRef, ngZone, defaultOptions) {\n        super(elementRef, ngZone, defaultOptions);\n    }\n}\n_MatMenu.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: _MatMenu, selectors: [[\"mat-menu\"]], factory: function _MatMenu_Factory(t) { return new (t || _MatMenu)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); }, exportAs: [\"matMenu\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n            { provide: MatMenu, useExisting: _MatMenu }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c3, consts: 1, vars: 0, template: function _MatMenu_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, _MatMenu_ng_template_0_Template, 3, 2, \"ng-template\");\n    } }, directives: [ɵngcc2.NgClass], styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}@media (-ms-high-contrast:active){.mat-menu-panel{outline:solid 1px}}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}@media (-ms-high-contrast:active){.mat-menu-item-highlighted,.mat-menu-item.cdk-keyboard-focused,.mat-menu-item.cdk-program-focused{outline:dotted 1px}}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:'';display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"], encapsulation: 2, data: { animation: [\n            matMenuAnimations.transformMenu,\n            matMenuAnimations.fadeInItems\n        ] }, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(_MatMenu, [{\n        type: Component,\n        args: [{ selector: 'mat-menu',\n                template: \"<ng-template><div class=\\\"mat-menu-panel\\\" [ngClass]=\\\"_classList\\\" (keydown)=\\\"_handleKeydown($event)\\\" (click)=\\\"closed.emit('click')\\\" [@transformMenu]=\\\"_panelAnimationState\\\" (@transformMenu.start)=\\\"_onAnimationStart($event)\\\" (@transformMenu.done)=\\\"_onAnimationDone($event)\\\" tabindex=\\\"-1\\\" role=\\\"menu\\\"><div class=\\\"mat-menu-content\\\"><ng-content></ng-content></div></div></ng-template>\",\n                styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}@media (-ms-high-contrast:active){.mat-menu-panel{outline:solid 1px}}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}@media (-ms-high-contrast:active){.mat-menu-item-highlighted,.mat-menu-item.cdk-keyboard-focused,.mat-menu-item.cdk-program-focused{outline:dotted 1px}}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:'';display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matMenu',\n                animations: [\n                    matMenuAnimations.transformMenu,\n                    matMenuAnimations.fadeInItems\n                ],\n                providers: [\n                    { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n                    { provide: MatMenu, useExisting: _MatMenu }\n                ]\n            }]\n    }], function () { return [{ type: ElementRef }, { type: NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, { constructor: [] });\n/** @nocollapse */\n_MatMenu.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that determines the scroll handling while the menu is open.\n * @type {?}\n */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Default top padding of the menu panel.\n * @type {?}\n */\nconst MENU_PANEL_TOP_PADDING = 8;\n/**\n * Options for binding a passive event listener.\n * @type {?}\n */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n/**\n * This directive is intended to be used in conjunction with an mat-menu tag.  It is\n * responsible for toggling the display of the provided menu instance.\n */\nclass MatMenuTrigger {\n    /**\n     * @param {?} _overlay\n     * @param {?} _element\n     * @param {?} _viewContainerRef\n     * @param {?} scrollStrategy\n     * @param {?} _parentMenu\n     * @param {?} _menuItemInstance\n     * @param {?} _dir\n     * @param {?=} _focusMonitor\n     */\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, _parentMenu, _menuItemInstance, _dir, _focusMonitor) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._parentMenu = _parentMenu;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = (/**\n         * @return {?}\n         */\n        () => this._openedBy = 'touch');\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = null;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /**\n         * Event emitted when the associated menu is opened.\n         */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * \\@breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /**\n         * Event emitted when the associated menu is closed.\n         */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * \\@breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    get _deprecatedMatMenuTriggerFor() { return this.menu; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /**\n     * References the menu instance that the trigger is associated with.\n     * @return {?}\n     */\n    get menu() { return this._menu; }\n    /**\n     * @param {?} menu\n     * @return {?}\n     */\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            this._menuCloseSubscription = menu.close.asObservable().subscribe((/**\n             * @param {?} reason\n             * @return {?}\n             */\n            reason => {\n                this._destroyMenu();\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMenu) {\n                    this._parentMenu.closed.emit(reason);\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._checkMenu();\n        this._handleHover();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /**\n     * Whether the menu is open.\n     * @return {?}\n     */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the menu triggers a sub-menu or a top-level one.\n     * @return {?}\n     */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMenu);\n    }\n    /**\n     * Toggles the menu between the open and closed states.\n     * @return {?}\n     */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /**\n     * Opens the menu.\n     * @return {?}\n     */\n    openMenu() {\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        /** @type {?} */\n        const overlayRef = this._createOverlay();\n        /** @type {?} */\n        const overlayConfig = overlayRef.getConfig();\n        this._setPosition((/** @type {?} */ (overlayConfig.positionStrategy)));\n        overlayConfig.hasBackdrop = this.menu.hasBackdrop == null ? !this.triggersSubmenu() :\n            this.menu.hasBackdrop;\n        overlayRef.attach(this._getPortal());\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe((/**\n         * @return {?}\n         */\n        () => this.closeMenu()));\n        this._initMenu();\n        if (this.menu instanceof MatMenu) {\n            this.menu._startAnimation();\n        }\n    }\n    /**\n     * Closes the menu.\n     * @return {?}\n     */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param {?=} origin Source of the menu trigger's focus.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Closes the menu and does the necessary cleanup.\n     * @private\n     * @return {?}\n     */\n    _destroyMenu() {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        /** @type {?} */\n        const menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        if (menu instanceof MatMenu) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                event => event.toState === 'void')), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: (/**\n                     * @return {?}\n                     */\n                    () => (/** @type {?} */ (menu.lazyContent)).detach()),\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: (/**\n                     * @return {?}\n                     */\n                    () => this._resetMenu())\n                });\n            }\n            else {\n                this._resetMenu();\n            }\n        }\n        else {\n            this._resetMenu();\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     * @private\n     * @return {?}\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this._setIsMenuOpen(true);\n        this.menu.focusFirstItem(this._openedBy || 'program');\n    }\n    /**\n     * Updates the menu elevation based on the amount of parent menus that it has.\n     * @private\n     * @return {?}\n     */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            /** @type {?} */\n            let depth = 0;\n            /** @type {?} */\n            let parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    /**\n     * This method resets the menu when it's closed, most importantly restoring\n     * focus to the menu trigger if the menu was opened via the keyboard.\n     * @private\n     * @return {?}\n     */\n    _resetMenu() {\n        this._setIsMenuOpen(false);\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (this.restoreFocus) {\n            if (!this._openedBy) {\n                // Note that the focus style will show up both for `program` and\n                // `keyboard` so we don't have to specify which one it is.\n                this.focus();\n            }\n            else if (!this.triggersSubmenu()) {\n                this.focus(this._openedBy);\n            }\n        }\n        this._openedBy = null;\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    /**\n     * @private\n     * @param {?} isOpen\n     * @return {?}\n     */\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._highlighted = isOpen;\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     * @private\n     * @return {?}\n     */\n    _checkMenu() {\n        if (!this.menu) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            /** @type {?} */\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions((/** @type {?} */ (config.positionStrategy)));\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @private\n     * @return {?} OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     * @private\n     * @param {?} position\n     * @return {?}\n     */\n    _subscribeToPositions(position) {\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe((/**\n             * @param {?} change\n             * @return {?}\n             */\n            change => {\n                /** @type {?} */\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                /** @type {?} */\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                (/** @type {?} */ (this.menu.setPositionClasses))(posX, posY);\n            }));\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @private\n     * @param {?} positionStrategy Strategy whose position to update.\n     * @return {?}\n     */\n    _setPosition(positionStrategy) {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        /** @type {?} */\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n    /**\n     * Returns a stream that emits whenever an action that should close the menu occurs.\n     * @private\n     * @return {?}\n     */\n    _menuClosingActions() {\n        /** @type {?} */\n        const backdrop = (/** @type {?} */ (this._overlayRef)).backdropClick();\n        /** @type {?} */\n        const detachments = (/** @type {?} */ (this._overlayRef)).detachments();\n        /** @type {?} */\n        const parentClose = this._parentMenu ? this._parentMenu.closed : of();\n        /** @type {?} */\n        const hover = this._parentMenu ? this._parentMenu._hovered().pipe(filter((/**\n         * @param {?} active\n         * @return {?}\n         */\n        active => active !== this._menuItemInstance)), filter((/**\n         * @return {?}\n         */\n        () => this._menuOpen))) : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /**\n     * Handles mouse presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : null;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /**\n     * Handles key presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        if (this.triggersSubmenu() && ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this.openMenu();\n        }\n    }\n    /**\n     * Handles click events on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /**\n     * Handles the cases where the user hovers over the trigger.\n     * @private\n     * @return {?}\n     */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu()) {\n            return;\n        }\n        this._hoverSubscription = this._parentMenu._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter((/**\n         * @param {?} active\n         * @return {?}\n         */\n        active => active === this._menuItemInstance && !active.disabled)), delay(0, asapScheduler))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof MatMenu && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMenu._hovered()))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => this.openMenu()));\n            }\n            else {\n                this.openMenu();\n            }\n        }));\n    }\n    /**\n     * Gets the portal that should be attached to the overlay.\n     * @private\n     * @return {?}\n     */\n    _getPortal() {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n}\nMatMenuTrigger.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatMenuTrigger, selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]], factory: function MatMenuTrigger_Factory(t) { return new (t || MatMenuTrigger)(ɵngcc0.ɵɵdirectiveInject(Overlay), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(MatMenu, 8), ɵngcc0.ɵɵdirectiveInject(MatMenuItem, 10), ɵngcc0.ɵɵdirectiveInject(Directionality, 8), ɵngcc0.ɵɵdirectiveInject(FocusMonitor)); }, hostBindings: function MatMenuTrigger_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(1);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) { return ctx._handleMousedown($event); });\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵlistener(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n        ɵngcc0.ɵɵelementHostAttrs(_c6);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.menuOpen || null);\n    } }, inputs: { restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"], _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, exportAs: [\"matMenuTrigger\"] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatMenuTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                host: {\n                    'aria-haspopup': 'true',\n                    '[attr.aria-expanded]': 'menuOpen || null',\n                    '(mousedown)': '_handleMousedown($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(click)': '_handleClick($event)'\n                },\n                exportAs: 'matMenuTrigger'\n            }]\n    }], function () { return [{ type: Overlay }, { type: ElementRef }, { type: ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_SCROLL_STRATEGY]\n            }] }, { type: MatMenu, decorators: [{\n                type: Optional\n            }] }, { type: MatMenuItem, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }, { type: FocusMonitor }]; }, { constructor: [], _overlay: [], _element: [], _viewContainerRef: [], _parentMenu: [], _menuItemInstance: [], _dir: [], _focusMonitor: [], _overlayRef: [], _menuOpen: [], _closingActionsSubscription: [], _hoverSubscription: [], _menuCloseSubscription: [], _handleTouchStart: [], _openedBy: [], restoreFocus: [{\n            type: Input,\n            args: ['matMenuTriggerRestoreFocus']\n        }], menuOpened: [{\n            type: Output\n        }], onMenuOpen: [{\n            type: Output\n        }], menuClosed: [{\n            type: Output\n        }], onMenuClose: [{\n            type: Output\n        }], _scrollStrategy: [], _deprecatedMatMenuTriggerFor: [{\n            type: Input,\n            args: ['mat-menu-trigger-for']\n        }], _deprecatedMatMenuTriggerFor: [], menu: [{\n            type: Input,\n            args: ['matMenuTriggerFor']\n        }], menu: [], _menu: [], ngAfterContentInit: [], ngOnDestroy: [], menuOpen: [], dir: [], triggersSubmenu: [], toggleMenu: [], openMenu: [], closeMenu: [], focus: [], _destroyMenu: [], _initMenu: [], _setMenuElevation: [], _resetMenu: [], _setIsMenuOpen: [], _checkMenu: [], _createOverlay: [], _getOverlayConfig: [], _subscribeToPositions: [], _setPosition: [], _menuClosingActions: [], _handleMousedown: [], _handleKeydown: [], _handleClick: [], _handleHover: [], _getPortal: [], _portal: [], menuData: [{\n            type: Input,\n            args: ['matMenuTriggerData']\n        }] });\n/** @nocollapse */\nMatMenuTrigger.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_SCROLL_STRATEGY,] }] },\n    { type: MatMenu, decorators: [{ type: Optional }] },\n    { type: MatMenuItem, decorators: [{ type: Optional }, { type: Self }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: FocusMonitor }\n];\nMatMenuTrigger.propDecorators = {\n    _deprecatedMatMenuTriggerFor: [{ type: Input, args: ['mat-menu-trigger-for',] }],\n    menu: [{ type: Input, args: ['matMenuTriggerFor',] }],\n    menuData: [{ type: Input, args: ['matMenuTriggerData',] }],\n    restoreFocus: [{ type: Input, args: ['matMenuTriggerRestoreFocus',] }],\n    menuOpened: [{ type: Output }],\n    onMenuOpen: [{ type: Output }],\n    menuClosed: [{ type: Output }],\n    onMenuClose: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used by both the current `MatMenuModule` and the MDC `MatMenuModule`\n * to declare the menu-related directives.\n */\n// tslint:disable-next-line:class-name\nclass _MatMenuDirectivesModule {\n}\n_MatMenuDirectivesModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: _MatMenuDirectivesModule });\n_MatMenuDirectivesModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function _MatMenuDirectivesModule_Factory(t) { return new (t || _MatMenuDirectivesModule)(); }, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [MatCommonModule] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(_MatMenuDirectivesModule, { declarations: function () { return [MatMenuTrigger,\n        MatMenuContent]; }, exports: function () { return [MatMenuTrigger,\n        MatMenuContent,\n        MatCommonModule]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(_MatMenuDirectivesModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatMenuTrigger, MatMenuContent, MatCommonModule],\n                declarations: [MatMenuTrigger, MatMenuContent],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null);\nclass MatMenuModule {\n}\nMatMenuModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: MatMenuModule });\nMatMenuModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function MatMenuModule_Factory(t) { return new (t || MatMenuModule)(); }, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            CommonModule,\n            MatCommonModule,\n            MatRippleModule,\n            OverlayModule,\n            _MatMenuDirectivesModule,\n        ],\n        _MatMenuDirectivesModule] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(MatMenuModule, { declarations: function () { return [_MatMenu,\n        MatMenuItem]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        MatRippleModule,\n        OverlayModule,\n        _MatMenuDirectivesModule]; }, exports: function () { return [_MatMenu,\n        MatMenuItem,\n        _MatMenuDirectivesModule]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatMenuModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    MatRippleModule,\n                    OverlayModule,\n                    _MatMenuDirectivesModule,\n                ],\n                exports: [_MatMenu, MatMenuItem, _MatMenuDirectivesModule],\n                declarations: [_MatMenu, MatMenuItem],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatMenu, MAT_MENU_DEFAULT_OPTIONS, _MatMenu, _MatMenuBase, MatMenuItem, MatMenuTrigger, MAT_MENU_SCROLL_STRATEGY, MAT_MENU_PANEL, _MatMenuDirectivesModule, MatMenuModule, matMenuAnimations, fadeInItems, transformMenu, MatMenuContent, MAT_MENU_DEFAULT_OPTIONS_FACTORY as ɵa23, MAT_MENU_SCROLL_STRATEGY_FACTORY as ɵb23, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as ɵc23 };\n\n//# sourceMappingURL=menu.js.map","import toDate from '../toDate/index.js';\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * var result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import compareAsc from '../compareAsc/index.js';\nimport differenceInMonths from '../differenceInMonths/index.js';\nimport differenceInSeconds from '../differenceInSeconds/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport toDate from '../toDate/index.js';\nimport cloneObject from '../_lib/cloneObject/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * var result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (dirtyObject.hasOwnProperty(property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import assign from '../assign/index.js';\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * var result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarMonths from '../differenceInCalendarMonths/index.js';\nimport compareAsc from '../compareAsc/index.js';\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastMonthNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from '../toDate/index.js';\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\n\nexport default function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgLetDirective } from './ng-let.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgLetDirective],\n  exports: [NgLetDirective],\n})\nexport class NgLetModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgLetDirective } from './ng-let.directive';\nimport * as i0 from \"@angular/core\";\nexport class NgLetModule {\n}\nNgLetModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: NgLetModule });\nNgLetModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function NgLetModule_Factory(t) { return new (t || NgLetModule)(); }, imports: [[CommonModule]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(NgLetModule, { declarations: [NgLetDirective], imports: [CommonModule], exports: [NgLetDirective] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(NgLetModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [NgLetDirective],\n                exports: [NgLetDirective],\n            }]\n    }], null, null);\n","import { Directive, ElementRef, Input, OnChanges, OnDestroy, Renderer2, SimpleChanges } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { combineLatest, Subject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { untilDestroy } from '../../operators';\n\nexport interface MatchExp {\n  [classes: string]: string;\n}\n\n@Directive({\n  selector: '[routerLinkMatch]',\n})\nexport class RouterLinkMatchDirective implements OnDestroy, OnChanges {\n  private curRoute: string;\n  private matchExp: MatchExp;\n  private onChangesHook = new Subject<MatchExp>();\n\n  @Input('routerLinkMatch')\n  set routerLinkMatch(v: MatchExp) {\n    if (v && typeof v === 'object') {\n      this.matchExp = v;\n    } else {\n      throw new TypeError(\n        `Unexpected type '${typeof v}' of value for ` + `input of routerLinkMatch directive, expected 'object'`,\n      );\n    }\n  }\n\n  constructor(router: Router, private renderer: Renderer2, private ngEl: ElementRef) {\n    combineLatest([router.events, this.onChangesHook])\n      .pipe(\n        map(([e]) => e),\n        filter(e => e instanceof NavigationEnd),\n        untilDestroy(this),\n      )\n      .subscribe(e => {\n        this.curRoute = (e as NavigationEnd).urlAfterRedirects;\n\n        this._updateClass(this.matchExp);\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.routerLinkMatch) {\n      this.onChangesHook.next(changes.routerLinkMatch.currentValue);\n    }\n  }\n\n  private _updateClass(v: MatchExp): void {\n    Object.keys(v).forEach(cls => {\n      if (v[cls] && typeof v[cls] === 'string') {\n        const regexp = new RegExp(v[cls]);\n        if (this.curRoute.match(regexp)) {\n          this._toggleClass(cls, true);\n        } else {\n          this._toggleClass(cls, false);\n        }\n      } else {\n        throw new TypeError(\n          `Could not convert match value to Regular Expression. ` +\n            `Unexpected type '${typeof v[cls]}' for value of key '${cls}' ` +\n            `in routerLinkMatch directive match expression, expected 'non-empty string'`,\n        );\n      }\n    });\n  }\n\n  private _toggleClass(classes: string, enabled: boolean): void {\n    classes = classes.trim();\n\n    classes.split(/\\s+/g).forEach(cls => {\n      if (enabled) {\n        this.renderer.addClass(this.ngEl.nativeElement, cls);\n      } else {\n        this.renderer.removeClass(this.ngEl.nativeElement, cls);\n      }\n    });\n  }\n\n  ngOnDestroy() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterLinkMatchDirective } from './router-link-match.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [RouterLinkMatchDirective],\n  exports: [RouterLinkMatchDirective],\n})\nexport class RouterLinkMatchModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterLinkMatchDirective } from './router-link-match.directive';\nimport * as i0 from \"@angular/core\";\nexport class RouterLinkMatchModule {\n}\nRouterLinkMatchModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: RouterLinkMatchModule });\nRouterLinkMatchModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function RouterLinkMatchModule_Factory(t) { return new (t || RouterLinkMatchModule)(); }, imports: [[CommonModule]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(RouterLinkMatchModule, { declarations: [RouterLinkMatchDirective], imports: [CommonModule], exports: [RouterLinkMatchDirective] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(RouterLinkMatchModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [RouterLinkMatchDirective],\n                exports: [RouterLinkMatchDirective],\n            }]\n    }], null, null);\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InViewportDirective } from './in-viewport.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [InViewportDirective],\n  exports: [InViewportDirective],\n})\nexport class InViewportModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InViewportDirective } from './in-viewport.directive';\nimport * as i0 from \"@angular/core\";\nexport class InViewportModule {\n}\nInViewportModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: InViewportModule });\nInViewportModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function InViewportModule_Factory(t) { return new (t || InViewportModule)(); }, imports: [[CommonModule]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(InViewportModule, { declarations: [InViewportDirective], imports: [CommonModule], exports: [InViewportDirective] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(InViewportModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [InViewportDirective],\n                exports: [InViewportDirective],\n            }]\n    }], null, null);\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClickOutsideDirective } from './click-outside.directive';\n\n@NgModule({\n  declarations: [ClickOutsideDirective],\n  imports: [CommonModule],\n  exports: [ClickOutsideDirective],\n})\nexport class ClickOutsideModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClickOutsideDirective } from './click-outside.directive';\nimport * as i0 from \"@angular/core\";\nexport class ClickOutsideModule {\n}\nClickOutsideModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: ClickOutsideModule });\nClickOutsideModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function ClickOutsideModule_Factory(t) { return new (t || ClickOutsideModule)(); }, imports: [[CommonModule]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(ClickOutsideModule, { declarations: [ClickOutsideDirective], imports: [CommonModule], exports: [ClickOutsideDirective] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(ClickOutsideModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [ClickOutsideDirective],\n                imports: [CommonModule],\n                exports: [ClickOutsideDirective],\n            }]\n    }], null, null);\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaskDirective } from './mask.directive';\n\n@NgModule({\n  declarations: [MaskDirective],\n  imports: [CommonModule],\n  exports: [MaskDirective],\n})\nexport class MaskModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaskDirective } from './mask.directive';\nimport * as i0 from \"@angular/core\";\nexport class MaskModule {\n}\nMaskModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: MaskModule });\nMaskModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function MaskModule_Factory(t) { return new (t || MaskModule)(); }, imports: [[CommonModule]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(MaskModule, { declarations: [MaskDirective], imports: [CommonModule], exports: [MaskDirective] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(MaskModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MaskDirective],\n                imports: [CommonModule],\n                exports: [MaskDirective],\n            }]\n    }], null, null);\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({ name: 'safeHtml' })\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n  transform(value: any, args?: any) {\n    return this.sanitizer.bypassSecurityTrustHtml(value);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FilterPipe } from './filter.pipe';\nimport { GroupByPipe } from './group-by.pipe';\nimport { SafeHtmlPipe } from './safe-html.pipe';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [FilterPipe, GroupByPipe, SafeHtmlPipe],\n  exports: [FilterPipe, GroupByPipe, SafeHtmlPipe],\n})\nexport class HelperModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FilterPipe } from './filter.pipe';\nimport { GroupByPipe } from './group-by.pipe';\nimport { SafeHtmlPipe } from './safe-html.pipe';\nimport * as i0 from \"@angular/core\";\nexport class HelperModule {\n}\nHelperModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: HelperModule });\nHelperModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function HelperModule_Factory(t) { return new (t || HelperModule)(); }, imports: [[CommonModule]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(HelperModule, { declarations: [FilterPipe, GroupByPipe, SafeHtmlPipe], imports: [CommonModule], exports: [FilterPipe, GroupByPipe, SafeHtmlPipe] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(HelperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [FilterPipe, GroupByPipe, SafeHtmlPipe],\n                exports: [FilterPipe, GroupByPipe, SafeHtmlPipe],\n            }]\n    }], null, null);\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CharactersPipe } from './characters.pipe';\nimport { WordsPipe } from './words.pipe';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CharactersPipe, WordsPipe],\n  exports: [CharactersPipe, WordsPipe],\n})\nexport class TruncateModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CharactersPipe } from './characters.pipe';\nimport { WordsPipe } from './words.pipe';\nimport * as i0 from \"@angular/core\";\nexport class TruncateModule {\n}\nTruncateModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: TruncateModule });\nTruncateModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function TruncateModule_Factory(t) { return new (t || TruncateModule)(); }, imports: [[CommonModule]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(TruncateModule, { declarations: [CharactersPipe, WordsPipe], imports: [CommonModule], exports: [CharactersPipe, WordsPipe] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(TruncateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [CharactersPipe, WordsPipe],\n                exports: [CharactersPipe, WordsPipe],\n            }]\n    }], null, null);\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormatTimeInWordsPipe } from './format-time-in-words.pipe';\n\nconst PIPES = [FormatTimeInWordsPipe];\n\n@NgModule({\n  declarations: [PIPES],\n  imports: [CommonModule],\n  exports: [PIPES],\n})\nexport class DateFnsModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormatTimeInWordsPipe } from './format-time-in-words.pipe';\nimport * as i0 from \"@angular/core\";\nconst PIPES = [FormatTimeInWordsPipe];\nexport class DateFnsModule {\n}\nDateFnsModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: DateFnsModule });\nDateFnsModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function DateFnsModule_Factory(t) { return new (t || DateFnsModule)(); }, imports: [[CommonModule]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(DateFnsModule, { declarations: [FormatTimeInWordsPipe], imports: [CommonModule], exports: [FormatTimeInWordsPipe] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(DateFnsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [PIPES],\n                imports: [CommonModule],\n                exports: [PIPES],\n            }]\n    }], null, null);\n","// export * from './lib/decorators/index';\nexport * from './lib/directives/index';\nexport * from './lib/operators/index';\nexport * from './lib/pipes/index';\n","import { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function repeatWhen(notifier) {\n    return (source) => source.lift(new RepeatWhenOperator(notifier));\n}\nclass RepeatWhenOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n    }\n}\nclass RepeatWhenSubscriber extends OuterSubscriber {\n    constructor(destination, notifier, source) {\n        super(destination);\n        this.notifier = notifier;\n        this.source = source;\n        this.sourceIsBeingSubscribedTo = true;\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.sourceIsBeingSubscribedTo = true;\n        this.source.subscribe(this);\n    }\n    notifyComplete(innerSub) {\n        if (this.sourceIsBeingSubscribedTo === false) {\n            return super.complete();\n        }\n    }\n    complete() {\n        this.sourceIsBeingSubscribedTo = false;\n        if (!this.isStopped) {\n            if (!this.retries) {\n                this.subscribeToRetries();\n            }\n            if (!this.retriesSubscription || this.retriesSubscription.closed) {\n                return super.complete();\n            }\n            this._unsubscribeAndRecycle();\n            this.notifications.next();\n        }\n    }\n    _unsubscribe() {\n        const { notifications, retriesSubscription } = this;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    }\n    _unsubscribeAndRecycle() {\n        const { _unsubscribe } = this;\n        this._unsubscribe = null;\n        super._unsubscribeAndRecycle();\n        this._unsubscribe = _unsubscribe;\n        return this;\n    }\n    subscribeToRetries() {\n        this.notifications = new Subject();\n        let retries;\n        try {\n            const { notifier } = this;\n            retries = notifier(this.notifications);\n        }\n        catch (e) {\n            return super.complete();\n        }\n        this.retries = retries;\n        this.retriesSubscription = subscribeToResult(this, retries);\n    }\n}\n//# sourceMappingURL=repeatWhen.js.map","import { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return (source) => new SubscriptionDelayObservable(source, subscriptionDelay)\n            .lift(new DelayWhenOperator(delayDurationSelector));\n    }\n    return (source) => source.lift(new DelayWhenOperator(delayDurationSelector));\n}\nclass DelayWhenOperator {\n    constructor(delayDurationSelector) {\n        this.delayDurationSelector = delayDurationSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n    }\n}\nclass DelayWhenSubscriber extends OuterSubscriber {\n    constructor(destination, delayDurationSelector) {\n        super(destination);\n        this.delayDurationSelector = delayDurationSelector;\n        this.completed = false;\n        this.delayNotifierSubscriptions = [];\n        this.index = 0;\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(outerValue);\n        this.removeSubscription(innerSub);\n        this.tryComplete();\n    }\n    notifyError(error, innerSub) {\n        this._error(error);\n    }\n    notifyComplete(innerSub) {\n        const value = this.removeSubscription(innerSub);\n        if (value) {\n            this.destination.next(value);\n        }\n        this.tryComplete();\n    }\n    _next(value) {\n        const index = this.index++;\n        try {\n            const delayNotifier = this.delayDurationSelector(value, index);\n            if (delayNotifier) {\n                this.tryDelay(delayNotifier, value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n    _complete() {\n        this.completed = true;\n        this.tryComplete();\n        this.unsubscribe();\n    }\n    removeSubscription(subscription) {\n        subscription.unsubscribe();\n        const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n        if (subscriptionIdx !== -1) {\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n        }\n        return subscription.outerValue;\n    }\n    tryDelay(delayNotifier, value) {\n        const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n        if (notifierSubscription && !notifierSubscription.closed) {\n            const destination = this.destination;\n            destination.add(notifierSubscription);\n            this.delayNotifierSubscriptions.push(notifierSubscription);\n        }\n    }\n    tryComplete() {\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n            this.destination.complete();\n        }\n    }\n}\nclass SubscriptionDelayObservable extends Observable {\n    constructor(source, subscriptionDelay) {\n        super();\n        this.source = source;\n        this.subscriptionDelay = subscriptionDelay;\n    }\n    _subscribe(subscriber) {\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n    }\n}\nclass SubscriptionDelaySubscriber extends Subscriber {\n    constructor(parent, source) {\n        super();\n        this.parent = parent;\n        this.source = source;\n        this.sourceSubscribed = false;\n    }\n    _next(unused) {\n        this.subscribeToSource();\n    }\n    _error(err) {\n        this.unsubscribe();\n        this.parent.error(err);\n    }\n    _complete() {\n        this.unsubscribe();\n        this.subscribeToSource();\n    }\n    subscribeToSource() {\n        if (!this.sourceSubscribed) {\n            this.sourceSubscribed = true;\n            this.unsubscribe();\n            this.source.subscribe(this.parent);\n        }\n    }\n}\n//# sourceMappingURL=delayWhen.js.map","import { Subscriber } from '../Subscriber';\nexport function takeWhile(predicate, inclusive = false) {\n    return (source) => source.lift(new TakeWhileOperator(predicate, inclusive));\n}\nclass TakeWhileOperator {\n    constructor(predicate, inclusive) {\n        this.predicate = predicate;\n        this.inclusive = inclusive;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));\n    }\n}\nclass TakeWhileSubscriber extends Subscriber {\n    constructor(destination, predicate, inclusive) {\n        super(destination);\n        this.predicate = predicate;\n        this.inclusive = inclusive;\n        this.index = 0;\n    }\n    _next(value) {\n        const destination = this.destination;\n        let result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    }\n    nextOrComplete(value, predicateResult) {\n        const destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            if (this.inclusive) {\n                destination.next(value);\n            }\n            destination.complete();\n        }\n    }\n}\n//# sourceMappingURL=takeWhile.js.map","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the number of minutes between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of minutes\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * var result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n */\n\nexport default function differenceInMinutes(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import { ChangeDetectorRef, OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport { AsyncPipe } from '@angular/common';\nimport { interval, Observable, of } from 'rxjs';\nimport { delayWhen, map, repeatWhen, takeWhile, tap } from 'rxjs/operators';\n\nimport { differenceInMinutes, formatDistance } from 'date-fns/esm';\nimport { parseISO } from 'date-fns/esm';\n\nconst defaultConfig = { addSuffix: true };\n/**\n * impure pipe, which in general can lead to bad performance\n * but the backoff function limits the frequency the pipe checks for updates\n * so the performance is close to that of a pure pipe\n * the downside of this is that if you change the value of the input, the pipe might not notice for a while\n * so this pipe is intended for static data\n *\n * expected input is a time (number, string or Date)\n * output is a string expressing distance from that time to now, plus the suffix 'ago'\n * output refreshes at dynamic intervals, with refresh rate slowing down as the input time gets further away from now\n */\n@Pipe({ name: 'formatTimeInWords', pure: false })\nexport class FormatTimeInWordsPipe implements PipeTransform, OnDestroy {\n  static readonly NO_ARGS_ERROR = 'formatTimeInWords: missing required arguments';\n  private readonly async: AsyncPipe;\n\n  private isDestroyed = false;\n  private agoExpression: Observable<string>;\n\n  constructor(private cdr: ChangeDetectorRef) {\n    this.async = new AsyncPipe(this.cdr);\n  }\n\n  ngOnDestroy() {\n    this.isDestroyed = true; // pipe will stop executing after next iteration\n  }\n\n  transform(date: string | number | Date, options?): string {\n    if (date == null) {\n      throw new Error(FormatTimeInWordsPipe.NO_ARGS_ERROR);\n    }\n\n    // set the pipe to the Observable if not yet done, and return an async pipe\n    if (!this.agoExpression) {\n      this.agoExpression = this.timeAgo(date, { ...defaultConfig, ...options });\n    }\n    return this.async.transform(this.agoExpression);\n  }\n\n  private timeAgo(date: string | number | Date, options?): Observable<string> {\n    let nextBackoff = this.backoff(date);\n    return of(true).pipe(\n      // will not recheck input until delay completes\n      repeatWhen(notify => notify.pipe(delayWhen(() => interval(nextBackoff)))),\n      takeWhile(_ => !this.isDestroyed),\n      map(_ => formatDistance(this.stringToDate(date), new Date(), options)),\n      tap(_ => (nextBackoff = this.backoff(date))),\n    );\n  }\n\n  private backoff(date: string | number | Date): number {\n    const minutesElapsed = Math.abs(differenceInMinutes(new Date(), this.stringToDate(date))); // this will always be positive\n    let backoffAmountInSeconds: number;\n    if (minutesElapsed < 2) {\n      backoffAmountInSeconds = 5;\n    } else if (minutesElapsed >= 2 && minutesElapsed < 5) {\n      backoffAmountInSeconds = 15;\n    } else if (minutesElapsed >= 5 && minutesElapsed < 60) {\n      backoffAmountInSeconds = 30;\n    } else if (minutesElapsed >= 60) {\n      backoffAmountInSeconds = 300; // 5 minutes\n    }\n    return backoffAmountInSeconds * 1000; // return an amount of milliseconds\n  }\n\n  private stringToDate(date: string | number | Date): number | Date {\n    const isString = s => typeof s === 'string' || s instanceof String;\n    return isString(date) ? parseISO(date) : date;\n  }\n}\n","import { ChangeDetectorRef, Pipe } from '@angular/core';\nimport { AsyncPipe } from '@angular/common';\nimport { interval, of } from 'rxjs';\nimport { delayWhen, map, repeatWhen, takeWhile, tap } from 'rxjs/operators';\nimport { differenceInMinutes, formatDistance } from 'date-fns/esm';\nimport { parseISO } from 'date-fns/esm';\nimport * as i0 from \"@angular/core\";\nconst defaultConfig = { addSuffix: true };\n/**\n * impure pipe, which in general can lead to bad performance\n * but the backoff function limits the frequency the pipe checks for updates\n * so the performance is close to that of a pure pipe\n * the downside of this is that if you change the value of the input, the pipe might not notice for a while\n * so this pipe is intended for static data\n *\n * expected input is a time (number, string or Date)\n * output is a string expressing distance from that time to now, plus the suffix 'ago'\n * output refreshes at dynamic intervals, with refresh rate slowing down as the input time gets further away from now\n */\nexport class FormatTimeInWordsPipe {\n    constructor(cdr) {\n        this.cdr = cdr;\n        this.isDestroyed = false;\n        this.async = new AsyncPipe(this.cdr);\n    }\n    ngOnDestroy() {\n        this.isDestroyed = true; // pipe will stop executing after next iteration\n    }\n    transform(date, options) {\n        if (date == null) {\n            throw new Error(FormatTimeInWordsPipe.NO_ARGS_ERROR);\n        }\n        // set the pipe to the Observable if not yet done, and return an async pipe\n        if (!this.agoExpression) {\n            this.agoExpression = this.timeAgo(date, Object.assign({}, defaultConfig, options));\n        }\n        return this.async.transform(this.agoExpression);\n    }\n    timeAgo(date, options) {\n        let nextBackoff = this.backoff(date);\n        return of(true).pipe(\n        // will not recheck input until delay completes\n        repeatWhen(notify => notify.pipe(delayWhen(() => interval(nextBackoff)))), takeWhile(_ => !this.isDestroyed), map(_ => formatDistance(this.stringToDate(date), new Date(), options)), tap(_ => (nextBackoff = this.backoff(date))));\n    }\n    backoff(date) {\n        const minutesElapsed = Math.abs(differenceInMinutes(new Date(), this.stringToDate(date))); // this will always be positive\n        let backoffAmountInSeconds;\n        if (minutesElapsed < 2) {\n            backoffAmountInSeconds = 5;\n        }\n        else if (minutesElapsed >= 2 && minutesElapsed < 5) {\n            backoffAmountInSeconds = 15;\n        }\n        else if (minutesElapsed >= 5 && minutesElapsed < 60) {\n            backoffAmountInSeconds = 30;\n        }\n        else if (minutesElapsed >= 60) {\n            backoffAmountInSeconds = 300; // 5 minutes\n        }\n        return backoffAmountInSeconds * 1000; // return an amount of milliseconds\n    }\n    stringToDate(date) {\n        const isString = s => typeof s === 'string' || s instanceof String;\n        return isString(date) ? parseISO(date) : date;\n    }\n}\nFormatTimeInWordsPipe.NO_ARGS_ERROR = 'formatTimeInWords: missing required arguments';\nFormatTimeInWordsPipe.ngPipeDef = i0.ɵɵdefinePipe({ name: \"formatTimeInWords\", type: FormatTimeInWordsPipe, factory: function FormatTimeInWordsPipe_Factory(t) { return new (t || FormatTimeInWordsPipe)(i0.ɵɵinjectPipeChangeDetectorRef()); }, pure: false });\n/*@__PURE__*/ i0.ɵsetClassMetadata(FormatTimeInWordsPipe, [{\n        type: Pipe,\n        args: [{ name: 'formatTimeInWords', pure: false }]\n    }], function () { return [{ type: i0.ChangeDetectorRef }]; }, null);\n","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import { keyframes, style } from '@angular/animations';\n\nexport const wobble = [\n  style({\n    transform: 'translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg)',\n    offset: 0.15,\n  }),\n  style({\n    transform: 'translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg)',\n    offset: 0.3,\n  }),\n  style({\n    transform: 'translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg)',\n    offset: 0.45,\n  }),\n  style({\n    transform: 'translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg)',\n    offset: 0.6,\n  }),\n  style({\n    transform: 'translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg)',\n    offset: 0.75,\n  }),\n  style({ transform: 'none', offset: 1 }),\n];\n\nexport const jello = [\n  // style({transform: 'none', offset: .111}),\n  style({ transform: 'skewX(-12.5deg) skewY(-12.5deg)', offset: 0.111 }),\n  style({ transform: 'skewX(6.25deg) skewY(6.25deg)', offset: 0.222 }),\n  style({ transform: 'skewX(-3.125deg) skewY(-3.125deg)', offset: 0.333 }),\n  style({ transform: 'skewX(1.5625deg) skewY(1.5625deg)', offset: 0.444 }),\n  style({ transform: 'skewX(-0.78125deg) skewY(-0.78125deg)', offset: 0.555 }),\n  style({ transform: 'skewX(0.390625deg) skewY(0.390625deg)', offset: 0.666 }),\n  style({ transform: 'skewX(0.390625deg) skewY(0.390625deg)', offset: 0.777 }),\n  style({\n    transform: 'skewX(-0.1953125deg) skewY(-0.1953125deg)',\n    offset: 0.888,\n  }),\n  style({ transform: 'none', offset: 1 }),\n];\n\nexport const swing = [\n  style({ transform: 'rotate3d(0, 0, 1, 15deg)', offset: 0.2 }),\n  style({ transform: 'rotate3d(0, 0, 1, -10deg)', offset: 0.4 }),\n  style({ transform: 'rotate3d(0, 0, 1, 5deg)', offset: 0.6 }),\n  style({ transform: 'rotate3d(0, 0, 1, -5deg)', offset: 0.8 }),\n  style({ transform: 'none', offset: 1 }),\n];\n\nexport const slideOutLeft = [\n  style({ transform: 'translate3d(0, 0, 0)', offset: 0 }),\n  style({ transform: 'translate3d(-150%, 0, 0)', opacity: 0, offset: 1 }),\n];\n\nexport const zoomOutRight = [\n  style({\n    transform: 'scale3d(.475, .475, .475) translate3d(-42px, 0, 0)',\n    offset: 0.4,\n  }),\n  style({\n    transform: 'scale(.1) translate3d(2000px, 0, 0)',\n    'transform-origin': 'right center',\n    offset: 1,\n  }),\n];\n\nexport const rotateOutUpRight = [\n  style({\n    transform: 'rotate3d(0, 0, 0, 0deg)',\n    opacity: 1,\n    'transform-origin': 'right bottom',\n    offset: 0,\n  }),\n  style({\n    transform: 'rotate3d(0, 0, 1, 90deg)',\n    opacity: 0,\n    'transform-origin': 'right bottom',\n    offset: 1,\n  }),\n];\n\nexport const flipOutY = [\n  style({ transform: 'perspective(400px)', offset: 0 }),\n  style({\n    transform: 'perspective(400px) rotate3d(0, 1, 0, -15deg)',\n    opacity: 1,\n    offset: 0.33,\n  }),\n  style({\n    transform: 'perspective(400px) rotate3d(0, 1, 0, 90deg)',\n    opacity: 0,\n    offset: 1,\n  }),\n];\n","import { trigger, animate, transition, keyframes } from '@angular/animations';\n\nimport * as kf from './keyframes';\n\nexport const cardAnimation = trigger('cardAnimator', [\n  transition('* => wobble', animate(1000, keyframes(kf.wobble))),\n  transition('* => swing', animate(1000, keyframes(kf.swing))),\n  transition('* => jello', animate(1000, keyframes(kf.jello))),\n  transition('* => zoomOutRight', animate(1000, keyframes(kf.zoomOutRight))),\n  transition('* => slideOutLeft', animate(1000, keyframes(kf.slideOutLeft))),\n  transition('* => rotateOutUpRight', animate(1000, keyframes(kf.rotateOutUpRight))),\n  transition('* => flipOutY', animate(1000, keyframes(kf.flipOutY))),\n]);\n","import { trigger, animate, transition, style, state, query } from '@angular/animations';\n\nexport const fadeAnimation = trigger('fadeAnimation', [\n  transition('* => *', [\n    query(':enter', [style({ opacity: 0 })], { optional: true }),\n    query(':leave', [style({ opacity: 1 }), animate('0.3s', style({ opacity: 0 }))], { optional: true }),\n    query(':enter', [style({ opacity: 0 }), animate('0.3s', style({ opacity: 1 }))], { optional: true }),\n  ]),\n]);\n\nexport const fadeOutAnimation = trigger('fadeOutAnimation', [\n  state(\n    '*',\n    style({\n      position: 'absolute',\n      'min-width': '100%',\n      'min-height': '100%',\n      'max-width': '100%',\n      display: 'flex',\n      'flex-direction': 'column',\n      flex: '1',\n      height: '100%',\n    }),\n  ),\n  state(\n    'void',\n    style({\n      position: 'absolute',\n      'min-width': '100%',\n      'min-height': '100%',\n      'max-width': '100%',\n      display: 'flex',\n      'flex-direction': 'column',\n      flex: '1',\n      height: '100%',\n    }),\n  ),\n  transition('* => void', [\n    style({\n      opacity: 1,\n    }),\n    animate(\n      '150ms linear',\n      style({\n        opacity: 0,\n      }),\n    ),\n  ]),\n]);\n","import { trigger, animate, transition, style } from '@angular/animations';\n\nexport const expandAnimation = trigger('expandAnimation', [\n  transition(':enter', [style({ height: 0 }), animate('.4s ease', style({ height: '*' }))]),\n  transition(':leave', [animate('.4s ease', style({ height: 0 }))]),\n]);\n","import { animate, sequence, style, transition, trigger } from '@angular/animations';\n\nexport const listFadeAnimation = trigger('listFade', [\n  transition(':leave', [\n    style({ height: '*', opacity: '1', transform: 'translateX(0)' }),\n    sequence([\n      animate('250ms ease', style({ height: '*', opacity: 0, transform: 'translateX(50px)' })),\n      animate('100ms ease', style({ height: '0', opacity: 0, transform: 'translateX(50px)' })),\n    ]),\n  ]),\n  transition(':enter', [\n    style({ height: '0', opacity: '0', transform: 'translateX(50px)' }),\n    animate('350ms 350ms ease', style({ height: '*', opacity: 1, transform: 'translateX(0)' })),\n  ]),\n]);\n","import { trigger, transition, state, group, query, style, animate, animateChild } from '@angular/animations';\n\nexport const routeAnimation = trigger('routeAnimation', [\n  transition('* <=> *', [\n    // Initial state of new route\n    query(\n      ':enter',\n      style({\n        position: 'fixed',\n        width: '100%',\n        transform: 'translateX(-100%)',\n      }),\n      { optional: true },\n    ),\n    // move page off screen right on leave\n    query(\n      ':leave',\n      animate(\n        '500ms ease',\n        style({\n          position: 'fixed',\n          width: '100%',\n          transform: 'translateX(100%)',\n        }),\n      ),\n      {\n        optional: true,\n      },\n    ),\n    // move page in screen from left to right\n    query(':enter', animate('500ms ease', style({ opacity: 1, transform: 'translateX(0%)' })), { optional: true }),\n  ]),\n]);\n\nexport const hierarchicalRouteAnimation = trigger('routeAnimation', [\n  transition(':increment', [\n    style({ height: '!' }),\n    query(':enter', style({ transform: 'translateX(100%)' }), { optional: true }),\n    query(':enter, :leave', style({ position: 'absolute', top: 0, left: 0, right: 0 }), { optional: true }),\n    // animate the leave page away\n    group([\n      query(':leave', [animate('500ms ease-in-out', style({ transform: 'translateX(-100%)' }))], {\n        optional: true,\n      }),\n      // and now reveal the enter\n      query(':enter', animate('500ms ease-in-out', style({ transform: 'translateX(0)' })), {\n        optional: true,\n      }),\n      // query('@fadeAnimation', animateChild(), {optional: true}),\n    ]),\n  ]),\n  transition(':decrement', [\n    style({ height: '!' }),\n    query(':enter', style({ transform: 'translateX(-100%)' }), { optional: true }),\n    query(':enter, :leave', style({ position: 'absolute', top: 0, left: 0, right: 0 }), { optional: true }),\n    // animate the leave page away\n    group([\n      query(':leave', [animate('500ms ease-in-out', style({ transform: 'translateX(100%)' }))], {\n        optional: true,\n      }),\n      // and now reveal the enter\n      query(':enter', animate('500ms ease-in-out', style({ transform: 'translateX(0)' })), {\n        optional: true,\n      }),\n      // query('@fadeAnimation', animateChild() , {optional: true}),\n    ]),\n  ]),\n]);\n","import { trigger, animate, transition, style, state } from '@angular/animations';\n\nexport const rotateAnimation = trigger('rotateAnimation', [\n  state('initial', style({ transform: 'rotate(0deg)' })),\n  state('rotated', style({ transform: 'rotate(-180deg)' })),\n  transition('* => *', [animate('.4s ease')]),\n]);\n","import { trigger, animate, transition, style, state } from '@angular/animations';\n\nexport const scrollFabAnimation = trigger('scrollAnimation', [\n  state('show', style({ opacity: 1, transform: 'scale(1)' })),\n  state('hide', style({ opacity: 0, transform: 'scale(0)' })),\n  transition('show => hide', animate('500ms ease-out')),\n  transition('hide => show', animate('500ms ease-in')),\n]);\n","import { trigger, animate, transition, style, state } from '@angular/animations';\n\nexport const scrollAnimation = trigger('scrollAnimation', [\n  state('show', style({ opacity: 1, transform: 'translateX(0)' })),\n  state('hide', style({ opacity: 0, transform: 'translateX(-100%)' })),\n  transition('show => hide', animate('700ms ease-out')),\n  transition('hide => show', animate('700ms ease-in')),\n]);\n","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class AnimationsService {\n  constructor() {}\n\n  private static routeAnimationType: RouteAnimationType = 'ELEMENTS'; // 'NONE';\n\n  static isRouteAnimationsType(type: RouteAnimationType) {\n    return AnimationsService.routeAnimationType === type;\n  }\n\n  updateRouteAnimationType(pageAnimations: boolean, elementsAnimations: boolean) {\n    AnimationsService.routeAnimationType =\n      pageAnimations && elementsAnimations ? 'ALL' : pageAnimations ? 'PAGE' : elementsAnimations ? 'ELEMENTS' : 'NONE';\n  }\n}\n\nexport type RouteAnimationType = 'ALL' | 'PAGE' | 'ELEMENTS' | 'NONE';\n","import { Injectable } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class AnimationsService {\n    constructor() { }\n    static isRouteAnimationsType(type) {\n        return AnimationsService.routeAnimationType === type;\n    }\n    updateRouteAnimationType(pageAnimations, elementsAnimations) {\n        AnimationsService.routeAnimationType =\n            pageAnimations && elementsAnimations ? 'ALL' : pageAnimations ? 'PAGE' : elementsAnimations ? 'ELEMENTS' : 'NONE';\n    }\n}\nAnimationsService.routeAnimationType = 'ELEMENTS'; // 'NONE';\nAnimationsService.ngInjectableDef = i0.ɵɵdefineInjectable({ token: AnimationsService, factory: function AnimationsService_Factory(t) { return new (t || AnimationsService)(); }, providedIn: 'root' });\n/*@__PURE__*/ i0.ɵsetClassMetadata(AnimationsService, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null);\n","import { animate, query, style, transition, trigger, stagger, sequence } from '@angular/animations';\nimport { AnimationsService } from './animations.service';\n\nexport const ROUTE_ANIMATIONS_ELEMENTS = 'route-animations-elements';\n\nconst STEPS_ALL: any[] = [\n  query(':enter > *', style({ opacity: 0, position: 'fixed' }), {\n    optional: true,\n  }),\n  query(':enter .' + ROUTE_ANIMATIONS_ELEMENTS, style({ opacity: 0 }), {\n    optional: true,\n  }),\n  sequence([\n    query(\n      ':leave > *',\n      [\n        style({ transform: 'translateY(0%)', opacity: 1 }),\n        animate('0.2s ease-in-out', style({ transform: 'translateY(-3%)', opacity: 0 })),\n        style({ position: 'fixed' }),\n      ],\n      { optional: true },\n    ),\n    query(\n      ':enter > *',\n      [\n        style({\n          transform: 'translateY(-3%)',\n          opacity: 0,\n          position: 'static',\n        }),\n        animate('0.5s ease-in-out', style({ transform: 'translateY(0%)', opacity: 1 })),\n      ],\n      { optional: true },\n    ),\n  ]),\n  query(\n    ':enter .' + ROUTE_ANIMATIONS_ELEMENTS,\n    stagger(100, [\n      style({ transform: 'translateY(15%)', opacity: 0 }),\n      animate('0.5s ease-in-out', style({ transform: 'translateY(0%)', opacity: 1 })),\n    ]),\n    { optional: true },\n  ),\n];\nconst STEPS_NONE = [];\nconst STEPS_PAGE = [STEPS_ALL[0], STEPS_ALL[2]];\nconst STEPS_ELEMENTS = [STEPS_ALL[1], STEPS_ALL[3]];\n\nexport const routerTransition = trigger('routerTransition', [\n  transition(isRouteAnimationsAll, STEPS_ALL),\n  transition(isRouteAnimationsNone, STEPS_NONE),\n  transition(isRouteAnimationsPage, STEPS_PAGE),\n  transition(isRouteAnimationsElements, STEPS_ELEMENTS),\n]);\n\nexport function isRouteAnimationsAll() {\n  return AnimationsService.isRouteAnimationsType('ALL');\n}\n\nexport function isRouteAnimationsNone() {\n  return AnimationsService.isRouteAnimationsType('NONE');\n}\n\nexport function isRouteAnimationsPage() {\n  return AnimationsService.isRouteAnimationsType('PAGE');\n}\n\nexport function isRouteAnimationsElements() {\n  return AnimationsService.isRouteAnimationsType('ELEMENTS');\n}\n","import { trigger, animate, transition, style, state } from '@angular/animations';\nimport { SidenavState } from '@ngx-starter-kit/navigator';\n\nexport const sidenavAnimation = trigger('sidenavAnimation', [\n  state(SidenavState.Collapsed, style({ position: 'absolute', width: '66px' })),\n  state(SidenavState.CollapsedHover, style({ position: 'absolute', width: '270px' })),\n  state(SidenavState.Expanded, style({ position: 'relative', width: '270px' })),\n  state(\n    SidenavState.Mobile,\n    style({\n      position: 'absolute',\n      width: '270px',\n      transform: 'translate3d(-270px, 0, 0)',\n      visibility: 'hidden',\n    }),\n  ),\n  state(\n    SidenavState.MobileOpen,\n    style({\n      position: 'absolute',\n      width: '270px',\n      transform: 'translate3d(0, 0, 0)',\n      visibility: 'visible',\n    }),\n  ),\n  transition(`${SidenavState.Expanded} => ${SidenavState.CollapsedHover}`, [\n    style({ position: 'absolute' }),\n    animate('300ms cubic-bezier(.35, 0, .25, 1)'),\n  ]),\n  transition(`${SidenavState.Expanded} => ${SidenavState.Collapsed}`, [\n    style({ position: 'absolute' }),\n    animate('300ms cubic-bezier(.35, 0, .25, 1)'),\n  ]),\n  transition(`${SidenavState.CollapsedHover} => ${SidenavState.Collapsed}`, [\n    animate('300ms cubic-bezier(.35, 0, .25, 1)'),\n  ]),\n  transition(\n    `${SidenavState.Collapsed} => ${SidenavState.CollapsedHover}`,\n    animate('300ms cubic-bezier(.35, 0, .25, 1)'),\n  ),\n  transition(`${SidenavState.Mobile} => ${SidenavState.MobileOpen}`, animate('300ms cubic-bezier(.35, 0, .25, 1)')),\n  transition(`${SidenavState.MobileOpen} => ${SidenavState.Mobile}`, animate('300ms cubic-bezier(.35, 0, .25, 1)')),\n]);\n\nexport const dropdownAnimation = trigger('dropdownAnimation', [\n  state('collapsed', style({ height: 0 })),\n  state('expanded', style({ height: '*' })),\n  transition('collapsed <=> expanded', [animate('400ms cubic-bezier(.35, 0, .25, 1)')]),\n]);\n","export { Animations } from './lib/animations';\nexport * from './lib/card.animation';\nexport * from './lib/expand.animation';\nexport * from './lib/fade.animation';\nexport * from './lib/list.animation';\nexport * from './lib/rotate.animation';\nexport * from './lib/route.animation';\nexport * from './lib/scroll.animation';\nexport * from './lib/scroll-fab.animation';\nexport * from './lib/router.transition';\nexport * from './lib/sidenav.animation';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, Component, ViewEncapsulation, ElementRef, Input, Optional, ContentChildren, Directive, ChangeDetectionStrategy, Inject, NgModule } from '@angular/core';\nimport { MatLine, setLines, MatLineModule, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide a grid list to a tile and to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [1, \"mat-grid-tile\"];\nconst _c1 = [1, \"mat-figure\"];\nconst _c2 = [\"*\"];\nconst _c3 = [1, \"mat-grid-list-text\"];\nconst _c4 = [[[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c5 = [\"[mat-grid-avatar], [matGridAvatar]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c6 = [1, \"mat-grid-avatar\"];\nconst _c7 = [1, \"mat-grid-tile-header\"];\nconst _c8 = [1, \"mat-grid-tile-footer\"];\nconst _c9 = [1, \"mat-grid-list\"];\nconst MAT_GRID_LIST = new InjectionToken('MAT_GRID_LIST');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatGridTile {\n    /**\n     * @param {?} _element\n     * @param {?=} _gridList\n     */\n    constructor(_element, _gridList) {\n        this._element = _element;\n        this._gridList = _gridList;\n        this._rowspan = 1;\n        this._colspan = 1;\n    }\n    /**\n     * Amount of rows that the grid tile takes up.\n     * @return {?}\n     */\n    get rowspan() { return this._rowspan; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set rowspan(value) { this._rowspan = Math.round(coerceNumberProperty(value)); }\n    /**\n     * Amount of columns that the grid tile takes up.\n     * @return {?}\n     */\n    get colspan() { return this._colspan; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set colspan(value) { this._colspan = Math.round(coerceNumberProperty(value)); }\n    /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    _setStyle(property, value) {\n        ((/** @type {?} */ (this._element.nativeElement.style)))[property] = value;\n    }\n}\nMatGridTile.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatGridTile, selectors: [[\"mat-grid-tile\"]], factory: function MatGridTile_Factory(t) { return new (t || MatGridTile)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_GRID_LIST, 8)); }, hostBindings: function MatGridTile_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c0);\n    } }, inputs: { rowspan: \"rowspan\", colspan: \"colspan\" }, exportAs: [\"matGridTile\"], ngContentSelectors: _c2, consts: 2, vars: 0, template: function MatGridTile_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"figure\", _c1);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-footer,.mat-grid-tile .mat-grid-tile-header{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-footer>*,.mat-grid-tile .mat-grid-tile-header>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-tile-footer.mat-2-line,.mat-grid-tile .mat-grid-tile-header.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatGridTile, [{\n        type: Component,\n        args: [{ selector: 'mat-grid-tile',\n                exportAs: 'matGridTile',\n                host: {\n                    'class': 'mat-grid-tile'\n                },\n                template: \"<figure class=\\\"mat-figure\\\"><ng-content></ng-content></figure>\",\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-footer,.mat-grid-tile .mat-grid-tile-header{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-footer>*,.mat-grid-tile .mat-grid-tile-header>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-tile-footer.mat-2-line,.mat-grid-tile .mat-grid-tile-header.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_GRID_LIST]\n            }] }]; }, { constructor: [], _element: [], _gridList: [], _rowspan: [], _colspan: [], rowspan: [{\n            type: Input\n        }], rowspan: [], colspan: [{\n            type: Input\n        }], colspan: [], _setStyle: [] });\n/** @nocollapse */\nMatGridTile.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_GRID_LIST,] }] }\n];\nMatGridTile.propDecorators = {\n    rowspan: [{ type: Input }],\n    colspan: [{ type: Input }]\n};\nclass MatGridTileText {\n    /**\n     * @param {?} _element\n     */\n    constructor(_element) {\n        this._element = _element;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n}\nMatGridTileText.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatGridTileText, selectors: [[\"mat-grid-tile-header\"], [\"mat-grid-tile-footer\"]], factory: function MatGridTileText_Factory(t) { return new (t || MatGridTileText)(ɵngcc0.ɵɵdirectiveInject(ElementRef)); }, contentQueries: function MatGridTileText_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, ngContentSelectors: _c5, consts: 4, vars: 0, template: function MatGridTileText_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", _c3);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatGridTileText, [{\n        type: Component,\n        args: [{ selector: 'mat-grid-tile-header, mat-grid-tile-footer',\n                template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content><div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div><ng-content></ng-content>\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ElementRef }]; }, { constructor: [], _element: [], ngAfterContentInit: [], _lines: [{\n            type: ContentChildren,\n            args: [MatLine]\n        }] });\n/** @nocollapse */\nMatGridTileText.ctorParameters = () => [\n    { type: ElementRef }\n];\nMatGridTileText.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine,] }]\n};\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridAvatarCssMatStyler {\n}\nMatGridAvatarCssMatStyler.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatGridAvatarCssMatStyler, selectors: [[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], factory: function MatGridAvatarCssMatStyler_Factory(t) { return new (t || MatGridAvatarCssMatStyler)(); }, hostBindings: function MatGridAvatarCssMatStyler_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c6);\n    } } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatGridAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-grid-avatar], [matGridAvatar]',\n                host: { 'class': 'mat-grid-avatar' }\n            }]\n    }], null, null);\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridTileHeaderCssMatStyler {\n}\nMatGridTileHeaderCssMatStyler.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatGridTileHeaderCssMatStyler, selectors: [[\"mat-grid-tile-header\"]], factory: function MatGridTileHeaderCssMatStyler_Factory(t) { return new (t || MatGridTileHeaderCssMatStyler)(); }, hostBindings: function MatGridTileHeaderCssMatStyler_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c7);\n    } } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatGridTileHeaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-header',\n                host: { 'class': 'mat-grid-tile-header' }\n            }]\n    }], null, null);\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridTileFooterCssMatStyler {\n}\nMatGridTileFooterCssMatStyler.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatGridTileFooterCssMatStyler, selectors: [[\"mat-grid-tile-footer\"]], factory: function MatGridTileFooterCssMatStyler_Factory(t) { return new (t || MatGridTileFooterCssMatStyler)(); }, hostBindings: function MatGridTileFooterCssMatStyler_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c8);\n    } } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatGridTileFooterCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-footer',\n                host: { 'class': 'mat-grid-tile-footer' }\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * \\@docs-private\n */\nclass TileCoordinator {\n    constructor() {\n        /**\n         * Index at which the search for the next gap will start.\n         */\n        this.columnIndex = 0;\n        /**\n         * The current row index.\n         */\n        this.rowIndex = 0;\n    }\n    /**\n     * Gets the total number of rows occupied by tiles\n     * @return {?}\n     */\n    get rowCount() { return this.rowIndex + 1; }\n    /**\n     * Gets the total span of rows occupied by tiles.\n     * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n     * @return {?}\n     */\n    get rowspan() {\n        /** @type {?} */\n        const lastRowMax = Math.max(...this.tracker);\n        // if any of the tiles has a rowspan that pushes it beyond the total row count,\n        // add the difference to the rowcount\n        return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n    }\n    /**\n     * Updates the tile positions.\n     * @param {?} numColumns Amount of columns in the grid.\n     * @param {?} tiles\n     * @return {?}\n     */\n    update(numColumns, tiles) {\n        this.columnIndex = 0;\n        this.rowIndex = 0;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => this._trackTile(tile)));\n    }\n    /**\n     * Calculates the row and col position of a tile.\n     * @private\n     * @param {?} tile\n     * @return {?}\n     */\n    _trackTile(tile) {\n        // Find a gap large enough for this tile.\n        /** @type {?} */\n        const gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    }\n    /**\n     * Finds the next available space large enough to fit the tile.\n     * @private\n     * @param {?} tileCols\n     * @return {?}\n     */\n    _findMatchingGap(tileCols) {\n        if (tileCols > this.tracker.length) {\n            throw Error(`mat-grid-list: tile with colspan ${tileCols} is wider than ` +\n                `grid with cols=\"${this.tracker.length}\".`);\n        }\n        // Start index is inclusive, end index is exclusive.\n        /** @type {?} */\n        let gapStartIndex = -1;\n        /** @type {?} */\n        let gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n            // Continue iterating until we find a gap wide enough for this tile. Since gapEndIndex is\n            // exclusive, gapEndIndex is 0 means we didn't find a gap and should continue.\n        } while ((gapEndIndex - gapStartIndex < tileCols) || (gapEndIndex == 0));\n        // If we still didn't manage to find a gap, ensure that the index is\n        // at least zero so the tile doesn't get pulled out of the grid.\n        return Math.max(gapStartIndex, 0);\n    }\n    /**\n     * Move \"down\" to the next row.\n     * @private\n     * @return {?}\n     */\n    _nextRow() {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (let i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    }\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     * @private\n     * @param {?} gapStartIndex\n     * @return {?}\n     */\n    _findGapEndIndex(gapStartIndex) {\n        for (let i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    }\n    /**\n     * Update the tile tracker to account for the given tile in the given space.\n     * @private\n     * @param {?} start\n     * @param {?} tile\n     * @return {?}\n     */\n    _markTilePosition(start, tile) {\n        for (let i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    }\n}\n/**\n * Simple data structure for tile position (row, col).\n * \\@docs-private\n */\nclass TilePosition {\n    /**\n     * @param {?} row\n     * @param {?} col\n     */\n    constructor(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * RegExp that can be used to check whether a value will\n * be allowed inside a CSS `calc()` expression.\n * @type {?}\n */\nconst cssCalcAllowedValue = /^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$/;\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * \\@docs-private\n * @abstract\n */\nclass TileStyler {\n    constructor() {\n        this._rows = 0;\n        this._rowspan = 0;\n    }\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param {?} gutterSize Size of the grid's gutter.\n     * @param {?} tracker Instance of the TileCoordinator.\n     * @param {?} cols Amount of columns in the grid.\n     * @param {?} direction Layout direction of the grid.\n     * @return {?}\n     */\n    init(gutterSize, tracker, cols, direction) {\n        this._gutterSize = normalizeUnits(gutterSize);\n        this._rows = tracker.rowCount;\n        this._rowspan = tracker.rowspan;\n        this._cols = cols;\n        this._direction = direction;\n    }\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param {?} sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param {?} gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return {?} The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    getBaseTileSize(sizePercent, gutterFraction) {\n        // Take the base size percent (as would be if evenly dividing the size between cells),\n        // and then subtracting the size of one gutter. However, since there are no gutters on the\n        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n        // edge evenly among the cells).\n        return `(${sizePercent}% - (${this._gutterSize} * ${gutterFraction}))`;\n    }\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} offset Number of tiles that have already been rendered in the row/column.\n     * @return {?} Position of the tile as a CSS calc() expression.\n     */\n    getTilePosition(baseSize, offset) {\n        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n        // row/column (offset).\n        return offset === 0 ? '0' : calc(`(${baseSize} + ${this._gutterSize}) * ${offset}`);\n    }\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} span The tile's rowspan or colspan.\n     * @return {?} Size of the tile as a CSS calc() expression.\n     */\n    getTileSize(baseSize, span) {\n        return `(${baseSize} * ${span}) + (${span - 1} * ${this._gutterSize})`;\n    }\n    /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param {?} tile Tile to which to apply the styling.\n     * @param {?} rowIndex Index of the tile's row.\n     * @param {?} colIndex Index of the tile's column.\n     * @return {?}\n     */\n    setStyle(tile, rowIndex, colIndex) {\n        // Percent of the available horizontal space that one column takes up.\n        /** @type {?} */\n        let percentWidthPerTile = 100 / this._cols;\n        // Fraction of the vertical gutter size that each column takes up.\n        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n        /** @type {?} */\n        let gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    }\n    /**\n     * Sets the horizontal placement of the tile in the list.\n     * @param {?} tile\n     * @param {?} colIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    setColStyles(tile, colIndex, percentWidth, gutterWidth) {\n        // Base horizontal size of a column.\n        /** @type {?} */\n        let baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n        // The width and horizontal position of each tile is always calculated the same way, but the\n        // height and vertical position depends on the rowMode.\n        /** @type {?} */\n        let side = this._direction === 'rtl' ? 'right' : 'left';\n        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n    }\n    /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     * @return {?}\n     */\n    getGutterSpan() {\n        return `${this._gutterSize} * (${this._rowspan} - 1)`;\n    }\n    /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param {?} tileHeight Height of the tile.\n     * @return {?}\n     */\n    getTileSpan(tileHeight) {\n        return `${this._rowspan} * ${this.getTileSize(tileHeight, 1)}`;\n    }\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method can be implemented by each type of TileStyler.\n     * \\@docs-private\n     * @return {?}\n     */\n    getComputedHeight() { return null; }\n}\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example `<mat-grid-list cols=\"3\" rowHeight=\"100px\">`\n * \\@docs-private\n */\nclass FixedTileStyler extends TileStyler {\n    /**\n     * @param {?} fixedRowHeight\n     */\n    constructor(fixedRowHeight) {\n        super();\n        this.fixedRowHeight = fixedRowHeight;\n    }\n    /**\n     * @param {?} gutterSize\n     * @param {?} tracker\n     * @param {?} cols\n     * @param {?} direction\n     * @return {?}\n     */\n    init(gutterSize, tracker, cols, direction) {\n        super.init(gutterSize, tracker, cols, direction);\n        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n        if (!cssCalcAllowedValue.test(this.fixedRowHeight)) {\n            throw Error(`Invalid value \"${this.fixedRowHeight}\" set as rowHeight.`);\n        }\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex) {\n        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n    }\n    /**\n     * @return {?}\n     */\n    getComputedHeight() {\n        return [\n            'height', calc(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        list._setListStyle(['height', null]);\n        if (list._tiles) {\n            list._tiles.forEach((/**\n             * @param {?} tile\n             * @return {?}\n             */\n            tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            }));\n        }\n    }\n}\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example `<mat-grid-list cols=\"3\" rowHeight=\"3:1\">`\n * \\@docs-private\n */\nclass RatioTileStyler extends TileStyler {\n    /**\n     * @param {?} value\n     */\n    constructor(value) {\n        super();\n        this._parseRatio(value);\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex, percentWidth, gutterWidth) {\n        /** @type {?} */\n        let percentHeightPerTile = percentWidth / this.rowHeightRatio;\n        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n        // Use padding-top and margin-top to maintain the given aspect ratio, as\n        // a percentage-based value for these properties is applied versus the *width* of the\n        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n    }\n    /**\n     * @return {?}\n     */\n    getComputedHeight() {\n        return [\n            'paddingBottom', calc(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        list._setListStyle(['paddingBottom', null]);\n        list._tiles.forEach((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => {\n            tile._setStyle('marginTop', null);\n            tile._setStyle('paddingTop', null);\n        }));\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _parseRatio(value) {\n        /** @type {?} */\n        const ratioParts = value.split(':');\n        if (ratioParts.length !== 2) {\n            throw Error(`mat-grid-list: invalid ratio given for row-height: \"${value}\"`);\n        }\n        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n    }\n}\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example `<mat-grid-list cols=\"3\" rowHeight=\"fit\">`\n *\n * \\@docs-private\n */\nclass FitTileStyler extends TileStyler {\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex) {\n        // Percent of the available vertical space that one row takes up.\n        /** @type {?} */\n        let percentHeightPerTile = 100 / this._rowspan;\n        // Fraction of the horizontal gutter size that each column takes up.\n        /** @type {?} */\n        let gutterHeightPerTile = (this._rows - 1) / this._rows;\n        // Base vertical size of a column.\n        /** @type {?} */\n        let baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        if (list._tiles) {\n            list._tiles.forEach((/**\n             * @param {?} tile\n             * @return {?}\n             */\n            tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            }));\n        }\n    }\n}\n/**\n * Wraps a CSS string in a calc function\n * @param {?} exp\n * @return {?}\n */\nfunction calc(exp) {\n    return `calc(${exp})`;\n}\n/**\n * Appends pixels to a CSS string if no units are given.\n * @param {?} value\n * @return {?}\n */\nfunction normalizeUnits(value) {\n    return value.match(/([A-Za-z%]+)$/) ? value : `${value}px`;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\n/** @type {?} */\nconst MAT_FIT_MODE = 'fit';\nclass MatGridList {\n    /**\n     * @param {?} _element\n     * @param {?} _dir\n     */\n    constructor(_element, _dir) {\n        this._element = _element;\n        this._dir = _dir;\n        /**\n         * The amount of space between tiles. This will be something like '5px' or '2em'.\n         */\n        this._gutter = '1px';\n    }\n    /**\n     * Amount of columns in the grid list.\n     * @return {?}\n     */\n    get cols() { return this._cols; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set cols(value) {\n        this._cols = Math.max(1, Math.round(coerceNumberProperty(value)));\n    }\n    /**\n     * Size of the grid list's gutter in pixels.\n     * @return {?}\n     */\n    get gutterSize() { return this._gutter; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set gutterSize(value) { this._gutter = `${value == null ? '' : value}`; }\n    /**\n     * Set internal representation of row height from the user-provided value.\n     * @return {?}\n     */\n    get rowHeight() { return this._rowHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set rowHeight(value) {\n        /** @type {?} */\n        const newValue = `${value == null ? '' : value}`;\n        if (newValue !== this._rowHeight) {\n            this._rowHeight = newValue;\n            this._setTileStyler(this._rowHeight);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._checkCols();\n        this._checkRowHeight();\n    }\n    /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._layoutTiles();\n    }\n    /**\n     * Throw a friendly error if cols property is missing\n     * @private\n     * @return {?}\n     */\n    _checkCols() {\n        if (!this.cols) {\n            throw Error(`mat-grid-list: must pass in number of columns. ` +\n                `Example: <mat-grid-list cols=\"3\">`);\n        }\n    }\n    /**\n     * Default to equal width:height if rowHeight property is missing\n     * @private\n     * @return {?}\n     */\n    _checkRowHeight() {\n        if (!this._rowHeight) {\n            this._setTileStyler('1:1');\n        }\n    }\n    /**\n     * Creates correct Tile Styler subtype based on rowHeight passed in by user\n     * @private\n     * @param {?} rowHeight\n     * @return {?}\n     */\n    _setTileStyler(rowHeight) {\n        if (this._tileStyler) {\n            this._tileStyler.reset(this);\n        }\n        if (rowHeight === MAT_FIT_MODE) {\n            this._tileStyler = new FitTileStyler();\n        }\n        else if (rowHeight && rowHeight.indexOf(':') > -1) {\n            this._tileStyler = new RatioTileStyler(rowHeight);\n        }\n        else {\n            this._tileStyler = new FixedTileStyler(rowHeight);\n        }\n    }\n    /**\n     * Computes and applies the size and position for all children grid tiles.\n     * @private\n     * @return {?}\n     */\n    _layoutTiles() {\n        if (!this._tileCoordinator) {\n            this._tileCoordinator = new TileCoordinator();\n        }\n        /** @type {?} */\n        const tracker = this._tileCoordinator;\n        /** @type {?} */\n        const tiles = this._tiles.filter((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => !tile._gridList || tile._gridList === this));\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._tileCoordinator.update(this.cols, tiles);\n        this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n        tiles.forEach((/**\n         * @param {?} tile\n         * @param {?} index\n         * @return {?}\n         */\n        (tile, index) => {\n            /** @type {?} */\n            const pos = tracker.positions[index];\n            this._tileStyler.setStyle(tile, pos.row, pos.col);\n        }));\n        this._setListStyle(this._tileStyler.getComputedHeight());\n    }\n    /**\n     * Sets style on the main grid-list element, given the style name and value.\n     * @param {?} style\n     * @return {?}\n     */\n    _setListStyle(style) {\n        if (style) {\n            ((/** @type {?} */ (this._element.nativeElement.style)))[style[0]] = style[1];\n        }\n    }\n}\nMatGridList.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatGridList, selectors: [[\"mat-grid-list\"]], factory: function MatGridList_Factory(t) { return new (t || MatGridList)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Directionality, 8)); }, contentQueries: function MatGridList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatGridTile, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tiles = _t);\n    } }, hostBindings: function MatGridList_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c9);\n    } }, inputs: { cols: \"cols\", gutterSize: \"gutterSize\", rowHeight: \"rowHeight\" }, exportAs: [\"matGridList\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_GRID_LIST,\n                useExisting: MatGridList\n            }])], ngContentSelectors: _c2, consts: 2, vars: 0, template: function MatGridList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-footer,.mat-grid-tile .mat-grid-tile-header{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-footer>*,.mat-grid-tile .mat-grid-tile-header>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-tile-footer.mat-2-line,.mat-grid-tile .mat-grid-tile-header.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatGridList, [{\n        type: Component,\n        args: [{ selector: 'mat-grid-list',\n                exportAs: 'matGridList',\n                template: \"<div><ng-content></ng-content></div>\",\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-footer,.mat-grid-tile .mat-grid-tile-header{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-footer>*,.mat-grid-tile .mat-grid-tile-header>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-tile-footer.mat-2-line,.mat-grid-tile .mat-grid-tile-header.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\"],\n                host: {\n                    'class': 'mat-grid-list'\n                },\n                providers: [{\n                        provide: MAT_GRID_LIST,\n                        useExisting: MatGridList\n                    }],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ElementRef }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { constructor: [], _element: [], _dir: [], _gutter: [], cols: [{\n            type: Input\n        }], cols: [], _cols: [], gutterSize: [{\n            type: Input\n        }], gutterSize: [], rowHeight: [{\n            type: Input\n        }], rowHeight: [], _rowHeight: [], ngOnInit: [], ngAfterContentChecked: [], _checkCols: [], _checkRowHeight: [], _setTileStyler: [], _tileStyler: [], _layoutTiles: [], _tileCoordinator: [], _setListStyle: [], _tiles: [{\n            type: ContentChildren,\n            args: [MatGridTile, { descendants: true }]\n        }] });\n/** @nocollapse */\nMatGridList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatGridList.propDecorators = {\n    _tiles: [{ type: ContentChildren, args: [MatGridTile, { descendants: true },] }],\n    cols: [{ type: Input }],\n    gutterSize: [{ type: Input }],\n    rowHeight: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatGridListModule {\n}\nMatGridListModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: MatGridListModule });\nMatGridListModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function MatGridListModule_Factory(t) { return new (t || MatGridListModule)(); }, imports: [[MatLineModule, MatCommonModule],\n        MatLineModule,\n        MatCommonModule] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(MatGridListModule, { declarations: function () { return [MatGridList,\n        MatGridTile,\n        MatGridTileText,\n        MatGridTileHeaderCssMatStyler,\n        MatGridTileFooterCssMatStyler,\n        MatGridAvatarCssMatStyler]; }, imports: function () { return [MatLineModule, MatCommonModule]; }, exports: function () { return [MatGridList,\n        MatGridTile,\n        MatGridTileText,\n        MatLineModule,\n        MatCommonModule,\n        MatGridTileHeaderCssMatStyler,\n        MatGridTileFooterCssMatStyler,\n        MatGridAvatarCssMatStyler]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatGridListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatCommonModule],\n                exports: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ],\n                declarations: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ]\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatGridListModule, MatGridList, MatGridTile, MatGridTileText, MatGridAvatarCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileFooterCssMatStyler, MAT_GRID_LIST as ɵa11 };\n\n//# sourceMappingURL=grid-list.js.map","import { Directive, ElementRef, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n  selector: '[ngxClickOutside]',\n})\nexport class ClickOutsideDirective {\n  @Output()\n  public ngxClickOutside = new EventEmitter<MouseEvent>();\n\n  constructor(private elementRef: ElementRef) {}\n\n  @HostListener('document:click', ['$event', '$event.target'])\n  public onClick(event: MouseEvent, targetElement: HTMLElement): void {\n    if (!targetElement) {\n      return;\n    }\n\n    const clickedInside = this.elementRef.nativeElement.contains(targetElement);\n    if (!clickedInside) {\n      this.ngxClickOutside.emit(event);\n    }\n  }\n}\n","import { Directive, ElementRef, EventEmitter, HostListener, Output } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class ClickOutsideDirective {\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        this.ngxClickOutside = new EventEmitter();\n    }\n    onClick(event, targetElement) {\n        if (!targetElement) {\n            return;\n        }\n        const clickedInside = this.elementRef.nativeElement.contains(targetElement);\n        if (!clickedInside) {\n            this.ngxClickOutside.emit(event);\n        }\n    }\n}\nClickOutsideDirective.ngDirectiveDef = i0.ɵɵdefineDirective({ type: ClickOutsideDirective, selectors: [[\"\", \"ngxClickOutside\", \"\"]], factory: function ClickOutsideDirective_Factory(t) { return new (t || ClickOutsideDirective)(i0.ɵɵdirectiveInject(i0.ElementRef)); }, hostBindings: function ClickOutsideDirective_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function ClickOutsideDirective_click_HostBindingHandler($event) { return ctx.onClick($event, $event.target); }, false, i0.ɵɵresolveDocument);\n    } }, outputs: { ngxClickOutside: \"ngxClickOutside\" } });\n/*@__PURE__*/ i0.ɵsetClassMetadata(ClickOutsideDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngxClickOutside]',\n            }]\n    }], function () { return [{ type: i0.ElementRef }]; }, { ngxClickOutside: [{\n            type: Output\n        }], onClick: [{\n            type: HostListener,\n            args: ['document:click', ['$event', '$event.target']]\n        }] });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directive, EventEmitter, Input, isDevMode, Output, Injectable, SkipSelf, Optional, NgModule, ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation, Inject, ɵɵdefineInjectable } from '@angular/core';\nimport { mixinDisabled, mixinInitialized, AnimationCurves, AnimationDurations } from '@angular/material/core';\nimport { Subject, merge } from 'rxjs';\nimport { animate, state, style, transition, trigger, keyframes, query, animateChild } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @param {?} id\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"mat-sort-header\", \"\"];\nconst _c1 = [1, \"mat-sort-header-container\"];\nconst _c2 = [\"type\", \"button\", 1, \"mat-sort-header-button\", 3, \"focus\", \"blur\"];\nconst _c3 = [\"class\", \"mat-sort-header-arrow\", 4, \"ngIf\"];\nconst _c4 = [1, \"mat-sort-header-arrow\"];\nconst _c5 = [1, \"mat-sort-header-stem\"];\nconst _c6 = [1, \"mat-sort-header-indicator\"];\nconst _c7 = [1, \"mat-sort-header-pointer-left\"];\nconst _c8 = [1, \"mat-sort-header-pointer-right\"];\nconst _c9 = [1, \"mat-sort-header-pointer-middle\"];\nfunction MatSortHeader_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r98 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", _c4);\n    ɵngcc0.ɵɵlistener(\"@arrowPosition.start\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r98); const ctx_r97 = ɵngcc0.ɵɵnextContext(); return ctx_r97._disableViewStateAnimation = true; });\n    ɵngcc0.ɵɵlistener(\"@arrowPosition.done\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r98); const ctx_r99 = ɵngcc0.ɵɵnextContext(); return ctx_r99._disableViewStateAnimation = false; });\n    ɵngcc0.ɵɵelement(1, \"div\", _c5);\n    ɵngcc0.ɵɵelementStart(2, \"div\", _c6);\n    ɵngcc0.ɵɵelement(3, \"div\", _c7);\n    ɵngcc0.ɵɵelement(4, \"div\", _c8);\n    ɵngcc0.ɵɵelement(5, \"div\", _c9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r96 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@arrowOpacity\", ctx_r96._getArrowViewState())(\"@arrowPosition\", ctx_r96._getArrowViewState())(\"@allowChildren\", ctx_r96._getArrowDirectionState());\n    ɵngcc0.ɵɵselect(2);\n    ɵngcc0.ɵɵproperty(\"@indicator\", ctx_r96._getArrowDirectionState());\n    ɵngcc0.ɵɵselect(3);\n    ɵngcc0.ɵɵproperty(\"@leftPointer\", ctx_r96._getArrowDirectionState());\n    ɵngcc0.ɵɵselect(4);\n    ɵngcc0.ɵɵproperty(\"@rightPointer\", ctx_r96._getArrowDirectionState());\n} }\nconst _c10 = [\"*\"];\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/**\n * \\@docs-private\n * @param {?} direction\n * @return {?}\n */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatSort.\n/**\n * \\@docs-private\n */\nclass MatSortBase {\n}\n/** @type {?} */\nconst _MatSortMixinBase = mixinInitialized(mixinDisabled(MatSortBase));\n/**\n * Container for MatSortables to manage the sort state and provide default sort parameters.\n */\nclass MatSort extends _MatSortMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Collection of all registered sortables that this directive manages.\n         */\n        this.sortables = new Map();\n        /**\n         * Used to notify any child components listening to state changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overriden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /**\n         * Event emitted when the user changes either the active sort or sort direction.\n         */\n        this.sortChange = new EventEmitter();\n    }\n    /**\n     * The sort direction of the currently active MatSortable.\n     * @return {?}\n     */\n    get direction() { return this._direction; }\n    /**\n     * @param {?} direction\n     * @return {?}\n     */\n    set direction(direction) {\n        if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overriden by the MatSortable's disable clear input.\n     * @return {?}\n     */\n    get disableClear() { return this._disableClear; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    register(sortable) {\n        if (!sortable.id) {\n            throw getSortHeaderMissingIdError();\n        }\n        if (this.sortables.has(sortable.id)) {\n            throw getSortDuplicateSortableIdError(sortable.id);\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /**\n     * Sets the active sort id and determines the new sort direction.\n     * @param {?} sortable\n     * @return {?}\n     */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /**\n     * Returns the next sort direction of the active sortable, checking for potential overrides.\n     * @param {?} sortable\n     * @return {?}\n     */\n    getNextSortDirection(sortable) {\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        /** @type {?} */\n        const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n        /** @type {?} */\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        /** @type {?} */\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._markInitialized();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatSort.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatSort, selectors: [[\"\", \"matSort\", \"\"]], factory: function MatSort_Factory(t) { return ɵMatSort_BaseFactory(t || MatSort); }, inputs: { disabled: [\"matSortDisabled\", \"disabled\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"], active: [\"matSortActive\", \"active\"] }, outputs: { sortChange: \"matSortChange\" }, exportAs: [\"matSort\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()] });\nconst ɵMatSort_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSort);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatSort, [{\n        type: Directive,\n        args: [{\n                selector: '[matSort]',\n                exportAs: 'matSort',\n                inputs: ['disabled: matSortDisabled']\n            }]\n    }], null, { constructor: [], sortables: [], _stateChanges: [], start: [{\n            type: Input,\n            args: ['matSortStart']\n        }], _direction: [], sortChange: [{\n            type: Output,\n            args: ['matSortChange']\n        }], direction: [{\n            type: Input,\n            args: ['matSortDirection']\n        }], direction: [], disableClear: [{\n            type: Input,\n            args: ['matSortDisableClear']\n        }], disableClear: [], _disableClear: [], register: [], deregister: [], sort: [], active: [{\n            type: Input,\n            args: ['matSortActive']\n        }], getNextSortDirection: [], ngOnInit: [], ngOnChanges: [], ngOnDestroy: [] });\nMatSort.propDecorators = {\n    active: [{ type: Input, args: ['matSortActive',] }],\n    start: [{ type: Input, args: ['matSortStart',] }],\n    direction: [{ type: Input, args: ['matSortDirection',] }],\n    disableClear: [{ type: Input, args: ['matSortDisableClear',] }],\n    sortChange: [{ type: Output, args: ['matSortChange',] }]\n};\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear.\n * @param {?} start\n * @param {?} disableClear\n * @return {?}\n */\nfunction getSortDirectionCycle(start, disableClear) {\n    /** @type {?} */\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' +\n    AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * \\@docs-private\n * @type {?}\n */\nconst matSortAnimations = {\n    /**\n     * Animation that moves the sort indicator.\n     */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that rotates the left pointer of the indicator based on the sorting direction.\n     */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that rotates the right pointer of the indicator based on the sorting direction.\n     */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that controls the arrow opacity.\n     */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: .54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(-25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(25%)' })\n        ]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(-25%)' })\n        ]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /**\n     * Necessary trigger that calls animate on children animations.\n     */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [\n            query('@*', animateChild(), { optional: true })\n        ])\n    ]),\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * ARIA label for the sorting button.\n         */\n        this.sortButtonLabel = (/**\n         * @param {?} id\n         * @return {?}\n         */\n        (id) => {\n            return `Change sorting for ${id}`;\n        });\n    }\n}\nMatSortHeaderIntl.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: MatSortHeaderIntl, factory: function MatSortHeaderIntl_Factory(t) { return new (t || MatSortHeaderIntl)(); }, providedIn: 'root' });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatSortHeaderIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, { constructor: [], changes: [], sortButtonLabel: [] });\n/** @nocollapse */ MatSortHeaderIntl.ngInjectableDef = ɵɵdefineInjectable({ factory: function MatSortHeaderIntl_Factory() { return new MatSortHeaderIntl(); }, token: MatSortHeaderIntl, providedIn: \"root\" });\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to the sort header.\n/**\n * \\@docs-private\n */\nclass MatSortHeaderBase {\n}\n/** @type {?} */\nconst _MatSortHeaderMixinBase = mixinDisabled(MatSortHeaderBase);\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderMixinBase {\n    /**\n     * @param {?} _intl\n     * @param {?} changeDetectorRef\n     * @param {?} _sort\n     * @param {?} _columnDef\n     */\n    constructor(_intl, changeDetectorRef, _sort, _columnDef) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The direction the arrow should be facing according to the current state.\n         */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /**\n         * Sets the position of the arrow that displays when sorted.\n         */\n        this.arrowPosition = 'after';\n        if (!_sort) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        this._rerenderSubscription = merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * Overrides the disable clear value of the containing MatSort for this MatSortable.\n     * @return {?}\n     */\n    get disableClear() { return this._disableClear; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({ toState: this._isSorted() ? 'active' : this._arrowDirection });\n        this._sort.register(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     * @param {?} visible\n     * @return {?}\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     * @param {?} viewState\n     * @return {?}\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState;\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /**\n     * Triggers the sort on this sort header and removes the indicator hint.\n     * @return {?}\n     */\n    _handleClick() {\n        if (this._isDisabled()) {\n            return;\n        }\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n        // If the arrow is now sorted, animate the arrow into place. Otherwise, animate it away into\n        // the direction it is facing.\n        /** @type {?} */\n        const viewState = this._isSorted() ?\n            { fromState: this._arrowDirection, toState: 'active' } :\n            { fromState: 'active', toState: this._arrowDirection };\n        this._setAnimationTransitionState(viewState);\n        this._showIndicatorHint = false;\n    }\n    /**\n     * Whether this MatSortHeader is currently sorted in either ascending or descending order.\n     * @return {?}\n     */\n    _isSorted() {\n        return this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n    }\n    /**\n     * Returns the animation state for the arrow direction (indicator and pointers).\n     * @return {?}\n     */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /**\n     * Returns the arrow position state (opacity, translation).\n     * @return {?}\n     */\n    _getArrowViewState() {\n        /** @type {?} */\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     * @return {?}\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ?\n            this._sort.direction :\n            (this.start || this._sort.start);\n    }\n    /**\n     * @return {?}\n     */\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     * @return {?}\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return null;\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /**\n     * Whether the arrow inside the sort header should be rendered.\n     * @return {?}\n     */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n}\nMatSortHeader.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatSortHeader, selectors: [[\"\", \"mat-sort-header\", \"\"]], factory: function MatSortHeader_Factory(t) { return new (t || MatSortHeader)(ɵngcc0.ɵɵdirectiveInject(MatSortHeaderIntl), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatSort, 8), ɵngcc0.ɵɵdirectiveInject('MAT_SORT_HEADER_COLUMN_DEF', 8)); }, hostBindings: function MatSortHeader_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSortHeader_click_HostBindingHandler($event) { return ctx._handleClick(); });\n        ɵngcc0.ɵɵlistener(\"mouseenter\", function MatSortHeader_mouseenter_HostBindingHandler($event) { return ctx._setIndicatorHintVisible(true); });\n        ɵngcc0.ɵɵlistener(\"longpress\", function MatSortHeader_longpress_HostBindingHandler($event) { return ctx._setIndicatorHintVisible(true); });\n        ɵngcc0.ɵɵlistener(\"mouseleave\", function MatSortHeader_mouseleave_HostBindingHandler($event) { return ctx._setIndicatorHintVisible(false); });\n        ɵngcc0.ɵɵstyling();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-sort\", ctx._getAriaSortAttribute());\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-disabled\", ctx._isDisabled());\n        ɵngcc0.ɵɵstylingApply();\n    } }, inputs: { disabled: \"disabled\", arrowPosition: \"arrowPosition\", disableClear: \"disableClear\", id: [\"mat-sort-header\", \"id\"], start: \"start\" }, exportAs: [\"matSortHeader\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c10, consts: 4, vars: 5, template: function MatSortHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", _c1);\n        ɵngcc0.ɵɵstyling();\n        ɵngcc0.ɵɵelementStart(1, \"button\", _c2);\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSortHeader_Template_button_focus_1_listener($event) { return ctx._setIndicatorHintVisible(true); });\n        ɵngcc0.ɵɵlistener(\"blur\", function MatSortHeader_Template_button_blur_1_listener($event) { return ctx._setIndicatorHintVisible(false); });\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, MatSortHeader_div_3_Template, 6, 6, \"div\", _c3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-sorted\", ctx._isSorted());\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-position-before\", ctx.arrowPosition == \"before\");\n        ɵngcc0.ɵɵstylingApply();\n        ɵngcc0.ɵɵselect(1);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx._isDisabled() || null)(\"aria-label\", ctx._intl.sortButtonLabel(ctx.id));\n        ɵngcc0.ɵɵselect(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._renderArrow());\n    } }, directives: [ɵngcc1.NgIf], styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-button{border:none;background:0 0;display:flex;align-items:center;padding:0;cursor:inherit;outline:0;font:inherit;color:currentColor}.mat-sort-header-button::-moz-focus-inner{border:0}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}@media (-ms-high-contrast:active){.mat-sort-header-stem{width:0;border-left:solid 2px}}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}@media (-ms-high-contrast:active){.mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}@media (-ms-high-contrast:active){.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\"], encapsulation: 2, data: { animation: [\n            matSortAnimations.indicator,\n            matSortAnimations.leftPointer,\n            matSortAnimations.rightPointer,\n            matSortAnimations.arrowOpacity,\n            matSortAnimations.arrowPosition,\n            matSortAnimations.allowChildren,\n        ] }, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatSortHeader, [{\n        type: Component,\n        args: [{ selector: '[mat-sort-header]',\n                exportAs: 'matSortHeader',\n                template: \"<div class=\\\"mat-sort-header-container\\\" [class.mat-sort-header-sorted]=\\\"_isSorted()\\\" [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\"><button class=\\\"mat-sort-header-button\\\" type=\\\"button\\\" [attr.disabled]=\\\"_isDisabled() || null\\\" [attr.aria-label]=\\\"_intl.sortButtonLabel(id)\\\" (focus)=\\\"_setIndicatorHintVisible(true)\\\" (blur)=\\\"_setIndicatorHintVisible(false)\\\"><ng-content></ng-content></button><div class=\\\"mat-sort-header-arrow\\\" *ngIf=\\\"_renderArrow()\\\" [@arrowOpacity]=\\\"_getArrowViewState()\\\" [@arrowPosition]=\\\"_getArrowViewState()\\\" [@allowChildren]=\\\"_getArrowDirectionState()\\\" (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\" (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\"><div class=\\\"mat-sort-header-stem\\\"></div><div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\"><div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div><div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div><div class=\\\"mat-sort-header-pointer-middle\\\"></div></div></div></div>\",\n                styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-button{border:none;background:0 0;display:flex;align-items:center;padding:0;cursor:inherit;outline:0;font:inherit;color:currentColor}.mat-sort-header-button::-moz-focus-inner{border:0}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}@media (-ms-high-contrast:active){.mat-sort-header-stem{width:0;border-left:solid 2px}}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}@media (-ms-high-contrast:active){.mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}@media (-ms-high-contrast:active){.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\"],\n                host: {\n                    '(click)': '_handleClick()',\n                    '(mouseenter)': '_setIndicatorHintVisible(true)',\n                    '(longpress)': '_setIndicatorHintVisible(true)',\n                    '(mouseleave)': '_setIndicatorHintVisible(false)',\n                    '[attr.aria-sort]': '_getAriaSortAttribute()',\n                    '[class.mat-sort-header-disabled]': '_isDisabled()'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                animations: [\n                    matSortAnimations.indicator,\n                    matSortAnimations.leftPointer,\n                    matSortAnimations.rightPointer,\n                    matSortAnimations.arrowOpacity,\n                    matSortAnimations.arrowPosition,\n                    matSortAnimations.allowChildren,\n                ]\n            }]\n    }], function () { return [{ type: MatSortHeaderIntl }, { type: ChangeDetectorRef }, { type: MatSort, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: ['MAT_SORT_HEADER_COLUMN_DEF']\n            }, {\n                type: Optional\n            }] }]; }, { constructor: [], _intl: [], _sort: [], _columnDef: [], _showIndicatorHint: [], _arrowDirection: [], _disableViewStateAnimation: [], arrowPosition: [{\n            type: Input\n        }], _rerenderSubscription: [], disableClear: [{\n            type: Input\n        }], disableClear: [], _disableClear: [], ngOnInit: [], id: [{\n            type: Input,\n            args: ['mat-sort-header']\n        }], ngOnDestroy: [], _setIndicatorHintVisible: [], _setAnimationTransitionState: [], _viewState: [], _handleClick: [], _isSorted: [], _getArrowDirectionState: [], _getArrowViewState: [], _updateArrowDirection: [], _isDisabled: [], _getAriaSortAttribute: [], _renderArrow: [], start: [{\n            type: Input\n        }] });\n/** @nocollapse */\nMatSortHeader.ctorParameters = () => [\n    { type: MatSortHeaderIntl },\n    { type: ChangeDetectorRef },\n    { type: MatSort, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: ['MAT_SORT_HEADER_COLUMN_DEF',] }, { type: Optional }] }\n];\nMatSortHeader.propDecorators = {\n    id: [{ type: Input, args: ['mat-sort-header',] }],\n    arrowPosition: [{ type: Input }],\n    start: [{ type: Input }],\n    disableClear: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSortModule {\n}\nMatSortModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: MatSortModule });\nMatSortModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function MatSortModule_Factory(t) { return new (t || MatSortModule)(); }, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [[CommonModule]] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(MatSortModule, { declarations: function () { return [MatSort,\n        MatSortHeader]; }, imports: function () { return [CommonModule]; }, exports: function () { return [MatSort,\n        MatSortHeader]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatSortModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [MatSort, MatSortHeader],\n                declarations: [MatSort, MatSortHeader],\n                providers: [MAT_SORT_HEADER_INTL_PROVIDER]\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatSortModule, MatSortHeader, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSortHeaderIntl, MAT_SORT_HEADER_INTL_PROVIDER, MatSort, matSortAnimations };\n\n//# sourceMappingURL=sort.js.map","import { Subscriber } from '../Subscriber';\nexport function retry(count = -1) {\n    return (source) => source.lift(new RetryOperator(count, source));\n}\nclass RetryOperator {\n    constructor(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    }\n}\nclass RetrySubscriber extends Subscriber {\n    constructor(destination, count, source) {\n        super(destination);\n        this.count = count;\n        this.source = source;\n    }\n    error(err) {\n        if (!this.isStopped) {\n            const { source, count } = this;\n            if (count === 0) {\n                return super.error(err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    }\n}\n//# sourceMappingURL=retry.js.map","/*!\n * perfect-scrollbar v1.4.0\n * (c) 2018 Hyunje Jun\n * @license MIT\n */\nfunction get(element) {\n  return getComputedStyle(element);\n}\n\nfunction set(element, obj) {\n  for (var key in obj) {\n    var val = obj[key];\n    if (typeof val === 'number') {\n      val = val + \"px\";\n    }\n    element.style[key] = val;\n  }\n  return element;\n}\n\nfunction div(className) {\n  var div = document.createElement('div');\n  div.className = className;\n  return div;\n}\n\nvar elMatches =\n  typeof Element !== 'undefined' &&\n  (Element.prototype.matches ||\n    Element.prototype.webkitMatchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector);\n\nfunction matches(element, query) {\n  if (!elMatches) {\n    throw new Error('No element matching method supported');\n  }\n\n  return elMatches.call(element, query);\n}\n\nfunction remove(element) {\n  if (element.remove) {\n    element.remove();\n  } else {\n    if (element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  }\n}\n\nfunction queryChildren(element, selector) {\n  return Array.prototype.filter.call(element.children, function (child) { return matches(child, selector); }\n  );\n}\n\nvar cls = {\n  main: 'ps',\n  element: {\n    thumb: function (x) { return (\"ps__thumb-\" + x); },\n    rail: function (x) { return (\"ps__rail-\" + x); },\n    consuming: 'ps__child--consume',\n  },\n  state: {\n    focus: 'ps--focus',\n    clicking: 'ps--clicking',\n    active: function (x) { return (\"ps--active-\" + x); },\n    scrolling: function (x) { return (\"ps--scrolling-\" + x); },\n  },\n};\n\n/*\n * Helper methods\n */\nvar scrollingClassTimeout = { x: null, y: null };\n\nfunction addScrollingClass(i, x) {\n  var classList = i.element.classList;\n  var className = cls.state.scrolling(x);\n\n  if (classList.contains(className)) {\n    clearTimeout(scrollingClassTimeout[x]);\n  } else {\n    classList.add(className);\n  }\n}\n\nfunction removeScrollingClass(i, x) {\n  scrollingClassTimeout[x] = setTimeout(\n    function () { return i.isAlive && i.element.classList.remove(cls.state.scrolling(x)); },\n    i.settings.scrollingThreshold\n  );\n}\n\nfunction setScrollingClassInstantly(i, x) {\n  addScrollingClass(i, x);\n  removeScrollingClass(i, x);\n}\n\nvar EventElement = function EventElement(element) {\n  this.element = element;\n  this.handlers = {};\n};\n\nvar prototypeAccessors = { isEmpty: { configurable: true } };\n\nEventElement.prototype.bind = function bind (eventName, handler) {\n  if (typeof this.handlers[eventName] === 'undefined') {\n    this.handlers[eventName] = [];\n  }\n  this.handlers[eventName].push(handler);\n  this.element.addEventListener(eventName, handler, false);\n};\n\nEventElement.prototype.unbind = function unbind (eventName, target) {\n    var this$1 = this;\n\n  this.handlers[eventName] = this.handlers[eventName].filter(function (handler) {\n    if (target && handler !== target) {\n      return true;\n    }\n    this$1.element.removeEventListener(eventName, handler, false);\n    return false;\n  });\n};\n\nEventElement.prototype.unbindAll = function unbindAll () {\n    var this$1 = this;\n\n  for (var name in this$1.handlers) {\n    this$1.unbind(name);\n  }\n};\n\nprototypeAccessors.isEmpty.get = function () {\n    var this$1 = this;\n\n  return Object.keys(this.handlers).every(\n    function (key) { return this$1.handlers[key].length === 0; }\n  );\n};\n\nObject.defineProperties( EventElement.prototype, prototypeAccessors );\n\nvar EventManager = function EventManager() {\n  this.eventElements = [];\n};\n\nEventManager.prototype.eventElement = function eventElement (element) {\n  var ee = this.eventElements.filter(function (ee) { return ee.element === element; })[0];\n  if (!ee) {\n    ee = new EventElement(element);\n    this.eventElements.push(ee);\n  }\n  return ee;\n};\n\nEventManager.prototype.bind = function bind (element, eventName, handler) {\n  this.eventElement(element).bind(eventName, handler);\n};\n\nEventManager.prototype.unbind = function unbind (element, eventName, handler) {\n  var ee = this.eventElement(element);\n  ee.unbind(eventName, handler);\n\n  if (ee.isEmpty) {\n    // remove\n    this.eventElements.splice(this.eventElements.indexOf(ee), 1);\n  }\n};\n\nEventManager.prototype.unbindAll = function unbindAll () {\n  this.eventElements.forEach(function (e) { return e.unbindAll(); });\n  this.eventElements = [];\n};\n\nEventManager.prototype.once = function once (element, eventName, handler) {\n  var ee = this.eventElement(element);\n  var onceHandler = function (evt) {\n    ee.unbind(eventName, onceHandler);\n    handler(evt);\n  };\n  ee.bind(eventName, onceHandler);\n};\n\nfunction createEvent(name) {\n  if (typeof window.CustomEvent === 'function') {\n    return new CustomEvent(name);\n  } else {\n    var evt = document.createEvent('CustomEvent');\n    evt.initCustomEvent(name, false, false, undefined);\n    return evt;\n  }\n}\n\nvar processScrollDiff = function(\n  i,\n  axis,\n  diff,\n  useScrollingClass,\n  forceFireReachEvent\n) {\n  if ( useScrollingClass === void 0 ) useScrollingClass = true;\n  if ( forceFireReachEvent === void 0 ) forceFireReachEvent = false;\n\n  var fields;\n  if (axis === 'top') {\n    fields = [\n      'contentHeight',\n      'containerHeight',\n      'scrollTop',\n      'y',\n      'up',\n      'down' ];\n  } else if (axis === 'left') {\n    fields = [\n      'contentWidth',\n      'containerWidth',\n      'scrollLeft',\n      'x',\n      'left',\n      'right' ];\n  } else {\n    throw new Error('A proper axis should be provided');\n  }\n\n  processScrollDiff$1(i, diff, fields, useScrollingClass, forceFireReachEvent);\n};\n\nfunction processScrollDiff$1(\n  i,\n  diff,\n  ref,\n  useScrollingClass,\n  forceFireReachEvent\n) {\n  var contentHeight = ref[0];\n  var containerHeight = ref[1];\n  var scrollTop = ref[2];\n  var y = ref[3];\n  var up = ref[4];\n  var down = ref[5];\n  if ( useScrollingClass === void 0 ) useScrollingClass = true;\n  if ( forceFireReachEvent === void 0 ) forceFireReachEvent = false;\n\n  var element = i.element;\n\n  // reset reach\n  i.reach[y] = null;\n\n  // 1 for subpixel rounding\n  if (element[scrollTop] < 1) {\n    i.reach[y] = 'start';\n  }\n\n  // 1 for subpixel rounding\n  if (element[scrollTop] > i[contentHeight] - i[containerHeight] - 1) {\n    i.reach[y] = 'end';\n  }\n\n  if (diff) {\n    element.dispatchEvent(createEvent((\"ps-scroll-\" + y)));\n\n    if (diff < 0) {\n      element.dispatchEvent(createEvent((\"ps-scroll-\" + up)));\n    } else if (diff > 0) {\n      element.dispatchEvent(createEvent((\"ps-scroll-\" + down)));\n    }\n\n    if (useScrollingClass) {\n      setScrollingClassInstantly(i, y);\n    }\n  }\n\n  if (i.reach[y] && (diff || forceFireReachEvent)) {\n    element.dispatchEvent(createEvent((\"ps-\" + y + \"-reach-\" + (i.reach[y]))));\n  }\n}\n\nfunction toInt(x) {\n  return parseInt(x, 10) || 0;\n}\n\nfunction isEditable(el) {\n  return (\n    matches(el, 'input,[contenteditable]') ||\n    matches(el, 'select,[contenteditable]') ||\n    matches(el, 'textarea,[contenteditable]') ||\n    matches(el, 'button,[contenteditable]')\n  );\n}\n\nfunction outerWidth(element) {\n  var styles = get(element);\n  return (\n    toInt(styles.width) +\n    toInt(styles.paddingLeft) +\n    toInt(styles.paddingRight) +\n    toInt(styles.borderLeftWidth) +\n    toInt(styles.borderRightWidth)\n  );\n}\n\nvar env = {\n  isWebKit:\n    typeof document !== 'undefined' &&\n    'WebkitAppearance' in document.documentElement.style,\n  supportsTouch:\n    typeof window !== 'undefined' &&\n    ('ontouchstart' in window ||\n      (window.DocumentTouch && document instanceof window.DocumentTouch)),\n  supportsIePointer:\n    typeof navigator !== 'undefined' && navigator.msMaxTouchPoints,\n  isChrome:\n    typeof navigator !== 'undefined' &&\n    /Chrome/i.test(navigator && navigator.userAgent),\n};\n\nvar updateGeometry = function(i) {\n  var element = i.element;\n  var roundedScrollTop = Math.floor(element.scrollTop);\n\n  i.containerWidth = element.clientWidth;\n  i.containerHeight = element.clientHeight;\n  i.contentWidth = element.scrollWidth;\n  i.contentHeight = element.scrollHeight;\n\n  if (!element.contains(i.scrollbarXRail)) {\n    // clean up and append\n    queryChildren(element, cls.element.rail('x')).forEach(function (el) { return remove(el); }\n    );\n    element.appendChild(i.scrollbarXRail);\n  }\n  if (!element.contains(i.scrollbarYRail)) {\n    // clean up and append\n    queryChildren(element, cls.element.rail('y')).forEach(function (el) { return remove(el); }\n    );\n    element.appendChild(i.scrollbarYRail);\n  }\n\n  if (\n    !i.settings.suppressScrollX &&\n    i.containerWidth + i.settings.scrollXMarginOffset < i.contentWidth\n  ) {\n    i.scrollbarXActive = true;\n    i.railXWidth = i.containerWidth - i.railXMarginWidth;\n    i.railXRatio = i.containerWidth / i.railXWidth;\n    i.scrollbarXWidth = getThumbSize(\n      i,\n      toInt(i.railXWidth * i.containerWidth / i.contentWidth)\n    );\n    i.scrollbarXLeft = toInt(\n      (i.negativeScrollAdjustment + element.scrollLeft) *\n        (i.railXWidth - i.scrollbarXWidth) /\n        (i.contentWidth - i.containerWidth)\n    );\n  } else {\n    i.scrollbarXActive = false;\n  }\n\n  if (\n    !i.settings.suppressScrollY &&\n    i.containerHeight + i.settings.scrollYMarginOffset < i.contentHeight\n  ) {\n    i.scrollbarYActive = true;\n    i.railYHeight = i.containerHeight - i.railYMarginHeight;\n    i.railYRatio = i.containerHeight / i.railYHeight;\n    i.scrollbarYHeight = getThumbSize(\n      i,\n      toInt(i.railYHeight * i.containerHeight / i.contentHeight)\n    );\n    i.scrollbarYTop = toInt(\n      roundedScrollTop *\n        (i.railYHeight - i.scrollbarYHeight) /\n        (i.contentHeight - i.containerHeight)\n    );\n  } else {\n    i.scrollbarYActive = false;\n  }\n\n  if (i.scrollbarXLeft >= i.railXWidth - i.scrollbarXWidth) {\n    i.scrollbarXLeft = i.railXWidth - i.scrollbarXWidth;\n  }\n  if (i.scrollbarYTop >= i.railYHeight - i.scrollbarYHeight) {\n    i.scrollbarYTop = i.railYHeight - i.scrollbarYHeight;\n  }\n\n  updateCss(element, i);\n\n  if (i.scrollbarXActive) {\n    element.classList.add(cls.state.active('x'));\n  } else {\n    element.classList.remove(cls.state.active('x'));\n    i.scrollbarXWidth = 0;\n    i.scrollbarXLeft = 0;\n    element.scrollLeft = 0;\n  }\n  if (i.scrollbarYActive) {\n    element.classList.add(cls.state.active('y'));\n  } else {\n    element.classList.remove(cls.state.active('y'));\n    i.scrollbarYHeight = 0;\n    i.scrollbarYTop = 0;\n    element.scrollTop = 0;\n  }\n};\n\nfunction getThumbSize(i, thumbSize) {\n  if (i.settings.minScrollbarLength) {\n    thumbSize = Math.max(thumbSize, i.settings.minScrollbarLength);\n  }\n  if (i.settings.maxScrollbarLength) {\n    thumbSize = Math.min(thumbSize, i.settings.maxScrollbarLength);\n  }\n  return thumbSize;\n}\n\nfunction updateCss(element, i) {\n  var xRailOffset = { width: i.railXWidth };\n  var roundedScrollTop = Math.floor(element.scrollTop);\n\n  if (i.isRtl) {\n    xRailOffset.left =\n      i.negativeScrollAdjustment +\n      element.scrollLeft +\n      i.containerWidth -\n      i.contentWidth;\n  } else {\n    xRailOffset.left = element.scrollLeft;\n  }\n  if (i.isScrollbarXUsingBottom) {\n    xRailOffset.bottom = i.scrollbarXBottom - roundedScrollTop;\n  } else {\n    xRailOffset.top = i.scrollbarXTop + roundedScrollTop;\n  }\n  set(i.scrollbarXRail, xRailOffset);\n\n  var yRailOffset = { top: roundedScrollTop, height: i.railYHeight };\n  if (i.isScrollbarYUsingRight) {\n    if (i.isRtl) {\n      yRailOffset.right =\n        i.contentWidth -\n        (i.negativeScrollAdjustment + element.scrollLeft) -\n        i.scrollbarYRight -\n        i.scrollbarYOuterWidth;\n    } else {\n      yRailOffset.right = i.scrollbarYRight - element.scrollLeft;\n    }\n  } else {\n    if (i.isRtl) {\n      yRailOffset.left =\n        i.negativeScrollAdjustment +\n        element.scrollLeft +\n        i.containerWidth * 2 -\n        i.contentWidth -\n        i.scrollbarYLeft -\n        i.scrollbarYOuterWidth;\n    } else {\n      yRailOffset.left = i.scrollbarYLeft + element.scrollLeft;\n    }\n  }\n  set(i.scrollbarYRail, yRailOffset);\n\n  set(i.scrollbarX, {\n    left: i.scrollbarXLeft,\n    width: i.scrollbarXWidth - i.railBorderXWidth,\n  });\n  set(i.scrollbarY, {\n    top: i.scrollbarYTop,\n    height: i.scrollbarYHeight - i.railBorderYWidth,\n  });\n}\n\nvar clickRail = function(i) {\n  i.event.bind(i.scrollbarY, 'mousedown', function (e) { return e.stopPropagation(); });\n  i.event.bind(i.scrollbarYRail, 'mousedown', function (e) {\n    var positionTop =\n      e.pageY -\n      window.pageYOffset -\n      i.scrollbarYRail.getBoundingClientRect().top;\n    var direction = positionTop > i.scrollbarYTop ? 1 : -1;\n\n    i.element.scrollTop += direction * i.containerHeight;\n    updateGeometry(i);\n\n    e.stopPropagation();\n  });\n\n  i.event.bind(i.scrollbarX, 'mousedown', function (e) { return e.stopPropagation(); });\n  i.event.bind(i.scrollbarXRail, 'mousedown', function (e) {\n    var positionLeft =\n      e.pageX -\n      window.pageXOffset -\n      i.scrollbarXRail.getBoundingClientRect().left;\n    var direction = positionLeft > i.scrollbarXLeft ? 1 : -1;\n\n    i.element.scrollLeft += direction * i.containerWidth;\n    updateGeometry(i);\n\n    e.stopPropagation();\n  });\n};\n\nvar dragThumb = function(i) {\n  bindMouseScrollHandler(i, [\n    'containerWidth',\n    'contentWidth',\n    'pageX',\n    'railXWidth',\n    'scrollbarX',\n    'scrollbarXWidth',\n    'scrollLeft',\n    'x',\n    'scrollbarXRail' ]);\n  bindMouseScrollHandler(i, [\n    'containerHeight',\n    'contentHeight',\n    'pageY',\n    'railYHeight',\n    'scrollbarY',\n    'scrollbarYHeight',\n    'scrollTop',\n    'y',\n    'scrollbarYRail' ]);\n};\n\nfunction bindMouseScrollHandler(\n  i,\n  ref\n) {\n  var containerHeight = ref[0];\n  var contentHeight = ref[1];\n  var pageY = ref[2];\n  var railYHeight = ref[3];\n  var scrollbarY = ref[4];\n  var scrollbarYHeight = ref[5];\n  var scrollTop = ref[6];\n  var y = ref[7];\n  var scrollbarYRail = ref[8];\n\n  var element = i.element;\n\n  var startingScrollTop = null;\n  var startingMousePageY = null;\n  var scrollBy = null;\n\n  function mouseMoveHandler(e) {\n    element[scrollTop] =\n      startingScrollTop + scrollBy * (e[pageY] - startingMousePageY);\n    addScrollingClass(i, y);\n    updateGeometry(i);\n\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  function mouseUpHandler() {\n    removeScrollingClass(i, y);\n    i[scrollbarYRail].classList.remove(cls.state.clicking);\n    i.event.unbind(i.ownerDocument, 'mousemove', mouseMoveHandler);\n  }\n\n  i.event.bind(i[scrollbarY], 'mousedown', function (e) {\n    startingScrollTop = element[scrollTop];\n    startingMousePageY = e[pageY];\n    scrollBy =\n      (i[contentHeight] - i[containerHeight]) /\n      (i[railYHeight] - i[scrollbarYHeight]);\n\n    i.event.bind(i.ownerDocument, 'mousemove', mouseMoveHandler);\n    i.event.once(i.ownerDocument, 'mouseup', mouseUpHandler);\n\n    i[scrollbarYRail].classList.add(cls.state.clicking);\n\n    e.stopPropagation();\n    e.preventDefault();\n  });\n}\n\nvar keyboard = function(i) {\n  var element = i.element;\n\n  var elementHovered = function () { return matches(element, ':hover'); };\n  var scrollbarFocused = function () { return matches(i.scrollbarX, ':focus') || matches(i.scrollbarY, ':focus'); };\n\n  function shouldPreventDefault(deltaX, deltaY) {\n    var scrollTop = Math.floor(element.scrollTop);\n    if (deltaX === 0) {\n      if (!i.scrollbarYActive) {\n        return false;\n      }\n      if (\n        (scrollTop === 0 && deltaY > 0) ||\n        (scrollTop >= i.contentHeight - i.containerHeight && deltaY < 0)\n      ) {\n        return !i.settings.wheelPropagation;\n      }\n    }\n\n    var scrollLeft = element.scrollLeft;\n    if (deltaY === 0) {\n      if (!i.scrollbarXActive) {\n        return false;\n      }\n      if (\n        (scrollLeft === 0 && deltaX < 0) ||\n        (scrollLeft >= i.contentWidth - i.containerWidth && deltaX > 0)\n      ) {\n        return !i.settings.wheelPropagation;\n      }\n    }\n    return true;\n  }\n\n  i.event.bind(i.ownerDocument, 'keydown', function (e) {\n    if (\n      (e.isDefaultPrevented && e.isDefaultPrevented()) ||\n      e.defaultPrevented\n    ) {\n      return;\n    }\n\n    if (!elementHovered() && !scrollbarFocused()) {\n      return;\n    }\n\n    var activeElement = document.activeElement\n      ? document.activeElement\n      : i.ownerDocument.activeElement;\n    if (activeElement) {\n      if (activeElement.tagName === 'IFRAME') {\n        activeElement = activeElement.contentDocument.activeElement;\n      } else {\n        // go deeper if element is a webcomponent\n        while (activeElement.shadowRoot) {\n          activeElement = activeElement.shadowRoot.activeElement;\n        }\n      }\n      if (isEditable(activeElement)) {\n        return;\n      }\n    }\n\n    var deltaX = 0;\n    var deltaY = 0;\n\n    switch (e.which) {\n      case 37: // left\n        if (e.metaKey) {\n          deltaX = -i.contentWidth;\n        } else if (e.altKey) {\n          deltaX = -i.containerWidth;\n        } else {\n          deltaX = -30;\n        }\n        break;\n      case 38: // up\n        if (e.metaKey) {\n          deltaY = i.contentHeight;\n        } else if (e.altKey) {\n          deltaY = i.containerHeight;\n        } else {\n          deltaY = 30;\n        }\n        break;\n      case 39: // right\n        if (e.metaKey) {\n          deltaX = i.contentWidth;\n        } else if (e.altKey) {\n          deltaX = i.containerWidth;\n        } else {\n          deltaX = 30;\n        }\n        break;\n      case 40: // down\n        if (e.metaKey) {\n          deltaY = -i.contentHeight;\n        } else if (e.altKey) {\n          deltaY = -i.containerHeight;\n        } else {\n          deltaY = -30;\n        }\n        break;\n      case 32: // space bar\n        if (e.shiftKey) {\n          deltaY = i.containerHeight;\n        } else {\n          deltaY = -i.containerHeight;\n        }\n        break;\n      case 33: // page up\n        deltaY = i.containerHeight;\n        break;\n      case 34: // page down\n        deltaY = -i.containerHeight;\n        break;\n      case 36: // home\n        deltaY = i.contentHeight;\n        break;\n      case 35: // end\n        deltaY = -i.contentHeight;\n        break;\n      default:\n        return;\n    }\n\n    if (i.settings.suppressScrollX && deltaX !== 0) {\n      return;\n    }\n    if (i.settings.suppressScrollY && deltaY !== 0) {\n      return;\n    }\n\n    element.scrollTop -= deltaY;\n    element.scrollLeft += deltaX;\n    updateGeometry(i);\n\n    if (shouldPreventDefault(deltaX, deltaY)) {\n      e.preventDefault();\n    }\n  });\n};\n\nvar wheel = function(i) {\n  var element = i.element;\n\n  function shouldPreventDefault(deltaX, deltaY) {\n    var roundedScrollTop = Math.floor(element.scrollTop);\n    var isTop = element.scrollTop === 0;\n    var isBottom =\n      roundedScrollTop + element.offsetHeight === element.scrollHeight;\n    var isLeft = element.scrollLeft === 0;\n    var isRight =\n      element.scrollLeft + element.offsetWidth === element.scrollWidth;\n\n    var hitsBound;\n\n    // pick axis with primary direction\n    if (Math.abs(deltaY) > Math.abs(deltaX)) {\n      hitsBound = isTop || isBottom;\n    } else {\n      hitsBound = isLeft || isRight;\n    }\n\n    return hitsBound ? !i.settings.wheelPropagation : true;\n  }\n\n  function getDeltaFromEvent(e) {\n    var deltaX = e.deltaX;\n    var deltaY = -1 * e.deltaY;\n\n    if (typeof deltaX === 'undefined' || typeof deltaY === 'undefined') {\n      // OS X Safari\n      deltaX = -1 * e.wheelDeltaX / 6;\n      deltaY = e.wheelDeltaY / 6;\n    }\n\n    if (e.deltaMode && e.deltaMode === 1) {\n      // Firefox in deltaMode 1: Line scrolling\n      deltaX *= 10;\n      deltaY *= 10;\n    }\n\n    if (deltaX !== deltaX && deltaY !== deltaY /* NaN checks */) {\n      // IE in some mouse drivers\n      deltaX = 0;\n      deltaY = e.wheelDelta;\n    }\n\n    if (e.shiftKey) {\n      // reverse axis with shift key\n      return [-deltaY, -deltaX];\n    }\n    return [deltaX, deltaY];\n  }\n\n  function shouldBeConsumedByChild(target, deltaX, deltaY) {\n    // FIXME: this is a workaround for <select> issue in FF and IE #571\n    if (!env.isWebKit && element.querySelector('select:focus')) {\n      return true;\n    }\n\n    if (!element.contains(target)) {\n      return false;\n    }\n\n    var cursor = target;\n\n    while (cursor && cursor !== element) {\n      if (cursor.classList.contains(cls.element.consuming)) {\n        return true;\n      }\n\n      var style = get(cursor);\n      var overflow = [style.overflow, style.overflowX, style.overflowY].join(\n        ''\n      );\n\n      // if scrollable\n      if (overflow.match(/(scroll|auto)/)) {\n        var maxScrollTop = cursor.scrollHeight - cursor.clientHeight;\n        if (maxScrollTop > 0) {\n          if (\n            !(cursor.scrollTop === 0 && deltaY > 0) &&\n            !(cursor.scrollTop === maxScrollTop && deltaY < 0)\n          ) {\n            return true;\n          }\n        }\n        var maxScrollLeft = cursor.scrollWidth - cursor.clientWidth;\n        if (maxScrollLeft > 0) {\n          if (\n            !(cursor.scrollLeft === 0 && deltaX < 0) &&\n            !(cursor.scrollLeft === maxScrollLeft && deltaX > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n\n      cursor = cursor.parentNode;\n    }\n\n    return false;\n  }\n\n  function mousewheelHandler(e) {\n    var ref = getDeltaFromEvent(e);\n    var deltaX = ref[0];\n    var deltaY = ref[1];\n\n    if (shouldBeConsumedByChild(e.target, deltaX, deltaY)) {\n      return;\n    }\n\n    var shouldPrevent = false;\n    if (!i.settings.useBothWheelAxes) {\n      // deltaX will only be used for horizontal scrolling and deltaY will\n      // only be used for vertical scrolling - this is the default\n      element.scrollTop -= deltaY * i.settings.wheelSpeed;\n      element.scrollLeft += deltaX * i.settings.wheelSpeed;\n    } else if (i.scrollbarYActive && !i.scrollbarXActive) {\n      // only vertical scrollbar is active and useBothWheelAxes option is\n      // active, so let's scroll vertical bar using both mouse wheel axes\n      if (deltaY) {\n        element.scrollTop -= deltaY * i.settings.wheelSpeed;\n      } else {\n        element.scrollTop += deltaX * i.settings.wheelSpeed;\n      }\n      shouldPrevent = true;\n    } else if (i.scrollbarXActive && !i.scrollbarYActive) {\n      // useBothWheelAxes and only horizontal bar is active, so use both\n      // wheel axes for horizontal bar\n      if (deltaX) {\n        element.scrollLeft += deltaX * i.settings.wheelSpeed;\n      } else {\n        element.scrollLeft -= deltaY * i.settings.wheelSpeed;\n      }\n      shouldPrevent = true;\n    }\n\n    updateGeometry(i);\n\n    shouldPrevent = shouldPrevent || shouldPreventDefault(deltaX, deltaY);\n    if (shouldPrevent && !e.ctrlKey) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n\n  if (typeof window.onwheel !== 'undefined') {\n    i.event.bind(element, 'wheel', mousewheelHandler);\n  } else if (typeof window.onmousewheel !== 'undefined') {\n    i.event.bind(element, 'mousewheel', mousewheelHandler);\n  }\n};\n\nvar touch = function(i) {\n  if (!env.supportsTouch && !env.supportsIePointer) {\n    return;\n  }\n\n  var element = i.element;\n\n  function shouldPrevent(deltaX, deltaY) {\n    var scrollTop = Math.floor(element.scrollTop);\n    var scrollLeft = element.scrollLeft;\n    var magnitudeX = Math.abs(deltaX);\n    var magnitudeY = Math.abs(deltaY);\n\n    if (magnitudeY > magnitudeX) {\n      // user is perhaps trying to swipe up/down the page\n\n      if (\n        (deltaY < 0 && scrollTop === i.contentHeight - i.containerHeight) ||\n        (deltaY > 0 && scrollTop === 0)\n      ) {\n        // set prevent for mobile Chrome refresh\n        return window.scrollY === 0 && deltaY > 0 && env.isChrome;\n      }\n    } else if (magnitudeX > magnitudeY) {\n      // user is perhaps trying to swipe left/right across the page\n\n      if (\n        (deltaX < 0 && scrollLeft === i.contentWidth - i.containerWidth) ||\n        (deltaX > 0 && scrollLeft === 0)\n      ) {\n        return true;\n      }\n    }\n\n    return true;\n  }\n\n  function applyTouchMove(differenceX, differenceY) {\n    element.scrollTop -= differenceY;\n    element.scrollLeft -= differenceX;\n\n    updateGeometry(i);\n  }\n\n  var startOffset = {};\n  var startTime = 0;\n  var speed = {};\n  var easingLoop = null;\n\n  function getTouch(e) {\n    if (e.targetTouches) {\n      return e.targetTouches[0];\n    } else {\n      // Maybe IE pointer\n      return e;\n    }\n  }\n\n  function shouldHandle(e) {\n    if (e.pointerType && e.pointerType === 'pen' && e.buttons === 0) {\n      return false;\n    }\n    if (e.targetTouches && e.targetTouches.length === 1) {\n      return true;\n    }\n    if (\n      e.pointerType &&\n      e.pointerType !== 'mouse' &&\n      e.pointerType !== e.MSPOINTER_TYPE_MOUSE\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  function touchStart(e) {\n    if (!shouldHandle(e)) {\n      return;\n    }\n\n    var touch = getTouch(e);\n\n    startOffset.pageX = touch.pageX;\n    startOffset.pageY = touch.pageY;\n\n    startTime = new Date().getTime();\n\n    if (easingLoop !== null) {\n      clearInterval(easingLoop);\n    }\n  }\n\n  function shouldBeConsumedByChild(target, deltaX, deltaY) {\n    if (!element.contains(target)) {\n      return false;\n    }\n\n    var cursor = target;\n\n    while (cursor && cursor !== element) {\n      if (cursor.classList.contains(cls.element.consuming)) {\n        return true;\n      }\n\n      var style = get(cursor);\n      var overflow = [style.overflow, style.overflowX, style.overflowY].join(\n        ''\n      );\n\n      // if scrollable\n      if (overflow.match(/(scroll|auto)/)) {\n        var maxScrollTop = cursor.scrollHeight - cursor.clientHeight;\n        if (maxScrollTop > 0) {\n          if (\n            !(cursor.scrollTop === 0 && deltaY > 0) &&\n            !(cursor.scrollTop === maxScrollTop && deltaY < 0)\n          ) {\n            return true;\n          }\n        }\n        var maxScrollLeft = cursor.scrollLeft - cursor.clientWidth;\n        if (maxScrollLeft > 0) {\n          if (\n            !(cursor.scrollLeft === 0 && deltaX < 0) &&\n            !(cursor.scrollLeft === maxScrollLeft && deltaX > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n\n      cursor = cursor.parentNode;\n    }\n\n    return false;\n  }\n\n  function touchMove(e) {\n    if (shouldHandle(e)) {\n      var touch = getTouch(e);\n\n      var currentOffset = { pageX: touch.pageX, pageY: touch.pageY };\n\n      var differenceX = currentOffset.pageX - startOffset.pageX;\n      var differenceY = currentOffset.pageY - startOffset.pageY;\n\n      if (shouldBeConsumedByChild(e.target, differenceX, differenceY)) {\n        return;\n      }\n\n      applyTouchMove(differenceX, differenceY);\n      startOffset = currentOffset;\n\n      var currentTime = new Date().getTime();\n\n      var timeGap = currentTime - startTime;\n      if (timeGap > 0) {\n        speed.x = differenceX / timeGap;\n        speed.y = differenceY / timeGap;\n        startTime = currentTime;\n      }\n\n      if (shouldPrevent(differenceX, differenceY)) {\n        e.preventDefault();\n      }\n    }\n  }\n  function touchEnd() {\n    if (i.settings.swipeEasing) {\n      clearInterval(easingLoop);\n      easingLoop = setInterval(function() {\n        if (i.isInitialized) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        if (!speed.x && !speed.y) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        if (Math.abs(speed.x) < 0.01 && Math.abs(speed.y) < 0.01) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        applyTouchMove(speed.x * 30, speed.y * 30);\n\n        speed.x *= 0.8;\n        speed.y *= 0.8;\n      }, 10);\n    }\n  }\n\n  if (env.supportsTouch) {\n    i.event.bind(element, 'touchstart', touchStart);\n    i.event.bind(element, 'touchmove', touchMove);\n    i.event.bind(element, 'touchend', touchEnd);\n  } else if (env.supportsIePointer) {\n    if (window.PointerEvent) {\n      i.event.bind(element, 'pointerdown', touchStart);\n      i.event.bind(element, 'pointermove', touchMove);\n      i.event.bind(element, 'pointerup', touchEnd);\n    } else if (window.MSPointerEvent) {\n      i.event.bind(element, 'MSPointerDown', touchStart);\n      i.event.bind(element, 'MSPointerMove', touchMove);\n      i.event.bind(element, 'MSPointerUp', touchEnd);\n    }\n  }\n};\n\nvar defaultSettings = function () { return ({\n  handlers: ['click-rail', 'drag-thumb', 'keyboard', 'wheel', 'touch'],\n  maxScrollbarLength: null,\n  minScrollbarLength: null,\n  scrollingThreshold: 1000,\n  scrollXMarginOffset: 0,\n  scrollYMarginOffset: 0,\n  suppressScrollX: false,\n  suppressScrollY: false,\n  swipeEasing: true,\n  useBothWheelAxes: false,\n  wheelPropagation: true,\n  wheelSpeed: 1,\n}); };\n\nvar handlers = {\n  'click-rail': clickRail,\n  'drag-thumb': dragThumb,\n  keyboard: keyboard,\n  wheel: wheel,\n  touch: touch,\n};\n\nvar PerfectScrollbar = function PerfectScrollbar(element, userSettings) {\n  var this$1 = this;\n  if ( userSettings === void 0 ) userSettings = {};\n\n  if (typeof element === 'string') {\n    element = document.querySelector(element);\n  }\n\n  if (!element || !element.nodeName) {\n    throw new Error('no element is specified to initialize PerfectScrollbar');\n  }\n\n  this.element = element;\n\n  element.classList.add(cls.main);\n\n  this.settings = defaultSettings();\n  for (var key in userSettings) {\n    this$1.settings[key] = userSettings[key];\n  }\n\n  this.containerWidth = null;\n  this.containerHeight = null;\n  this.contentWidth = null;\n  this.contentHeight = null;\n\n  var focus = function () { return element.classList.add(cls.state.focus); };\n  var blur = function () { return element.classList.remove(cls.state.focus); };\n\n  this.isRtl = get(element).direction === 'rtl';\n  this.isNegativeScroll = (function () {\n    var originalScrollLeft = element.scrollLeft;\n    var result = null;\n    element.scrollLeft = -1;\n    result = element.scrollLeft < 0;\n    element.scrollLeft = originalScrollLeft;\n    return result;\n  })();\n  this.negativeScrollAdjustment = this.isNegativeScroll\n    ? element.scrollWidth - element.clientWidth\n    : 0;\n  this.event = new EventManager();\n  this.ownerDocument = element.ownerDocument || document;\n\n  this.scrollbarXRail = div(cls.element.rail('x'));\n  element.appendChild(this.scrollbarXRail);\n  this.scrollbarX = div(cls.element.thumb('x'));\n  this.scrollbarXRail.appendChild(this.scrollbarX);\n  this.scrollbarX.setAttribute('tabindex', 0);\n  this.event.bind(this.scrollbarX, 'focus', focus);\n  this.event.bind(this.scrollbarX, 'blur', blur);\n  this.scrollbarXActive = null;\n  this.scrollbarXWidth = null;\n  this.scrollbarXLeft = null;\n  var railXStyle = get(this.scrollbarXRail);\n  this.scrollbarXBottom = parseInt(railXStyle.bottom, 10);\n  if (isNaN(this.scrollbarXBottom)) {\n    this.isScrollbarXUsingBottom = false;\n    this.scrollbarXTop = toInt(railXStyle.top);\n  } else {\n    this.isScrollbarXUsingBottom = true;\n  }\n  this.railBorderXWidth =\n    toInt(railXStyle.borderLeftWidth) + toInt(railXStyle.borderRightWidth);\n  // Set rail to display:block to calculate margins\n  set(this.scrollbarXRail, { display: 'block' });\n  this.railXMarginWidth =\n    toInt(railXStyle.marginLeft) + toInt(railXStyle.marginRight);\n  set(this.scrollbarXRail, { display: '' });\n  this.railXWidth = null;\n  this.railXRatio = null;\n\n  this.scrollbarYRail = div(cls.element.rail('y'));\n  element.appendChild(this.scrollbarYRail);\n  this.scrollbarY = div(cls.element.thumb('y'));\n  this.scrollbarYRail.appendChild(this.scrollbarY);\n  this.scrollbarY.setAttribute('tabindex', 0);\n  this.event.bind(this.scrollbarY, 'focus', focus);\n  this.event.bind(this.scrollbarY, 'blur', blur);\n  this.scrollbarYActive = null;\n  this.scrollbarYHeight = null;\n  this.scrollbarYTop = null;\n  var railYStyle = get(this.scrollbarYRail);\n  this.scrollbarYRight = parseInt(railYStyle.right, 10);\n  if (isNaN(this.scrollbarYRight)) {\n    this.isScrollbarYUsingRight = false;\n    this.scrollbarYLeft = toInt(railYStyle.left);\n  } else {\n    this.isScrollbarYUsingRight = true;\n  }\n  this.scrollbarYOuterWidth = this.isRtl ? outerWidth(this.scrollbarY) : null;\n  this.railBorderYWidth =\n    toInt(railYStyle.borderTopWidth) + toInt(railYStyle.borderBottomWidth);\n  set(this.scrollbarYRail, { display: 'block' });\n  this.railYMarginHeight =\n    toInt(railYStyle.marginTop) + toInt(railYStyle.marginBottom);\n  set(this.scrollbarYRail, { display: '' });\n  this.railYHeight = null;\n  this.railYRatio = null;\n\n  this.reach = {\n    x:\n      element.scrollLeft <= 0\n        ? 'start'\n        : element.scrollLeft >= this.contentWidth - this.containerWidth\n          ? 'end'\n          : null,\n    y:\n      element.scrollTop <= 0\n        ? 'start'\n        : element.scrollTop >= this.contentHeight - this.containerHeight\n          ? 'end'\n          : null,\n  };\n\n  this.isAlive = true;\n\n  this.settings.handlers.forEach(function (handlerName) { return handlers[handlerName](this$1); });\n\n  this.lastScrollTop = Math.floor(element.scrollTop); // for onScroll only\n  this.lastScrollLeft = element.scrollLeft; // for onScroll only\n  this.event.bind(this.element, 'scroll', function (e) { return this$1.onScroll(e); });\n  updateGeometry(this);\n};\n\nPerfectScrollbar.prototype.update = function update () {\n  if (!this.isAlive) {\n    return;\n  }\n\n  // Recalcuate negative scrollLeft adjustment\n  this.negativeScrollAdjustment = this.isNegativeScroll\n    ? this.element.scrollWidth - this.element.clientWidth\n    : 0;\n\n  // Recalculate rail margins\n  set(this.scrollbarXRail, { display: 'block' });\n  set(this.scrollbarYRail, { display: 'block' });\n  this.railXMarginWidth =\n    toInt(get(this.scrollbarXRail).marginLeft) +\n    toInt(get(this.scrollbarXRail).marginRight);\n  this.railYMarginHeight =\n    toInt(get(this.scrollbarYRail).marginTop) +\n    toInt(get(this.scrollbarYRail).marginBottom);\n\n  // Hide scrollbars not to affect scrollWidth and scrollHeight\n  set(this.scrollbarXRail, { display: 'none' });\n  set(this.scrollbarYRail, { display: 'none' });\n\n  updateGeometry(this);\n\n  processScrollDiff(this, 'top', 0, false, true);\n  processScrollDiff(this, 'left', 0, false, true);\n\n  set(this.scrollbarXRail, { display: '' });\n  set(this.scrollbarYRail, { display: '' });\n};\n\nPerfectScrollbar.prototype.onScroll = function onScroll (e) {\n  if (!this.isAlive) {\n    return;\n  }\n\n  updateGeometry(this);\n  processScrollDiff(this, 'top', this.element.scrollTop - this.lastScrollTop);\n  processScrollDiff(\n    this,\n    'left',\n    this.element.scrollLeft - this.lastScrollLeft\n  );\n\n  this.lastScrollTop = Math.floor(this.element.scrollTop);\n  this.lastScrollLeft = this.element.scrollLeft;\n};\n\nPerfectScrollbar.prototype.destroy = function destroy () {\n  if (!this.isAlive) {\n    return;\n  }\n\n  this.event.unbindAll();\n  remove(this.scrollbarX);\n  remove(this.scrollbarY);\n  remove(this.scrollbarXRail);\n  remove(this.scrollbarYRail);\n  this.removePsClasses();\n\n  // unset elements\n  this.element = null;\n  this.scrollbarX = null;\n  this.scrollbarY = null;\n  this.scrollbarXRail = null;\n  this.scrollbarYRail = null;\n\n  this.isAlive = false;\n};\n\nPerfectScrollbar.prototype.removePsClasses = function removePsClasses () {\n  this.element.className = this.element.className\n    .split(' ')\n    .filter(function (name) { return !name.match(/^ps([-_].+|)$/); })\n    .join(' ');\n};\n\nexport default PerfectScrollbar;\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","import { fromEvent, Subject, merge } from 'rxjs';\nimport { auditTime, takeUntil, distinctUntilChanged, mapTo } from 'rxjs/operators';\nimport { InjectionToken, Directive, NgZone, KeyValueDiffers, ElementRef, Inject, PLATFORM_ID, Optional, Input, Output, EventEmitter, Component, ViewEncapsulation, ChangeDetectorRef, HostBinding, ViewChild, NgModule } from '@angular/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport ResizeObserver from 'resize-observer-polyfill';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [2, \"position\", \"static\", 3, \"perfectScrollbar\", \"disabled\"];\nconst _c1 = [1, \"ps-content\"];\nconst _c2 = [\"class\", \"ps-overlay\", 3, \"ps-at-top\", \"ps-at-left\", \"ps-at-right\", \"ps-at-bottom\", 4, \"ngIf\"];\nconst _c3 = [1, \"ps-overlay\"];\nconst _c4 = [1, \"ps-indicator-top\"];\nconst _c5 = [1, \"ps-indicator-left\"];\nconst _c6 = [1, \"ps-indicator-right\"];\nconst _c7 = [1, \"ps-indicator-bottom\"];\nfunction PerfectScrollbarComponent_div_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", _c3);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵelementStart(1, \"div\", _c4);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"div\", _c5);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"div\", _c6);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"div\", _c7);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r40 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"ps-at-top\", ctx_r40.states.top);\n    ɵngcc0.ɵɵclassProp(\"ps-at-left\", ctx_r40.states.left);\n    ɵngcc0.ɵɵclassProp(\"ps-at-right\", ctx_r40.states.right);\n    ɵngcc0.ɵɵclassProp(\"ps-at-bottom\", ctx_r40.states.bottom);\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵclassProp(\"ps-indicator-show\", ctx_r40.indicatorY && ctx_r40.interaction);\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵselect(2);\n    ɵngcc0.ɵɵclassProp(\"ps-indicator-show\", ctx_r40.indicatorX && ctx_r40.interaction);\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵselect(3);\n    ɵngcc0.ɵɵclassProp(\"ps-indicator-show\", ctx_r40.indicatorX && ctx_r40.interaction);\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵselect(4);\n    ɵngcc0.ɵɵclassProp(\"ps-indicator-show\", ctx_r40.indicatorY && ctx_r40.interaction);\n    ɵngcc0.ɵɵstylingApply();\n} }\nconst _c8 = [\"*\"];\nvar PERFECT_SCROLLBAR_CONFIG = new InjectionToken('PERFECT_SCROLLBAR_CONFIG');\nvar Geometry = /** @class */ (function () {\n    function Geometry(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n    return Geometry;\n}());\nvar Position = /** @class */ (function () {\n    function Position(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Position;\n}());\n/** @type {?} */\nvar PerfectScrollbarEvents = [\n    'psScrollY',\n    'psScrollX',\n    'psScrollUp',\n    'psScrollDown',\n    'psScrollLeft',\n    'psScrollRight',\n    'psYReachEnd',\n    'psYReachStart',\n    'psXReachEnd',\n    'psXReachStart'\n];\nvar PerfectScrollbarConfig = /** @class */ (function () {\n    function PerfectScrollbarConfig(config) {\n        if (config === void 0) { config = {}; }\n        this.assign(config);\n    }\n    /**\n     * @param {?=} config\n     * @return {?}\n     */\n    PerfectScrollbarConfig.prototype.assign = /**\n     * @param {?=} config\n     * @return {?}\n     */\n    function (config) {\n        if (config === void 0) { config = {}; }\n        for (var key in config) {\n            this[(/** @type {?} */ (key))] = config[(/** @type {?} */ (key))];\n        }\n    };\n    return PerfectScrollbarConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar PerfectScrollbarDirective = /** @class */ (function () {\n    function PerfectScrollbarDirective(zone, differs, elementRef, platformId, defaults) {\n        this.zone = zone;\n        this.differs = differs;\n        this.elementRef = elementRef;\n        this.platformId = platformId;\n        this.defaults = defaults;\n        this.instance = null;\n        this.ro = null;\n        this.timeout = null;\n        this.animation = null;\n        this.configDiff = null;\n        this.ngDestroy = new Subject();\n        this.disabled = false;\n        this.psScrollY = new EventEmitter();\n        this.psScrollX = new EventEmitter();\n        this.psScrollUp = new EventEmitter();\n        this.psScrollDown = new EventEmitter();\n        this.psScrollLeft = new EventEmitter();\n        this.psScrollRight = new EventEmitter();\n        this.psYReachEnd = new EventEmitter();\n        this.psYReachStart = new EventEmitter();\n        this.psXReachEnd = new EventEmitter();\n        this.psXReachStart = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.disabled && isPlatformBrowser(this.platformId)) {\n            /** @type {?} */\n            var config_1 = new PerfectScrollbarConfig(this.defaults);\n            config_1.assign(this.config); // Custom configuration\n            this.zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () {\n                _this.instance = new PerfectScrollbar(_this.elementRef.nativeElement, config_1);\n            }));\n            if (!this.configDiff) {\n                this.configDiff = this.differs.find(this.config || {}).create();\n                this.configDiff.diff(this.config || {});\n            }\n            this.zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () {\n                _this.ro = new ResizeObserver((/**\n                 * @return {?}\n                 */\n                function () {\n                    _this.update();\n                }));\n                if (_this.elementRef.nativeElement.children[0]) {\n                    _this.ro.observe(_this.elementRef.nativeElement.children[0]);\n                }\n                _this.ro.observe(_this.elementRef.nativeElement);\n            }));\n            this.zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () {\n                PerfectScrollbarEvents.forEach((/**\n                 * @param {?} eventName\n                 * @return {?}\n                 */\n                function (eventName) {\n                    /** @type {?} */\n                    var eventType = eventName.replace(/([A-Z])/g, (/**\n                     * @param {?} c\n                     * @return {?}\n                     */\n                    function (c) { return \"-\" + c.toLowerCase(); }));\n                    fromEvent(_this.elementRef.nativeElement, eventType)\n                        .pipe(auditTime(20), takeUntil(_this.ngDestroy))\n                        .subscribe((/**\n                     * @param {?} event\n                     * @return {?}\n                     */\n                    function (event) {\n                        _this[eventName].emit(event);\n                    }));\n                }));\n            }));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (isPlatformBrowser(this.platformId)) {\n            this.ngDestroy.next();\n            this.ngDestroy.complete();\n            if (this.ro) {\n                this.ro.disconnect();\n            }\n            if (this.timeout && typeof window !== 'undefined') {\n                window.clearTimeout(this.timeout);\n            }\n            this.zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () {\n                if (_this.instance) {\n                    _this.instance.destroy();\n                }\n            }));\n            this.instance = null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.disabled && this.configDiff && isPlatformBrowser(this.platformId)) {\n            /** @type {?} */\n            var changes = this.configDiff.diff(this.config || {});\n            if (changes) {\n                this.ngOnDestroy();\n                this.ngOnInit();\n            }\n        }\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes['disabled'] && !changes['disabled'].isFirstChange() && isPlatformBrowser(this.platformId)) {\n            if (changes['disabled'].currentValue !== changes['disabled'].previousValue) {\n                if (changes['disabled'].currentValue === true) {\n                    this.ngOnDestroy();\n                }\n                else if (changes['disabled'].currentValue === false) {\n                    this.ngOnInit();\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.ps = /**\n     * @return {?}\n     */\n    function () {\n        return this.instance;\n    };\n    /**\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.update = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (typeof window !== 'undefined') {\n            if (this.timeout) {\n                window.clearTimeout(this.timeout);\n            }\n            this.timeout = window.setTimeout((/**\n             * @return {?}\n             */\n            function () {\n                if (!_this.disabled && _this.configDiff) {\n                    try {\n                        _this.zone.runOutsideAngular((/**\n                         * @return {?}\n                         */\n                        function () {\n                            if (_this.instance) {\n                                _this.instance.update();\n                            }\n                        }));\n                    }\n                    catch (error) {\n                        // Update can be finished after destroy so catch errors\n                    }\n                }\n            }), 0);\n        }\n    };\n    /**\n     * @param {?=} prefix\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.geometry = /**\n     * @param {?=} prefix\n     * @return {?}\n     */\n    function (prefix) {\n        if (prefix === void 0) { prefix = 'scroll'; }\n        return new Geometry(this.elementRef.nativeElement[prefix + 'Left'], this.elementRef.nativeElement[prefix + 'Top'], this.elementRef.nativeElement[prefix + 'Width'], this.elementRef.nativeElement[prefix + 'Height']);\n    };\n    /**\n     * @param {?=} absolute\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.position = /**\n     * @param {?=} absolute\n     * @return {?}\n     */\n    function (absolute) {\n        if (absolute === void 0) { absolute = false; }\n        if (!absolute && this.instance) {\n            return new Position(this.instance.reach.x || 0, this.instance.reach.y || 0);\n        }\n        else {\n            return new Position(this.elementRef.nativeElement.scrollLeft, this.elementRef.nativeElement.scrollTop);\n        }\n    };\n    /**\n     * @param {?=} direction\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.scrollable = /**\n     * @param {?=} direction\n     * @return {?}\n     */\n    function (direction) {\n        if (direction === void 0) { direction = 'any'; }\n        /** @type {?} */\n        var element = this.elementRef.nativeElement;\n        if (direction === 'any') {\n            return element.classList.contains('ps--active-x') ||\n                element.classList.contains('ps--active-y');\n        }\n        else if (direction === 'both') {\n            return element.classList.contains('ps--active-x') &&\n                element.classList.contains('ps--active-y');\n        }\n        else {\n            return element.classList.contains('ps--active-' + direction);\n        }\n    };\n    /**\n     * @param {?} x\n     * @param {?=} y\n     * @param {?=} speed\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.scrollTo = /**\n     * @param {?} x\n     * @param {?=} y\n     * @param {?=} speed\n     * @return {?}\n     */\n    function (x, y, speed) {\n        if (!this.disabled) {\n            if (y == null && speed == null) {\n                this.animateScrolling('scrollTop', x, speed);\n            }\n            else {\n                if (x != null) {\n                    this.animateScrolling('scrollLeft', x, speed);\n                }\n                if (y != null) {\n                    this.animateScrolling('scrollTop', y, speed);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} x\n     * @param {?=} speed\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.scrollToX = /**\n     * @param {?} x\n     * @param {?=} speed\n     * @return {?}\n     */\n    function (x, speed) {\n        this.animateScrolling('scrollLeft', x, speed);\n    };\n    /**\n     * @param {?} y\n     * @param {?=} speed\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.scrollToY = /**\n     * @param {?} y\n     * @param {?=} speed\n     * @return {?}\n     */\n    function (y, speed) {\n        this.animateScrolling('scrollTop', y, speed);\n    };\n    /**\n     * @param {?=} offset\n     * @param {?=} speed\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.scrollToTop = /**\n     * @param {?=} offset\n     * @param {?=} speed\n     * @return {?}\n     */\n    function (offset, speed) {\n        this.animateScrolling('scrollTop', (offset || 0), speed);\n    };\n    /**\n     * @param {?=} offset\n     * @param {?=} speed\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.scrollToLeft = /**\n     * @param {?=} offset\n     * @param {?=} speed\n     * @return {?}\n     */\n    function (offset, speed) {\n        this.animateScrolling('scrollLeft', (offset || 0), speed);\n    };\n    /**\n     * @param {?=} offset\n     * @param {?=} speed\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.scrollToRight = /**\n     * @param {?=} offset\n     * @param {?=} speed\n     * @return {?}\n     */\n    function (offset, speed) {\n        /** @type {?} */\n        var left = this.elementRef.nativeElement.scrollWidth -\n            this.elementRef.nativeElement.clientWidth;\n        this.animateScrolling('scrollLeft', left - (offset || 0), speed);\n    };\n    /**\n     * @param {?=} offset\n     * @param {?=} speed\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.scrollToBottom = /**\n     * @param {?=} offset\n     * @param {?=} speed\n     * @return {?}\n     */\n    function (offset, speed) {\n        /** @type {?} */\n        var top = this.elementRef.nativeElement.scrollHeight -\n            this.elementRef.nativeElement.clientHeight;\n        this.animateScrolling('scrollTop', top - (offset || 0), speed);\n    };\n    /**\n     * @param {?} qs\n     * @param {?=} offset\n     * @param {?=} speed\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.scrollToElement = /**\n     * @param {?} qs\n     * @param {?=} offset\n     * @param {?=} speed\n     * @return {?}\n     */\n    function (qs, offset, speed) {\n        /** @type {?} */\n        var element = this.elementRef.nativeElement.querySelector(qs);\n        if (element) {\n            /** @type {?} */\n            var elementPos = element.getBoundingClientRect();\n            /** @type {?} */\n            var scrollerPos = this.elementRef.nativeElement.getBoundingClientRect();\n            if (this.elementRef.nativeElement.classList.contains('ps--active-x')) {\n                /** @type {?} */\n                var currentPos = this.elementRef.nativeElement['scrollLeft'];\n                /** @type {?} */\n                var position = elementPos.left - scrollerPos.left + currentPos;\n                this.animateScrolling('scrollLeft', position + (offset || 0), speed);\n            }\n            if (this.elementRef.nativeElement.classList.contains('ps--active-y')) {\n                /** @type {?} */\n                var currentPos = this.elementRef.nativeElement['scrollTop'];\n                /** @type {?} */\n                var position = elementPos.top - scrollerPos.top + currentPos;\n                this.animateScrolling('scrollTop', position + (offset || 0), speed);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {?} target\n     * @param {?} value\n     * @param {?=} speed\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.animateScrolling = /**\n     * @private\n     * @param {?} target\n     * @param {?} value\n     * @param {?=} speed\n     * @return {?}\n     */\n    function (target, value, speed) {\n        var _this = this;\n        if (this.animation) {\n            window.cancelAnimationFrame(this.animation);\n            this.animation = null;\n        }\n        if (!speed || typeof window === 'undefined') {\n            this.elementRef.nativeElement[target] = value;\n        }\n        else if (value !== this.elementRef.nativeElement[target]) {\n            /** @type {?} */\n            var newValue_1 = 0;\n            /** @type {?} */\n            var scrollCount_1 = 0;\n            /** @type {?} */\n            var oldTimestamp_1 = performance.now();\n            /** @type {?} */\n            var oldValue_1 = this.elementRef.nativeElement[target];\n            /** @type {?} */\n            var cosParameter_1 = (oldValue_1 - value) / 2;\n            /** @type {?} */\n            var step_1 = (/**\n             * @param {?} newTimestamp\n             * @return {?}\n             */\n            function (newTimestamp) {\n                scrollCount_1 += Math.PI / (speed / (newTimestamp - oldTimestamp_1));\n                newValue_1 = Math.round(value + cosParameter_1 + cosParameter_1 * Math.cos(scrollCount_1));\n                // Only continue animation if scroll position has not changed\n                if (_this.elementRef.nativeElement[target] === oldValue_1) {\n                    if (scrollCount_1 >= Math.PI) {\n                        _this.animateScrolling(target, value, 0);\n                    }\n                    else {\n                        _this.elementRef.nativeElement[target] = newValue_1;\n                        // On a zoomed out page the resulting offset may differ\n                        oldValue_1 = _this.elementRef.nativeElement[target];\n                        oldTimestamp_1 = newTimestamp;\n                        _this.animation = window.requestAnimationFrame(step_1);\n                    }\n                }\n            });\n            window.requestAnimationFrame(step_1);\n        }\n    };\n    /** @nocollapse */\n    PerfectScrollbarDirective.ctorParameters = function () { return [\n        { type: NgZone },\n        { type: KeyValueDiffers },\n        { type: ElementRef },\n        { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [PERFECT_SCROLLBAR_CONFIG,] }] }\n    ]; };\n    PerfectScrollbarDirective.propDecorators = {\n        disabled: [{ type: Input }],\n        config: [{ type: Input, args: ['perfectScrollbar',] }],\n        psScrollY: [{ type: Output }],\n        psScrollX: [{ type: Output }],\n        psScrollUp: [{ type: Output }],\n        psScrollDown: [{ type: Output }],\n        psScrollLeft: [{ type: Output }],\n        psScrollRight: [{ type: Output }],\n        psYReachEnd: [{ type: Output }],\n        psYReachStart: [{ type: Output }],\n        psXReachEnd: [{ type: Output }],\n        psXReachStart: [{ type: Output }]\n    };\nPerfectScrollbarDirective.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: PerfectScrollbarDirective, selectors: [[\"\", \"perfectScrollbar\", \"\"]], factory: function PerfectScrollbarDirective_Factory(t) { return new (t || PerfectScrollbarDirective)(ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(KeyValueDiffers), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(PERFECT_SCROLLBAR_CONFIG, 8)); }, inputs: { disabled: \"disabled\", config: [\"perfectScrollbar\", \"config\"] }, outputs: { psScrollY: \"psScrollY\", psScrollX: \"psScrollX\", psScrollUp: \"psScrollUp\", psScrollDown: \"psScrollDown\", psScrollLeft: \"psScrollLeft\", psScrollRight: \"psScrollRight\", psYReachEnd: \"psYReachEnd\", psYReachStart: \"psYReachStart\", psXReachEnd: \"psXReachEnd\", psXReachStart: \"psXReachStart\" }, exportAs: [\"ngxPerfectScrollbar\"], features: [ɵngcc0.ɵɵNgOnChangesFeature()] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(PerfectScrollbarDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[perfectScrollbar]',\n                exportAs: 'ngxPerfectScrollbar'\n            }]\n    }], function () { return [{ type: NgZone }, { type: KeyValueDiffers }, { type: ElementRef }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [PERFECT_SCROLLBAR_CONFIG]\n            }] }]; }, { zone: [], differs: [], elementRef: [], platformId: [], defaults: [], instance: [], ro: [], timeout: [], animation: [], configDiff: [], ngDestroy: [], disabled: [{\n            type: Input\n        }], psScrollY: [{\n            type: Output\n        }], psScrollX: [{\n            type: Output\n        }], psScrollUp: [{\n            type: Output\n        }], psScrollDown: [{\n            type: Output\n        }], psScrollLeft: [{\n            type: Output\n        }], psScrollRight: [{\n            type: Output\n        }], psYReachEnd: [{\n            type: Output\n        }], psYReachStart: [{\n            type: Output\n        }], psXReachEnd: [{\n            type: Output\n        }], psXReachStart: [{\n            type: Output\n        }], ngOnInit: [], ngOnDestroy: [], ngDoCheck: [], ngOnChanges: [], ps: [], update: [], geometry: [], position: [], scrollable: [], scrollTo: [], scrollToX: [], scrollToY: [], scrollToTop: [], scrollToLeft: [], scrollToRight: [], scrollToBottom: [], scrollToElement: [], animateScrolling: [], config: [{\n            type: Input,\n            args: ['perfectScrollbar']\n        }] });\n    return PerfectScrollbarDirective;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar PerfectScrollbarComponent = /** @class */ (function () {\n    function PerfectScrollbarComponent(zone, cdRef, platformId) {\n        this.zone = zone;\n        this.cdRef = cdRef;\n        this.platformId = platformId;\n        this.states = {};\n        this.indicatorX = false;\n        this.indicatorY = false;\n        this.interaction = false;\n        this.scrollPositionX = 0;\n        this.scrollPositionY = 0;\n        this.scrollDirectionX = 0;\n        this.scrollDirectionY = 0;\n        this.usePropagationX = false;\n        this.usePropagationY = false;\n        this.allowPropagationX = false;\n        this.allowPropagationY = false;\n        this.stateTimeout = null;\n        this.ngDestroy = new Subject();\n        this.stateUpdate = new Subject();\n        this.disabled = false;\n        this.usePSClass = true;\n        this.autoPropagation = false;\n        this.scrollIndicators = false;\n        this.psScrollY = new EventEmitter();\n        this.psScrollX = new EventEmitter();\n        this.psScrollUp = new EventEmitter();\n        this.psScrollDown = new EventEmitter();\n        this.psScrollLeft = new EventEmitter();\n        this.psScrollRight = new EventEmitter();\n        this.psYReachEnd = new EventEmitter();\n        this.psYReachStart = new EventEmitter();\n        this.psXReachEnd = new EventEmitter();\n        this.psXReachStart = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    PerfectScrollbarComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (isPlatformBrowser(this.platformId)) {\n            this.stateUpdate\n                .pipe(takeUntil(this.ngDestroy), distinctUntilChanged((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            function (a, b) { return (a === b && !_this.stateTimeout); })))\n                .subscribe((/**\n             * @param {?} state\n             * @return {?}\n             */\n            function (state) {\n                if (_this.stateTimeout && typeof window !== 'undefined') {\n                    window.clearTimeout(_this.stateTimeout);\n                    _this.stateTimeout = null;\n                }\n                if (state === 'x' || state === 'y') {\n                    _this.interaction = false;\n                    if (state === 'x') {\n                        _this.indicatorX = false;\n                        _this.states.left = false;\n                        _this.states.right = false;\n                        if (_this.autoPropagation && _this.usePropagationX) {\n                            _this.allowPropagationX = false;\n                        }\n                    }\n                    else if (state === 'y') {\n                        _this.indicatorY = false;\n                        _this.states.top = false;\n                        _this.states.bottom = false;\n                        if (_this.autoPropagation && _this.usePropagationY) {\n                            _this.allowPropagationY = false;\n                        }\n                    }\n                }\n                else {\n                    if (state === 'left' || state === 'right') {\n                        _this.states.left = false;\n                        _this.states.right = false;\n                        _this.states[state] = true;\n                        if (_this.autoPropagation && _this.usePropagationX) {\n                            _this.indicatorX = true;\n                        }\n                    }\n                    else if (state === 'top' || state === 'bottom') {\n                        _this.states.top = false;\n                        _this.states.bottom = false;\n                        _this.states[state] = true;\n                        if (_this.autoPropagation && _this.usePropagationY) {\n                            _this.indicatorY = true;\n                        }\n                    }\n                    if (_this.autoPropagation && typeof window !== 'undefined') {\n                        _this.stateTimeout = window.setTimeout((/**\n                         * @return {?}\n                         */\n                        function () {\n                            _this.indicatorX = false;\n                            _this.indicatorY = false;\n                            _this.stateTimeout = null;\n                            if (_this.interaction && (_this.states.left || _this.states.right)) {\n                                _this.allowPropagationX = true;\n                            }\n                            if (_this.interaction && (_this.states.top || _this.states.bottom)) {\n                                _this.allowPropagationY = true;\n                            }\n                            _this.cdRef.markForCheck();\n                        }), 500);\n                    }\n                }\n                _this.cdRef.markForCheck();\n                _this.cdRef.detectChanges();\n            }));\n            this.zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () {\n                if (_this.directiveRef) {\n                    /** @type {?} */\n                    var element = _this.directiveRef.elementRef.nativeElement;\n                    fromEvent(element, 'wheel')\n                        .pipe(takeUntil(_this.ngDestroy))\n                        .subscribe((/**\n                     * @param {?} event\n                     * @return {?}\n                     */\n                    function (event) {\n                        if (!_this.disabled && _this.autoPropagation) {\n                            /** @type {?} */\n                            var scrollDeltaX = event.deltaX;\n                            /** @type {?} */\n                            var scrollDeltaY = event.deltaY;\n                            _this.checkPropagation(event, scrollDeltaX, scrollDeltaY);\n                        }\n                    }));\n                    fromEvent(element, 'touchmove')\n                        .pipe(takeUntil(_this.ngDestroy))\n                        .subscribe((/**\n                     * @param {?} event\n                     * @return {?}\n                     */\n                    function (event) {\n                        if (!_this.disabled && _this.autoPropagation) {\n                            /** @type {?} */\n                            var scrollPositionX = event.touches[0].clientX;\n                            /** @type {?} */\n                            var scrollPositionY = event.touches[0].clientY;\n                            /** @type {?} */\n                            var scrollDeltaX = scrollPositionX - _this.scrollPositionX;\n                            /** @type {?} */\n                            var scrollDeltaY = scrollPositionY - _this.scrollPositionY;\n                            _this.checkPropagation(event, scrollDeltaX, scrollDeltaY);\n                            _this.scrollPositionX = scrollPositionX;\n                            _this.scrollPositionY = scrollPositionY;\n                        }\n                    }));\n                    merge(fromEvent(element, 'ps-scroll-x')\n                        .pipe(mapTo('x')), fromEvent(element, 'ps-scroll-y')\n                        .pipe(mapTo('y')), fromEvent(element, 'ps-x-reach-end')\n                        .pipe(mapTo('right')), fromEvent(element, 'ps-y-reach-end')\n                        .pipe(mapTo('bottom')), fromEvent(element, 'ps-x-reach-start')\n                        .pipe(mapTo('left')), fromEvent(element, 'ps-y-reach-start')\n                        .pipe(mapTo('top')))\n                        .pipe(takeUntil(_this.ngDestroy))\n                        .subscribe((/**\n                     * @param {?} state\n                     * @return {?}\n                     */\n                    function (state) {\n                        if (!_this.disabled && (_this.autoPropagation || _this.scrollIndicators)) {\n                            _this.stateUpdate.next(state);\n                        }\n                    }));\n                }\n            }));\n            window.setTimeout((/**\n             * @return {?}\n             */\n            function () {\n                PerfectScrollbarEvents.forEach((/**\n                 * @param {?} eventName\n                 * @return {?}\n                 */\n                function (eventName) {\n                    if (_this.directiveRef) {\n                        _this.directiveRef[eventName] = _this[eventName];\n                    }\n                }));\n            }), 0);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PerfectScrollbarComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (isPlatformBrowser(this.platformId)) {\n            this.ngDestroy.next();\n            this.ngDestroy.unsubscribe();\n            if (this.stateTimeout && typeof window !== 'undefined') {\n                window.clearTimeout(this.stateTimeout);\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PerfectScrollbarComponent.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (isPlatformBrowser(this.platformId)) {\n            if (!this.disabled && this.autoPropagation && this.directiveRef) {\n                /** @type {?} */\n                var element = this.directiveRef.elementRef.nativeElement;\n                this.usePropagationX = element.classList.contains('ps--active-x');\n                this.usePropagationY = element.classList.contains('ps--active-y');\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {?} event\n     * @param {?} deltaX\n     * @param {?} deltaY\n     * @return {?}\n     */\n    PerfectScrollbarComponent.prototype.checkPropagation = /**\n     * @private\n     * @param {?} event\n     * @param {?} deltaX\n     * @param {?} deltaY\n     * @return {?}\n     */\n    function (event, deltaX, deltaY) {\n        this.interaction = true;\n        /** @type {?} */\n        var scrollDirectionX = (deltaX < 0) ? -1 : 1;\n        /** @type {?} */\n        var scrollDirectionY = (deltaY < 0) ? -1 : 1;\n        if ((this.usePropagationX && this.usePropagationY) ||\n            (this.usePropagationX && (!this.allowPropagationX ||\n                (this.scrollDirectionX !== scrollDirectionX))) ||\n            (this.usePropagationY && (!this.allowPropagationY ||\n                (this.scrollDirectionY !== scrollDirectionY)))) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        if (!!deltaX) {\n            this.scrollDirectionX = scrollDirectionX;\n        }\n        if (!!deltaY) {\n            this.scrollDirectionY = scrollDirectionY;\n        }\n        this.stateUpdate.next('interaction');\n        this.cdRef.detectChanges();\n    };\n    /** @nocollapse */\n    PerfectScrollbarComponent.ctorParameters = function () { return [\n        { type: NgZone },\n        { type: ChangeDetectorRef },\n        { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n    ]; };\n    PerfectScrollbarComponent.propDecorators = {\n        disabled: [{ type: Input }],\n        usePSClass: [{ type: Input }],\n        autoPropagation: [{ type: HostBinding, args: ['class.ps-show-limits',] }, { type: Input }],\n        scrollIndicators: [{ type: HostBinding, args: ['class.ps-show-active',] }, { type: Input }],\n        config: [{ type: Input }],\n        psScrollY: [{ type: Output }],\n        psScrollX: [{ type: Output }],\n        psScrollUp: [{ type: Output }],\n        psScrollDown: [{ type: Output }],\n        psScrollLeft: [{ type: Output }],\n        psScrollRight: [{ type: Output }],\n        psYReachEnd: [{ type: Output }],\n        psYReachStart: [{ type: Output }],\n        psXReachEnd: [{ type: Output }],\n        psXReachStart: [{ type: Output }],\n        directiveRef: [{ type: ViewChild, args: [PerfectScrollbarDirective, { static: true },] }]\n    };\nPerfectScrollbarComponent.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: PerfectScrollbarComponent, selectors: [[\"perfect-scrollbar\"]], factory: function PerfectScrollbarComponent_Factory(t) { return new (t || PerfectScrollbarComponent)(ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); }, viewQuery: function PerfectScrollbarComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(PerfectScrollbarDirective, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.directiveRef = _t.first);\n    } }, hostBindings: function PerfectScrollbarComponent_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(2);\n        ɵngcc0.ɵɵstyling();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ps-show-limits\", ctx.autoPropagation);\n        ɵngcc0.ɵɵclassProp(\"ps-show-active\", ctx.scrollIndicators);\n        ɵngcc0.ɵɵstylingApply();\n    } }, inputs: { disabled: \"disabled\", usePSClass: \"usePSClass\", autoPropagation: \"autoPropagation\", scrollIndicators: \"scrollIndicators\", config: \"config\" }, outputs: { psScrollY: \"psScrollY\", psScrollX: \"psScrollX\", psScrollUp: \"psScrollUp\", psScrollDown: \"psScrollDown\", psScrollLeft: \"psScrollLeft\", psScrollRight: \"psScrollRight\", psYReachEnd: \"psYReachEnd\", psYReachStart: \"psYReachStart\", psXReachEnd: \"psXReachEnd\", psXReachStart: \"psXReachStart\" }, exportAs: [\"ngxPerfectScrollbar\"], ngContentSelectors: _c8, consts: 4, vars: 4, template: function PerfectScrollbarComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", _c0);\n        ɵngcc0.ɵɵstyling();\n        ɵngcc0.ɵɵelementStart(1, \"div\", _c1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, PerfectScrollbarComponent_div_3_Template, 5, 8, \"div\", _c2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ps\", ctx.usePSClass);\n        ɵngcc0.ɵɵstylingApply();\n        ɵngcc0.ɵɵproperty(\"perfectScrollbar\", ctx.config)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵselect(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.scrollIndicators);\n    } }, directives: [PerfectScrollbarDirective, ɵngcc1.NgIf], styles: [\"/*\\n  TODO: Remove important flags after this bug if fixed:\\n  https://github.com/angular/flex-layout/issues/381\\n*/\\n\\nperfect-scrollbar {\\n  position: relative;\\n\\n  display: block;\\n  overflow: hidden;\\n  width: 100%;\\n  height: 100%;\\n  max-width: 100%;\\n  max-height: 100%;\\n}\\n\\nperfect-scrollbar[hidden] {\\n  display: none;\\n}\\n\\nperfect-scrollbar[fxflex] {\\n  display: flex;\\n  flex-direction: column;\\n  height: auto;\\n  min-width: 0;\\n  min-height: 0;\\n\\n  -webkit-box-direction: column;\\n  -webkit-box-orient: column;\\n}\\n\\nperfect-scrollbar[fxflex] > .ps {\\n  -ms-flex: 1 1 auto;\\n\\n  flex: 1 1 auto;\\n  width: auto;\\n  height: auto;\\n  min-width: 0;\\n  min-height: 0;\\n\\n  -webkit-box-flex: 1;\\n}\\n\\nperfect-scrollbar[fxlayout] > .ps,\\nperfect-scrollbar[fxlayout] > .ps > .ps-content {\\n  display: flex;\\n\\n  -ms-flex: 1 1 auto;\\n\\n  flex: 1 1 auto;\\n  flex-direction: inherit;\\n  align-items: inherit;\\n  align-content: inherit;\\n  justify-content: inherit;\\n  width: 100%;\\n  height: 100%;\\n\\n  -webkit-box-align: inherit;\\n  -webkit-box-direction: inherit;\\n  -webkit-box-flex: 1;\\n  -webkit-box-orient: inherit;\\n  -webkit-box-pack: inherit;\\n}\\n\\nperfect-scrollbar[fxlayout='row'] > .ps,\\nperfect-scrollbar[fxlayout='row'] > .ps > .ps-content, {\\n  flex-direction: row !important;\\n\\n  -webkit-box-direction: row !important;\\n  -webkit-box-orient: row !important;\\n}\\n\\nperfect-scrollbar[fxlayout='column'] > .ps,\\nperfect-scrollbar[fxlayout='column'] > .ps > .ps-content {\\n  flex-direction: column !important;\\n\\n  -webkit-box-direction: column !important;\\n  -webkit-box-orient: column !important;\\n}\\n\\nperfect-scrollbar > .ps {\\n  position: static;\\n\\n  display: block;\\n  width: inherit;\\n  height: inherit;\\n  max-width: inherit;\\n  max-height: inherit;\\n}\\n\\nperfect-scrollbar > .ps textarea {\\n  -ms-overflow-style: scrollbar;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n\\n  display: block;\\n  overflow: hidden;\\n\\n  pointer-events: none;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-top,\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-left,\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-right,\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-bottom {\\n  position: absolute;\\n\\n  opacity: 0;\\n\\n  transition: opacity 300ms ease-in-out;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-top,\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-bottom {\\n  left: 0;\\n\\n  min-width: 100%;\\n  min-height: 24px;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-left,\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-right {\\n  top: 0;\\n\\n  min-width: 24px;\\n  min-height: 100%;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-top {\\n  top: 0;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-left {\\n  left: 0;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-right {\\n  right: 0;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-bottom {\\n  bottom: 0;\\n}\\n\\nperfect-scrollbar > .ps.ps--active-y > .ps__rail-y {\\n  top: 0 !important;\\n  right: 0 !important;\\n  left: auto !important;\\n\\n  width: 10px;\\n\\n  cursor: default;\\n\\n  transition:\\n    width 200ms linear,\\n    opacity 200ms linear,\\n    background-color 200ms linear;\\n}\\n\\nperfect-scrollbar > .ps.ps--active-y > .ps__rail-y:hover,\\nperfect-scrollbar > .ps.ps--active-y > .ps__rail-y.ps--clicking {\\n  width: 15px;\\n}\\n\\nperfect-scrollbar > .ps.ps--active-x > .ps__rail-x {\\n  top: auto !important;\\n  bottom: 0 !important;\\n  left: 0 !important;\\n\\n  height: 10px;\\n\\n  cursor: default;\\n\\n  transition:\\n    height 200ms linear,\\n    opacity 200ms linear,\\n    background-color 200ms linear;\\n}\\n\\nperfect-scrollbar > .ps.ps--active-x > .ps__rail-x:hover,\\nperfect-scrollbar > .ps.ps--active-x > .ps__rail-x.ps--clicking {\\n  height: 15px;\\n}\\n\\nperfect-scrollbar > .ps.ps--active-x.ps--active-y > .ps__rail-y {\\n  margin: 0 0 10px;\\n}\\n\\nperfect-scrollbar > .ps.ps--active-x.ps--active-y > .ps__rail-x {\\n  margin: 0 10px 0 0;\\n}\\n\\nperfect-scrollbar > .ps.ps--scrolling-y > .ps__rail-y,\\nperfect-scrollbar > .ps.ps--scrolling-x > .ps__rail-x {\\n  opacity: 0.9;\\n\\n  background-color: #eee;\\n}\\n\\nperfect-scrollbar.ps-show-always > .ps.ps--active-y > .ps__rail-y,\\nperfect-scrollbar.ps-show-always > .ps.ps--active-x > .ps__rail-x {\\n  opacity: 0.6;\\n}\\n\\nperfect-scrollbar.ps-show-active > .ps.ps--active-y > .ps-overlay:not(.ps-at-top) .ps-indicator-top {\\n  opacity: 1;\\n\\n  background: linear-gradient(to bottom, rgba(255, 255, 255, 0.5) 0%, rgba(255, 255, 255, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active > .ps.ps--active-y > .ps-overlay:not(.ps-at-bottom) .ps-indicator-bottom {\\n  opacity: 1;\\n\\n  background: linear-gradient(to top, rgba(255, 255, 255, 0.5) 0%, rgba(255, 255, 255, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active > .ps.ps--active-x > .ps-overlay:not(.ps-at-left) .ps-indicator-left {\\n  opacity: 1;\\n\\n  background: linear-gradient(to right, rgba(255, 255, 255, 0.5) 0%, rgba(255, 255, 255, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active > .ps.ps--active-x > .ps-overlay:not(.ps-at-right) .ps-indicator-right {\\n  opacity: 1;\\n\\n  background: linear-gradient(to left, rgba(255, 255, 255, 0.5) 0%, rgba(255, 255, 255, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-y > .ps-overlay.ps-at-top .ps-indicator-top {\\n  background: linear-gradient(to bottom, rgba(170, 170, 170, 0.5) 0%, rgba(170, 170, 170, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-y > .ps-overlay.ps-at-bottom .ps-indicator-bottom {\\n  background: linear-gradient(to top, rgba(170, 170, 170, 0.5) 0%, rgba(170, 170, 170, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-x > .ps-overlay.ps-at-left .ps-indicator-left {\\n  background: linear-gradient(to right, rgba(170, 170, 170, 0.5) 0%, rgba(170, 170, 170, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-x > .ps-overlay.ps-at-right .ps-indicator-right {\\n  background: linear-gradient(to left, rgba(170, 170, 170, 0.5) 0%, rgba(170, 170, 170, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-y > .ps-overlay.ps-at-top .ps-indicator-top.ps-indicator-show,\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-y > .ps-overlay.ps-at-bottom .ps-indicator-bottom.ps-indicator-show,\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-x > .ps-overlay.ps-at-left .ps-indicator-left.ps-indicator-show,\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-x > .ps-overlay.ps-at-right .ps-indicator-right.ps-indicator-show {\\n  opacity: 1;\\n}\\n\", \"/*\\n * Container style\\n */\\n.ps {\\n  overflow: hidden !important;\\n  overflow-anchor: none;\\n  -ms-overflow-style: none;\\n  touch-action: auto;\\n  -ms-touch-action: auto;\\n}\\n\\n/*\\n * Scrollbar rail styles\\n */\\n.ps__rail-x {\\n  display: none;\\n  opacity: 0;\\n  transition: background-color .2s linear, opacity .2s linear;\\n  -webkit-transition: background-color .2s linear, opacity .2s linear;\\n  height: 15px;\\n  /* there must be 'bottom' or 'top' for ps__rail-x */\\n  bottom: 0px;\\n  /* please don't change 'position' */\\n  position: absolute;\\n}\\n\\n.ps__rail-y {\\n  display: none;\\n  opacity: 0;\\n  transition: background-color .2s linear, opacity .2s linear;\\n  -webkit-transition: background-color .2s linear, opacity .2s linear;\\n  width: 15px;\\n  /* there must be 'right' or 'left' for ps__rail-y */\\n  right: 0;\\n  /* please don't change 'position' */\\n  position: absolute;\\n}\\n\\n.ps--active-x > .ps__rail-x,\\n.ps--active-y > .ps__rail-y {\\n  display: block;\\n  background-color: transparent;\\n}\\n\\n.ps:hover > .ps__rail-x,\\n.ps:hover > .ps__rail-y,\\n.ps--focus > .ps__rail-x,\\n.ps--focus > .ps__rail-y,\\n.ps--scrolling-x > .ps__rail-x,\\n.ps--scrolling-y > .ps__rail-y {\\n  opacity: 0.6;\\n}\\n\\n.ps .ps__rail-x:hover,\\n.ps .ps__rail-y:hover,\\n.ps .ps__rail-x:focus,\\n.ps .ps__rail-y:focus,\\n.ps .ps__rail-x.ps--clicking,\\n.ps .ps__rail-y.ps--clicking {\\n  background-color: #eee;\\n  opacity: 0.9;\\n}\\n\\n/*\\n * Scrollbar thumb styles\\n */\\n.ps__thumb-x {\\n  background-color: #aaa;\\n  border-radius: 6px;\\n  transition: background-color .2s linear, height .2s ease-in-out;\\n  -webkit-transition: background-color .2s linear, height .2s ease-in-out;\\n  height: 6px;\\n  /* there must be 'bottom' for ps__thumb-x */\\n  bottom: 2px;\\n  /* please don't change 'position' */\\n  position: absolute;\\n}\\n\\n.ps__thumb-y {\\n  background-color: #aaa;\\n  border-radius: 6px;\\n  transition: background-color .2s linear, width .2s ease-in-out;\\n  -webkit-transition: background-color .2s linear, width .2s ease-in-out;\\n  width: 6px;\\n  /* there must be 'right' for ps__thumb-y */\\n  right: 2px;\\n  /* please don't change 'position' */\\n  position: absolute;\\n}\\n\\n.ps__rail-x:hover > .ps__thumb-x,\\n.ps__rail-x:focus > .ps__thumb-x,\\n.ps__rail-x.ps--clicking .ps__thumb-x {\\n  background-color: #999;\\n  height: 11px;\\n}\\n\\n.ps__rail-y:hover > .ps__thumb-y,\\n.ps__rail-y:focus > .ps__thumb-y,\\n.ps__rail-y.ps--clicking .ps__thumb-y {\\n  background-color: #999;\\n  width: 11px;\\n}\\n\\n/* MS supports */\\n@supports (-ms-overflow-style: none) {\\n  .ps {\\n    overflow: auto !important;\\n  }\\n}\\n\\n@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {\\n  .ps {\\n    overflow: auto !important;\\n  }\\n}\\n\"], encapsulation: 2 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(PerfectScrollbarComponent, [{\n        type: Component,\n        args: [{\n                selector: 'perfect-scrollbar',\n                exportAs: 'ngxPerfectScrollbar',\n                template: \"<div style=\\\"position: static;\\\" [class.ps]=\\\"usePSClass\\\" [perfectScrollbar]=\\\"config\\\" [disabled]=\\\"disabled\\\">\\n  <div class=\\\"ps-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <div *ngIf=\\\"scrollIndicators\\\" class=\\\"ps-overlay\\\" [class.ps-at-top]=\\\"states.top\\\" [class.ps-at-left]=\\\"states.left\\\" [class.ps-at-right]=\\\"states.right\\\" [class.ps-at-bottom]=\\\"states.bottom\\\">\\n    <div class=\\\"ps-indicator-top\\\" [class.ps-indicator-show]=\\\"indicatorY && interaction\\\"></div>\\n    <div class=\\\"ps-indicator-left\\\" [class.ps-indicator-show]=\\\"indicatorX && interaction\\\"></div>\\n    <div class=\\\"ps-indicator-right\\\" [class.ps-indicator-show]=\\\"indicatorX && interaction\\\"></div>\\n    <div class=\\\"ps-indicator-bottom\\\" [class.ps-indicator-show]=\\\"indicatorY && interaction\\\"></div>\\n  </div>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                styles: [\"/*\\n  TODO: Remove important flags after this bug if fixed:\\n  https://github.com/angular/flex-layout/issues/381\\n*/\\n\\nperfect-scrollbar {\\n  position: relative;\\n\\n  display: block;\\n  overflow: hidden;\\n  width: 100%;\\n  height: 100%;\\n  max-width: 100%;\\n  max-height: 100%;\\n}\\n\\nperfect-scrollbar[hidden] {\\n  display: none;\\n}\\n\\nperfect-scrollbar[fxflex] {\\n  display: flex;\\n  flex-direction: column;\\n  height: auto;\\n  min-width: 0;\\n  min-height: 0;\\n\\n  -webkit-box-direction: column;\\n  -webkit-box-orient: column;\\n}\\n\\nperfect-scrollbar[fxflex] > .ps {\\n  -ms-flex: 1 1 auto;\\n\\n  flex: 1 1 auto;\\n  width: auto;\\n  height: auto;\\n  min-width: 0;\\n  min-height: 0;\\n\\n  -webkit-box-flex: 1;\\n}\\n\\nperfect-scrollbar[fxlayout] > .ps,\\nperfect-scrollbar[fxlayout] > .ps > .ps-content {\\n  display: flex;\\n\\n  -ms-flex: 1 1 auto;\\n\\n  flex: 1 1 auto;\\n  flex-direction: inherit;\\n  align-items: inherit;\\n  align-content: inherit;\\n  justify-content: inherit;\\n  width: 100%;\\n  height: 100%;\\n\\n  -webkit-box-align: inherit;\\n  -webkit-box-direction: inherit;\\n  -webkit-box-flex: 1;\\n  -webkit-box-orient: inherit;\\n  -webkit-box-pack: inherit;\\n}\\n\\nperfect-scrollbar[fxlayout='row'] > .ps,\\nperfect-scrollbar[fxlayout='row'] > .ps > .ps-content, {\\n  flex-direction: row !important;\\n\\n  -webkit-box-direction: row !important;\\n  -webkit-box-orient: row !important;\\n}\\n\\nperfect-scrollbar[fxlayout='column'] > .ps,\\nperfect-scrollbar[fxlayout='column'] > .ps > .ps-content {\\n  flex-direction: column !important;\\n\\n  -webkit-box-direction: column !important;\\n  -webkit-box-orient: column !important;\\n}\\n\\nperfect-scrollbar > .ps {\\n  position: static;\\n\\n  display: block;\\n  width: inherit;\\n  height: inherit;\\n  max-width: inherit;\\n  max-height: inherit;\\n}\\n\\nperfect-scrollbar > .ps textarea {\\n  -ms-overflow-style: scrollbar;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n\\n  display: block;\\n  overflow: hidden;\\n\\n  pointer-events: none;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-top,\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-left,\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-right,\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-bottom {\\n  position: absolute;\\n\\n  opacity: 0;\\n\\n  transition: opacity 300ms ease-in-out;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-top,\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-bottom {\\n  left: 0;\\n\\n  min-width: 100%;\\n  min-height: 24px;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-left,\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-right {\\n  top: 0;\\n\\n  min-width: 24px;\\n  min-height: 100%;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-top {\\n  top: 0;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-left {\\n  left: 0;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-right {\\n  right: 0;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-bottom {\\n  bottom: 0;\\n}\\n\\nperfect-scrollbar > .ps.ps--active-y > .ps__rail-y {\\n  top: 0 !important;\\n  right: 0 !important;\\n  left: auto !important;\\n\\n  width: 10px;\\n\\n  cursor: default;\\n\\n  transition:\\n    width 200ms linear,\\n    opacity 200ms linear,\\n    background-color 200ms linear;\\n}\\n\\nperfect-scrollbar > .ps.ps--active-y > .ps__rail-y:hover,\\nperfect-scrollbar > .ps.ps--active-y > .ps__rail-y.ps--clicking {\\n  width: 15px;\\n}\\n\\nperfect-scrollbar > .ps.ps--active-x > .ps__rail-x {\\n  top: auto !important;\\n  bottom: 0 !important;\\n  left: 0 !important;\\n\\n  height: 10px;\\n\\n  cursor: default;\\n\\n  transition:\\n    height 200ms linear,\\n    opacity 200ms linear,\\n    background-color 200ms linear;\\n}\\n\\nperfect-scrollbar > .ps.ps--active-x > .ps__rail-x:hover,\\nperfect-scrollbar > .ps.ps--active-x > .ps__rail-x.ps--clicking {\\n  height: 15px;\\n}\\n\\nperfect-scrollbar > .ps.ps--active-x.ps--active-y > .ps__rail-y {\\n  margin: 0 0 10px;\\n}\\n\\nperfect-scrollbar > .ps.ps--active-x.ps--active-y > .ps__rail-x {\\n  margin: 0 10px 0 0;\\n}\\n\\nperfect-scrollbar > .ps.ps--scrolling-y > .ps__rail-y,\\nperfect-scrollbar > .ps.ps--scrolling-x > .ps__rail-x {\\n  opacity: 0.9;\\n\\n  background-color: #eee;\\n}\\n\\nperfect-scrollbar.ps-show-always > .ps.ps--active-y > .ps__rail-y,\\nperfect-scrollbar.ps-show-always > .ps.ps--active-x > .ps__rail-x {\\n  opacity: 0.6;\\n}\\n\\nperfect-scrollbar.ps-show-active > .ps.ps--active-y > .ps-overlay:not(.ps-at-top) .ps-indicator-top {\\n  opacity: 1;\\n\\n  background: linear-gradient(to bottom, rgba(255, 255, 255, 0.5) 0%, rgba(255, 255, 255, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active > .ps.ps--active-y > .ps-overlay:not(.ps-at-bottom) .ps-indicator-bottom {\\n  opacity: 1;\\n\\n  background: linear-gradient(to top, rgba(255, 255, 255, 0.5) 0%, rgba(255, 255, 255, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active > .ps.ps--active-x > .ps-overlay:not(.ps-at-left) .ps-indicator-left {\\n  opacity: 1;\\n\\n  background: linear-gradient(to right, rgba(255, 255, 255, 0.5) 0%, rgba(255, 255, 255, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active > .ps.ps--active-x > .ps-overlay:not(.ps-at-right) .ps-indicator-right {\\n  opacity: 1;\\n\\n  background: linear-gradient(to left, rgba(255, 255, 255, 0.5) 0%, rgba(255, 255, 255, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-y > .ps-overlay.ps-at-top .ps-indicator-top {\\n  background: linear-gradient(to bottom, rgba(170, 170, 170, 0.5) 0%, rgba(170, 170, 170, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-y > .ps-overlay.ps-at-bottom .ps-indicator-bottom {\\n  background: linear-gradient(to top, rgba(170, 170, 170, 0.5) 0%, rgba(170, 170, 170, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-x > .ps-overlay.ps-at-left .ps-indicator-left {\\n  background: linear-gradient(to right, rgba(170, 170, 170, 0.5) 0%, rgba(170, 170, 170, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-x > .ps-overlay.ps-at-right .ps-indicator-right {\\n  background: linear-gradient(to left, rgba(170, 170, 170, 0.5) 0%, rgba(170, 170, 170, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-y > .ps-overlay.ps-at-top .ps-indicator-top.ps-indicator-show,\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-y > .ps-overlay.ps-at-bottom .ps-indicator-bottom.ps-indicator-show,\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-x > .ps-overlay.ps-at-left .ps-indicator-left.ps-indicator-show,\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-x > .ps-overlay.ps-at-right .ps-indicator-right.ps-indicator-show {\\n  opacity: 1;\\n}\\n\", \"/*\\n * Container style\\n */\\n.ps {\\n  overflow: hidden !important;\\n  overflow-anchor: none;\\n  -ms-overflow-style: none;\\n  touch-action: auto;\\n  -ms-touch-action: auto;\\n}\\n\\n/*\\n * Scrollbar rail styles\\n */\\n.ps__rail-x {\\n  display: none;\\n  opacity: 0;\\n  transition: background-color .2s linear, opacity .2s linear;\\n  -webkit-transition: background-color .2s linear, opacity .2s linear;\\n  height: 15px;\\n  /* there must be 'bottom' or 'top' for ps__rail-x */\\n  bottom: 0px;\\n  /* please don't change 'position' */\\n  position: absolute;\\n}\\n\\n.ps__rail-y {\\n  display: none;\\n  opacity: 0;\\n  transition: background-color .2s linear, opacity .2s linear;\\n  -webkit-transition: background-color .2s linear, opacity .2s linear;\\n  width: 15px;\\n  /* there must be 'right' or 'left' for ps__rail-y */\\n  right: 0;\\n  /* please don't change 'position' */\\n  position: absolute;\\n}\\n\\n.ps--active-x > .ps__rail-x,\\n.ps--active-y > .ps__rail-y {\\n  display: block;\\n  background-color: transparent;\\n}\\n\\n.ps:hover > .ps__rail-x,\\n.ps:hover > .ps__rail-y,\\n.ps--focus > .ps__rail-x,\\n.ps--focus > .ps__rail-y,\\n.ps--scrolling-x > .ps__rail-x,\\n.ps--scrolling-y > .ps__rail-y {\\n  opacity: 0.6;\\n}\\n\\n.ps .ps__rail-x:hover,\\n.ps .ps__rail-y:hover,\\n.ps .ps__rail-x:focus,\\n.ps .ps__rail-y:focus,\\n.ps .ps__rail-x.ps--clicking,\\n.ps .ps__rail-y.ps--clicking {\\n  background-color: #eee;\\n  opacity: 0.9;\\n}\\n\\n/*\\n * Scrollbar thumb styles\\n */\\n.ps__thumb-x {\\n  background-color: #aaa;\\n  border-radius: 6px;\\n  transition: background-color .2s linear, height .2s ease-in-out;\\n  -webkit-transition: background-color .2s linear, height .2s ease-in-out;\\n  height: 6px;\\n  /* there must be 'bottom' for ps__thumb-x */\\n  bottom: 2px;\\n  /* please don't change 'position' */\\n  position: absolute;\\n}\\n\\n.ps__thumb-y {\\n  background-color: #aaa;\\n  border-radius: 6px;\\n  transition: background-color .2s linear, width .2s ease-in-out;\\n  -webkit-transition: background-color .2s linear, width .2s ease-in-out;\\n  width: 6px;\\n  /* there must be 'right' for ps__thumb-y */\\n  right: 2px;\\n  /* please don't change 'position' */\\n  position: absolute;\\n}\\n\\n.ps__rail-x:hover > .ps__thumb-x,\\n.ps__rail-x:focus > .ps__thumb-x,\\n.ps__rail-x.ps--clicking .ps__thumb-x {\\n  background-color: #999;\\n  height: 11px;\\n}\\n\\n.ps__rail-y:hover > .ps__thumb-y,\\n.ps__rail-y:focus > .ps__thumb-y,\\n.ps__rail-y.ps--clicking .ps__thumb-y {\\n  background-color: #999;\\n  width: 11px;\\n}\\n\\n/* MS supports */\\n@supports (-ms-overflow-style: none) {\\n  .ps {\\n    overflow: auto !important;\\n  }\\n}\\n\\n@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {\\n  .ps {\\n    overflow: auto !important;\\n  }\\n}\\n\"]\n            }]\n    }], function () { return [{ type: NgZone }, { type: ChangeDetectorRef }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, { zone: [], cdRef: [], platformId: [], states: [], indicatorX: [], indicatorY: [], interaction: [], scrollPositionX: [], scrollPositionY: [], scrollDirectionX: [], scrollDirectionY: [], usePropagationX: [], usePropagationY: [], allowPropagationX: [], allowPropagationY: [], stateTimeout: [], ngDestroy: [], stateUpdate: [], disabled: [{\n            type: Input\n        }], usePSClass: [{\n            type: Input\n        }], autoPropagation: [{\n            type: HostBinding,\n            args: ['class.ps-show-limits']\n        }, {\n            type: Input\n        }], scrollIndicators: [{\n            type: HostBinding,\n            args: ['class.ps-show-active']\n        }, {\n            type: Input\n        }], psScrollY: [{\n            type: Output\n        }], psScrollX: [{\n            type: Output\n        }], psScrollUp: [{\n            type: Output\n        }], psScrollDown: [{\n            type: Output\n        }], psScrollLeft: [{\n            type: Output\n        }], psScrollRight: [{\n            type: Output\n        }], psYReachEnd: [{\n            type: Output\n        }], psYReachStart: [{\n            type: Output\n        }], psXReachEnd: [{\n            type: Output\n        }], psXReachStart: [{\n            type: Output\n        }], ngOnInit: [], ngOnDestroy: [], ngDoCheck: [], checkPropagation: [], config: [{\n            type: Input\n        }], directiveRef: [{\n            type: ViewChild,\n            args: [PerfectScrollbarDirective, { static: true }]\n        }] });\n    return PerfectScrollbarComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar PerfectScrollbarModule = /** @class */ (function () {\n    function PerfectScrollbarModule() {\n    }\nPerfectScrollbarModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: PerfectScrollbarModule });\nPerfectScrollbarModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function PerfectScrollbarModule_Factory(t) { return new (t || PerfectScrollbarModule)(); }, imports: [[CommonModule],\n        CommonModule] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(PerfectScrollbarModule, { declarations: function () { return [PerfectScrollbarComponent,\n        PerfectScrollbarDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [CommonModule,\n        PerfectScrollbarComponent,\n        PerfectScrollbarDirective]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(PerfectScrollbarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [PerfectScrollbarComponent, PerfectScrollbarDirective],\n                exports: [CommonModule, PerfectScrollbarComponent, PerfectScrollbarDirective]\n            }]\n    }], function () { return []; }, null);\n    return PerfectScrollbarModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Geometry, PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarComponent, PerfectScrollbarConfig, PerfectScrollbarDirective, PerfectScrollbarModule, Position };\n\n//# sourceMappingURL=ngx-perfect-scrollbar.es5.js.map","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js';\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","export default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","export default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = parsePatterns.findIndex(function (pattern) {\n        return pattern.test(string);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(string);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}","import formatDistance from './_lib/formatDistance/index.js';\nimport formatLong from './_lib/formatLong/index.js';\nimport formatRelative from './_lib/formatRelative/index.js';\nimport localize from './_lib/localize/index.js';\nimport match from './_lib/match/index.js';\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js';\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js';\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js';\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ContentChild, Directive, ElementRef, Input, TemplateRef, ChangeDetectionStrategy, Component, IterableDiffers, ViewContainerRef, ViewEncapsulation, Attribute, ChangeDetectorRef, ContentChildren, Inject, isDevMode, Optional, ViewChild, InjectionToken, NgModule } from '@angular/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { isDataSource } from '@angular/cdk/collections';\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"role\", \"columnheader\", 1, \"cdk-header-cell\"];\nconst _c1 = [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"];\nconst _c2 = [\"role\", \"gridcell\", 1, \"cdk-cell\"];\nconst _c3 = [\"role\", \"row\", 1, \"cdk-header-row\"];\nconst _c4 = [\"cdkCellOutlet\", \"\"];\nconst _c5 = [\"role\", \"row\", 1, \"cdk-footer-row\"];\nconst _c6 = [\"role\", \"row\", 1, \"cdk-row\"];\nconst _c7 = [1, \"cdk-table\"];\nconst _c8 = [\"headerRowOutlet\", \"\"];\nconst _c9 = [\"rowOutlet\", \"\"];\nconst _c10 = [\"footerRowOutlet\", \"\"];\nconst _c11 = [[[\"caption\"]]];\nconst _c12 = [\"caption\"];\nconst _c13 = [\"cdkColumnDef\", \"\"];\nconst _c14 = [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"];\nconst _c15 = [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"];\nconst _c16 = [\"cdk-header-cell\", \"\"];\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", _c16);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r100 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r100.justify);\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r100.headerText, \" \");\n} }\nconst _c17 = [\"cdk-cell\", \"\"];\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", _c17);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r102 = ctx.$implicit;\n    const ctx_r101 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r101.justify);\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r101.dataAccessor(data_r102, ctx_r101.name), \" \");\n} }\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /**\n             * Whether the sticky input has changed since it was last checked.\n             */\n            this._hasStickyChanged = false;\n        }\n        /**\n         * Whether sticky positioning should be applied.\n         * @return {?}\n         */\n        get sticky() { return this._sticky; }\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set sticky(v) {\n            /** @type {?} */\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /**\n         * Whether the sticky value has changed since this was last called.\n         * @return {?}\n         */\n        hasStickyChanged() {\n            /** @type {?} */\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /**\n         * Resets the dirty check for cases where the sticky state has been used without checking.\n         * @return {?}\n         */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]], factory: function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellDef]' }]\n    }], function () { return [{ type: TemplateRef }]; }, { constructor: [], template: [] });\n/** @nocollapse */\nCdkCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]], factory: function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkHeaderCellDef]' }]\n    }], function () { return [{ type: TemplateRef }]; }, { constructor: [], template: [] });\n/** @nocollapse */\nCdkHeaderCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]], factory: function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkFooterCellDef]' }]\n    }], function () { return [{ type: TemplateRef }]; }, { constructor: [], template: [] });\n/** @nocollapse */\nCdkFooterCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n// Boilerplate for applying mixins to CdkColumnDef.\n/**\n * \\@docs-private\n */\nclass CdkColumnDefBase {\n}\n/** @type {?} */\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    constructor() {\n        super(...arguments);\n        this._stickyEnd = false;\n    }\n    /**\n     * Unique name for this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        // If the directive is set without a name (updated programatically), then this setter will\n        // trigger with an empty string and should not overwrite the programatically set value.\n        if (!name) {\n            return;\n        }\n        this._name = name;\n        this.cssClassFriendlyName = name.replace(/[^a-z0-9_-]/ig, '-');\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     * @return {?}\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set stickyEnd(v) {\n        /** @type {?} */\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n}\nCdkColumnDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], factory: function CdkColumnDef_Factory(t) { return ɵCdkColumnDef_BaseFactory(t || CdkColumnDef); }, contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵCdkColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(CdkColumnDef);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkColumnDef]',\n                inputs: ['sticky'],\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\n            }]\n    }], null, { constructor: [], _stickyEnd: [], name: [{\n            type: Input,\n            args: ['cdkColumnDef']\n        }], name: [], _name: [], cssClassFriendlyName: [], stickyEnd: [{\n            type: Input,\n            args: ['stickyEnd']\n        }], stickyEnd: [], _hasStickyChanged: [], cell: [{\n            type: ContentChild,\n            args: [CdkCellDef, { static: false }]\n        }], headerCell: [{\n            type: ContentChild,\n            args: [CdkHeaderCellDef, { static: false }]\n        }], footerCell: [{\n            type: ContentChild,\n            args: [CdkFooterCellDef, { static: false }]\n        }] });\nCdkColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\n    cell: [{ type: ContentChild, args: [CdkCellDef, { static: false },] }],\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef, { static: false },] }],\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef, { static: false },] }]\n};\n/**\n * Base class for the cells. Adds a CSS classname that identifies the column it renders in.\n */\nclass BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        /** @type {?} */\n        const columnClassName = `cdk-column-${columnDef.cssClassFriendlyName}`;\n        elementRef.nativeElement.classList.add(columnClassName);\n    }\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass CdkHeaderCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], factory: function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ElementRef)); }, hostBindings: function CdkHeaderCell_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c0);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\n                host: {\n                    'class': 'cdk-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ElementRef }]; }, { constructor: [] });\n/** @nocollapse */\nCdkHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass CdkFooterCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkFooterCell.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], factory: function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ElementRef)); }, hostBindings: function CdkFooterCell_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c1);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                host: {\n                    'class': 'cdk-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ElementRef }]; }, { constructor: [] });\n/** @nocollapse */\nCdkFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/**\n * Cell template container that adds the right classes and role.\n */\nclass CdkCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkCell.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], factory: function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ElementRef)); }, hostBindings: function CdkCell_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c2);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-cell, td[cdk-cell]',\n                host: {\n                    'class': 'cdk-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ElementRef }]; }, { constructor: [] });\n/** @nocollapse */\nCdkCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @type {?}\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n * @abstract\n */\nclass BaseRowDef {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            /** @type {?} */\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     * @return {?}\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /**\n     * Gets this row def's relevant cell template from the provided column def.\n     * @param {?} column\n     * @return {?}\n     */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/**\n * \\@docs-private\n */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        super(template, _differs);\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], factory: function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(TemplateRef), ɵngcc0.ɵɵdirectiveInject(IterableDiffers)); }, inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkHeaderRowDef]',\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\n            }]\n    }], function () { return [{ type: TemplateRef }, { type: IterableDiffers }]; }, { constructor: [], ngOnChanges: [] });\n/** @nocollapse */\nCdkHeaderRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/**\n * \\@docs-private\n */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        super(template, _differs);\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], factory: function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(TemplateRef), ɵngcc0.ɵɵdirectiveInject(IterableDiffers)); }, inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkFooterRowDef]',\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\n            }]\n    }], function () { return [{ type: TemplateRef }, { type: IterableDiffers }]; }, { constructor: [], ngOnChanges: [] });\n/** @nocollapse */\nCdkFooterRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        super(template, _differs);\n    }\n}\nCdkRowDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], factory: function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(TemplateRef), ɵngcc0.ɵɵdirectiveInject(IterableDiffers)); }, inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkRowDef]',\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\n            }]\n    }], function () { return [{ type: TemplateRef }, { type: IterableDiffers }]; }, { constructor: [] });\n/** @nocollapse */\nCdkRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n/**\n * Outlet for rendering cells inside of a row or header row.\n * \\@docs-private\n */\nclass CdkCellOutlet {\n    /**\n     * @param {?} _viewContainer\n     */\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\nCdkCellOutlet.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]], factory: function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ViewContainerRef)); } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellOutlet]' }]\n    }], function () { return [{ type: ViewContainerRef }]; }, { constructor: [], _viewContainer: [], ngOnDestroy: [] });\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\n/** @nocollapse */\nCdkCellOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], factory: function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); }, hostBindings: function CdkHeaderRow_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c3);\n    } }, consts: 1, vars: 0, template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, _c4);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\n        type: Component,\n        args: [{ selector: 'cdk-header-row, tr[cdk-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null);\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkFooterRow {\n}\nCdkFooterRow.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], factory: function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); }, hostBindings: function CdkFooterRow_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c5);\n    } }, consts: 1, vars: 0, template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, _c4);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\n        type: Component,\n        args: [{ selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null);\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkRow {\n}\nCdkRow.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], factory: function CdkRow_Factory(t) { return new (t || CdkRow)(); }, hostBindings: function CdkRow_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c6);\n    } }, consts: 1, vars: 0, template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, _c4);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkRow, [{\n        type: Component,\n        args: [{ selector: 'cdk-row, tr[cdk-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * List of all possible directions that can be used for sticky positioning.\n * \\@docs-private\n * @type {?}\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * \\@docs-private\n */\nclass StickyStyler {\n    /**\n     * @param {?} _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param {?} _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param {?} direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param {?=} _isBrowser Whether the table is currently being rendered on the server or the client.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _isBrowser = true) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._isBrowser = _isBrowser;\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param {?} rows The list of rows that should be cleared from sticking in the provided directions\n     * @param {?} stickyDirections The directions that should no longer be set as sticky on the rows.\n     * @return {?}\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            this._removeStickyStyle(row, stickyDirections);\n            for (let i = 0; i < row.children.length; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                this._removeStickyStyle(cell, stickyDirections);\n            }\n        }\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param {?} rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param {?} stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param {?} stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @return {?}\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates) {\n        /** @type {?} */\n        const hasStickyColumns = stickyStartStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state)) || stickyEndStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state));\n        if (!rows.length || !hasStickyColumns || !this._isBrowser) {\n            return;\n        }\n        /** @type {?} */\n        const firstRow = rows[0];\n        /** @type {?} */\n        const numCells = firstRow.children.length;\n        /** @type {?} */\n        const cellWidths = this._getCellWidths(firstRow);\n        /** @type {?} */\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        /** @type {?} */\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        /** @type {?} */\n        const isRtl = this.direction === 'rtl';\n        for (const row of rows) {\n            for (let i = 0; i < numCells; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                if (stickyStartStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'right' : 'left', startPositions[i]);\n                }\n                if (stickyEndStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'left' : 'right', endPositions[i]);\n                }\n            }\n        }\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param {?} rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param {?} stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param {?} position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     * @return {?}\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on.\n        /** @type {?} */\n        const rows = position === 'bottom' ? rowsToStick.reverse() : rowsToStick;\n        /** @type {?} */\n        let stickyHeight = 0;\n        for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n            if (!stickyStates[rowIndex]) {\n                continue;\n            }\n            /** @type {?} */\n            const row = rows[rowIndex];\n            if (this._isNativeHtmlTable) {\n                for (let j = 0; j < row.children.length; j++) {\n                    /** @type {?} */\n                    const cell = (/** @type {?} */ (row.children[j]));\n                    this._addStickyStyle(cell, position, stickyHeight);\n                }\n            }\n            else {\n                // Flex does not respect the stick positioning on the cells, needs to be applied to the row.\n                // If this is applied on a native table, Safari causes the header to fly in wrong direction.\n                this._addStickyStyle(row, position, stickyHeight);\n            }\n            if (rowIndex === rows.length - 1) {\n                // prevent unnecessary reflow from getBoundingClientRect()\n                return;\n            }\n            stickyHeight += row.getBoundingClientRect().height;\n        }\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     * @param {?} tableElement\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        /** @type {?} */\n        const tfoot = (/** @type {?} */ (tableElement.querySelector('tfoot')));\n        if (stickyStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => !state))) {\n            this._removeStickyStyle(tfoot, ['bottom']);\n        }\n        else {\n            this._addStickyStyle(tfoot, 'bottom', 0);\n        }\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     * @param {?} element\n     * @param {?} stickyDirections\n     * @return {?}\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n        }\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        /** @type {?} */\n        const hasDirection = STICKY_DIRECTIONS.some((/**\n         * @param {?} dir\n         * @return {?}\n         */\n        dir => !!element.style[dir]));\n        if (!hasDirection) {\n            element.style.position = '';\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     * @param {?} element\n     * @param {?} dir\n     * @param {?} dirValue\n     * @return {?}\n     */\n    _addStickyStyle(element, dir, dirValue) {\n        element.classList.add(this._stickCellCss);\n        element.style[dir] = `${dirValue}px`;\n        element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        element.style.zIndex = this._getCalculatedZIndex(element);\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     * @param {?} element\n     * @return {?}\n     */\n    _getCalculatedZIndex(element) {\n        /** @type {?} */\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        /** @type {?} */\n        let zIndex = 0;\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /**\n     * Gets the widths for each cell in the provided row.\n     * @param {?} row\n     * @return {?}\n     */\n    _getCellWidths(row) {\n        /** @type {?} */\n        const cellWidths = [];\n        /** @type {?} */\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            /** @type {?} */\n            let cell = (/** @type {?} */ (firstRowCells[i]));\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * \\@docs-private\n * @param {?} id Id whose lookup failed.\n * @return {?}\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * \\@docs-private\n * @param {?} name\n * @return {?}\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * \\@docs-private\n * @param {?} data\n * @return {?}\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * \\@docs-private\n */\nclass DataRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]], factory: function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ElementRef)); } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[rowOutlet]' }]\n    }], function () { return [{ type: ViewContainerRef }, { type: ElementRef }]; }, { constructor: [], viewContainer: [], elementRef: [] });\n/** @nocollapse */\nDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * \\@docs-private\n */\nclass HeaderRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]], factory: function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ElementRef)); } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[headerRowOutlet]' }]\n    }], function () { return [{ type: ViewContainerRef }, { type: ElementRef }]; }, { constructor: [], viewContainer: [], elementRef: [] });\n/** @nocollapse */\nHeaderRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * \\@docs-private\n */\nclass FooterRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]], factory: function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ElementRef)); } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[footerRowOutlet]' }]\n    }], function () { return [{ type: ViewContainerRef }, { type: ElementRef }]; }, { constructor: [], viewContainer: [], elementRef: [] });\n/** @nocollapse */\nFooterRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n * @template T\n */\nclass CdkTable {\n    /**\n     * @param {?} _differs\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} role\n     * @param {?} _dir\n     * @param {?} _document\n     * @param {?} _platform\n     */\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *it's* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *it's* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *it's* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *it's* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        this._multiTemplateDataRows = false;\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * \\@docs-private\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     * @return {?}\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set trackBy(fn) {\n        if (isDevMode() && fn != null && typeof fn !== 'function' && (/** @type {?} */ (console)) &&\n            (/** @type {?} */ (console.warn))) {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     * @return {?}\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    /**\n     * @param {?} dataSource\n     * @return {?}\n     */\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     * @return {?}\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((/**\n         * @param {?} _i\n         * @param {?} dataRow\n         * @return {?}\n         */\n        (_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        this._renderUpdatedColumns();\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        this._checkStickyStates();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     * @return {?}\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        /** @type {?} */\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            return;\n        }\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} prevIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, prevIndex, currentIndex) => {\n            if (record.previousIndex == null) {\n                this._insertRow(record.item, (/** @type {?} */ (currentIndex)));\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove((/** @type {?} */ (prevIndex)));\n            }\n            else {\n                /** @type {?} */\n                const view = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (prevIndex)))));\n                viewContainer.move((/** @type {?} */ (view)), currentIndex);\n            }\n        }));\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const rowView = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (record.currentIndex)))));\n            rowView.context.$implicit = record.item.data;\n        }));\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Sets the header row definition to be used. Overrides the header row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the header row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addHeaderRowDef` and `removeHeaderRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    setHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs = new Set([headerRowDef]);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Sets the footer row definition to be used. Overrides the footer row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the footer row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addFooterRowDef` and `removeFooterRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    setFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs = new Set([footerRowDef]);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Adds a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /**\n     * Removes a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /**\n     * Adds a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /**\n     * Removes a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /**\n     * Adds a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Removes a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Adds a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Removes a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyHeaderRowStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._headerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyFooterRowStyles() {\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._footerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     * @return {?}\n     */\n    updateStickyColumnStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // Clear the left and right positioning from all columns in the table across all rows since\n        // sticky columns span across all table sections (header, data, footer)\n        this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((/**\n         * @param {?} headerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        }));\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            // Collect all the rows rendered with this row definition.\n            /** @type {?} */\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        }));\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((/**\n         * @param {?} footerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        }));\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     * @private\n     * @return {?}\n     */\n    _getAllRenderRows() {\n        /** @type {?} */\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        /** @type {?} */\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            /** @type {?} */\n            let data = this._data[i];\n            /** @type {?} */\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                /** @type {?} */\n                let renderRow = renderRowsForData[j];\n                /** @type {?} */\n                const cache = (/** @type {?} */ (this._cachedRenderRowsMap.get(renderRow.data)));\n                if (cache.has(renderRow.rowDef)) {\n                    (/** @type {?} */ (cache.get(renderRow.rowDef))).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     * @private\n     * @param {?} data\n     * @param {?} dataIndex\n     * @param {?=} cache\n     * @return {?}\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        /** @type {?} */\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            /** @type {?} */\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? (/** @type {?} */ (cache.get(rowDef))) : [];\n            if (cachedRenderRows.length) {\n                /** @type {?} */\n                const dataRow = (/** @type {?} */ (cachedRenderRows.shift()));\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        }));\n    }\n    /**\n     * Update the map containing the content's column definitions.\n     * @private\n     * @return {?}\n     */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        /** @type {?} */\n        const columnDefs = mergeQueryListAndSet(this._contentColumnDefs, this._customColumnDefs);\n        columnDefs.forEach((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => {\n            if (this._columnDefsByName.has(columnDef.name)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        }));\n    }\n    /**\n     * Update the list of all available row definitions that can be used.\n     * @private\n     * @return {?}\n     */\n    _cacheRowDefs() {\n        this._headerRowDefs =\n            mergeQueryListAndSet(this._contentHeaderRowDefs, this._customHeaderRowDefs);\n        this._footerRowDefs =\n            mergeQueryListAndSet(this._contentFooterRowDefs, this._customFooterRowDefs);\n        this._rowDefs = mergeQueryListAndSet(this._contentRowDefs, this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        /** @type {?} */\n        const defaultRowDefs = this._rowDefs.filter((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => !def.when));\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     * @private\n     * @return {?}\n     */\n    _renderUpdatedColumns() {\n        /** @type {?} */\n        const columnsDiffReducer = (/**\n         * @param {?} acc\n         * @param {?} def\n         * @return {?}\n         */\n        (acc, def) => acc || !!def.getColumnsDiff());\n        // Force re-render data rows if the list of column definitions have changed.\n        if (this._rowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed..\n        if (this._headerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderHeaderRows();\n        }\n        if (this._footerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderFooterRows();\n        }\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     * @private\n     * @param {?} dataSource\n     * @return {?}\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /**\n     * Set up a subscription for the data provided by the data source.\n     * @private\n     * @return {?}\n     */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        /** @type {?} */\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (this.dataSource instanceof Observable) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy)).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data || [];\n            this.renderRows();\n        }));\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._headerRowOutlet, def, i)));\n        this.updateStickyHeaderRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._footerRowOutlet, def, i)));\n        this.updateStickyFooterRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Adds the sticky column styles for the rows according to the columns' stick states.\n     * @private\n     * @param {?} rows\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _addStickyColumnStyles(rows, rowDef) {\n        /** @type {?} */\n        const columnDefs = Array.from(rowDef.columns || []).map((/**\n         * @param {?} columnName\n         * @return {?}\n         */\n        columnName => {\n            /** @type {?} */\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return (/** @type {?} */ (columnDef));\n        }));\n        /** @type {?} */\n        const stickyStartStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.sticky));\n        /** @type {?} */\n        const stickyEndStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.stickyEnd));\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates);\n    }\n    /**\n     * Gets the list of rows that have been rendered in the row outlet.\n     * @param {?} rowOutlet\n     * @return {?}\n     */\n    _getRenderedRows(rowOutlet) {\n        /** @type {?} */\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            /** @type {?} */\n            const viewRef = ((/** @type {?} */ ((/** @type {?} */ (rowOutlet.viewContainer.get(i))))));\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     * @param {?} data\n     * @param {?} dataIndex\n     * @return {?}\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        /** @type {?} */\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => !def.when || def.when(dataIndex, data)));\n        }\n        else {\n            /** @type {?} */\n            let rowDef = this._rowDefs.find((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => def.when && def.when(dataIndex, data))) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    /**\n     * Create the embedded view for the data row template and place it in the correct index location\n     * within the data row view container.\n     * @private\n     * @param {?} renderRow\n     * @param {?} renderIndex\n     * @return {?}\n     */\n    _insertRow(renderRow, renderIndex) {\n        /** @type {?} */\n        const rowDef = renderRow.rowDef;\n        /** @type {?} */\n        const context = { $implicit: renderRow.data };\n        this._renderRow(this._rowOutlet, rowDef, renderIndex, context);\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     * @private\n     * @param {?} outlet\n     * @param {?} rowDef\n     * @param {?} index\n     * @param {?=} context\n     * @return {?}\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     * @private\n     * @return {?}\n     */\n    _updateRowIndexContext() {\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            /** @type {?} */\n            const viewRef = (/** @type {?} */ (viewContainer.get(renderIndex)));\n            /** @type {?} */\n            const context = (/** @type {?} */ (viewRef.context));\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /**\n     * Gets the column definitions for the provided row def.\n     * @private\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, (/**\n         * @param {?} columnId\n         * @return {?}\n         */\n        columnId => {\n            /** @type {?} */\n            const column = this._columnDefsByName.get(columnId);\n            if (!column) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        }));\n    }\n    /**\n     * Adds native table sections (e.g. tbody) and moves the row outlets into them.\n     * @private\n     * @return {?}\n     */\n    _applyNativeTableSections() {\n        /** @type {?} */\n        const documentFragment = this._document.createDocumentFragment();\n        /** @type {?} */\n        const sections = [\n            { tag: 'thead', outlet: this._headerRowOutlet },\n            { tag: 'tbody', outlet: this._rowOutlet },\n            { tag: 'tfoot', outlet: this._footerRowOutlet },\n        ];\n        for (const section of sections) {\n            /** @type {?} */\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            element.appendChild(section.outlet.elementRef.nativeElement);\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     * @private\n     * @return {?}\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     * @private\n     * @return {?}\n     */\n    _checkStickyStates() {\n        /** @type {?} */\n        const stickyCheckReducer = (/**\n         * @param {?} acc\n         * @param {?} d\n         * @return {?}\n         */\n        (acc, d) => {\n            return acc || d.hasStickyChanged();\n        });\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     * @private\n     * @return {?}\n     */\n    _setupStickyStyler() {\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._platform.isBrowser);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        }));\n    }\n}\nCdkTable.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], factory: function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(Platform)); }, contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, false);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, false);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, false);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(DataRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(HeaderRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(FooterRowOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\n    } }, hostBindings: function CdkTable_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c7);\n    } }, inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\" }, exportAs: [\"cdkTable\"], ngContentSelectors: _c12, consts: 4, vars: 0, template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c11);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, _c8);\n        ɵngcc0.ɵɵelementContainer(2, _c9);\n        ɵngcc0.ɵɵelementContainer(3, _c10);\n    } }, directives: [HeaderRowOutlet,\n        DataRowOutlet,\n        FooterRowOutlet], encapsulation: 2 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkTable, [{\n        type: Component,\n        args: [{ selector: 'cdk-table, table[cdk-table]',\n                exportAs: 'cdkTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'cdk-table'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\n                // The view for `MatTable` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: IterableDiffers }, { type: ChangeDetectorRef }, { type: ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['role']\n            }] }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: Platform }]; }, { constructor: [], _differs: [], _changeDetectorRef: [], _elementRef: [], _dir: [], _platform: [], _onDestroy: [], _columnDefsByName: [], _customColumnDefs: [], _customRowDefs: [], _customHeaderRowDefs: [], _customFooterRowDefs: [], _headerRowDefChanged: [], _footerRowDefChanged: [], _cachedRenderRowsMap: [], stickyCssClass: [], _multiTemplateDataRows: [], viewChange: [], _document: [], _isNativeHtmlTable: [], trackBy: [{\n            type: Input\n        }], trackBy: [], _trackByFn: [], dataSource: [{\n            type: Input\n        }], dataSource: [], multiTemplateDataRows: [{\n            type: Input\n        }], multiTemplateDataRows: [], ngOnInit: [], _dataDiffer: [], ngAfterContentChecked: [], ngOnDestroy: [], renderRows: [], _renderRows: [], setHeaderRowDef: [], setFooterRowDef: [], addColumnDef: [], removeColumnDef: [], addRowDef: [], removeRowDef: [], addHeaderRowDef: [], removeHeaderRowDef: [], addFooterRowDef: [], removeFooterRowDef: [], updateStickyHeaderRowStyles: [], updateStickyFooterRowStyles: [], updateStickyColumnStyles: [], _getAllRenderRows: [], _getRenderRowsForData: [], _cacheColumnDefs: [], _cacheRowDefs: [], _headerRowDefs: [], _footerRowDefs: [], _rowDefs: [], _defaultRowDef: [], _renderUpdatedColumns: [], _switchDataSource: [], _data: [], _renderChangeSubscription: [], _dataSource: [], _observeRenderChanges: [], _forceRenderHeaderRows: [], _forceRenderFooterRows: [], _addStickyColumnStyles: [], _getRenderedRows: [], _getRowDefs: [], _insertRow: [], _renderRow: [], _updateRowIndexContext: [], _getCellTemplates: [], _applyNativeTableSections: [], _forceRenderDataRows: [], _checkStickyStates: [], _setupStickyStyler: [], _stickyStyler: [], _rowOutlet: [{\n            type: ViewChild,\n            args: [DataRowOutlet, { static: true }]\n        }], _headerRowOutlet: [{\n            type: ViewChild,\n            args: [HeaderRowOutlet, { static: true }]\n        }], _footerRowOutlet: [{\n            type: ViewChild,\n            args: [FooterRowOutlet, { static: true }]\n        }], _contentColumnDefs: [{\n            type: ContentChildren,\n            args: [CdkColumnDef]\n        }], _contentRowDefs: [{\n            type: ContentChildren,\n            args: [CdkRowDef]\n        }], _contentHeaderRowDefs: [{\n            type: ContentChildren,\n            args: [CdkHeaderRowDef]\n        }], _contentFooterRowDefs: [{\n            type: ContentChildren,\n            args: [CdkFooterRowDef]\n        }] });\n/** @nocollapse */\nCdkTable.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\nCdkTable.propDecorators = {\n    trackBy: [{ type: Input }],\n    dataSource: [{ type: Input }],\n    multiTemplateDataRows: [{ type: Input }],\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef,] }],\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef,] }],\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef,] }],\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef,] }]\n};\n/**\n * Utility function that gets a merged list of the entries in a QueryList and values of a Set.\n * @template T\n * @param {?} queryList\n * @param {?} set\n * @return {?}\n */\nfunction mergeQueryListAndSet(queryList, set) {\n    return queryList.toArray().concat(Array.from(set));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to specify the text column options.\n * @type {?}\n */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass CdkTextColumn {\n    /**\n     * @param {?} _table\n     * @param {?} _options\n     */\n    constructor(_table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /**\n         * Alignment of the cell values.\n         */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /**\n     * Column name that should be used to reference this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((/**\n                 * @param {?} data\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (data, name) => ((/** @type {?} */ (data)))[name]));\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     * @return {?}\n     */\n    _createDefaultHeaderText() {\n        /** @type {?} */\n        const name = this.name;\n        if (isDevMode() && !name) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /**\n     * Synchronizes the column definition name with the text column name.\n     * @private\n     * @return {?}\n     */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], factory: function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); }, viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkColumnDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkCellDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkHeaderCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, consts: 3, vars: 0, template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, _c13);\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 2, \"th\", _c14);\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 2, \"td\", _c15);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [CdkColumnDef,\n        CdkHeaderCellDef,\n        CdkCellDef,\n        CdkHeaderCell,\n        CdkCell], encapsulation: 2 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\n        type: Component,\n        args: [{ selector: 'cdk-text-column',\n                template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: CdkTable, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [TEXT_COLUMN_OPTIONS]\n            }] }]; }, { constructor: [], _table: [], _options: [], justify: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], name: [], _name: [], ngOnInit: [], headerText: [{\n            type: Input\n        }], dataAccessor: [{\n            type: Input\n        }], ngOnDestroy: [], _createDefaultHeaderText: [], _syncColumnDefName: [], columnDef: [{\n            type: ViewChild,\n            args: [CdkColumnDef, { static: true }]\n        }], cell: [{\n            type: ViewChild,\n            args: [CdkCellDef, { static: true }]\n        }], headerCell: [{\n            type: ViewChild,\n            args: [CdkHeaderCellDef, { static: true }]\n        }] });\n/** @nocollapse */\nCdkTextColumn.ctorParameters = () => [\n    { type: CdkTable, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\n];\nCdkTextColumn.propDecorators = {\n    name: [{ type: Input }],\n    headerText: [{ type: Input }],\n    dataAccessor: [{ type: Input }],\n    justify: [{ type: Input }],\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\nCdkTableModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); }, imports: [[CommonModule]] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: function () { return [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn]; }, imports: function () { return [CommonModule]; }, exports: function () { return [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CDK_TABLE_TEMPLATE, CdkTable, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, BaseCdkCell, CdkHeaderCell, CdkFooterCell, CdkCell, CDK_ROW_TEMPLATE, BaseRowDef, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkCellOutlet, CdkHeaderRow, CdkFooterRow, CdkRow, CdkTableModule, STICKY_DIRECTIONS, StickyStyler, mixinHasStickyInput, TEXT_COLUMN_OPTIONS, CdkTextColumn };\n\n//# sourceMappingURL=table.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CDK_TABLE_TEMPLATE, CdkTable, CdkCell, CdkCellDef, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkHeaderCell, CdkHeaderCellDef, CDK_ROW_TEMPLATE, CdkFooterRow, CdkFooterRowDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation, Directive, ElementRef, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, combineLatest, merge, of, Subscription, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/table';\n\nconst _c0 = [1, \"mat-table\"];\nconst _c1 = [\"headerRowOutlet\", \"\"];\nconst _c2 = [\"rowOutlet\", \"\"];\nconst _c3 = [\"footerRowOutlet\", \"\"];\nconst _c4 = [[[\"caption\"]]];\nconst _c5 = [\"caption\"];\nconst _c6 = [\"role\", \"columnheader\", 1, \"mat-header-cell\"];\nconst _c7 = [\"role\", \"gridcell\", 1, \"mat-footer-cell\"];\nconst _c8 = [\"role\", \"gridcell\", 1, \"mat-cell\"];\nconst _c9 = [\"role\", \"row\", 1, \"mat-header-row\"];\nconst _c10 = [\"cdkCellOutlet\", \"\"];\nconst _c11 = [\"role\", \"row\", 1, \"mat-footer-row\"];\nconst _c12 = [\"role\", \"row\", 1, \"mat-row\"];\nconst _c13 = [\"matColumnDef\", \"\"];\nconst _c14 = [\"mat-header-cell\", \"\", 3, \"text-align\", 4, \"matHeaderCellDef\"];\nconst _c15 = [\"mat-cell\", \"\", 3, \"text-align\", 4, \"matCellDef\"];\nconst _c16 = [\"mat-header-cell\", \"\"];\nfunction MatTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", _c16);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r103 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r103.justify);\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r103.headerText, \" \");\n} }\nconst _c17 = [\"mat-cell\", \"\"];\nfunction MatTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", _c17);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r105 = ctx.$implicit;\n    const ctx_r104 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r104.justify);\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r104.dataAccessor(data_r105, ctx_r104.name), \" \");\n} }\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /**\n         * Overrides the sticky CSS class set by the `CdkTable`.\n         */\n        this.stickyCssClass = 'mat-table-sticky';\n    }\n}\nMatTable.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatTable, selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]], factory: function MatTable_Factory(t) { return ɵMatTable_BaseFactory(t || MatTable); }, hostBindings: function MatTable_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c0);\n    } }, exportAs: [\"matTable\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTable, useExisting: MatTable }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, consts: 4, vars: 0, template: function MatTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, _c1);\n        ɵngcc0.ɵɵelementContainer(2, _c2);\n        ɵngcc0.ɵɵelementContainer(3, _c3);\n    } }, directives: [ɵngcc1.HeaderRowOutlet, ɵngcc1.DataRowOutlet, ɵngcc1.FooterRowOutlet], styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-footer-row,mat-row{min-height:48px}mat-footer-row,mat-header-row,mat-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-footer-row::after,mat-header-row::after,mat-row::after{display:inline-block;min-height:inherit;content:''}mat-cell:first-of-type,mat-footer-cell:first-of-type,mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-footer-cell:last-of-type,mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-footer-cell,mat-header-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-footer-row,tr.mat-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}td.mat-cell,td.mat-footer-cell,th.mat-header-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type,th.mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type,[dir=rtl] th.mat-header-cell:first-of-type{padding-left:0;padding-right:24px}td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type,th.mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type,[dir=rtl] th.mat-header-cell:last-of-type{padding-right:0;padding-left:24px}\"], encapsulation: 2 });\nconst ɵMatTable_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTable);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatTable, [{\n        type: Component,\n        args: [{ selector: 'mat-table, table[mat-table]',\n                exportAs: 'matTable',\n                template: CDK_TABLE_TEMPLATE,\n                styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-footer-row,mat-row{min-height:48px}mat-footer-row,mat-header-row,mat-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-footer-row::after,mat-header-row::after,mat-row::after{display:inline-block;min-height:inherit;content:''}mat-cell:first-of-type,mat-footer-cell:first-of-type,mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-footer-cell:last-of-type,mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-footer-cell,mat-header-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-footer-row,tr.mat-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}td.mat-cell,td.mat-footer-cell,th.mat-header-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type,th.mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type,[dir=rtl] th.mat-header-cell:first-of-type{padding-left:0;padding-right:24px}td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type,th.mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type,[dir=rtl] th.mat-header-cell:last-of-type{padding-right:0;padding-left:24px}\"],\n                host: {\n                    'class': 'mat-table'\n                },\n                providers: [{ provide: CdkTable, useExisting: MatTable }],\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], null, { constructor: [], stickyCssClass: [] });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatCellDef, selectors: [[\"\", \"matCellDef\", \"\"]], factory: function MatCellDef_Factory(t) { return ɵMatCellDef_BaseFactory(t || MatCellDef); }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkCellDef, useExisting: MatCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCellDef);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matCellDef]',\n                providers: [{ provide: CdkCellDef, useExisting: MatCellDef }]\n            }]\n    }], null, null);\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCellDef, selectors: [[\"\", \"matHeaderCellDef\", \"\"]], factory: function MatHeaderCellDef_Factory(t) { return ɵMatHeaderCellDef_BaseFactory(t || MatHeaderCellDef); }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCellDef);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatHeaderCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderCellDef]',\n                providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]\n            }]\n    }], null, null);\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCellDef, selectors: [[\"\", \"matFooterCellDef\", \"\"]], factory: function MatFooterCellDef_Factory(t) { return ɵMatFooterCellDef_BaseFactory(t || MatFooterCellDef); }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCellDef);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatFooterCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterCellDef]',\n                providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]\n            }]\n    }], null, null);\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n}\nMatColumnDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatColumnDef, selectors: [[\"\", \"matColumnDef\", \"\"]], factory: function MatColumnDef_Factory(t) { return ɵMatColumnDef_BaseFactory(t || MatColumnDef); }, inputs: { name: [\"matColumnDef\", \"name\"], sticky: \"sticky\", stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkColumnDef, useExisting: MatColumnDef },\n            { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatColumnDef);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matColumnDef]',\n                providers: [\n                    { provide: CdkColumnDef, useExisting: MatColumnDef },\n                    { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n                ]\n            }]\n    }], null, { name: [{\n            type: Input,\n            args: ['matColumnDef']\n        }], sticky: [{\n            type: Input\n        }], stickyEnd: [{\n            type: Input\n        }] });\nMatColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['matColumnDef',] }],\n    sticky: [{ type: Input }],\n    stickyEnd: [{ type: Input }]\n};\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass MatHeaderCell extends CdkHeaderCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatHeaderCell.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCell, selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]], factory: function MatHeaderCell_Factory(t) { return new (t || MatHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ElementRef)); }, hostBindings: function MatHeaderCell_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c6);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-header-cell, th[mat-header-cell]',\n                host: {\n                    'class': 'mat-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ElementRef }]; }, { constructor: [] });\n/** @nocollapse */\nMatHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass MatFooterCell extends CdkFooterCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatFooterCell.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCell, selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]], factory: function MatFooterCell_Factory(t) { return new (t || MatFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ElementRef)); }, hostBindings: function MatFooterCell_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c7);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-footer-cell, td[mat-footer-cell]',\n                host: {\n                    'class': 'mat-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ElementRef }]; }, { constructor: [] });\n/** @nocollapse */\nMatFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/**\n * Cell template container that adds the right classes and role.\n */\nclass MatCell extends CdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatCell.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatCell, selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]], factory: function MatCell_Factory(t) { return new (t || MatCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ElementRef)); }, hostBindings: function MatCell_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c8);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-cell, td[mat-cell]',\n                host: {\n                    'class': 'mat-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ElementRef }]; }, { constructor: [] });\n/** @nocollapse */\nMatCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderRowDef, selectors: [[\"\", \"matHeaderRowDef\", \"\"]], factory: function MatHeaderRowDef_Factory(t) { return ɵMatHeaderRowDef_BaseFactory(t || MatHeaderRowDef); }, inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRowDef);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderRowDef]',\n                providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky']\n            }]\n    }], null, null);\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatFooterRowDef, selectors: [[\"\", \"matFooterRowDef\", \"\"]], factory: function MatFooterRowDef_Factory(t) { return ɵMatFooterRowDef_BaseFactory(t || MatFooterRowDef); }, inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRowDef);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterRowDef]',\n                providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky']\n            }]\n    }], null, null);\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatRowDef, selectors: [[\"\", \"matRowDef\", \"\"]], factory: function MatRowDef_Factory(t) { return ɵMatRowDef_BaseFactory(t || MatRowDef); }, inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRowDef, useExisting: MatRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRowDef);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matRowDef]',\n                providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen']\n            }]\n    }], null, null);\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatHeaderRow, selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]], factory: function MatHeaderRow_Factory(t) { return ɵMatHeaderRow_BaseFactory(t || MatHeaderRow); }, hostBindings: function MatHeaderRow_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c9);\n    } }, exportAs: [\"matHeaderRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], consts: 1, vars: 0, template: function MatHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, _c10);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatHeaderRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRow);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatHeaderRow, [{\n        type: Component,\n        args: [{ selector: 'mat-header-row, tr[mat-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matHeaderRow',\n                providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]\n            }]\n    }], null, null);\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatFooterRow, selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]], factory: function MatFooterRow_Factory(t) { return ɵMatFooterRow_BaseFactory(t || MatFooterRow); }, hostBindings: function MatFooterRow_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c11);\n    } }, exportAs: [\"matFooterRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRow, useExisting: MatFooterRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], consts: 1, vars: 0, template: function MatFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, _c10);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatFooterRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRow);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatFooterRow, [{\n        type: Component,\n        args: [{ selector: 'mat-footer-row, tr[mat-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matFooterRow',\n                providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }]\n            }]\n    }], null, null);\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatRow extends CdkRow {\n}\nMatRow.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatRow, selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]], factory: function MatRow_Factory(t) { return ɵMatRow_BaseFactory(t || MatRow); }, hostBindings: function MatRow_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c12);\n    } }, exportAs: [\"matRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRow, useExisting: MatRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], consts: 1, vars: 0, template: function MatRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, _c10);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRow);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatRow, [{\n        type: Component,\n        args: [{ selector: 'mat-row, tr[mat-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRow',\n                providers: [{ provide: CdkRow, useExisting: MatRow }]\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatTextColumn, selectors: [[\"mat-text-column\"]], factory: function MatTextColumn_Factory(t) { return ɵMatTextColumn_BaseFactory(t || MatTextColumn); }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], consts: 3, vars: 0, template: function MatTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, _c13);\n        ɵngcc0.ɵɵtemplate(1, MatTextColumn_th_1_Template, 2, 2, \"th\", _c14);\n        ɵngcc0.ɵɵtemplate(2, MatTextColumn_td_2_Template, 2, 2, \"td\", _c15);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [MatColumnDef,\n        MatHeaderCellDef,\n        MatCellDef,\n        MatHeaderCell,\n        MatCell], encapsulation: 2 });\nconst ɵMatTextColumn_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextColumn);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatTextColumn, [{\n        type: Component,\n        args: [{ selector: 'mat-text-column',\n                template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: MatTableModule });\nMatTableModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function MatTableModule_Factory(t) { return new (t || MatTableModule)(); }, imports: [[\n            CdkTableModule,\n            CommonModule,\n            MatCommonModule,\n        ]] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(MatTableModule, { declarations: function () { return [MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; }, imports: function () { return [CdkTableModule,\n        CommonModule,\n        MatCommonModule]; }, exports: function () { return [MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CdkTableModule,\n                    CommonModule,\n                    MatCommonModule,\n                ],\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n * @type {?}\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n * @template T\n */\nclass MatTableDataSource extends DataSource {\n    /**\n     * @param {?=} initialData\n     */\n    constructor(initialData = []) {\n        super();\n        /**\n         * Stream emitting render data to the table (depends on ordered data changes).\n         */\n        this._renderData = new BehaviorSubject([]);\n        /**\n         * Stream that emits when a new filter string is set on the data source.\n         */\n        this._filter = new BehaviorSubject('');\n        /**\n         * Used to react to internal changes of the paginator that are made by the data source itself.\n         */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = Subscription.EMPTY;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (/**\n         * @param {?} data\n         * @param {?} sortHeaderId\n         * @return {?}\n         */\n        (data, sortHeaderId) => {\n            /** @type {?} */\n            const value = ((/** @type {?} */ (data)))[sortHeaderId];\n            if (_isNumberValue(value)) {\n                /** @type {?} */\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        });\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (/**\n         * @param {?} data\n         * @param {?} sort\n         * @return {?}\n         */\n        (data, sort) => {\n            /** @type {?} */\n            const active = sort.active;\n            /** @type {?} */\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                /** @type {?} */\n                let valueA = this.sortingDataAccessor(a, active);\n                /** @type {?} */\n                let valueB = this.sortingDataAccessor(b, active);\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come first.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                /** @type {?} */\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            }));\n        });\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @return Whether the filter matches against the data\n         */\n        this.filterPredicate = (/**\n         * @param {?} data\n         * @param {?} filter\n         * @return {?}\n         */\n        (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            /** @type {?} */\n            const dataStr = Object.keys(data).reduce((/**\n             * @param {?} currentTerm\n             * @param {?} key\n             * @return {?}\n             */\n            (currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + ((/** @type {?} */ (data)))[key] + '◬';\n            }), '').toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            /** @type {?} */\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        });\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /**\n     * Array of data that should be rendered by the table, where each object represents one row.\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    set data(data) { this._data.next(data); }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     * @return {?}\n     */\n    get filter() { return this._filter.value; }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    set filter(filter) { this._filter.next(filter); }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     * @return {?}\n     */\n    get sort() { return this._sort; }\n    /**\n     * @param {?} sort\n     * @return {?}\n     */\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     * @return {?}\n     */\n    get paginator() { return this._paginator; }\n    /**\n     * @param {?} paginator\n     * @return {?}\n     */\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     * @return {?}\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        /** @type {?} */\n        const sortChange = this._sort ?\n            (/** @type {?} */ (merge(this._sort.sortChange, this._sort.initialized))) :\n            of(null);\n        /** @type {?} */\n        const pageChange = this._paginator ?\n            (/** @type {?} */ (merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized))) :\n            of(null);\n        /** @type {?} */\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        /** @type {?} */\n        const filteredData = combineLatest(dataStream, this._filter)\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._filterData(data))));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        /** @type {?} */\n        const orderedData = combineLatest(filteredData, sortChange)\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._orderData(data))));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        /** @type {?} */\n        const paginatedData = combineLatest(orderedData, pageChange)\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._pageData(data))));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => this._renderData.next(data)));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            !this.filter ? data : data.filter((/**\n             * @param {?} obj\n             * @return {?}\n             */\n            obj => this.filterPredicate(obj, this.filter)));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     * @param {?} data\n     * @return {?}\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        /** @type {?} */\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     * @param {?} filteredDataLength\n     * @return {?}\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                /** @type {?} */\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                /** @type {?} */\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        }));\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * \\@docs-private\n     * @return {?}\n     */\n    connect() { return this._renderData; }\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * \\@docs-private\n     * @return {?}\n     */\n    disconnect() { }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatTableModule, MatCellDef, MatHeaderCellDef, MatFooterCellDef, MatColumnDef, MatHeaderCell, MatFooterCell, MatCell, MatTable, MatHeaderRowDef, MatFooterRowDef, MatRowDef, MatHeaderRow, MatFooterRow, MatRow, MatTableDataSource, MatTextColumn };\n\n//# sourceMappingURL=table.js.map","import { NgModule, Directive, Input, TemplateRef, ViewContainerRef, OnInit } from '@angular/core';\n\nexport class NgLetContext {\n  $implicit: any = null;\n  ngLet: any = null;\n}\n\n@Directive({\n  selector: '[ngLet]',\n})\nexport class NgLetDirective implements OnInit {\n  private context = new NgLetContext();\n\n  @Input()\n  set ngLet(value: any) {\n    this.context.$implicit = this.context.ngLet = value;\n  }\n\n  constructor(private vcr: ViewContainerRef, private templateRef: TemplateRef<NgLetContext>) {}\n\n  ngOnInit() {\n    this.vcr.createEmbeddedView(this.templateRef, this.context);\n  }\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class NgLetContext {\n    constructor() {\n        this.$implicit = null;\n        this.ngLet = null;\n    }\n}\nexport class NgLetDirective {\n    constructor(vcr, templateRef) {\n        this.vcr = vcr;\n        this.templateRef = templateRef;\n        this.context = new NgLetContext();\n    }\n    set ngLet(value) {\n        this.context.$implicit = this.context.ngLet = value;\n    }\n    ngOnInit() {\n        this.vcr.createEmbeddedView(this.templateRef, this.context);\n    }\n}\nNgLetDirective.ngDirectiveDef = i0.ɵɵdefineDirective({ type: NgLetDirective, selectors: [[\"\", \"ngLet\", \"\"]], factory: function NgLetDirective_Factory(t) { return new (t || NgLetDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.TemplateRef)); }, inputs: { ngLet: \"ngLet\" } });\n/*@__PURE__*/ i0.ɵsetClassMetadata(NgLetDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngLet]',\n            }]\n    }], function () { return [{ type: i0.ViewContainerRef }, { type: i0.TemplateRef }]; }, { ngLet: [{\n            type: Input\n        }] });\n","var MILLISECONDS_IN_MINUTE = 60000;\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\nexport default function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = date.getTimezoneOffset();\n  date.setSeconds(0, 0);\n  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE;\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar DEFAULT_ADDITIONAL_DIGITS = 2;\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * var result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (isNaN(date) || !date) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time) || time === null) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var fullTime = timestamp + time;\n    var fullTimeDate = new Date(fullTime);\n    offset = getTimezoneOffsetInMilliseconds(fullTimeDate); // Adjust time when it's coming from DST\n\n    var fullTimeDateNextDay = new Date(fullTime);\n    fullTimeDateNextDay.setDate(fullTimeDate.getDate() + 1);\n    var offsetDiff = getTimezoneOffsetInMilliseconds(fullTimeDateNextDay) - offset;\n\n    if (offsetDiff > 0) {\n      offset += offsetDiff;\n    }\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString;\n\n  if (/:/.test(array[0])) {\n    dateStrings.date = null;\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: null\n  };\n  var year = captures[1] && parseInt(captures[1]);\n  var century = captures[2] && parseInt(captures[2]);\n  return {\n    year: century == null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return null;\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return null;\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return null; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}"]}