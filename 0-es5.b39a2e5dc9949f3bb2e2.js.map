{"version":3,"sources":["//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/esm5/paginator.es5.js","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/paginator/typings/index.d.ts.MatPaginator.html","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/table/typings/index.d.ts.MatTable.html","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/table/typings/index.d.ts.MatHeaderRow.html","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/table/typings/index.d.ts.MatFooterRow.html","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/table/typings/index.d.ts.MatRow.html","//Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/table/typings/index.d.ts.MatTextColumn.html"],"names":["__webpack_require__","d","__webpack_exports__","MatPaginatorModule","MatPaginator","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","MatPaginatorIntl","_angular_core__WEBPACK_IMPORTED_MODULE_0__","rxjs__WEBPACK_IMPORTED_MODULE_1__","tslib__WEBPACK_IMPORTED_MODULE_2__","_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_3__","_angular_material_core__WEBPACK_IMPORTED_MODULE_4__","_angular_common__WEBPACK_IMPORTED_MODULE_5__","_angular_material_button__WEBPACK_IMPORTED_MODULE_6__","_angular_material_select__WEBPACK_IMPORTED_MODULE_7__","_angular_material_tooltip__WEBPACK_IMPORTED_MODULE_8__","this","changes","itemsPerPageLabel","nextPageLabel","previousPageLabel","firstPageLabel","lastPageLabel","getRangeLabel","page","pageSize","length","startIndex","Math","max","min","decorators","type","args","providedIn","ngInjectableDef","Object","factory","token","parentIntl","MAT_PAGINATOR_INTL_PROVIDER","provide","deps","useFactory","MatPaginatorBase","_super","_intl","_changeDetectorRef","_this","call","_pageIndex","_length","_pageSizeOptions","_hidePageSize","_showFirstLastButtons","_intlChanges","subscribe","markForCheck","defineProperty","prototype","get","set","value","enumerable","configurable","_pageSize","_updateDisplayedPageSizeOptions","map","p","ngOnInit","_initialized","_markInitialized","ngOnDestroy","unsubscribe","nextPage","hasNextPage","previousPageIndex","pageIndex","_emitPageEvent","previousPage","hasPreviousPage","firstPage","lastPage","getNumberOfPages","maxPageIndex","ceil","_changePageSize","floor","_nextButtonsDisabled","disabled","_previousButtonsDisabled","pageSizeOptions","_displayedPageSizeOptions","slice","indexOf","push","sort","a","b","emit","selector","exportAs","template","styles","inputs","host","class","changeDetection","OnPush","encapsulation","None","ctorParameters","propDecorators","color","hidePageSize","showFirstLastButtons","imports","exports","declarations","providers","_l","_v","en","$event","ad","_ck","context","$implicit","_getTabIndex","selected","multiple","active","id","_getAriaSelected","toString","_form_field_typings_index_ngfactory__WEBPACK_IMPORTED_MODULE_18__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_15__","_angular_material_core__WEBPACK_IMPORTED_MODULE_10__","_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_5__","_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_11__","_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_19__","_controlNonStatic","_controlStatic","_labelChildNonStatic","_labelChildStatic","_placeholderChild","_errorChildren","_hintChildren","_prefixChildren","_suffixChildren","_co","component","_select_typings_index_ngfactory__WEBPACK_IMPORTED_MODULE_20__","_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_14__","_angular_forms__WEBPACK_IMPORTED_MODULE_21__","_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_16__","ariaLabel","selectionChange","options","optionGroups","customTrigger","View_MatPaginator_3","_angular_common__WEBPACK_IMPORTED_MODULE_3__","ngForOf","appearance","_control","errorState","_canLabelFloat","_shouldLabelFloat","_hasFloatingLabel","_hideControlPlaceholder","autofilled","focused","_shouldForward","_animationsEnabled","tabIndex","_getAriaLabel","_getAriaLabelledby","required","panelOpen","_optionIds","_ariaDescribedby","_getAriaActiveDescendant","empty","View_MatPaginator_2","ngIf","View_MatPaginator_4","_button_typings_index_ngfactory__WEBPACK_IMPORTED_MODULE_22__","_angular_material_button__WEBPACK_IMPORTED_MODULE_12__","_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_9__","position","message","_animationMode","View_MatPaginator_1","View_MatPaginator_5","View_MatPaginator_6","_angular_cdk_table__WEBPACK_IMPORTED_MODULE_3__","_angular_material_table__WEBPACK_IMPORTED_MODULE_1__","justify","headerText","dataAccessor","name","cell","headerCell","footerCell","View_MatTextColumn_1","View_MatTextColumn_2"],"mappings":"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","file":"0-es5.b39a2e5dc9949f3bb2e2.js","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable, Optional, SkipSelf, NgModule, ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation, ɵɵdefineInjectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { __extends } from 'tslib';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinInitialized, mixinDisabled } from '@angular/material/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nvar MatPaginatorIntl = /** @class */ (function () {\n    function MatPaginatorIntl() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * A label for the page size selector.\n         */\n        this.itemsPerPageLabel = 'Items per page:';\n        /**\n         * A label for the button that increments the current page.\n         */\n        this.nextPageLabel = 'Next page';\n        /**\n         * A label for the button that decrements the current page.\n         */\n        this.previousPageLabel = 'Previous page';\n        /**\n         * A label for the button that moves to the first page.\n         */\n        this.firstPageLabel = 'First page';\n        /**\n         * A label for the button that moves to the last page.\n         */\n        this.lastPageLabel = 'Last page';\n        /**\n         * A label for the range of items within the current page and the length of the whole list.\n         */\n        this.getRangeLabel = (/**\n         * @param {?} page\n         * @param {?} pageSize\n         * @param {?} length\n         * @return {?}\n         */\n        function (page, pageSize, length) {\n            if (length == 0 || pageSize == 0) {\n                return \"0 of \" + length;\n            }\n            length = Math.max(length, 0);\n            /** @type {?} */\n            var startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            /** @type {?} */\n            var endIndex = startIndex < length ?\n                Math.min(startIndex + pageSize, length) :\n                startIndex + pageSize;\n            return startIndex + 1 + \" - \" + endIndex + \" of \" + length;\n        });\n    }\n    MatPaginatorIntl.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */ MatPaginatorIntl.ngInjectableDef = ɵɵdefineInjectable({ factory: function MatPaginatorIntl_Factory() { return new MatPaginatorIntl(); }, token: MatPaginatorIntl, providedIn: \"root\" });\n    return MatPaginatorIntl;\n}());\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nvar MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The default page size if there is no page size and there are no provided page size options.\n * @type {?}\n */\nvar DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nvar  /**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nPageEvent = /** @class */ (function () {\n    function PageEvent() {\n    }\n    return PageEvent;\n}());\n// Boilerplate for applying mixins to MatPaginator.\n/**\n * \\@docs-private\n */\nvar \n// Boilerplate for applying mixins to MatPaginator.\n/**\n * \\@docs-private\n */\nMatPaginatorBase = /** @class */ (function () {\n    function MatPaginatorBase() {\n    }\n    return MatPaginatorBase;\n}());\n/** @type {?} */\nvar _MatPaginatorBase = mixinDisabled(mixinInitialized(MatPaginatorBase));\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nvar MatPaginator = /** @class */ (function (_super) {\n    __extends(MatPaginator, _super);\n    function MatPaginator(_intl, _changeDetectorRef) {\n        var _this = _super.call(this) || this;\n        _this._intl = _intl;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._pageIndex = 0;\n        _this._length = 0;\n        _this._pageSizeOptions = [];\n        _this._hidePageSize = false;\n        _this._showFirstLastButtons = false;\n        /**\n         * Event emitted when the paginator changes the page size or page index.\n         */\n        _this.page = new EventEmitter();\n        _this._intlChanges = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        function () { return _this._changeDetectorRef.markForCheck(); }));\n        return _this;\n    }\n    Object.defineProperty(MatPaginator.prototype, \"pageIndex\", {\n        /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n        get: /**\n         * The zero-based page index of the displayed list of items. Defaulted to 0.\n         * @return {?}\n         */\n        function () { return this._pageIndex; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n            this._changeDetectorRef.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatPaginator.prototype, \"length\", {\n        /** The length of the total number of items that are being paginated. Defaulted to 0. */\n        get: /**\n         * The length of the total number of items that are being paginated. Defaulted to 0.\n         * @return {?}\n         */\n        function () { return this._length; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._length = coerceNumberProperty(value);\n            this._changeDetectorRef.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatPaginator.prototype, \"pageSize\", {\n        /** Number of items to display on a page. By default set to 50. */\n        get: /**\n         * Number of items to display on a page. By default set to 50.\n         * @return {?}\n         */\n        function () { return this._pageSize; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._pageSize = Math.max(coerceNumberProperty(value), 0);\n            this._updateDisplayedPageSizeOptions();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatPaginator.prototype, \"pageSizeOptions\", {\n        /** The set of provided page size options to display to the user. */\n        get: /**\n         * The set of provided page size options to display to the user.\n         * @return {?}\n         */\n        function () { return this._pageSizeOptions; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._pageSizeOptions = (value || []).map((/**\n             * @param {?} p\n             * @return {?}\n             */\n            function (p) { return coerceNumberProperty(p); }));\n            this._updateDisplayedPageSizeOptions();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatPaginator.prototype, \"hidePageSize\", {\n        /** Whether to hide the page size selection UI from the user. */\n        get: /**\n         * Whether to hide the page size selection UI from the user.\n         * @return {?}\n         */\n        function () { return this._hidePageSize; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._hidePageSize = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatPaginator.prototype, \"showFirstLastButtons\", {\n        /** Whether to show the first/last buttons UI to the user. */\n        get: /**\n         * Whether to show the first/last buttons UI to the user.\n         * @return {?}\n         */\n        function () { return this._showFirstLastButtons; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._showFirstLastButtons = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatPaginator.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    };\n    /**\n     * @return {?}\n     */\n    MatPaginator.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._intlChanges.unsubscribe();\n    };\n    /** Advances to the next page if it exists. */\n    /**\n     * Advances to the next page if it exists.\n     * @return {?}\n     */\n    MatPaginator.prototype.nextPage = /**\n     * Advances to the next page if it exists.\n     * @return {?}\n     */\n    function () {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        /** @type {?} */\n        var previousPageIndex = this.pageIndex;\n        this.pageIndex++;\n        this._emitPageEvent(previousPageIndex);\n    };\n    /** Move back to the previous page if it exists. */\n    /**\n     * Move back to the previous page if it exists.\n     * @return {?}\n     */\n    MatPaginator.prototype.previousPage = /**\n     * Move back to the previous page if it exists.\n     * @return {?}\n     */\n    function () {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        /** @type {?} */\n        var previousPageIndex = this.pageIndex;\n        this.pageIndex--;\n        this._emitPageEvent(previousPageIndex);\n    };\n    /** Move to the first page if not already there. */\n    /**\n     * Move to the first page if not already there.\n     * @return {?}\n     */\n    MatPaginator.prototype.firstPage = /**\n     * Move to the first page if not already there.\n     * @return {?}\n     */\n    function () {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        /** @type {?} */\n        var previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    };\n    /** Move to the last page if not already there. */\n    /**\n     * Move to the last page if not already there.\n     * @return {?}\n     */\n    MatPaginator.prototype.lastPage = /**\n     * Move to the last page if not already there.\n     * @return {?}\n     */\n    function () {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        /** @type {?} */\n        var previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    };\n    /** Whether there is a previous page. */\n    /**\n     * Whether there is a previous page.\n     * @return {?}\n     */\n    MatPaginator.prototype.hasPreviousPage = /**\n     * Whether there is a previous page.\n     * @return {?}\n     */\n    function () {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    };\n    /** Whether there is a next page. */\n    /**\n     * Whether there is a next page.\n     * @return {?}\n     */\n    MatPaginator.prototype.hasNextPage = /**\n     * Whether there is a next page.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    };\n    /** Calculate the number of pages */\n    /**\n     * Calculate the number of pages\n     * @return {?}\n     */\n    MatPaginator.prototype.getNumberOfPages = /**\n     * Calculate the number of pages\n     * @return {?}\n     */\n    function () {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    };\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     * @param {?} pageSize\n     * @return {?}\n     */\n    MatPaginator.prototype._changePageSize = /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     * @param {?} pageSize\n     * @return {?}\n     */\n    function (pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        /** @type {?} */\n        var startIndex = this.pageIndex * this.pageSize;\n        /** @type {?} */\n        var previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    };\n    /** Checks whether the buttons for going forwards should be disabled. */\n    /**\n     * Checks whether the buttons for going forwards should be disabled.\n     * @return {?}\n     */\n    MatPaginator.prototype._nextButtonsDisabled = /**\n     * Checks whether the buttons for going forwards should be disabled.\n     * @return {?}\n     */\n    function () {\n        return this.disabled || !this.hasNextPage();\n    };\n    /** Checks whether the buttons for going backwards should be disabled. */\n    /**\n     * Checks whether the buttons for going backwards should be disabled.\n     * @return {?}\n     */\n    MatPaginator.prototype._previousButtonsDisabled = /**\n     * Checks whether the buttons for going backwards should be disabled.\n     * @return {?}\n     */\n    function () {\n        return this.disabled || !this.hasPreviousPage();\n    };\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     * @private\n     * @return {?}\n     */\n    MatPaginator.prototype._updateDisplayedPageSizeOptions = /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize = this.pageSizeOptions.length != 0 ?\n                this.pageSizeOptions[0] :\n                DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        function (a, b) { return a - b; }));\n        this._changeDetectorRef.markForCheck();\n    };\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    /**\n     * Emits an event notifying that a change of the paginator's properties has been triggered.\n     * @private\n     * @param {?} previousPageIndex\n     * @return {?}\n     */\n    MatPaginator.prototype._emitPageEvent = /**\n     * Emits an event notifying that a change of the paginator's properties has been triggered.\n     * @private\n     * @param {?} previousPageIndex\n     * @return {?}\n     */\n    function (previousPageIndex) {\n        this.page.emit({\n            previousPageIndex: previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length\n        });\n    };\n    MatPaginator.decorators = [\n        { type: Component, args: [{selector: 'mat-paginator',\n                    exportAs: 'matPaginator',\n                    template: \"<div class=\\\"mat-paginator-outer-container\\\"><div class=\\\"mat-paginator-container\\\"><div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\"><div class=\\\"mat-paginator-page-size-label\\\">{{_intl.itemsPerPageLabel}}</div><mat-form-field *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\" [color]=\\\"color\\\" class=\\\"mat-paginator-page-size-select\\\"><mat-select [value]=\\\"pageSize\\\" [disabled]=\\\"disabled\\\" [aria-label]=\\\"_intl.itemsPerPageLabel\\\" (selectionChange)=\\\"_changePageSize($event.value)\\\"><mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">{{pageSizeOption}}</mat-option></mat-select></mat-form-field><div *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div></div><div class=\\\"mat-paginator-range-actions\\\"><div class=\\\"mat-paginator-range-label\\\">{{_intl.getRangeLabel(pageIndex, pageSize, length)}}</div><button mat-icon-button type=\\\"button\\\" class=\\\"mat-paginator-navigation-first\\\" (click)=\\\"firstPage()\\\" [attr.aria-label]=\\\"_intl.firstPageLabel\\\" [matTooltip]=\\\"_intl.firstPageLabel\\\" [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\" [matTooltipPosition]=\\\"'above'\\\" [disabled]=\\\"_previousButtonsDisabled()\\\" *ngIf=\\\"showFirstLastButtons\\\"><svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\"><path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/></svg></button> <button mat-icon-button type=\\\"button\\\" class=\\\"mat-paginator-navigation-previous\\\" (click)=\\\"previousPage()\\\" [attr.aria-label]=\\\"_intl.previousPageLabel\\\" [matTooltip]=\\\"_intl.previousPageLabel\\\" [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\" [matTooltipPosition]=\\\"'above'\\\" [disabled]=\\\"_previousButtonsDisabled()\\\"><svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\"><path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/></svg></button> <button mat-icon-button type=\\\"button\\\" class=\\\"mat-paginator-navigation-next\\\" (click)=\\\"nextPage()\\\" [attr.aria-label]=\\\"_intl.nextPageLabel\\\" [matTooltip]=\\\"_intl.nextPageLabel\\\" [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\" [matTooltipPosition]=\\\"'above'\\\" [disabled]=\\\"_nextButtonsDisabled()\\\"><svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\"><path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/></svg></button> <button mat-icon-button type=\\\"button\\\" class=\\\"mat-paginator-navigation-last\\\" (click)=\\\"lastPage()\\\" [attr.aria-label]=\\\"_intl.lastPageLabel\\\" [matTooltip]=\\\"_intl.lastPageLabel\\\" [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\" [matTooltipPosition]=\\\"'above'\\\" [disabled]=\\\"_nextButtonsDisabled()\\\" *ngIf=\\\"showFirstLastButtons\\\"><svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\"><path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/></svg></button></div></div></div>\",\n                    styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\"],\n                    inputs: ['disabled'],\n                    host: {\n                        'class': 'mat-paginator',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                },] },\n    ];\n    /** @nocollapse */\n    MatPaginator.ctorParameters = function () { return [\n        { type: MatPaginatorIntl },\n        { type: ChangeDetectorRef }\n    ]; };\n    MatPaginator.propDecorators = {\n        color: [{ type: Input }],\n        pageIndex: [{ type: Input }],\n        length: [{ type: Input }],\n        pageSize: [{ type: Input }],\n        pageSizeOptions: [{ type: Input }],\n        hidePageSize: [{ type: Input }],\n        showFirstLastButtons: [{ type: Input }],\n        page: [{ type: Output }]\n    };\n    return MatPaginator;\n}(_MatPaginatorBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatPaginatorModule = /** @class */ (function () {\n    function MatPaginatorModule() {\n    }\n    MatPaginatorModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        CommonModule,\n                        MatButtonModule,\n                        MatSelectModule,\n                        MatTooltipModule,\n                    ],\n                    exports: [MatPaginator],\n                    declarations: [MatPaginator],\n                    providers: [MAT_PAGINATOR_INTL_PROVIDER],\n                },] },\n    ];\n    return MatPaginatorModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatPaginatorModule, PageEvent, MatPaginator, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginatorIntl, MAT_PAGINATOR_INTL_PROVIDER };\n//# sourceMappingURL=paginator.es5.js.map\n","<div class=\"mat-paginator-outer-container\"><div class=\"mat-paginator-container\"><div class=\"mat-paginator-page-size\" *ngIf=\"!hidePageSize\"><div class=\"mat-paginator-page-size-label\">{{_intl.itemsPerPageLabel}}</div><mat-form-field *ngIf=\"_displayedPageSizeOptions.length > 1\" [color]=\"color\" class=\"mat-paginator-page-size-select\"><mat-select [value]=\"pageSize\" [disabled]=\"disabled\" [aria-label]=\"_intl.itemsPerPageLabel\" (selectionChange)=\"_changePageSize($event.value)\"><mat-option *ngFor=\"let pageSizeOption of _displayedPageSizeOptions\" [value]=\"pageSizeOption\">{{pageSizeOption}}</mat-option></mat-select></mat-form-field><div *ngIf=\"_displayedPageSizeOptions.length <= 1\">{{pageSize}}</div></div><div class=\"mat-paginator-range-actions\"><div class=\"mat-paginator-range-label\">{{_intl.getRangeLabel(pageIndex, pageSize, length)}}</div><button mat-icon-button type=\"button\" class=\"mat-paginator-navigation-first\" (click)=\"firstPage()\" [attr.aria-label]=\"_intl.firstPageLabel\" [matTooltip]=\"_intl.firstPageLabel\" [matTooltipDisabled]=\"_previousButtonsDisabled()\" [matTooltipPosition]=\"'above'\" [disabled]=\"_previousButtonsDisabled()\" *ngIf=\"showFirstLastButtons\"><svg class=\"mat-paginator-icon\" viewBox=\"0 0 24 24\" focusable=\"false\"><path d=\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"/></svg></button> <button mat-icon-button type=\"button\" class=\"mat-paginator-navigation-previous\" (click)=\"previousPage()\" [attr.aria-label]=\"_intl.previousPageLabel\" [matTooltip]=\"_intl.previousPageLabel\" [matTooltipDisabled]=\"_previousButtonsDisabled()\" [matTooltipPosition]=\"'above'\" [disabled]=\"_previousButtonsDisabled()\"><svg class=\"mat-paginator-icon\" viewBox=\"0 0 24 24\" focusable=\"false\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/></svg></button> <button mat-icon-button type=\"button\" class=\"mat-paginator-navigation-next\" (click)=\"nextPage()\" [attr.aria-label]=\"_intl.nextPageLabel\" [matTooltip]=\"_intl.nextPageLabel\" [matTooltipDisabled]=\"_nextButtonsDisabled()\" [matTooltipPosition]=\"'above'\" [disabled]=\"_nextButtonsDisabled()\"><svg class=\"mat-paginator-icon\" viewBox=\"0 0 24 24\" focusable=\"false\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/></svg></button> <button mat-icon-button type=\"button\" class=\"mat-paginator-navigation-last\" (click)=\"lastPage()\" [attr.aria-label]=\"_intl.lastPageLabel\" [matTooltip]=\"_intl.lastPageLabel\" [matTooltipDisabled]=\"_nextButtonsDisabled()\" [matTooltipPosition]=\"'above'\" [disabled]=\"_nextButtonsDisabled()\" *ngIf=\"showFirstLastButtons\"><svg class=\"mat-paginator-icon\" viewBox=\"0 0 24 24\" focusable=\"false\"><path d=\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"/></svg></button></div></div></div>","\n  <ng-content select=\"caption\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n","<ng-container cdkCellOutlet></ng-container>","<ng-container cdkCellOutlet></ng-container>","<ng-container cdkCellOutlet></ng-container>","\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  "],"sourceRoot":""}