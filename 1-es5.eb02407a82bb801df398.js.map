{"version":3,"sources":["webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/in-viewport/viewport.service.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/in-viewport/viewport.service.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/esm2015/paginator.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/in-viewport/in-viewport.directive.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/in-viewport/in-viewport.directive.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/theme-picker/src/lib/theme-picker.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/theme-picker/src/lib/theme-picker.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/theme-picker/src/index.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/operators/untilDestroy.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/theme-picker/src/lib/style-manager.service.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/theme-picker/src/lib/style-manager.service.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/theme-picker/src/lib/theme-picker.component.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/theme-picker/src/lib/theme-picker.component.html","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/theme-picker/src/lib/theme-picker.component.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/rxjs/_esm2015/internal/observable/interval.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/shared-flex-layout.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/shared-flex-layout.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/shared-perfect-scrollbar.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/shared-perfect-scrollbar.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/shared.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/shared.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/shared-material-date.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/shared-material-date.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/containers/entity/entity-form.component.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/containers/entity/entity.component.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/containers/entity/entity.component.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/containers/entity/entity.service.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/containers/entity/entity.model.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/shared/src/index.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/rxjs/_esm2015/internal/operators/mapTo.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/helper/group-by.pipe.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/helper/group-by.pipe.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/esm2015/select.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/esm2015/list.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/theme-picker/src/lib/theme-picker-service.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/theme-picker/src/lib/theme-picker-service.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/differenceInMilliseconds/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/addLeadingZeros/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/format/formatters/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/format/lightFormatters/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getUTCWeek/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/format/longFormatters/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/protectedTokens/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/format/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/isValid/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/subMilliseconds/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/addMilliseconds/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/esm2015/divider.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/esm2015/datepicker.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/mask/mask-helper.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/mask/mask.directive.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/mask/mask.directive.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/esm2015/menu.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/compareAsc/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/formatDistance/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/assign/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/cloneObject/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/differenceInSeconds/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/differenceInMonths/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/differenceInCalendarMonths/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/ng-let/ng-let.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/ng-let/ng-let.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/router-link-match/router-link-match.directive.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/router-link-match/router-link-match.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/router-link-match/router-link-match.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/in-viewport/in-viewport.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/in-viewport/in-viewport.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/click-outside/click-outside.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/click-outside/click-outside.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/mask/mask.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/mask/mask.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/helper/safe-html.pipe.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/helper/helper.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/helper/helper.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/truncate/truncate.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/truncate/truncate.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/date-fns/date-fns.module.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/date-fns/date-fns.module.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/index.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/rxjs/_esm2015/internal/operators/repeatWhen.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/rxjs/_esm2015/internal/operators/delayWhen.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/rxjs/_esm2015/internal/operators/takeWhile.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/differenceInMinutes/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/date-fns/format-time-in-words.pipe.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/date-fns/format-time-in-words.pipe.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/toDate/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/toInteger/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/keyframes.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/card.animation.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/fade.animation.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/expand.animation.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/list.animation.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/route.animation.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/rotate.animation.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/scroll-fab.animation.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/scroll.animation.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/animations.service.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/animations.service.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/router.transition.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/sidenav.animation.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/animations/src/index.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/esm2015/grid-list.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/click-outside/click-outside.directive.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/click-outside/click-outside.directive.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/esm2015/sort.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/rxjs/_esm2015/internal/operators/retry.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/perfect-scrollbar/dist/perfect-scrollbar.esm.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/ngx-perfect-scrollbar/__ivy_ngcc__/dist/ngx-perfect-scrollbar.es5.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/en-US/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/en-US/_lib/match/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/cdk/__ivy_ngcc__/esm2015/table.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/esm2015/table.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/ng-let/ng-let.directive.ts","webpack:///Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/ng-let/ng-let.directive.ts.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js.pre-build-optimizer.js","webpack:///Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/parseISO/index.js.pre-build-optimizer.js"],"names":["__webpack_require__","d","__webpack_exports__","ViewportService","_angular_core__WEBPACK_IMPORTED_MODULE_0__","rxjs__WEBPACK_IMPORTED_MODULE_1__","rxjs_operators__WEBPACK_IMPORTED_MODULE_2__","rxjs_operators__WEBPACK_IMPORTED_MODULE_3__","this","options","rootMargin","threshold","callback$","a","observer","IntersectionObserver","handler","bind","_proto","prototype","observe","element","asObservable","pipe","Object","entry","target","unobserve","entries","forEach","next","ngInjectableDef","fc","token","factory","t","providedIn","MatPaginatorModule","MatPaginator","_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_2__","_angular_material_core__WEBPACK_IMPORTED_MODULE_3__","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_material_button__WEBPACK_IMPORTED_MODULE_5__","_angular_material_select__WEBPACK_IMPORTED_MODULE_6__","_angular_material_tooltip__WEBPACK_IMPORTED_MODULE_7__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_8__","_c0","_c1","_c2","_c3","_c4","_c5","_c6","_c7","_c8","_c9","_c10","_c11","_c12","_c13","_c14","_c15","_c16","_c17","_c18","_c19","_c20","MatPaginator_div_2_mat_form_field_3_mat_option_2_Template","rf","ctx","qc","fd","oc","pageSizeOption_r89","$implicit","Jc","Uc","gd","MatPaginator_div_2_mat_form_field_3_Template","_r91","rc","zc","$event","Rc","Dc","_changePageSize","value","dd","ctx_r86","color","pageSize","disabled","_intl","itemsPerPageLabel","_displayedPageSizeOptions","MatPaginator_div_2_div_4_Template","ctx_r87","MatPaginator_div_2_Template","ctx_r83","length","_c21","_c22","MatPaginator_button_6_Template","_r93","firstPage","Cc","kc","ctx_r84","firstPageLabel","_previousButtonsDisabled","Vb","_c23","_c24","MatPaginator_button_13_Template","_r95","Bc","lastPage","ctx_r85","lastPageLabel","_nextButtonsDisabled","MatPaginatorIntl","changes","nextPageLabel","previousPageLabel","getRangeLabel","page","startIndex","Math","max","min","MAT_PAGINATOR_INTL_PROVIDER","provide","deps","M","Y","useFactory","parentIntl","DEFAULT_PAGE_SIZE","MatPaginatorBase","_MatPaginatorBase","B","D","_changeDetectorRef","super","_pageIndex","_length","_pageSizeOptions","_hidePageSize","_showFirstLastButtons","_intlChanges","subscribe","markForCheck","ngOnInit","_initialized","_updateDisplayedPageSizeOptions","_markInitialized","ngOnDestroy","unsubscribe","nextPage","hasNextPage","previousPageIndex","pageIndex","_emitPageEvent","previousPage","hasPreviousPage","getNumberOfPages","maxPageIndex","ceil","floor","_pageSize","pageSizeOptions","slice","indexOf","push","sort","b","emit","f","map","p","c","ngComponentDef","dc","type","selectors","jc","k","hostBindings","elIndex","pc","inputs","hidePageSize","showFirstLastButtons","outputs","exportAs","features","Rb","consts","vars","template","directives","n","m","styles","encapsulation","changeDetection","ngModuleDef","hc","ngInjectorDef","gc","providers","imports","InViewportDirective","_angular_common__WEBPACK_IMPORTED_MODULE_1__","_operators_untilDestroy__WEBPACK_IMPORTED_MODULE_2__","rxjs_operators__WEBPACK_IMPORTED_MODULE_4__","_viewport_service__WEBPACK_IMPORTED_MODULE_5__","elementRef","viewportService","platformId","preRender","oneTime","inViewport","_proto3","_this5","w","nativeElement","intersectionRatio","isIntersecting","ngDirectiveDef","ec","r","O","theme_picker_module_ThemePickerModule","ThemePickerModule","core","common","esm2015_button","icon","menu","grid_list","tooltip","theme_picker_service_module","untilDestroy","rxjs__WEBPACK_IMPORTED_MODULE_0__","rxjs_operators__WEBPACK_IMPORTED_MODULE_1__","destroy$","Symbol","component","undefined","orignalDestroy","Error","complete","call","_","style_manager_service_StyleManagerService","StyleManagerService","_proto4","setStyle","key","href","getExistingLinkElementByKey","linkEl","document","createElement","setAttribute","classList","add","getClassNameForKey","head","appendChild","removeStyle","existingLinkElement","removeChild","querySelector","theme_picker_component_ThemePickerComponent","ThemePickerComponent_mat_grid_tile_6_mat_icon_3_Template","ThemePickerComponent_mat_grid_tile_6_Template","_r11","item_r8","changeTheme","bd","ctx_r7","currentTheme","ad","bc","Zc","primary","cd","ThemePickerComponent","store","styleManager","ariaHidden","allThemes","src","_proto5","themeName","dispatch","_this6","activeThemeName$","ngx_utils_src","i","installTheme","console","log","theme","get","isDefault","ngxs_store","Ub","Ec","_r6","Oc","Fc","pipes","h","tslib_es6","__decorate","activeThemeName","__metadata","interval","_Observable__WEBPACK_IMPORTED_MODULE_0__","_scheduler_async__WEBPACK_IMPORTED_MODULE_1__","_util_isNumeric__WEBPACK_IMPORTED_MODULE_2__","period","scheduler","schedule","subscriber","counter","state","shared_flex_layout_module_SharedFlexLayoutModule","SharedFlexLayoutModule","flex_layout","withConfig","useColumnBasisZero","DEFAULT_PERFECT_SCROLLBAR_CONFIG","suppressScrollX","wheelPropagation","shared_perfect_scrollbar_module_SharedPerfectScrollbarModule","SharedPerfectScrollbarModule","ngx_perfect_scrollbar_es5","useValue","shared_module_SharedModule","SharedModule","fesm2015_forms","s","g","DATE_FORMATS","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","shared_material_date_module_SharedMaterialDateModule","SharedMaterialDateModule","esm2015_core","datepicker","EntityFormComponent","data","dialogRef","title","entity","payload","buildForm","submit","close","entityForm","entity_component_EntitiesComponent","EntitiesComponent","entityService","dataSource","table","selection","collections","showToolbar","showColumnFilter","showActionColumn","maxSelectable","actionColumn","selectColumn","loading$","_proto7","_this7","update","filterPredicate","changed","operators_filter","sc","added","selected","deselect","shift","ngAfterViewInit","paginator","getById","id","_delete","item","concatMap","updateOrCreate","put","post","getData","getAll","_this10","result","isAllFilteredRowsSelected","_this11","filteredData","every","isSelected","isMasterToggleChecked","hasValue","isMasterToggleIndeterminate","masterToggle","_this12","clear","select","applyFilter","filterValue","trim","toLowerCase","filter","selectRow","toggle","showDetails","getRouteAnimation","outlet","activatedRouteData","depth","toggleColumnVisibility","column","event","stopPropagation","stopImmediatePropagation","visible","stringToDate","date","String","parseISO","_createClass","displayedColumns","columns","x","property","unshift","concat","ngBaseDef","cc","viewQuery","_t","Xc","Nc","Ac","first","filterRef","entity_service_EntityService","httpClient","baseUrl","environment","API_BASE_URL","loadingSubject","BehaviorSubject","entityPath","catchError","handleError","findAll","order","skip","take","_this13","params","http","set","toString","retry","finalize","_this14","error","errorMessage","ErrorEvent","message","status","throwError","convertToJson","body","temporalFunctionToJson","Date","toJSON","format","jsonBody","JSON","stringify","Entity","init","assign","EntityColumnDef","header","displayFn","mapTo","_Subscriber__WEBPACK_IMPORTED_MODULE_0__","source","lift","MapToOperator","MapToSubscriber","destination","_next","GroupByPipe","_proto11","transform","collection","groupedCollection","reduce","previous","current","keys","ngPipeDef","ic","name","pure","MatSelectModule","MatSelect","_angular_animations__WEBPACK_IMPORTED_MODULE_0__","_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_1__","_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_2__","_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_3__","_angular_cdk_collections__WEBPACK_IMPORTED_MODULE_4__","_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_5__","_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_6__","_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_7__","_angular_core__WEBPACK_IMPORTED_MODULE_8__","_angular_forms__WEBPACK_IMPORTED_MODULE_9__","_angular_material_core__WEBPACK_IMPORTED_MODULE_10__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_11__","rxjs__WEBPACK_IMPORTED_MODULE_12__","rxjs__WEBPACK_IMPORTED_MODULE_13__","rxjs__WEBPACK_IMPORTED_MODULE_14__","rxjs_operators__WEBPACK_IMPORTED_MODULE_15__","rxjs_operators__WEBPACK_IMPORTED_MODULE_16__","rxjs_operators__WEBPACK_IMPORTED_MODULE_17__","rxjs_operators__WEBPACK_IMPORTED_MODULE_18__","rxjs_operators__WEBPACK_IMPORTED_MODULE_19__","rxjs_operators__WEBPACK_IMPORTED_MODULE_20__","rxjs_operators__WEBPACK_IMPORTED_MODULE_21__","_angular_common__WEBPACK_IMPORTED_MODULE_22__","MatSelect_span_4_Template","ctx_r74","placeholder","MatSelect_span_5_span_1_Template","ctx_r77","triggerValue","MatSelect_span_5_2_Template","Hc","MatSelect_span_5_Template","ctx_r75","customTrigger","MatSelect_ng_template_8_Template","_r81","_panelDoneAnimatingStream","toState","_handleKeydown","ctx_r76","Xb","_getPanelTheme","_transformOrigin","_triggerFontSize","panelClass","multiple","matSelectAnimations","transformPanelWrap","o","j","optional","transformPanel","minWidth","opacity","e","fadeInContent","nextUniqueId","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","A","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","overlay","scrollStrategies","reposition","MatSelectChange","MatSelectBase","_elementRef","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatSelectMixinBase","E","C","MatSelectTrigger","_viewportRuler","_ngZone","_dir","_parentFormField","tabIndex","scrollStrategyFactory","_liveAnnouncer","_panelOpen","_required","_scrollTop","_multiple","_compareWith","o1","o2","_uid","_destroy","_onChange","_onTouched","_optionIds","_offsetY","_positions","originX","originY","overlayX","overlayY","_disableOptionCentering","_focused","controlType","ariaLabel","optionSelectionChanges","apply","option","onSelectionChange","onStable","openedChange","_openedStream","_closedStream","selectionChange","valueChange","valueAccessor","_scrollStrategyFactory","_scrollStrategy","parseInt","_this21","_selectionModel","stateChanges","panelOpen","overlayDir","offsetX","change","_triggerRect","trigger","getBoundingClientRect","ngAfterContentInit","_this22","_initKeyManager","onChange","removed","_resetOptions","_initializeSelection","ngDoCheck","updateErrorState","ngOnChanges","open","_this23","getComputedStyle","fontSize","_keyManager","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","overlayRef","overlayElement","style","_isRtl","writeValue","_setSelectionByValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","_handleOpenKeydown","_handleClosedKeydown","keyCode","isArrowKey","manager","altKey","preventDefault","previouslySelectedOption","setFirstItemActive","setLastItemActive","onKeydown","selectedOption","announce","viewValue","activeItem","ctrlKey","hasDeselectedOptions","some","opt","previouslyFocusedIndex","activeItemIndex","shiftKey","_selectViaInteraction","_onFocus","_onBlur","_onAttached","_this24","positionChange","_setPseudoCheckboxPaddingSize","detectChanges","_calculateOverlayOffsetX","panel","scrollTop","pseudoCheckbox","offsetWidth","_this25","Promise","resolve","then","_value","Array","isArray","currentValue","_selectValue","_sortValues","correspondingOption","setActiveItem","find","qb","warn","_this28","withTypeAhead","withVerticalOrientation","withAllowedModifierKeys","tabOut","focus","_scrollActiveOptionIntoView","_this29","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","_setOptionIds","wasSelected","_propagateChanges","_this30","toArray","sortComparator","fallbackValue","valueToEmit","join","empty","activeOptionIndex","labelCount","optionGroups","y","_getItemHeight","_getOptionIndex","index","itemHeight","items","_getItemCount","panelHeight","maxScroll","selectedOptionOffset","scrollBuffer","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","selectedIndex","_getAriaLabel","ariaLabelledby","_getAriaLabelledby","_hasFloatingLabel","_labelId","_getAriaActiveDescendant","overlayRect","viewportSize","getViewportSize","isRtl","paddingWidth","group","leftOverflow","left","rightOverflow","right","width","round","updatePosition","optionHeightAdjustment","height","maxOptionsDisplayed","optionOffsetFromPanelTop","topSpaceAvailable","top","bottomSpaceAvailable","bottom","panelHeightTop","abs","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","setDescribedByIds","ids","_ariaDescribedby","onContainerClick","_placeholder","newValue","_id","selectedOptions","reverse","isEmpty","L","q","xc","contentQueries","dirIndex","ac","md","required","errorState","Yb","disableRipple","disableOptionCentering","compareWith","errorStateMatcher","Tb","useExisting","Sb","ngContentSelectors","Ic","_r72","l","animation","MatListModule","MatNavList","MatList","MatListAvatarCssMatStyler","MatListIconCssMatStyler","MatListSubheaderCssMatStyler","MatListItem","_angular_material_core__WEBPACK_IMPORTED_MODULE_1__","rxjs__WEBPACK_IMPORTED_MODULE_2__","_angular_common__WEBPACK_IMPORTED_MODULE_9__","_angular_material_divider__WEBPACK_IMPORTED_MODULE_10__","MatListBase","_MatListMixinBase","MatListItemBase","_MatListItemMixinBase","_this31","arguments","ɵMatNavList_BaseFactory","_getListType","nodeName","_element","navList","list","_isInteractiveList","_destroyed","_list","_getHostElement","hasAttribute","F","_lines","_isRippleDisabled","_avatar","_icon","u","v","ThemePickerServiceModule","differenceInMilliseconds","_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__","dirtyDateLeft","dirtyDateRight","TypeError","dateLeft","dateRight","getTime","addLeadingZeros","number","targetLength","sign","output","startOfUTCISOWeek","dirtyDate","toDate","day","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","getUTCISOWeekYear","year","getUTCFullYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfUTCWeek","dirtyOptions","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","toInteger","RangeError","getUTCWeekYear","localeFirstWeekContainsDate","firstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","formatTimezoneShort","offset","dirtyDelimiter","absOffset","hours","minutes","delimiter","formatTimezoneWithOptionalMinutes","formatTimezone","format_formatters","G","localize","era","signedYear","ordinalNumber","unit","signedWeekYear","weekYear","R","Q","quarter","getUTCMonth","context","month","week","firstWeek","I","isoWeek","fourthOfJanuary","dayOfYear","timestamp","setUTCMonth","startOfYearTimestamp","dayOfWeek","localDayOfWeek","isoDayOfWeek","dayPeriodEnumValue","getUTCHours","dayPeriod","H","K","getUTCMinutes","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","pow","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","z","T","dateLongFormatter","pattern","formatLong","timeLongFormatter","time","format_longFormatters","P","dateTimeFormat","matchResult","match","datePattern","timePattern","dateTime","replace","protectedDayOfYearTokens","protectedWeekYearTokens","throwProtectedError","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","en_US","originalDate","isNaN","utcDate","dirtyAmount","amount","getTimezoneOffsetInMilliseconds","formatterOptions","substring","firstCharacter","longFormatter","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","MatDivider","MatDividerModule","_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__","_angular_common__WEBPACK_IMPORTED_MODULE_2__","_vertical","_inset","vertical","inset","MatDatepickerModule","MatDatepicker","MatDatepickerInput","MatDatepickerToggle","rxjs__WEBPACK_IMPORTED_MODULE_3__","rxjs__WEBPACK_IMPORTED_MODULE_4__","rxjs_operators__WEBPACK_IMPORTED_MODULE_5__","rxjs_operators__WEBPACK_IMPORTED_MODULE_6__","_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_7__","_angular_material_core__WEBPACK_IMPORTED_MODULE_8__","_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_9__","_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_10__","_angular_animations__WEBPACK_IMPORTED_MODULE_11__","_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_12__","_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_13__","_angular_common__WEBPACK_IMPORTED_MODULE_14__","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_15__","_angular_forms__WEBPACK_IMPORTED_MODULE_16__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_17__","_angular_material_input__WEBPACK_IMPORTED_MODULE_18__","_angular_material_button__WEBPACK_IMPORTED_MODULE_19__","_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_20__","MatCalendarBody_tr_0_Template","ctx_r41","_cellPadding","numCols","label","MatCalendarBody_tr_1_td_1_Template","ctx_r45","_firstRowOffset","labelMinRequiredCells","MatCalendarBody_tr_1_td_2_Template","_r50","item_r47","_cellClicked","colIndex_r48","rowIndex_r44","ctx_r46","_cellWidth","enabled","_isActiveCell","cssClasses","selectedValue","todayValue","displayValue","MatCalendarBody_tr_1_Template","row_r43","ctx_r42","MatMonthView_th_3_Template","day_r53","narrow","_c25","_c26","_c27","_c28","_c29","_c30","_c31","_c32","_c33","MatCalendar_ng_template_0_Template","_c34","MatCalendar_mat_month_view_2_Template","_r59","activeDate","_dateSelected","_userSelected","ctx_r55","dateFilter","maxDate","minDate","dateClass","_c35","MatCalendar_mat_year_view_3_Template","_r63","_monthSelectedInYearView","_goToDateInView","ctx_r56","_c36","MatCalendar_mat_multi_year_view_4_Template","_r67","_yearSelectedInMultiYearView","ctx_r57","_c37","_c38","_c39","_c40","_c41","_c42","_c43","_c44","_c45","_c46","MatDatepickerToggle__svg_svg_2_Template","_c47","_c48","createMissingDateImplError","provider","MatDatepickerIntl","calendarLabel","openCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","MatCalendarCell","MatCalendarBody","activeCell","cellAspectRatio","selectedValueChange","cell","columnChanges","rows","rowIndex","colIndex","cellNumber","_focusActiveCell","_this34","runOutsideAngular","attrs","DAYS_PER_WEEK","MatMonthView","_dateFormats","_dateAdapter","selectedChange","_userSelection","activeDateChange","_activeDate","today","_init","_selectedDate","selectedYear","getYear","selectedMonth","getMonth","selectedDate","createDate","_handleCalendarBodyKeydown","oldActiveDate","addCalendarDays","getDate","getNumDaysInMonth","addCalendarYears","addCalendarMonths","compareDate","_getDateInCurrentMonth","_todayDate","_monthLabel","getMonthNames","toLocaleUpperCase","firstOfMonth","_firstWeekOffset","getDayOfWeek","getFirstDayOfWeek","_initWeekdays","_createWeekCells","_matCalendarBody","firstDayOfWeek","narrowWeekdays","getDayOfWeekNames","weekdays","long","_weekdays","daysInMonth","dateNames","getDateNames","_weeks","_shouldEnableDate","cellClasses","_hasSameMonthAndYear","d1","d2","_getValidDateOrNull","obj","isDateInstance","isValid","validDate","deserialize","clampDate","_selected","_minDate","_maxDate","yearsPerPage","yearsPerRow","MatMultiYearView","yearSelected","_this35","_todayYear","minYearOfPage","getActiveOffset","_years","row","_createCellForYear","_yearSelected","_getActiveCell","yearName","getYearName","_shouldEnableYear","isSameMultiYearView","_selectedYear","dateAdapter","date1","date2","year1","year2","startingYear","getStartingYear","MatYearView","monthSelected","_monthSelected","normalizedDate","_this36","_selectedMonth","_getMonthInCurrentYear","_todayMonth","_yearLabel","monthNames","_months","_createCellForMonth","monthName","_shouldEnableMonth","activeYear","_isYearAndMonthAfterMaxDate","_isYearAndMonthBeforeMinDate","maxYear","maxMonth","minYear","minMonth","MatCalendarHeader","calendar","changeDetectorRef","currentPeriodClicked","currentView","previousClicked","nextClicked","previousEnabled","_isSameView","nextEnabled","multi-year","mb","MatCalendar","periodButtonLabel","periodButtonText","prevButtonLabel","nextButtonLabel","_moveFocusOnNextTick","startView","_calendarHeaderPortal","headerComponent","startAt","_currentView","ngAfterViewChecked","focusActiveCell","firstChange","view","_getCurrentViewComponent","updateTodaysDate","monthView","yearView","multiYearView","sameDate","normalizedYear","normalizedMonth","_startAt","_clampedActiveDate","matDatepickerAnimations","fadeInCalendar","datepickerUid","MAT_DATEPICKER_SCROLL_STRATEGY","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","MatDatepickerContentBase","_MatDatepickerContentMixinBase","MatDatepickerContent","_calendar","ld","touchUi","_selectYear","_selectMonth","_dateFilter","calendarHeaderComponent","_dialog","_overlay","_viewContainerRef","scrollStrategy","_document","_touchUi","openedStream","closedStream","_opened","_validSelected","_focusedElementBeforeOpen","_inputSubscription","EMPTY","_disabledChange","_selectedChanged","_popupRef","dispose","_popupComponentRef","oldValue","_registerInput","input","_datepickerInput","_valueChange","activeElement","_openAsDialog","_openAsPopup","_this39","hasAttached","detach","_dialogRef","_calendarPortal","isAttached","completeClose","setTimeout","_this40","direction","viewContainerRef","afterClosed","componentInstance","_setColor","_this41","_createPopup","attach","instance","_this42","overlayConfig","positionStrategy","_createPopupPositionStrategy","hasBackdrop","backdropClass","create","backdropClick","detachments","keydownEvents","position","flexibleConnectedTo","getConnectedOverlayOrigin","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withLockedPosition","withPositions","_color","_getThemePalette","_disabled","gb","opened","MAT_DATEPICKER_VALUE_ACCESSOR","multi","MAT_DATEPICKER_VALIDATORS","MatDatepickerInputEvent","targetElement","_formField","dateChange","_cvaOnChange","_validatorOnChange","_datepickerSubscription","_localeSubscription","_parseValidator","_lastValueValid","matDatepickerParse","text","_minValidator","control","controlValue","matDatepickerMin","actual","_maxValidator","matDatepickerMax","_filterValidator","matDatepickerFilter","_validator","compose","localeChanges","registerOnValidatorChange","validate","getPopupConnectionElementRef","_onKeydown","_datepicker","readOnly","_onInput","_formatValue","oldDate","_min","_max","blur","tc","toIso8601","matDatepicker","MatDatepickerToggleIcon","defaultTabIndex","parsedTabIndex","Number","_watchStateChanges","_open","_this45","datepickerDisabled","inputDisabled","datepickerToggled","_customIcon","_button","MASK_FLAGS","KEYS","Ctrl","Z","BACKSPACE","DELETE","MaskHelper","parseValueByMask","maskOptions","cursor","inputValue","mask","literals","getMaskLiterals","literalKeys","from","nonLiteralIndeces","getNonLiteralIndeces","cursorPrivate","parseValueByMaskOnInit","insertCharAt","promptChar","char","isCharValid","validateCharOnPostion","replaceCharAt","parseMask","outputVal","_iterator","_isArray","_i3","iterator","_ref","done","maskSym","val","inputVal","literalValues","values","_iterator2","_isArray2","_i4","_ref2","nonLiteralValues","getNonLiteralValues","splice","pos","_iterator3","_isArray3","_i5","_ref3","nonLiteralValue","restoreValueFromMask","_iterator4","_isArray4","_i6","_ref4","parseValueByMaskUponSelection","isMarked","parseValueByMaskUponCopyPaste","clipboardData","selectionEnd","_iterator5","_isArray5","_i9","_ref5","clipboardSym","inputChar","regex","charAt","RegExp","test","strValue","Map","nonLiteralsIndeces","_iterator6","_isArray6","_i11","_ref6","isIE","navigator","appVersion","mask_directive_MaskDirective","noop","MaskDirective","onTouchedCallback","onChangeCallback","maskHelper","_proto27","charCode","ctrlDown","selectionStart","onKeyup","onPaste","paste","valOnPaste","cursorOnPaste","getCursorPosition","onInputChanged","setCursorPosition","currentCursorPos","rawVal","dataValue","includeLiterals","rawValue","formattedValue","onFocus","focusedValuePipe","onBlur","displayValuePipe","start","end","setSelectionRange","_MatMenu","MatMenuItem","MatMenuTrigger","MatMenuModule","_angular_core__WEBPACK_IMPORTED_MODULE_1__","_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_2__","_angular_common__WEBPACK_IMPORTED_MODULE_3__","rxjs__WEBPACK_IMPORTED_MODULE_5__","rxjs__WEBPACK_IMPORTED_MODULE_6__","rxjs__WEBPACK_IMPORTED_MODULE_7__","rxjs__WEBPACK_IMPORTED_MODULE_8__","_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_9__","_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_11__","_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_12__","rxjs_operators__WEBPACK_IMPORTED_MODULE_13__","rxjs_operators__WEBPACK_IMPORTED_MODULE_14__","_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_19__","_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_20__","_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_21__","_MatMenu_ng_template_0_Template","_r36","closed","_onAnimationStart","_onAnimationDone","ctx_r34","_classList","_panelAnimationState","matMenuAnimations","transformMenu","fadeInItems","MatMenuContent","_template","_componentFactoryResolver","_appRef","_injector","_attached","_portal","_outlet","parentNode","insertBefore","outletElement","ab","MAT_MENU_PANEL","MatMenuItemBase","_MatMenuItemMixinBase","_focusMonitor","_parentMenu","role","_hovered","_highlighted","_triggersSubmenu","monitor","addItem","origin","focusVia","stopMonitoring","removeItem","_getTabIndex","_checkDisabled","_handleMouseEnter","getLabel","textNodeType","TEXT_NODE","childNodes","nodeType","textContent","MAT_MENU_DEFAULT_OPTIONS","overlapTrigger","xPosition","yPosition","MAT_MENU_BASE_ELEVATION","_MatMenuBase","_defaultOptions","_xPosition","_yPosition","_directDescendantItems","_tabSubscription","_animationDone","_overlapTrigger","_hasBackdrop","setPositionClasses","_this49","_updateDirectDescendants","withWrap","destroy","_item","parentMenu","setFocusOrigin","focusFirstItem","_this50","lazyContent","resetActiveItem","setElevation","newElevation","customElevation","startsWith","_previousElevation","posX","posY","classes","_startAnimation","_resetAnimation","_isAnimating","_this51","_allItems","reset","notifyOnChanges","previousPanelClass","_previousPanelClass","split","className","templateRef","MatMenu","ngZone","defaultOptions","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","MENU_PANEL_TOP_PADDING","passiveEventListenerOptions","passive","_menuItemInstance","_overlayRef","_menuOpen","_closingActionsSubscription","_hoverSubscription","_menuCloseSubscription","_handleTouchStart","_openedBy","restoreFocus","menuOpened","onMenuOpen","menuClosed","onMenuClose","addEventListener","triggersSubmenu","_checkMenu","_handleHover","removeEventListener","toggleMenu","closeMenu","openMenu","_this54","_createOverlay","getConfig","_setPosition","_getPortal","menuData","_menuClosingActions","_initMenu","_destroyMenu","_this55","menuOpen","_resetMenu","dir","_setMenuElevation","_setIsMenuOpen","isOpen","config","_getOverlayConfig","_subscribeToPositions","positionChanges","connectionPair","originFallbackX","overlayFallbackY","originFallbackY","overlayFallbackX","offsetY","_this57","backdrop","parentClose","hover","active","_handleMousedown","button","_handleClick","_this58","_menu","reason","_deprecatedMatMenuTriggerFor","_MatMenuDirectivesModule","compareAsc","formatDistance","MINUTES_IN_DAY","MINUTES_IN_ALMOST_TWO_DAYS","MINUTES_IN_MONTH","MINUTES_IN_TWO_MONTHS","dirtyBaseDate","comparison","localizeOptions","dirtyObject","hasOwnProperty","addSuffix","Boolean","months","seconds","offsetInSeconds","includeSeconds","days","difference","getFullYear","setMonth","nearestMonth","monthsSinceStartOfYear","years","ng_let_module_NgLetModule","NgLetModule","router_link_match_module_RouterLinkMatchModule","RouterLinkMatchModule","in_viewport_module_InViewportModule","InViewportModule","click_outside_module_ClickOutsideModule","ClickOutsideModule","mask_module_MaskModule","MaskModule","helper_module_HelperModule","HelperModule","truncate_module_TruncateModule","TruncateModule","date_fns_module_DateFnsModule","DateFnsModule","RepeatWhenOperator","notifier","repeatWhen_RepeatWhenSubscriber","sourceIsBeingSubscribedTo","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyComplete","_OuterSubscriber$a","isStopped","retries","subscribeToRetries","retriesSubscription","_unsubscribeAndRecycle","notifications","_unsubscribe","Subject","subscribeToResult","OuterSubscriber","DelayWhenOperator","delayDurationSelector","delayWhen_DelayWhenSubscriber","completed","delayNotifierSubscriptions","removeSubscription","tryComplete","notifyError","_error","delayNotifier","tryDelay","err","_complete","subscription","subscriptionIdx","notifierSubscription","TakeWhileOperator","predicate","inclusive","takeWhile_TakeWhileSubscriber","nextOrComplete","predicateResult","Subscriber","MILLISECONDS_IN_MINUTE","format_time_in_words_pipe_FormatTimeInWordsPipe","defaultConfig","FormatTimeInWordsPipe","cdr","isDestroyed","async","_proto38","NO_ARGS_ERROR","agoExpression","timeAgo","nextBackoff","backoff","of","notify","subscriptionDelay","tap","minutesElapsed","backoffAmountInSeconds","yc","argument","argStr","stack","NaN","dirtyNumber","wobble","animations","jello","swing","slideOutLeft","zoomOutRight","transform-origin","rotateOutUpRight","flipOutY","cardAnimation","fadeAnimation","listFadeAnimation","min-width","min-height","max-width","flex-direction","flex","hierarchicalRouteAnimation","scrollFabAnimation","animations_service_AnimationsService","AnimationsService","isRouteAnimationsType","routeAnimationType","_proto39","updateRouteAnimationType","pageAnimations","elementsAnimations","STEPS_ALL","STEPS_PAGE","STEPS_ELEMENTS","routerTransition","Collapsed","CollapsedHover","Expanded","Mobile","visibility","MobileOpen","MatGridListModule","MatGridList","MatGridTile","_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_3__","MAT_GRID_LIST","_gridList","_rowspan","_colspan","_setStyle","rowspan","colspan","TileCoordinator","columnIndex","numColumns","tiles","tracker","fill","positions","tile","_trackTile","gapStartIndex","_findMatchingGap","_markTilePosition","TilePosition","tileCols","gapEndIndex","_nextRow","_findGapEndIndex","lastRowMax","rowCount","col","cssCalcAllowedValue","TileStyler","_rows","gutterSize","cols","_gutterSize","normalizeUnits","_cols","_direction","getBaseTileSize","sizePercent","gutterFraction","getTilePosition","baseSize","calc","getTileSize","span","percentWidthPerTile","gutterWidthFractionPerTile","setColStyles","setRowStyles","percentWidth","gutterWidth","baseTileWidth","getGutterSpan","getTileSpan","tileHeight","getComputedHeight","FixedTileStyler","fixedRowHeight","_setListStyle","_tiles","RatioTileStyler","_parseRatio","baseTileHeight","rowHeightRatio","ratioParts","parseFloat","FitTileStyler","exp","MAT_FIT_MODE","_gutter","_checkCols","_checkRowHeight","ngAfterContentChecked","_layoutTiles","_rowHeight","_setTileStyler","rowHeight","_tileStyler","_this67","_tileCoordinator","ClickOutsideDirective","ngxClickOutside","_proto47","onClick","contains","Qc","MatSortModule","MatSortHeader","MatSort","_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_0__","_angular_material_core__WEBPACK_IMPORTED_MODULE_2__","_angular_animations__WEBPACK_IMPORTED_MODULE_5__","_angular_common__WEBPACK_IMPORTED_MODULE_6__","MatSortHeader_div_3_Template","_r98","_disableViewStateAnimation","ctx_r96","_getArrowViewState","_getArrowDirectionState","MatSortBase","_MatSortMixinBase","_this68","sortables","sortChange","register","sortable","has","deregister","getNextSortDirection","sortDirectionCycle","disableClear","sortOrder","nextDirectionIndex","_disableClear","ɵMatSort_BaseFactory","SORT_ANIMATION_TRANSITION","ENTERING","STANDARD_CURVE","matSortAnimations","indicator","leftPointer","rightPointer","arrowOpacity","arrowPosition","allowChildren","MatSortHeaderIntl","sortButtonLabel","MAT_SORT_HEADER_INTL_PROVIDER","MatSortHeaderBase","_MatSortHeaderMixinBase","_sort","_columnDef","_showIndicatorHint","_arrowDirection","_rerenderSubscription","_isSorted","_updateArrowDirection","_viewState","_setAnimationTransitionState","fromState","_setIndicatorHintVisible","_isDisabled","viewState","_getAriaSortAttribute","_renderArrow","count","RetryOperator","RetrySubscriber","_Subscriber__WEBPACK_2","div","elMatches","Element","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","query","remove","queryChildren","selector","children","child","cls","main","thumb","rail","consuming","clicking","scrolling","scrollingClassTimeout","addScrollingClass","clearTimeout","removeScrollingClass","isAlive","settings","scrollingThreshold","EventElement","handlers","prototypeAccessors","configurable","eventName","unbind","this$1","unbindAll","defineProperties","EventManager","eventElements","createEvent","window","CustomEvent","evt","initCustomEvent","eventElement","ee","once","onceHandler","processScrollDiff","axis","useScrollingClass","forceFireReachEvent","fields","ref","contentHeight","containerHeight","up","down","reach","dispatchEvent","toInt","env","isWebKit","documentElement","supportsTouch","DocumentTouch","supportsIePointer","msMaxTouchPoints","isChrome","userAgent","updateGeometry","roundedScrollTop","containerWidth","clientWidth","clientHeight","contentWidth","scrollWidth","scrollHeight","scrollbarXRail","el","scrollbarYRail","scrollXMarginOffset","scrollbarXActive","railXWidth","railXMarginWidth","railXRatio","scrollbarXWidth","getThumbSize","scrollbarXLeft","negativeScrollAdjustment","scrollLeft","suppressScrollY","scrollYMarginOffset","scrollbarYActive","railYHeight","railYMarginHeight","railYRatio","scrollbarYHeight","scrollbarYTop","xRailOffset","isScrollbarXUsingBottom","scrollbarXBottom","scrollbarXTop","yRailOffset","isScrollbarYUsingRight","scrollbarYRight","scrollbarYOuterWidth","scrollbarYLeft","scrollbarX","railBorderXWidth","scrollbarY","railBorderYWidth","thumbSize","minScrollbarLength","maxScrollbarLength","bindMouseScrollHandler","pageY","startingScrollTop","startingMousePageY","scrollBy","mouseMoveHandler","mouseUpHandler","ownerDocument","click-rail","clickRail","positionTop","pageYOffset","positionLeft","pageX","pageXOffset","drag-thumb","dragThumb","keyboard","isDefaultPrevented","defaultPrevented","tagName","contentDocument","shadowRoot","deltaX","deltaY","which","metaKey","wheel","mousewheelHandler","wheelDeltaX","wheelDeltaY","deltaMode","wheelDelta","overflow","overflowX","overflowY","maxScrollTop","maxScrollLeft","shouldPrevent","useBothWheelAxes","wheelSpeed","isTop","isBottom","offsetHeight","isLeft","isRight","onwheel","onmousewheel","touch","startOffset","startTime","speed","easingLoop","touchStart","touchMove","touchEnd","PointerEvent","MSPointerEvent","applyTouchMove","differenceX","differenceY","getTouch","targetTouches","shouldHandle","pointerType","buttons","MSPOINTER_TYPE_MOUSE","clearInterval","currentOffset","currentTime","timeGap","magnitudeX","magnitudeY","scrollY","swipeEasing","setInterval","isInitialized","PerfectScrollbar","userSettings","originalScrollLeft","isNegativeScroll","railXStyle","borderLeftWidth","borderRightWidth","marginLeft","marginRight","railYStyle","paddingLeft","paddingRight","borderTopWidth","borderBottomWidth","marginTop","marginBottom","handlerName","lastScrollTop","lastScrollLeft","onScroll","removePsClasses","perfect_scrollbar_esm","MapShim","getIndex","arr","class_1","__entries__","defineProperty","enumerable","callback","_i","_a","isBrowser","global$1","global","self","Function","requestAnimationFrame$1","requestAnimationFrame","now","trailingTimeout","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","addObserver","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","gatherActive","hasActive","broadcastActive","attributes","childList","characterData","subtree","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","props","writable","getWindowOf","defaultView","emptyRect","createRectInit","toFloat","getBordersSize","size","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","bbox","paddings","positions_1","horizPad","vertPad","boxSizing","vertScrollbar","horizScrollbar","broadcastRect","ResizeObserverEntry","rectInit","Constr","contentRect","DOMRectReadOnly","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","callback_","controller_","callbackCtx_","observations","clearActive","_this","observation","WeakMap","ResizeObserver","method","ResizeObserver_es","PERFECT_SCROLLBAR_CONFIG","ngx_perfect_scrollbar_es5_PerfectScrollbarComponent","ngx_perfect_scrollbar_es5_PerfectScrollbarModule","PerfectScrollbarComponent_div_3_Template","ctx_r40","states","indicatorY","interaction","indicatorX","Geometry","Position","PerfectScrollbarEvents","PerfectScrollbarConfig","ngx_perfect_scrollbar_es5_PerfectScrollbarDirective","PerfectScrollbarDirective","zone","differs","defaults","ro","timeout","configDiff","ngDestroy","psScrollY","psScrollX","psScrollUp","psScrollDown","psScrollLeft","psScrollRight","psYReachEnd","psYReachStart","psXReachEnd","psXReachStart","config_1","eventType","fromEvent","auditTime","takeUntil","isFirstChange","previousValue","ps","geometry","prefix","absolute","scrollable","scrollTo","animateScrolling","scrollToX","scrollToY","scrollToTop","scrollToLeft","scrollToRight","scrollToBottom","scrollToElement","qs","elementPos","scrollerPos","cancelAnimationFrame","newValue_1","scrollCount_1","oldTimestamp_1","performance","oldValue_1","cosParameter_1","step_1","newTimestamp","PI","cos","PerfectScrollbarComponent","cdRef","scrollPositionX","scrollPositionY","scrollDirectionX","scrollDirectionY","usePropagationX","usePropagationY","allowPropagationX","allowPropagationY","stateTimeout","stateUpdate","usePSClass","autoPropagation","scrollIndicators","distinctUntilChanged","directiveRef","checkPropagation","touches","clientX","clientY","merge","PerfectScrollbarModule","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","defaultWidth","formats","formatRelativeLocale","lastWeek","yesterday","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","valuesArray","formattingValues","defaultFormattingWidth","_defaultWidth","_width","argumentCallback","buildMatchPatternFn","dirtyString","string","matchPattern","matchedString","parseResult","parsePattern","valueCallback","rest","buildMatchFn","matchPatterns","defaultMatchWidth","parsePatterns","defaultParseWidth","findIndex","object","full","medium","short","formatRelative","_date","_baseDate","_options","_dirtyOptions","rem100","abbreviated","wide","am","pm","midnight","noon","morning","afternoon","evening","night","any","mixinHasStickyInput","base","_base","_inheritsLoose","_class","_sticky","_hasStickyChanged","_proto52","hasStickyChanged","resetStickyChanged","prevValue","coercion","CdkCellDef","CdkHeaderCellDef","CdkFooterCellDef","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_this72","_stickyEnd","_name","cssClassFriendlyName","ɵCdkColumnDef_BaseFactory","table_CdkCellDef","table_CdkHeaderCellDef","table_CdkFooterCellDef","headerCell","footerCell","sticky","stickyEnd","table_CdkColumnDef","BaseCdkCell","columnDef","CdkHeaderCell","CdkCell","BaseRowDef","_differs","_columnsDiffer","getColumnsDiff","extractCellTemplate","table_CdkHeaderRowDef","table_CdkFooterRowDef","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkHeaderRowDef","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDef","CdkRowDef","when","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkHeaderRow","lc","table_CdkCellOutlet","CdkRow","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","_isBrowser","clearStickyPositioning","stickyDirections","_iterator7","_isArray7","_i12","_ref9","ELEMENT_NODE","_removeStickyStyle","updateStickyColumns","stickyStartStates","stickyEndStates","hasStickyColumns","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","_iterator8","_isArray8","_i13","_ref10","_addStickyStyle","stickRows","rowsToStick","stickyStates","stickyHeight","updateStickyFooterContainer","tableElement","tfoot","_iterator9","_isArray9","_i14","_ref11","zIndex","_getCalculatedZIndex","dirValue","cssText","zIndexIncrements","_i15","_STICKY_DIRECTIONS","firstRowCells","widths","nextPosition","getTableUnknownColumnError","DataRowOutlet","viewContainer","HeaderRowOutlet","FooterRowOutlet","CdkTable","_platform","_onDestroy","_columnDefsByName","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_cachedRenderRowsMap","stickyCssClass","_multiTemplateDataRows","viewChange","MAX_VALUE","_this73","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","dataRow","trackBy","dataIndex","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","_renderUpdatedColumns","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_rowOutlet","_headerRowOutlet","_footerRowOutlet","renderRows","_this74","_renderRows","_getAllRenderRows","forEachOperation","record","prevIndex","currentIndex","previousIndex","_insertRow","move","_updateRowIndexContext","forEachIdentityChange","updateStickyColumnStyles","setHeaderRowDef","headerRowDef","setFooterRowDef","footerRowDef","addColumnDef","removeColumnDef","addRowDef","rowDef","removeRowDef","addHeaderRowDef","removeHeaderRowDef","addFooterRowDef","removeFooterRowDef","updateStickyHeaderRowStyles","headerRows","_getRenderedRows","thead","def","_stickyStyler","updateStickyFooterRowStyles","footerRows","_this75","dataRows","headerRow","_addStickyColumnStyles","footerRow","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","renderRow","cache","_getRowDefs","cachedRenderRows","_this76","mergeQueryListAndSet","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","multiTemplateDataRows","_defaultRowDef","columnsDiffReducer","acc","_forceRenderDataRows","_switchDataSource","_dataSource","_this77","dataStream","connect","Observable","_this78","_renderRow","_this79","columnDefs","columnName","rowOutlet","renderedRows","viewRef","rootNodes","rowDefs","renderIndex","createEmbeddedView","_iterator10","_getCellTemplates","_isArray10","_i16","_ref12","cellTemplate","last","even","odd","columnId","documentFragment","createDocumentFragment","sections","tag","_i17","_sections","section","stickyCheckReducer","_this82","_trackByFn","bidi","platform","table_CdkRowDef","table_DataRowOutlet","table_HeaderRowOutlet","table_FooterRowOutlet","queryList","CdkTableModule","table_MatTableModule","table_MatCellDef","table_MatHeaderCellDef","table_MatColumnDef","table_MatHeaderCell","table_MatCell","table_MatTable","table_MatHeaderRowDef","table_MatRowDef","table_MatHeaderRow","table_MatRow","table_MatTableDataSource","table_c0","table_c1","table_c2","table_c3","table_c4","table_c5","table_c6","table_c8","table_c9","table_c10","table_c12","MatTable","_this83","table_CdkTable","ɵMatTable_BaseFactory","MatCellDef","ɵMatCellDef_BaseFactory","MatHeaderCellDef","ɵMatHeaderCellDef_BaseFactory","MatColumnDef","ɵMatColumnDef_BaseFactory","MatHeaderCell","table_CdkHeaderCell","MatCell","table_CdkCell","MatHeaderRowDef","ɵMatHeaderRowDef_BaseFactory","MatRowDef","ɵMatRowDef_BaseFactory","MatHeaderRow","table_CdkHeaderRow","ɵMatHeaderRow_BaseFactory","MatRow","table_CdkRow","ɵMatRow_BaseFactory","MatTableModule","table_CdkTableModule","MAX_SAFE_INTEGER","initialData","_this86","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","Subscription","sortingDataAccessor","sortHeaderId","numberValue","sortData","valueA","valueB","comparatorResult","dataStr","currentTerm","transformedFilter","_updateChangeSubscription","_this87","initialized","pageChange","_paginator","combineLatest","_ref13","_filterData","orderedData","_ref14","_orderData","paginatedData","_ref15","_pageData","_updatePaginator","filteredDataLength","lastPageIndex","newPageIndex","NgLetDirective","NgLetContext","ngLet","vcr","_proto60","baseTimezoneOffset","setSeconds","millisecondsPartOfTimezoneOffset","_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__","_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__","MILLISECONDS_IN_HOUR","DEFAULT_ADDITIONAL_DIGITS","patterns","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","additionalDigits","dateStrings","dateString","timeString","array","substr","exec","parseYearResult","captures","century","restDateString","isWeekDate","parseDateUnit","_year","isoWeekYear","daysInMonths","isLeapYearIndex","parseTimeUnit","timezoneString","_hours","fullTime","fullTimeDate","fullTimeDateNextDay","setDate","offsetDiff"],"mappings":"oiBAAAA,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAC,IAAA,IAAAC,EAAAJ,EAAA,QAAAK,EAAAL,EAAA,QAAAM,EAAAN,EAAA,QAAAO,EAAAP,EAAA,QAOO,IAAAG,EAAA,WAAA,IAAMA,EAAN,WAQL,SAAAA,IAPiBK,KAAAC,QAAoC,CACnDC,WAAY,kBACZC,UAAW,CAAC,KAGNH,KAAAI,UAAgD,IAAIP,EAAAQ,EAG1DL,KAAKM,SAAW,IAAIC,qBAAqBP,KAAKQ,QAAQC,KAAKT,MAAOA,KAAKC,SATpE,IAAAS,EAAAf,EAAAgB,UAAAD,EAYLE,QAAA,SAAAA,EAAQC,GAAAA,IAAAA,EAAAA,KAGN,OAFAb,KAAKM,SAASM,QAAQC,GAEfb,KAAKI,UAAUU,eAAeC,KACnCC,OAAAlB,EAAAO,EAAAW,CAAQC,SAAAA,GAAAA,OAAqCA,EAAMC,SAAWL,IAC9DG,OAAAjB,EAAAM,EAAAW,CAAS,WAAA,OAAMhB,EAAKM,SAASa,UAAUN,OAjBtCH,EAqBGF,QAAA,SAAAA,EAAQY,GAAAA,IAAAA,EAAAA,KACdA,EAAQC,QAAQJ,SAAAA,GAAAA,OAASjB,EAAKI,UAAUkB,KAAKL,MAtB1C,OAAAtB,EAAA,UCcPA,EAAgB4B,gBAAkB3B,EAAA4B,GAAsB,CAAEC,MDd7C9B,EAAe+B,QAAA,SAAAA,EAAAC,GAAA,OAAA,IAAAA,GAAfhC,IAAeiC,WAFd,WAEP,0CEPPpC,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAmC,IAAArC,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAoC,IAAA,IAAAlC,EAAAJ,EAAA,QAAAK,EAAAL,EAAA,QAAAuC,EAAAvC,EAAA,QAAAwC,EAAAxC,EAAA,QAAAyC,EAAAzC,EAAA,QAAA0C,EAAA1C,EAAA,QAAA2C,EAAA3C,EAAA,QAAA4C,EAAA5C,EAAA,QAAA6C,EAAA7C,EAAA,QAgCA,IAAM8C,EAAM,CAAC,EAAG,iBACVC,EAAM,CAAC,EAAG,iCACVC,EAAM,CAAC,EAAG,2BACVC,EAAM,CAAC,QAAS,0BAA2B,EAAG,QAC9CC,EAAM,CAAC,EAAG,+BACVC,EAAM,CAAC,EAAG,6BACVC,EAAM,CAAC,kBAAmB,GAAI,OAAQ,SAAU,QAAS,iCAAkC,EAAG,aAAc,qBAAsB,qBAAsB,WAAY,QAAS,EAAG,QAChLC,EAAM,CAAC,kBAAmB,GAAI,OAAQ,SAAU,EAAG,oCAAqC,EAAG,aAAc,qBAAsB,qBAAsB,WAAY,SACjKC,EAAM,CAAC,UAAW,YAAa,YAAa,QAAS,EAAG,sBACxDC,EAAM,CAAC,IAAK,iDACZC,EAAO,CAAC,kBAAmB,GAAI,OAAQ,SAAU,EAAG,gCAAiC,EAAG,aAAc,qBAAsB,qBAAsB,WAAY,SAC9JC,EAAO,CAAC,IAAK,kDACbC,EAAO,CAAC,kBAAmB,GAAI,OAAQ,SAAU,QAAS,gCAAiC,EAAG,aAAc,qBAAsB,qBAAsB,WAAY,QAAS,EAAG,QAChLC,EAAO,CAAC,EAAG,2BACXC,EAAO,CAAC,EAAG,iCACXC,EAAO,CAAC,QAAS,iCAAkC,EAAG,QAAS,EAAG,QAClEC,EAAO,CAAC,EAAG,QACXC,EAAO,CAAC,EAAG,iCAAkC,EAAG,SAChDC,EAAO,CAAC,EAAG,QAAS,WAAY,aAAc,mBAC9CC,EAAO,CAAC,EAAG,QAAS,EAAG,QAAS,WAChCC,EAAO,CAAC,EAAG,SACjB,SAASC,EAA0DC,EAAIC,GAIrE,GAJqF,EAALD,IAC9EhE,EAAAkE,GAAsB,EAAG,aAAcJ,GACvC9D,EAAAmE,GAAc,GACdnE,EAAAoE,MACO,EAALJ,EAAQ,CACV,IAAMK,EAAqBJ,EAAIK,UAC/BtE,EAAAuE,GAAkB,QAASF,GAC3BrE,EAAAwE,GAAgB,GAChBxE,EAAAyE,GAAyBJ,IAE7B,SAASK,EAA6CV,EAAIC,GAAO,GAAS,EAALD,EAAQ,CACzE,IAAMW,EAAO3E,EAAA4E,KACb5E,EAAAkE,GAAsB,EAAG,iBAAkBP,GAC3C3D,EAAAkE,GAAsB,EAAG,aAAcN,GACvC5D,EAAA6E,GAAkB,kBAAmB,SAA4FC,GAA+E,OAArE9E,EAAA+E,GAAqBJ,GAAuB3E,EAAAgF,GAAqB,GAAmBC,gBAAgBH,EAAOI,SACtPlF,EAAAmF,GAAkB,EAAGpB,EAA2D,EAAG,EAAG,aAAcF,GACpG7D,EAAAoE,KACApE,EAAAoE,KACF,GAAS,EAALJ,EAAQ,CACV,IAAMoB,EAAUpF,EAAAgF,GAAqB,GACrChF,EAAAuE,GAAkB,QAASa,EAAQC,OACnCrF,EAAAwE,GAAgB,GAChBxE,EAAAuE,GAAkB,QAASa,EAA3BE,SAAAtF,CAA6C,WAAYoF,EAAzDG,SAAAvF,CAA2E,aAAcoF,EAAQI,MAAMC,mBACvGzF,EAAAwE,GAAgB,GAChBxE,EAAAuE,GAAkB,UAAWa,EAAQM,4BAEzC,SAASC,EAAkC3B,EAAIC,GAI7C,GAJ6D,EAALD,IACtDhE,EAAAkE,GAAsB,EAAG,OACzBlE,EAAAmE,GAAc,GACdnE,EAAAoE,MACO,EAALJ,EAAQ,CACV,IAAM4B,EAAU5F,EAAAgF,GAAqB,GACrChF,EAAAwE,GAAgB,GAChBxE,EAAAyE,GAAyBmB,EAAQN,WAErC,SAASO,EAA4B7B,EAAIC,GAQvC,GARuD,EAALD,IAChDhE,EAAAkE,GAAsB,EAAG,MAAOX,GAChCvD,EAAAkE,GAAsB,EAAG,MAAOV,GAChCxD,EAAAmE,GAAc,GACdnE,EAAAoE,KACApE,EAAAmF,GAAkB,EAAGT,EAA8C,EAAG,EAAG,iBAAkBjB,GAC3FzD,EAAAmF,GAAkB,EAAGQ,EAAmC,EAAG,EAAG,MAAOjC,GACrE1D,EAAAoE,MACO,EAALJ,EAAQ,CACV,IAAM8B,EAAU9F,EAAAgF,KAChBhF,EAAAwE,GAAgB,GAChBxE,EAAAyE,GAAyBqB,EAAQN,MAAMC,mBACvCzF,EAAAwE,GAAgB,GAChBxE,EAAAuE,GAAkB,OAAQuB,EAAQJ,0BAA0BK,OAAS,GACrE/F,EAAAwE,GAAgB,GAChBxE,EAAAuE,GAAkB,OAAQuB,EAAQJ,0BAA0BK,QAAU,IAE1E,IAAMC,EAAO,CAAC,kBAAmB,GAAI,OAAQ,SAAU,EAAG,iCAAkC,EAAG,aAAc,qBAAsB,qBAAsB,WAAY,SAC/JC,EAAO,CAAC,IAAK,8DACnB,SAASC,EAA+BlC,EAAIC,GAAO,GAAS,EAALD,EAAQ,CAC3D,IAAMmC,EAAOnG,EAAA4E,KACb5E,EAAAkE,GAAsB,EAAG,SAAU8B,GACnChG,EAAA6E,GAAkB,QAAS,SAAgEC,GAA8E,OAApE9E,EAAA+E,GAAqBoB,GAAuBnG,EAAAgF,KAAuCoB,cACxLpG,EAAAqG,KACArG,EAAAkE,GAAsB,EAAG,MAAOhB,GAChClD,EAAAsG,GAAiB,EAAG,OAAQL,GAC5BjG,EAAAoE,KACApE,EAAAoE,KACF,GAAS,EAALJ,EAAQ,CACV,IAAMuC,EAAUvG,EAAAgF,KAChBhF,EAAAuE,GAAkB,aAAcgC,EAAQf,MAAxCgB,eAAAxG,CAA8D,qBAAsBuG,EAApFE,2BAAAzG,CAAwH,qBAAxH,QAAAA,CAAuJ,WAAYuG,EAAQE,4BAC3KzG,EAAA0G,GAAmB,aAAcH,EAAQf,MAAMgB,iBAEnD,IAAMG,EAAO,CAAC,kBAAmB,GAAI,OAAQ,SAAU,EAAG,gCAAiC,EAAG,aAAc,qBAAsB,qBAAsB,WAAY,SAC9JC,EAAO,CAAC,IAAK,8DACnB,SAASC,EAAgC7C,EAAIC,GAAO,GAAS,EAALD,EAAQ,CAC5D,IAAM8C,EAAO9G,EAAA4E,KACb5E,EAAAqG,KACArG,EAAA+G,KACA/G,EAAAkE,GAAsB,EAAG,SAAUyC,GACnC3G,EAAA6E,GAAkB,QAAS,SAAiEC,GAA8E,OAApE9E,EAAA+E,GAAqB+B,GAAuB9G,EAAAgF,KAAuCgC,aACzLhH,EAAAqG,KACArG,EAAAkE,GAAsB,EAAG,MAAOhB,GAChClD,EAAAsG,GAAiB,EAAG,OAAQM,GAC5B5G,EAAAoE,KACApE,EAAAoE,KACF,GAAS,EAALJ,EAAQ,CACV,IAAMiD,EAAUjH,EAAAgF,KAChBhF,EAAAuE,GAAkB,aAAc0C,EAAQzB,MAAxC0B,cAAAlH,CAA6D,qBAAsBiH,EAAnFE,uBAAAnH,CAAmH,qBAAnH,QAAAA,CAAkJ,WAAYiH,EAAQE,wBACtKnH,EAAA0G,GAAmB,aAAcO,EAAQzB,MAAM0B,qCAE7CE,EACF,SAAAA,IAKIhH,KAAKiH,QAAU,IAAIpH,EAAAQ,EAInBL,KAAKqF,kBAAoB,kBAIzBrF,KAAKkH,cAAgB,YAIrBlH,KAAKmH,kBAAoB,gBAIzBnH,KAAKoG,eAAiB,aAItBpG,KAAK8G,cAAgB,YAIrB9G,KAAKoH,cAAgB,SAMpBC,EAAMnC,EAAUS,GACb,GAAc,GAAVA,GAA2B,GAAZT,EACf,MAAA,QAAeS,EAInB,IAAM2B,EAAaD,EAAOnC,EAM1B,OAAUoC,EAAa,EAAvB,OAHiBA,GALjB3B,EAAS4B,KAAKC,IAAI7B,EAAQ,IAMtB4B,KAAKE,IAAIH,EAAapC,EAAUS,GAChC2B,EAAapC,GACjB,OAA6CS,WAIzDqB,EAAiBzF,gBAAkB3B,EAAA4B,GAA0B,CAAEC,MAAOuF,EAAkBtF,QAAS,SAAAA,EAAkCC,GAAK,OAAO,IAAKA,GAAKqF,IAAwBpF,WAAY,SAK1KoF,EAAiBzF,gBAAkBP,OAAApB,EAAA4B,GAAAR,CAAmB,CAAEU,QAAS,SAAAA,IAAsC,OAAO,IAAIsF,GAAuBvF,MAAOuF,EAAkBpF,WAAY,cAajM,IAAM8F,EAA8B,CAEhCC,QAASX,EACTY,KAAM,CAAC,CAAC,IAAIhI,EAAAiI,EAAY,IAAIjI,EAAAkI,EAAYd,IACxCe,WAXJ,SAAAA,EAA6CC,GACzC,OAAOA,GAAc,IAAIhB,IAqBvBiB,EAAoB,OAWpBC,iBAGN,IAAMC,EAAoBnH,OAAAgB,EAAAoG,EAAApH,CAAcA,OAAAgB,EAAAqG,EAAArH,CAAiBkH,yBAMnDpG,qBAKF,SAAAA,EAAYsD,EAAOkD,GAAAA,IAAAA,EACfC,EAAAA,EAAAA,KAAAA,OAAAA,KACAvI,EAAKoF,MAAQA,EACbpF,EAAKsI,mBAAqBA,EAC1BtI,EAAKwI,WAAa,EAClBxI,EAAKyI,QAAU,EACfzI,EAAK0I,iBAAmB,GACxB1I,EAAK2I,eAAgB,EACrB3I,EAAK4I,uBAAwB,EAI7B5I,EAAKqH,KAAO,IAAIzH,EAAA+B,EAChB3B,EAAK6I,aAAezD,EAAM6B,QAAQ6B,UAAU,WAAA,OAGtC9I,EAAKsI,mBAAmBS,iBAhBfT,OAAAA,sBAqGnBU,SAAA,SAAAA,IACIhJ,KAAKiJ,cAAe,EACpBjJ,KAAKkJ,kCACLlJ,KAAKmJ,sBAKTC,YAAA,SAAAA,IACIpJ,KAAK6I,aAAaQ,iBAMtBC,SAAA,SAAAA,IACI,IAAKtJ,KAAKuJ,cACN,OAGJ,IAAMC,EAAoBxJ,KAAKyJ,UAC/BzJ,KAAKyJ,YACLzJ,KAAK0J,eAAeF,MAMxBG,aAAA,SAAAA,IACI,IAAK3J,KAAK4J,kBACN,OAGJ,IAAMJ,EAAoBxJ,KAAKyJ,UAC/BzJ,KAAKyJ,YACLzJ,KAAK0J,eAAeF,MAMxBxD,UAAA,SAAAA,IAEI,IAAKhG,KAAK4J,kBACN,OAGJ,IAAMJ,EAAoBxJ,KAAKyJ,UAC/BzJ,KAAKyJ,UAAY,EACjBzJ,KAAK0J,eAAeF,MAMxB5C,SAAA,SAAAA,IAEI,IAAK5G,KAAKuJ,cACN,OAGJ,IAAMC,EAAoBxJ,KAAKyJ,UAC/BzJ,KAAKyJ,UAAYzJ,KAAK6J,mBAAqB,EAC3C7J,KAAK0J,eAAeF,MAMxBI,gBAAA,SAAAA,IACI,OAAO5J,KAAKyJ,WAAa,GAAsB,GAAjBzJ,KAAKkF,YAMvCqE,YAAA,SAAAA,IAEI,IAAMO,EAAe9J,KAAK6J,mBAAqB,EAC/C,OAAO7J,KAAKyJ,UAAYK,GAAiC,GAAjB9J,KAAKkF,YAMjD2E,iBAAA,SAAAA,IACI,OAAK7J,KAAKkF,SAGHqC,KAAKwC,KAAK/J,KAAK2F,OAAS3F,KAAKkF,UAFzB,KAcfL,gBAAA,SAAAA,EAAgBK,GAIZ,IAEMsE,EAAoBxJ,KAAKyJ,UAC/BzJ,KAAKyJ,UAAYlC,KAAKyC,MAHHhK,KAAKyJ,UAAYzJ,KAAKkF,SAGAA,IAAa,EACtDlF,KAAKkF,SAAWA,EAChBlF,KAAK0J,eAAeF,MAMxBzC,qBAAA,SAAAA,IACI,OAAO/G,KAAKmF,WAAanF,KAAKuJ,iBAMlClD,yBAAA,SAAAA,IACI,OAAOrG,KAAKmF,WAAanF,KAAK4J,qBAQlCV,gCAAA,SAAAA,IACSlJ,KAAKiJ,eAILjJ,KAAKkF,WACNlF,KAAKiK,UAA2C,GAA/BjK,KAAKkK,gBAAgBvE,OAClC3F,KAAKkK,gBAAgB,GACrBjC,GAERjI,KAAKsF,0BAA4BtF,KAAKkK,gBAAgBC,SACS,IAA3DnK,KAAKsF,0BAA0B8E,QAAQpK,KAAKkF,WAC5ClF,KAAKsF,0BAA0B+E,KAAKrK,KAAKkF,UAG7ClF,KAAKsF,0BAA0BgF,KAAK,SAKnCjK,EAAGkK,GALgC,OAK1BlK,EAAIkK,IACdvK,KAAKsI,mBAAmBS,mBAQ5BW,eAAA,SAAAA,EAAeF,GACXxJ,KAAKqH,KAAKmD,KAAK,CACXhB,kBAAAA,EACAC,UAAWzJ,KAAKyJ,UAChBvE,SAAUlF,KAAKkF,SACfS,OAAQ3F,KAAK2F,iDArPH,OAAO3F,KAAKwI,2BAKhB1D,GACV9E,KAAKwI,WAAajB,KAAKC,IAAIxG,OAAAe,EAAA0I,EAAAzJ,CAAqB8D,GAAQ,GACxD9E,KAAKsI,mBAAmBS,gDAMb,OAAO/I,KAAKyI,wBAKhB3D,GACP9E,KAAKyI,QAAUzH,OAAAe,EAAA0I,EAAAzJ,CAAqB8D,GACpC9E,KAAKsI,mBAAmBS,kDAMX,OAAO/I,KAAKiK,0BAKhBnF,GACT9E,KAAKiK,UAAY1C,KAAKC,IAAIxG,OAAAe,EAAA0I,EAAAzJ,CAAqB8D,GAAQ,GACvD9E,KAAKkJ,4EAMe,OAAOlJ,KAAK0I,iCAKhB5D,GAChB9E,KAAK0I,kBAAoB5D,GAAS,IAAI4F,IAItCC,SAAAA,GAAAA,OAAK3J,OAAAe,EAAA0I,EAAAzJ,CAAqB2J,KAC1B3K,KAAKkJ,yEAMY,OAAOlJ,KAAK2I,8BAKhB7D,GACb9E,KAAK2I,cAAgB3H,OAAAe,EAAA6I,EAAA5J,CAAsB8D,kDAMlB,OAAO9E,KAAK4I,sCAKhB9D,GACrB9E,KAAK4I,sBAAwB5H,OAAAe,EAAA6I,EAAA5J,CAAsB8D,iBArGhCqD,UAoR3BrG,EAAa+I,eAAiBjL,EAAAkL,GAAyB,CAAEC,KAAMjJ,EAAckJ,UAAW,CAAC,CAAC,kBAAmBtJ,QAAS,SAAAA,EAA8BC,GAAK,OAAO,IAAKA,GAAKG,GAAclC,EAAAqL,GAAyBjE,GAAmBpH,EAAAqL,GAAyBrL,EAAAsL,KAAwBC,aAAc,SAAAA,EAAmCvH,EAAIC,EAAKuH,GAAoB,EAALxH,GACtVhE,EAAAyL,GAA0B/I,IACzBgJ,OAAQ,CAAEnG,SAAU,WAAYsE,UAAW,YAAa9D,OAAQ,SAAUT,SAAU,WAAYgF,gBAAiB,kBAAmBqB,aAAc,eAAgBC,qBAAsB,uBAAwBvG,MAAO,SAAWwG,QAAS,CAAEpE,KAAM,QAAUqE,SAAU,CAAC,gBAAiBC,SAAU,CAAC/L,EAAAgM,IAAoCC,OAAQ,GAAIC,KAAM,GAAIC,SAAU,SAAAA,EAA+BnI,EAAIC,GAAgB,EAALD,IACvZhE,EAAAkE,GAAsB,EAAG,MAAOvB,GAChC3C,EAAAkE,GAAsB,EAAG,MAAOtB,GAChC5C,EAAAmF,GAAkB,EAAGU,EAA6B,EAAG,EAAG,MAAOhD,GAC/D7C,EAAAkE,GAAsB,EAAG,MAAOpB,GAChC9C,EAAAkE,GAAsB,EAAG,MAAOnB,GAChC/C,EAAAmE,GAAc,GACdnE,EAAAoE,KACApE,EAAAmF,GAAkB,EAAGe,EAAgC,EAAG,EAAG,SAAUlD,GACrEhD,EAAAkE,GAAsB,EAAG,SAAUjB,GACnCjD,EAAA6E,GAAkB,QAAS,SAAuDC,GAAU,OAAOb,EAAI8F,iBACvG/J,EAAAqG,KACArG,EAAAkE,GAAsB,EAAG,MAAOhB,GAChClD,EAAAsG,GAAiB,EAAG,OAAQnD,GAC5BnD,EAAAoE,KACApE,EAAAoE,KACApE,EAAA+G,KACA/G,EAAAkE,GAAsB,GAAI,SAAUd,GACpCpD,EAAA6E,GAAkB,QAAS,SAAwDC,GAAU,OAAOb,EAAIyF,aACxG1J,EAAAqG,KACArG,EAAAkE,GAAsB,GAAI,MAAOhB,GACjClD,EAAAsG,GAAiB,GAAI,OAAQjD,GAC7BrD,EAAAoE,KACApE,EAAAoE,KACApE,EAAAmF,GAAkB,GAAI0B,EAAiC,EAAG,EAAG,SAAUvD,GACvEtD,EAAAoE,KACApE,EAAAoE,KACApE,EAAAoE,MACO,EAALJ,IACFhE,EAAAwE,GAAgB,GAChBxE,EAAAuE,GAAkB,QAASN,EAAI0H,cAC/B3L,EAAAwE,GAAgB,GAChBxE,EAAAyE,GAAyBR,EAAIuB,MAAMgC,cAAcvD,EAAI4F,UAAW5F,EAAIqB,SAAUrB,EAAI8B,SAClF/F,EAAAwE,GAAgB,GAChBxE,EAAAuE,GAAkB,OAAQN,EAAI2H,sBAC9B5L,EAAAwE,GAAgB,GAChBxE,EAAAuE,GAAkB,aAAcN,EAAIuB,MAApC+B,kBAAAvH,CAA6D,qBAAsBiE,EAAnFwC,2BAAAzG,CAAmH,qBAAnH,QAAAA,CAAkJ,WAAYiE,EAAIwC,4BAClKzG,EAAA0G,GAAmB,aAAczC,EAAIuB,MAAM+B,mBAC3CvH,EAAAwE,GAAgB,IAChBxE,EAAAuE,GAAkB,aAAcN,EAAIuB,MAApC8B,cAAAtH,CAAyD,qBAAsBiE,EAA/EkD,uBAAAnH,CAA2G,qBAA3G,QAAAA,CAA0I,WAAYiE,EAAIkD,wBAC1JnH,EAAA0G,GAAmB,aAAczC,EAAIuB,MAAM8B,eAC3CtH,EAAAwE,GAAgB,IAChBxE,EAAAuE,GAAkB,OAAQN,EAAI2H,wBAC7BQ,WAAY,CAAC/J,EAAAgK,EAAa/J,EAAAqI,EAAkBnI,EAAA/B,EAAmBgC,EAAAkI,EAAqBpI,EAAA9B,EAAkB4B,EAAAiK,EAAgBlK,EAAA2I,GAAmBwB,OAAQ,CAAC,q0BAAs0BC,cAAe,EAAGC,gBAAiB,0BAmD9/BxK,wBAENA,EAAmByK,YAAc1M,EAAA2M,GAAwB,CAAExB,KAAMlJ,IACjEA,EAAmB2K,cAAgB5M,EAAA6M,GAAwB,CAAE/K,QAAS,SAAAA,EAAoCC,GAAK,OAAO,IAAKA,GAAKE,IAA0B6K,UAAW,CAAChF,GAA8BiF,QAAS,CAAC,CAClM1K,EAAA2I,EACA1I,EAAA0I,EACAzI,EAAAoI,EACAnI,EAAAmI,kDC/mBZ/K,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAkN,IAAA,IAAAhN,EAAAJ,EAAA,QAAAqN,EAAArN,EAAA,QAAAsN,EAAAtN,EAAA,QAAAO,EAAAP,EAAA,QAAAuN,EAAAvN,EAAA,QAAAwN,EAAAxN,EAAA,QAmBO,IAAAoN,EAAA,WAAA,IAAMA,EAAN,WAKL,SAAAA,EACmBK,EACTC,EACqBC,GAFZF,KAAAA,WAAAA,EACTC,KAAAA,gBAAAA,EACqBC,KAAAA,WAAAA,EAPfnN,KAAAoN,WAAY,EACZpN,KAAAqN,SAAU,EACPrN,KAAAsN,WAAa,IAAI1N,EAAA+B,EAH/B,IAAA4L,EAAAX,EAAAjM,UAAA4M,EAWEvE,SAAA,SAAAA,IAAA,IAAAwE,EAAAxN,KACDgB,OAAA6L,EAAAY,EAAAzM,CAAkBhB,KAAKmN,YACrBnN,KAAKqN,QACPrN,KAAKkN,gBACFtM,QAAQZ,KAAKiN,WAAWS,eACxB3M,KACCC,OAAA8L,EAAAzM,EAAAW,CAAahB,MACbgB,OAAAjB,EAAAM,EAAAW,CAAOC,SAAAA,GAAAA,OAASA,EAAM0M,mBAAqB,KAC3C3M,OAAA+L,EAAA1M,EAAAW,CAAK,IAEN8H,UAAW7H,SAAAA,GACVjB,EAAKsN,WAAW9C,KAAKvJ,KAGzBjB,KAAKkN,gBACFtM,QAAQZ,KAAKiN,WAAWS,eACxB3M,KAAKC,OAAA8L,EAAAzM,EAAAW,CAAahB,OAClB8I,UAAW7H,SAAAA,GACVjB,EAAKsN,WAAW9C,KAAKvJ,KAIvBjB,KAAKoN,WACPpN,KAAKsN,WAAW9C,KAAK,CAAEoD,gBAAgB,EAAMD,kBAAmB,KAlCjEJ,EAuCLnE,YAAA,SAAAA,MAvCK,OAAAwD,EAAA,UCwBPA,EAAoBiB,eAAiBjO,EAAAkO,GAAqB,CAAE/C,KDxB/C6B,EAAmB5B,UAAA,CAAA,CAAA,GAAA,aAAA,KAAAtJ,QAAA,SAAAA,EAAAC,GAAA,OAAA,IAAAA,GAAnBiL,GAAmBhN,EAAAqL,GAAArL,EAAAmO,GAAAnO,EAAAqL,GAAA+B,EAAA3M,GAAAT,EAAAqL,GAQpBrL,EAAAoO,KAAW1C,OAAA,CAAA8B,UAAA,YAAAC,QAAA,WAAA5B,QAAA,CAAA6B,WAAA,kBARhB,0JEIA,IAAAW,EAAA,WAAA,IAAMC,EAAN,SAAAA,aCXPA,EAAkB5B,YAAc6B,EAAA5B,GAAoB,CAAExB,KDWzCmD,ICVbA,EAAkB1B,cAAgB2B,EAAA1B,GAAoB,CAAE/K,QAAS,SAAAA,EAAmCC,GAAK,OAAO,IAAKA,GDUxGuM,IAAiBvB,QAAA,CAZnB,CACPyB,EAAAxD,EACAyD,EAAAzD,EACA0D,EAAA/D,EACAgE,EAAAhE,EACAiE,EAAAjE,EACAkE,EAAAlE,EACAmE,EAAArO,QAKG,GEvBPb,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAuO,2CAAAzO,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAiP,IAAA,IAAAC,EAAApP,EAAA,QAAAqP,EAAArP,EAAA,QCMO,IAAMsP,EAAWC,OAAO,YAMlBJ,EAAmBK,SAAnBL,EAAmBK,GAAAA,YACFC,IAAxBD,EAAUF,IAYT,SAAyCE,GAC9CA,EAAUF,GAAY,IAAIF,EAAAvO,EAAiBC,SAAAA,GAGzC,IAAM4O,EAAiBF,EAAU5F,YACjC,GAAsB,MAAlB8F,EAGF,MAAM,IAAIC,MAAM,2EAYlB,OATAH,EAAU5F,YAAc,WAEtB9I,EAASgB,OAEThB,EAAS8O,WAETF,EAAeG,KAAKL,IAGdM,SAAAA,GAAAA,OAAYN,EAAUF,QAAYG,KApBvC,CAV6BD,GAI3BhO,OAAA6N,EAAAxO,EAAAW,CAAagO,EAAUF,wHCXzB,IAAAS,EAAA,WAAA,IAAMC,EAAN,WAAA,SAAAA,KAAA,IAAAC,EAAAD,EAAA7O,UAAA8O,EAILC,SAAA,SAAAA,EAASC,EAAaC,IAAAA,SAeMD,GAC5B,OAAOE,EAA4BF,IAOrC,SAAkCA,GAChC,IAAMG,EAASC,SAASC,cAAc,QAItC,OAHAF,EAAOG,aAAa,MAAO,cAC3BH,EAAOI,UAAUC,IAAIC,EAAmBT,IACxCI,SAASM,KAAKC,YAAYR,GACnBA,EALT,CAPsEH,IAhB9CC,CACCD,GAAKM,aAAa,OAAQL,IAL5CH,EAWLc,YAAA,SAAAA,EAAYZ,GACV,IAAMa,EAAsBX,EAA4BF,GACpDa,GACFT,SAASM,KAAKI,YAAYD,IAdzB,OAAAhB,EAAA,UCgBPA,EAAoBjO,gBAAkB4M,EAAA3M,GAAsB,CAAEC,MDhBjD+N,EAAmB9N,QAAA,SAAAA,EAAAC,GAAA,OAAA,IAAAA,GAAnB6N,IAAmB5N,WADN8M,EAAArO,MACnB,GAuBP,SAASwP,EAA4BF,GACnC,OAAOI,SAASM,KAAKK,cAAdX,0BAAsDK,EAAmBT,IAWlF,SAASS,EAAmBT,GAC1B,MAAA,iBAAwBA,8EE5C1BnQ,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAiR,IAeA,IAAMrO,EAAM,CAAC,kBAAmB,GAAI,aAAc,kBAAmB,WAAY,KAAM,EAAG,qBACpFC,EAAM,CAAC,aAAc,SAAU,EAAG,6BAClCC,EAAM,CAAC,YAAa,WACpBC,EAAM,CAAC,OAAQ,KACfC,EAAM,CAAC,EAAG,QAAS,WACnBC,EAAM,CAAC,gBAAiB,GAAI,EAAG,SAC/BC,EAAM,CAAC,EAAG,+BACVC,EAAM,CAAC,QAAS,4BAA6B,EAAG,QAChDC,EAAM,CAAC,EAAG,gCACVC,EAAM,CAAC,EAAG,6BAChB,SAAS6N,EAAyDhN,EAAIC,GAAgB,EAALD,ICfvEuK,EAAArK,GAAA,EAAA,WAAAf,GAA8EoL,EAAApK,GAAA,EAAA,gBAAYoK,EAAAnK,MDoBpG,SAAS6M,EAA8CjN,EAAIC,GAAO,GAAS,EAALD,EAAQ,CAC1E,IAAMkN,EAAO3C,EAAA3J,KCxBb2J,EAAArK,GAAA,EAAA,iBACEqK,EAAArK,GAAA,EAAA,MAAAnB,GAAmBwL,EAAA1J,GAAA,QAAA,SAAAC,GAAAyJ,EAAAxJ,GAAAmM,GAAA,IAAAC,EAAAlN,EAAAK,UAAA,OAAAiK,EAAAvJ,KAAAoM,YAAAD,EAAApB,OACjBxB,EAAArK,GAAA,EAAA,MAAAlB,GACEuL,EAAApJ,GAAA,EAAA6L,EAAA,EAAA,EAAA,WAAA/N,GACAsL,EAAArK,GAAA,EAAA,MAAAhB,GAAAqL,EAAA8C,KAAkF9C,EAAAnK,KACpFmK,EAAAnK,KACFmK,EAAAnK,KACFmK,EAAAnK,KD6BF,GAAS,EAALJ,EAAQ,CACV,IAAMmN,EAAUlN,EAAIK,UACdgN,EAAS/C,EAAAvJ,KCnCmCuJ,EAAA/J,GAAA,GAAA+J,EAAAhK,GAAA,OAAA+M,EAAAC,eAAAJ,EAAApB,KACFxB,EAAA/J,GAAA,GAAA+J,EAAAiD,GAAAjD,EAAAkD,IAAAlD,EAAAmD,GAAA,aAAAP,EAAAjM,MAAAyM,SAAApD,EAAAqD,MCG7C,IAAAb,EAAA,WAAA,IAAMc,EAAN,WAML,SAAAA,EAAoBC,EAAqBC,GAArBD,KAAAA,MAAAA,EAAqBC,KAAAA,aAAAA,EALR3R,KAAA4R,YAAa,EAC9C5R,KAAA6R,UAAYC,EAAA7F,EAFP,IAAA8F,EAAAN,EAAA9Q,UAAAoR,EAQLf,YAAA,SAAAA,EAAYgB,GACVhS,KAAK0R,MAAMO,SAAS,IAAIH,EAAAlH,EAAYoH,KATjCD,EAYL/I,SAAA,SAAAA,IAAA,IAAAkJ,EAAAlS,KAEEA,KAAKmS,iBAAiBpR,KAAKC,OAAAoR,EAAAC,EAAArR,CAAahB,OAAO8I,UAAUkJ,SAAAA,GACvDhS,EAAKsS,aAAaN,MAfjBD,EAmBL3I,YAAA,SAAAA,MAnBK2I,EAqBLO,aAAA,SAAAA,EAAaN,GAEX,GADAO,QAAQC,IAARD,cAA0BP,GACtBA,EAAW,CACbhS,KAAKmR,aAAea,EACpB,IAAMS,EAAQzS,KAAK6R,UAAUa,IAAIV,GAC7BS,EAAME,UACR3S,KAAK2R,aAAapB,YAAY,SAE9BvQ,KAAK2R,aAAajC,SAAS,QAA3B1P,iBAAqDyS,EAAM7C,QA7B5D,OAAA6B,EAAA,UFsEPA,EAAqB5G,eAAiBsD,EAAArD,GAAqB,CAAEC,KEtEhD0G,EAAoBzG,UAAA,CAAA,CAAA,iBAAAtJ,QAAA,SAAAA,EAAAC,GAAA,OAAA,IAAAA,GAApB8P,GAAoBtD,EAAAlD,GAAA2H,EAAA1H,GAAAiD,EAAAlD,GAAAsE,KAAApE,aAAA,SAAAA,EAAAvH,EAAAC,EAAAuH,GAAA,EAAAxH,GFuEzBuK,EAAA0E,GAAmB,GACZ,EAALjP,GACFuK,EAAA7H,GAAe,cAAezC,EAAI+N,aACjC/F,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAAuCnI,EAAIC,GAY5E,GAZ4F,EAALD,ICxF7FuK,EAAArK,GAAA,EAAA,SAAAxB,GACE6L,EAAArK,GAAA,EAAA,YAAUqK,EAAApK,GAAA,EAAA,qBAAiBoK,EAAAnK,KAC7BmK,EAAAnK,KAGAmK,EAAArK,GAAA,EAAA,WAAAvB,EAAAC,GACE2L,EAAArK,GAAA,EAAA,gBAAArB,GACE0L,EAAApJ,GAAA,EAAA8L,EAAA,EAAA,EAAA,gBAAAnO,GD0FIyL,EAAA2E,GAAU,EAAG,YClFnB3E,EAAAnK,KACFmK,EAAAnK,MDoFe,EAALJ,EAAQ,CACV,IAAMmP,EAAM5E,EAAA6E,GAAe,GCrGX7E,EAAAhK,GAAA,oBAAA4O,GAOL5E,EAAA/J,GAAA,GAAA+J,EAAAhK,GAAA,UAAAgK,EAAA8E,GAAA,EAAA,EAAApP,EAAAgO,cDkGV7F,WAAY,CAACqC,EAAA9D,EAAckE,EAAApO,EAAekO,EAAA3D,EAAmB0D,EAAAjO,EAAYkO,EAAA9O,EAAa+O,EAAAnO,EAAgB+N,EAAAlC,EAAYsC,EAAA5D,EAAgB2D,EAAAlO,EAAgB+N,EAAAnC,GAAUiH,MAAO,CAAC9E,EAAA+E,GAAkBhH,OAAQ,CAAC,i0BAAo0BC,cAAe,EAAGC,gBAAiB,IExFpgC+G,EAAAC,WAAA,CAAxCrS,OAAA4R,EAAAO,EAAAnS,CAAO8Q,EAAAqB,EAAgBG,iBF2FtBF,EAAAG,WAAmB,cAAevS,SACnCyQ,EAAqB9Q,UAAW,wBAAoB,KE/FhD,0CCdPnB,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA8T,IAAA,IAAAC,EAAAjU,EAAA,QAAAkU,EAAAlU,EAAA,QAAAmU,EAAAnU,EAAA,QAGO,SAASgU,EAASI,EAAYC,GAAY,GAAxBD,SAAwB,EAAA,CAAxBA,EAAS,EAAe,GAAZC,SAAY,EAAA,CAAZA,EAAYH,EAAArT,EAO7C,QANKW,OAAA2S,EAAAtT,EAAAW,CAAU4S,IAAWA,EAAS,KAC/BA,EAAS,GAERC,GAA2C,mBAAvBA,EAAUC,WAC/BD,EAAYH,EAAArT,GAET,IAAIoT,EAAApT,EAAW0T,SAAAA,GAAAA,OAClBA,EAAW5D,IAAI0D,EAAUC,SAAS7B,EAAU2B,EAAQ,CAAEG,WAAAA,EAAYC,QAAS,EAAGJ,OAAAA,KACvEG,IAGf,SAAS9B,EAASgC,GAAAA,IACNF,EAAgCE,EAAlCF,WAAcC,EAAoBC,EAAtBD,QAAWJ,EAAWK,EAAbL,OAC3BG,EAAWzS,KAAK0S,GAChBhU,KAAK8T,SAAS,CAAEC,WAAAA,EAAYC,QAASA,EAAU,EAAGJ,OAAAA,GAAUA,2GCXzD,IAAAM,EAAA,WAAA,IAAMC,EAAN,SAAAA,aCDPA,EAAuB7H,YAAc6B,EAAA5B,GAAoB,CAAExB,KDC9CoJ,ICAbA,EAAuB3H,cAAgB2B,EAAA1B,GAAoB,CAAE/K,QAAS,SAAAA,EAAwCC,GAAK,OAAO,IAAKA,GDAlHwS,IAAsBxH,QAAA,CAHxB,CAACyH,EAAA/T,EAAiBgU,WAAW,CAAEC,oBAAoB,KAClDF,EAAA/T,OAEL,GAHK+T,EAAA/T,EAAiBgU,WAAW,CAAEC,oBAAoB,oBEG9D,IAAMC,EAAoE,CACxEC,iBAAiB,EACjBC,kBAAkB,GAOb,IAAAC,EAAA,WAAA,IAAMC,EAAN,SAAAA,aCPPA,EAA6BrI,YAAc6B,EAAA5B,GAAoB,CAAExB,KDOpD4J,ICNbA,EAA6BnI,cAAgB2B,EAAA1B,GAAoB,CAAE/K,QAAS,SAAAA,EAA8CC,GAAK,OAAO,IAAKA,GDM9HgT,IAA4BjI,UAF5B,CAAC,CAAE/E,QAASiN,EAAAvU,EAA0BwU,SAAUN,IAAmC5H,QAAA,CADpFiI,EAAAhK,OAGL,GEEAkK,EAAA,WAAA,IAAMC,EAAN,SAAAA,aCTPA,EAAazI,YAAc6B,EAAA5B,GAAoB,CAAExB,KDSpCgK,ICRbA,EAAavI,cAAgB2B,EAAA1B,GAAoB,CAAE/K,QAAS,SAAAA,EAA8BC,GAAK,OAAO,IAAKA,GDQ9FoT,IAAYpI,QAAA,CAVd,CAACyB,EAAAxD,GAERwD,EAAAxD,EACAkH,EAAArH,EACAuK,EAAAC,EACAnD,EAAAoD,EACAhB,EACAQ,OAGG,+BEbP,IAEMS,EAA+B,CACnCC,MAAO,CACLC,UAAW,MAEbC,QAAS,CACPD,UAAW,KACXE,eAAgB,WAChBC,cAAe,KACfC,mBAAoB,cAQjB,IAAAC,EAAA,WAAA,IAAMC,EAAN,SAAAA,aCLPA,EAAyBrJ,YAAc6B,EAAA5B,GAAoB,CAAExB,KDKhD4K,ICJbA,EAAyBnJ,cAAgB2B,EAAA1B,GAAoB,CAAE/K,QAAS,SAAAA,EAA0CC,GAAK,OAAO,IAAKA,GDItHgU,IAAwBjJ,UAFxB,CAAC,CAAE/E,QAASiO,EAAAnL,EAAkBoK,SAAUM,GAAgB,CAAExN,QAASiO,EAAAV,EAAiBL,SAAU,UAAUlI,QAAA,CAhB7FkJ,EAAAjL,EAAqBgL,EAAA3J,OAkBtC,OElBe6J,aAKpB,SAAAA,EACqCC,EACzBC,GADyBD,KAAAA,KAAAA,EACzBC,KAAAA,UAAAA,EAEVhW,KAAKiW,MAAQF,EAAKE,MAClBjW,KAAKkW,OAASH,EAAKI,4BAKrBnN,SAAA,SAAAA,IACEhJ,KAAKoW,UAAUpW,KAAKkW,WAGtBG,OAAA,SAAAA,IACErW,KAAKgW,UAAUM,MAAMtW,KAAKuW,WAAWzR,wHChBzC,IAAMxC,EAAM,CAAC,UCMN,IAAAkU,EAAA,WAAA,IAAeC,EAAf,WAwBL,SAAAA,EAAsBC,GAAAA,KAAAA,cAAAA,EAtBtB1W,KAAA2W,WAAa,IAAIC,EAAA1L,EAA4B,IAC7ClL,KAAA6W,UAAY,IAAIC,EAAAlM,GAAwB,EAAO,IAQtC5K,KAAAiW,MAAiB,KACjBjW,KAAA+W,aAAwB,EACxB/W,KAAAgX,kBAA6B,EAC7BhX,KAAAiX,kBAA6B,EAC7BjX,KAAAkX,cAAyB,EACzBlX,KAAAmX,aAAwB,UACxBnX,KAAAoX,aAAwB,SAQ/BpX,KAAKqX,SAAWX,EAAcW,SAzB3B,IAAAC,EAAAb,EAAA9V,UAAA2W,EA4BLtO,SAAA,SAAAA,IAAA,IAAAuO,EAAAvX,KACEA,KAAK6W,UAAY,IAAIC,EAAAlM,EAAwB5K,KAAKkX,cAAgB,EAAG,IAErElX,KAAKwX,SAAS1O,YACV9I,KAAKyX,kBACPzX,KAAK2W,WAAWc,gBAAkBzX,KAAKyX,iBAIrCzX,KAAKkX,cAAgB,GAEvBlX,KAAK6W,UAAUa,QACZ3W,KAECC,OAAA2W,EAAAtX,EAAAW,CAAQ4W,SAAAA,GAAAA,OAAiCA,EAAGC,MAAMlS,OAAS,IAC3D3E,OAAA2W,EAAAtX,EAAAW,CAAOsO,SAAAA,GAAAA,OAAKtP,EAAK6W,UAAUiB,SAASnS,OAAS3F,EAAKkX,gBAClDlW,OAAA8Q,EAAAO,EAAArR,CAAahB,OAEd8I,UAAUwG,SAAAA,GAAAA,OAAKtP,EAAK6W,UAAUkB,SAAS/X,EAAK6W,UAAUiB,SAASE,YA9CjEV,EA2DLlO,YAAA,SAAAA,MA3DKkO,EA6DLW,gBAAA,SAAAA,IAGEjY,KAAK2W,WAAWrM,KAAOtK,KAAKsK,KAC5BtK,KAAK2W,WAAWuB,UAAYlY,KAAKkY,WAjE9BZ,EAoELa,QAAA,SAAAA,EAAQC,GACN,OAAOpY,KAAK0W,cAAcyB,QAAQC,IArE/Bd,EAAA,UAwEL,SAAAe,EAAOC,GAAAA,IAAAA,EAAAA,KACL,OAAOtY,KAAK0W,cAAL1W,UAA0BsY,EAAKF,IAAIrX,KAAKC,OAAAuX,EAAAlY,EAAAW,CAAUsO,SAAAA,GAAAA,OAAKtP,EAAKwX,aAzEhEF,EA4ELkB,eAAA,SAAAA,EAAetC,EAAiBkC,GAAAA,IAAAA,EAAAA,KAC9B,OAAIA,EACKpY,KAAK0W,cAAc+B,IAAIL,EAAIlC,GAAQnV,KAAKC,OAAAuX,EAAAlY,EAAAW,CAAUsO,SAAAA,GAAAA,OAAKtP,EAAKwX,YAE5DxX,KAAK0W,cAAcgC,KAAKxC,GAAQnV,KAAKC,OAAAuX,EAAAlY,EAAAW,CAAUsO,SAAAA,GAAAA,OAAKtP,EAAKwX,aAhF/DF,EAuFLqB,QAAA,SAAAA,IACE,OAAO3Y,KAAK0W,cAAckC,UAxFvBtB,EA2FKE,OAAA,SAAAA,IAAA,IAAAqB,EAAA7Y,KACR,OAAOA,KAAK2Y,UAAU5X,KACpBC,OAAA0J,EAAArK,EAAAW,CAAI8X,SAAAA,GACF9Y,EAAK2W,WAAa,IAAIC,EAAA1L,EAA4B4N,GAClD9Y,EAAK2W,WAAWrM,KAAOtK,EAAKsK,KAC5BtK,EAAK2W,WAAWuB,UAAYlY,EAAKkY,cAhGlCZ,EAwGLyB,0BAAA,SAAAA,IAAA,IAAAC,EAAAhZ,KACE,OAAOA,KAAK2W,WAAWsC,aAAaC,MAAMnD,SAAAA,GAAAA,OAAQ/V,EAAK6W,UAAUsC,WAAWpD,MAzGzEuB,EA6GL8B,sBAAA,SAAAA,IACE,OACEpZ,KAAK6W,UAAUwC,YACfrZ,KAAK+Y,6BACL/Y,KAAK6W,UAAUiB,SAASnS,QAAU3F,KAAK2W,WAAWsC,aAAatT,QAjH9D2R,EAyHLgC,4BAAA,SAAAA,IACE,OAAOtZ,KAAK6W,UAAUwC,cAAgBrZ,KAAK+Y,8BAAgC/Y,KAAK2W,WAAWsC,aAAatT,SA1HrG2R,EA8HLiC,aAAA,SAAAA,IAAA,IAAAC,EAAAxZ,KACMA,KAAKoZ,wBACPpZ,KAAK6W,UAAU4C,QAEfzZ,KAAK2W,WAAWsC,aAAa5X,QAAQ0U,SAAAA,GAAAA,OAAQ/V,EAAK6W,UAAU6C,OAAO3D,MAlIlEuB,EAsILqC,YAAA,SAAAA,EAAYC,GAEVA,GADAA,EAAcA,EAAYC,QACAC,cAC1B9Z,KAAK2W,WAAWoD,OAASH,GAzItBtC,EA2JL0C,UAAA,SAAAA,EAAU9D,GACJlW,KAAKkX,cAAgB,IACvBlX,KAAK6W,UAAUoD,OAAO/D,GAClBlW,KAAK6W,UAAUsC,WAAWjD,GAC5BlW,KAAKka,YAAYhE,GAEjBlW,KAAKka,iBAAYjL,KAjKlBqI,EAsKL6C,kBAAA,SAAAA,EAAkBC,GAChB,OAAOA,EAAOC,mBAAmBC,OAAS,GAvKvChD,EA8KL4C,YAAA,SAAAA,EAAYhE,KA9KPoB,EAgLLiD,uBAAA,SAAAA,EAAuBC,EAAQC,GAC7BA,EAAMC,kBACND,EAAME,2BACNH,EAAOI,SAAWJ,EAAOI,SAnLtBtD,EAsLKuD,aAAA,SAAAA,EAAaC,GAErB,OADiB7F,SAAAA,GAAAA,MAAkB,iBAANA,GAAkBA,aAAa8F,OAA3C9F,CACD6F,GAAQ9Z,OAAAga,EAAA3a,EAAAW,CAAS8Z,GAAQA,GAxLtCG,EAAAxE,EAAA,CAAA,CAAA9G,IAAA,mBAAA+C,IAAA,SAAAA,IA8IH,IAAIwI,EAAmBlb,KAAKmb,QACzBpB,OAAOS,SAAAA,GAAAA,OAAUA,EAAOI,UACxBlQ,IAAI0Q,SAAAA,GAAAA,OAAKA,EAAEC,WAQd,OANIrb,KAAKkX,cAAgB,GACvBgE,EAAiBI,QAAQtb,KAAKoX,cAE5BpX,KAAKiX,mBACPiE,EAAmBA,EAAiBK,OAAOvb,KAAKmX,eAE3C+D,MAxJJ,OAAAzE,EAAA,UD+IPA,EAAkB+E,UAAYrN,EAAAsN,GAAgB,CAAEC,UAAW,SAAAA,EAAU9X,EAAIC,GAKjE,IAAI8X,EAL6E,EAAL/X,IAC5EuK,EAAAyN,GC3IK1D,EAAA7X,GAAc,GD4InB8N,EAAAyN,GC3IKtR,EAAAjK,GAAS,GD4Id8N,EAAAyN,GAAqBtZ,GAAK,IACnB,EAALsB,IAEFuK,EAAA0N,GAAmBF,EAAKxN,EAAA2N,QAAuBjY,EAAIqU,UAAYyD,EAAGI,OAClE5N,EAAA0N,GAAmBF,EAAKxN,EAAA2N,QAAuBjY,EAAIyG,KAAOqR,EAAGI,OAC7D5N,EAAA0N,GAAmBF,EAAKxN,EAAA2N,QAAuBjY,EAAImY,UAAYL,EAAGI,aCvJnE,+FCHA,YAAeE,aAOpB,SAAAA,EAAsBC,GAAAA,KAAAA,WAAAA,EANHlc,KAAAmc,QAAUC,EAAAA,EAAYC,aAC/Brc,KAAAsc,eAAiB,IAAIC,EAAAA,GAAyB,GACjDvc,KAAAqX,SAAWrX,KAAKsc,eAAexb,mCAMtCqX,QAAA,SAAAA,EAAQC,GAEN,OAAOpY,KAAKkc,WAAWxJ,IAAU1S,KAAKmc,QAA/Bnc,IAA0CA,KAAKwc,WAA/Cxc,IAA6DoY,GAAMrX,KACxEC,OAAAyb,EAAApc,EAAAW,CAAWhB,KAAK0c,iBAMpBC,QAAA,SAAAA,EAAQ5C,EAAgB6C,EAAgBC,EAAUC,GAAO,IAAAC,EAAA/c,KAAA,GAAjC4c,SAAiC,EAAA,CAAjCA,EAAQ,OAAyB,GAAjBC,SAAiB,EAAA,CAAjBA,EAAO,EAAU,GAAPC,SAAO,EAAA,CAAPA,EAAO,IAEvD,OADA9c,KAAKsc,eAAehb,MAAK,GAClBtB,KAAKkc,WACTxJ,IAAY1S,KAAKmc,QADbnc,IACwBA,KAAKwc,WAAc,CAC9CQ,QAAQ,IAAIC,EAAA/H,GACTgI,IAAI,SAAU,eACdA,IAAI,QAASN,GACbM,IAAI,OAAQL,EAAKM,YACjBD,IAAI,OAAQJ,EAAKK,cAErBpc,KACCC,OAAAoc,EAAA/c,EAAAW,CAAM,GACNA,OAAAyb,EAAApc,EAAAW,CAAWhB,KAAK0c,aAChB1b,OAAAqc,EAAAhd,EAAAW,CAAS,WAAA,OAAMhB,EAAKsc,eAAehb,MAAK,SAK9CsX,OAAA,SAAAA,IAAA,IAAA0E,EAAAtd,KAEE,OADAA,KAAKsc,eAAehb,MAAK,GAClBtB,KAAKkc,WAAWxJ,IAAY1S,KAAKmc,QAAjCnc,IAA4CA,KAAKwc,YAAczb,KACpEC,OAAAoc,EAAA/c,EAAAW,CAAM,GACNA,OAAAyb,EAAApc,EAAAW,CAAWhB,KAAK0c,aAChB1b,OAAAqc,EAAAhd,EAAAW,CAAS,WAAA,OAAMhB,EAAKsc,eAAehb,MAAK,mBAI5C,SAAA+W,EAAOD,GAAAA,IAAAA,EAAAA,KAEL,OADApY,KAAKsc,eAAehb,MAAK,GAClBtB,KAAKkc,WAALlc,UAA0BA,KAAKmc,QAA/Bnc,IAA0CA,KAAKwc,WAA/Cxc,IAA6DoY,GAAMrX,KACxEC,OAAAyb,EAAApc,EAAAW,CAAWhB,KAAK0c,aAChB1b,OAAAqc,EAAAhd,EAAAW,CAAS,WAAA,OAAMhB,EAAKsc,eAAehb,MAAK,SAI5CoX,KAAA,SAAAA,EAAKxC,GAAAA,IAAAA,EAAAA,KAEH,OADAlW,KAAKsc,eAAehb,MAAK,GAClBtB,KAAKkc,WAAWxD,KAAQ1Y,KAAKmc,QAA7Bnc,IAAwCA,KAAKwc,WAActG,GAAQnV,KACxEC,OAAAyb,EAAApc,EAAAW,CAAWhB,KAAK0c,aAChB1b,OAAAqc,EAAAhd,EAAAW,CAAS,WAAA,OAAMhB,EAAKsc,eAAehb,MAAK,SAI5CmX,IAAA,SAAAA,EAAIL,EAAqBlC,GAAAA,IAAAA,EAAAA,KAGvB,OAFA3D,QAAQC,IAAI0D,GACZlW,KAAKsc,eAAehb,MAAK,GAClBtB,KAAKkc,WAAWzD,IAAOzY,KAAKmc,QAA5Bnc,IAAuCA,KAAKwc,WAA5Cxc,IAA0DoY,EAAMlC,GAAQnV,KAC7EC,OAAAyb,EAAApc,EAAAW,CAAWhB,KAAK0c,aAChB1b,OAAAqc,EAAAhd,EAAAW,CAAS,WAAA,OAAMhB,EAAKsc,eAAehb,MAAK,SAIlCob,YAAA,SAAAA,EAAYa,GAGpB,IAAIC,EAeJ,OAbEA,EADmB,iBAAVD,EACMA,EAEXA,EAAMA,iBAAiBE,WAAvBF,sBAEmCA,EAAMA,MAAMG,QAF/CH,yBAMsCA,EAAMI,OAN5CJ,eAMiEA,EAAMG,QAG7EnL,QAAQgL,MAAMA,GAEPvc,OAAA4c,EAAAvd,EAAAW,CAAWwc,MAGVK,cAAA,SAAAA,EAAcC,GACtB,IAAMC,EAAyBC,KAAKrd,UAAUsd,OAC9CD,KAAKrd,UAAUsd,OAAS,WACtB,OAAOjd,OAAAkd,EAAA7d,EAAAW,CAAOhB,KAAM,eAGtB,IAAMme,EAAWC,KAAKC,UAAUP,GAGhC,OADAE,KAAKrd,UAAUsd,OAASF,EACjBI,mBC9GWG,EAGpB,SAAAA,EAAYC,GACVvd,OAAOwd,OAAOxe,KAAMue,QAIXE,EAQX,SAAAA,EAAmBF,GAAAA,IAAAA,EAAAA,KANVve,KAAA0e,OAAS1e,KAAKqb,SAChBrb,KAAA4a,SAAU,EAGR5a,KAAA2e,UAAazI,SAAAA,GAAAA,OAAcA,EAAOlW,EAAKqb,WAG9Cra,OAAOwd,OAAOxe,KAAMue,ICnBxB/e,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAoV,IAAAtV,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAwU,IAAA1U,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAgV,IAAAlV,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAgW,IAAAlW,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAoW,IAAAtW,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA8W,IAAAhX,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAuc,IAAAzc,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA4e,IAAA9e,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA+e,2CAAAjf,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAkf,IAAA,IAAAC,EAAArf,EAAA,QCCO,SAASof,EAAM9Z,GAClB,OAAQga,SAAAA,GAAAA,OAAWA,EAAOC,KAAK,IAAIC,EAAcla,SAE/Cka,aACF,SAAAA,EAAYla,GACR9E,KAAK8E,MAAQA,sBAEjBuK,KAAA,SAAAA,EAAK0E,EAAY+K,GACb,OAAOA,EAAOhW,UAAU,IAAImW,EAAgBlL,EAAY/T,KAAK8E,yBAG/Dma,qBACF,SAAAA,EAAYC,EAAapa,GAAAA,IAAAA,EACrByD,EAAAA,EAAAA,KAAAA,KAAM2W,IAAN3W,KACAvI,EAAK8E,MAAQA,EAFQA,OAAAA,sBAIzBqa,MAAA,SAAAA,EAAM/D,GACFpb,KAAKkf,YAAY5d,KAAKtB,KAAK8E,kBANL+Z,EAAAxe,0CCZ9Bb,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA0f,IAAA,IAAAxf,EAAAJ,EAAA,QAQO,IAAA4f,EAAA,WAAA,IAAMA,EAAN,WAAA,SAAAA,KAAA,IAAAC,EAAAD,EAAAze,UAAA0e,EACLC,UAAA,SAAAA,EAAUC,EAAsBlE,GAE9B,IAAKkE,EACH,OAAO,KAGT,IAAMC,EAAoBD,EAAWE,OAAO,SAACC,EAAUC,GAAX,OACrCD,EAASC,EAAQtE,IAGpBqE,EAASC,EAAQtE,IAAWhR,KAAKsV,GAFjCD,EAASC,EAAQtE,IAAa,CAACsE,GAK1BD,GACN,IAGH,OAAO1e,OAAO4e,KAAKJ,GAAmB9U,IAAIiF,SAAAA,GAAAA,MAAO,CAC/CA,IAAAA,EACA7K,MAAO0a,EAAkB7P,OApBxB,OAAAyP,EAAA,UCqBPA,EAAYS,UAAYjgB,EAAAkgB,GAAgB,CAAEC,KAAM,UAAWhV,KDrB9CqU,EAAW1d,QAAA,SAAAA,EAAAC,GAAA,OAAA,IAAAA,GAAXyd,IAAWY,MAAA,MAAjB,0CERPxgB,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAugB,KAAAzgB,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAwgB,KAAA,IAAAC,EAAA3gB,EAAA,QAAA4gB,EAAA5gB,EAAA,QAAA6gB,EAAA7gB,EAAA,QAAA8gB,EAAA9gB,EAAA,QAAA+gB,EAAA/gB,EAAA,QAAAghB,EAAAhhB,EAAA,QAAAihB,EAAAjhB,EAAA,QAAAkhB,EAAAlhB,EAAA,QAAAmhB,EAAAnhB,EAAA,QAAAohB,EAAAphB,EAAA,QAAAqhB,EAAArhB,EAAA,QAAAshB,EAAAthB,EAAA,QAAAuhB,EAAAvhB,EAAA,QAAAwhB,EAAAxhB,EAAA,QAAAyhB,EAAAzhB,EAAA,QAAA0hB,EAAA1hB,EAAA,QAAA2hB,EAAA3hB,EAAA,QAAA4hB,EAAA5hB,EAAA,QAAA6hB,EAAA7hB,EAAA,QAAA8hB,EAAA9hB,EAAA,QAAA+hB,EAAA/hB,EAAA,QAAAgiB,EAAAhiB,EAAA,QAAAiiB,EAAAjiB,EAAA,QAuCA,IAAM8C,EAAM,CAAC,WACPC,EAAM,CAAC,SACPC,EAAM,CAAC,OAAQ,UAAW,EAAG,cAC7BC,EAAM,CAAC,qBAAsB,GAAI,cAAe,OAAQ,EAAG,qBAAsB,EAAG,SACpFC,EAAM,CAAC,SAAU,mBAAoB,UAAW,IAChDC,EAAM,CAAC,EAAG,mBAAoB,EAAG,YACjCC,EAAM,CAAC,QAAS,yBAA0B,EAAG,gBAC7CC,EAAM,CAAC,QAAS,wBAAyB,EAAG,WAAY,EAAG,gBAC3DC,EAAM,CAAC,EAAG,4BACVC,EAAM,CAAC,EAAG,oBACVC,EAAO,CAAC,wBAAyB,GAAI,kCAAmC,GAAI,iCAAkC,GAAI,mCAAoC,mCAAoC,EAAG,oCAAqC,4BAA6B,0BAA2B,+BAAgC,8BAA+B,6BAA8B,gBAAiB,SAAU,UAClZC,EAAO,CAAC,EAAG,0BACjB,SAASye,EAA0B9d,EAAIC,GAIrC,GAJqD,EAALD,IAC9C+c,EAAA7c,GAAsB,EAAG,OAAQb,GACjC0d,EAAA5c,GAAc,GACd4c,EAAA3c,MACO,EAALJ,EAAQ,CACV,IAAM+d,EAAUhB,EAAA/b,KAChB+b,EAAAvc,GAAgB,GAChBuc,EAAAtc,GAAyBsd,EAAQC,aAAe,SAEpD,IAAM1e,EAAO,CAAC,EAAG,wBAAyB,EAAG,YACvCC,EAAO,CAAC,EAAG,mBACXC,EAAO,CAAC,EAAG,gBACjB,SAASye,EAAiCje,EAAIC,GAI5C,GAJ4D,EAALD,IACrD+c,EAAA7c,GAAsB,EAAG,QACzB6c,EAAA5c,GAAc,GACd4c,EAAA3c,MACO,EAALJ,EAAQ,CACV,IAAMke,EAAUnB,EAAA/b,GAAqB,GACrC+b,EAAAvc,GAAgB,GAChBuc,EAAAtc,GAAyByd,EAAQC,cAAgB,SAErD,SAASC,EAA4Bpe,EAAIC,GAAgB,EAALD,GAChD+c,EAAAsB,GAAoB,EAAG,EAAG,CAAC,gBAAiB,SAEhD,SAASC,EAA0Bte,EAAIC,GAKrC,GALqD,EAALD,IAC9C+c,EAAA7c,GAAsB,EAAG,OAAQZ,GACjCyd,EAAA5b,GAAkB,EAAG8c,EAAkC,EAAG,EAAG,OAAQ1e,GACrEwd,EAAA5b,GAAkB,EAAGid,EAA6B,EAAG,OAAG/S,EAAW7L,GACnEud,EAAA3c,MACO,EAALJ,EAAQ,CACV,IAAMue,EAAUxB,EAAA/b,KAChB+b,EAAAxc,GAAkB,aAAcge,EAAQC,eACxCzB,EAAAvc,GAAgB,GAChBuc,EAAAxc,GAAkB,gBAAgB,IAEtC,IAAMd,EAAO,CAAC,EAAG,yBACXC,EAAO,CAAC,EAAG,UAAW,WACtBC,EAAO,CAAC,QAAS,IACvB,SAAS8e,EAAiCze,EAAIC,GAAO,GAAS,EAALD,EAAQ,CAC7D,IAAM0e,EAAO3B,EAAAnc,KACbmc,EAAA7c,GAAsB,EAAG,MAAOT,GAChCsd,EAAA7c,GAAsB,EAAG,MAAOR,EAAMC,GACtCod,EAAA1P,KACA0P,EAAAlc,GAAkB,uBAAwB,SAAuFC,GAA8E,OAApEic,EAAAhc,GAAqB2d,GAAuB3B,EAAA/b,KAAuC2d,0BAA0BjhB,KAAKoD,EAAO8d,WACpQ7B,EAAAlc,GAAkB,UAAW,SAAiEC,GAA8E,OAApEic,EAAAhc,GAAqB2d,GAAuB3B,EAAA/b,KAAuC6d,eAAe/d,KAC1Mic,EAAAsB,GAAoB,EAAG,GACvBtB,EAAA3c,KACA2c,EAAA3c,KACF,GAAS,EAALJ,EAAQ,CACV,IAAM8e,EAAU/B,EAAA/b,KAChB+b,EAAAxc,GAAkB,2BAAuB8K,GACzC0R,EAAAvc,GAAgB,GAChBuc,EAAAgC,GAA8B,oBAAqBD,EAAQE,iBAAkB,IAC7EjC,EAAArP,GAAmB,mBAAoBoR,EAAQG,kBAC/ClC,EAAArP,GAAmB,YAAaoR,EAAQI,iBAAkB,MAC1DnC,EAAAnP,KACAmP,EAAAxc,GAAkB,UAAWue,EAA7BK,WAAApC,CAAiD,kBAAmB+B,EAAQM,SAAW,mBAAqB,YAEhH,IAAMxf,EAAO,CAAC,CAAC,CAAC,uBAAwB,KAClCC,GAAO,CAAC,qBAAsB,KAC9Bwf,GAAsB,CAMxBC,mBAAoBliB,OAAAmf,EAAAxV,EAAA3J,CAAQ,qBAAsB,CAC9CA,OAAAmf,EAAAgD,EAAAniB,CAAW,YAAaA,OAAAmf,EAAAiD,EAAApiB,CAAM,kBAAmB,CAACA,OAAAmf,EAAA1V,EAAAzJ,IAAiB,CAAEqiB,UAAU,OAWnFC,eAAgBtiB,OAAAmf,EAAAxV,EAAA3J,CAAQ,iBAAkB,CACtCA,OAAAmf,EAAAjU,EAAAlL,CAAM,OAAQA,OAAAmf,EAAAlU,EAAAjL,CAAM,CAChBse,UAAW,cACXiE,SAAU,OACVC,QAAS,KAEbxiB,OAAAmf,EAAAjU,EAAAlL,CAAM,UAAWA,OAAAmf,EAAAlU,EAAAjL,CAAM,CACnBwiB,QAAS,EACTD,SAAU,oBAEVjE,UAAW,eAEfte,OAAAmf,EAAAjU,EAAAlL,CAAM,mBAAoBA,OAAAmf,EAAAlU,EAAAjL,CAAM,CAC5BwiB,QAAS,EACTD,SAAU,oBAEVjE,UAAW,eAEfte,OAAAmf,EAAAgD,EAAAniB,CAAW,YAAaA,OAAAmf,EAAAsD,EAAAziB,CAAQ,qCAChCA,OAAAmf,EAAAgD,EAAAniB,CAAW,YAAaA,OAAAmf,EAAAsD,EAAAziB,CAAQ,oBAAqBA,OAAAmf,EAAAlU,EAAAjL,CAAM,CAAEwiB,QAAS,QAS1EE,cAAe1iB,OAAAmf,EAAAxV,EAAA3J,CAAQ,gBAAiB,CACpCA,OAAAmf,EAAAjU,EAAAlL,CAAM,UAAWA,OAAAmf,EAAAlU,EAAAjL,CAAM,CAAEwiB,QAAS,KAClCxiB,OAAAmf,EAAAgD,EAAAniB,CAAW,kBAAmB,CAC1BA,OAAAmf,EAAAlU,EAAAjL,CAAM,CAAEwiB,QAAS,IACjBxiB,OAAAmf,EAAAsD,EAAAziB,CAAQ,qDA0DpB,IAAI2iB,GAAe,EAKnB,IAAMC,GAA0B,IAK1BC,GAAyB,GAKzBC,GAAyD,EAAzBD,GAKhCE,GAAwB,EAY9B,IAAIC,GAAkC,EAMtC,IAAMC,GAAgC,EAKhCC,GAA6B,IAAIvD,EAAAwD,EAAe,8BAgBhDC,GAAsC,CACxCzc,QAASuc,GACTtc,KAAM,CAAC6Y,EAAA7V,GACP7C,WAbJ,SAAAA,EAAqDsc,GACjD,OAAO,WAAA,OAGDA,EAAQC,iBAAiBC,oBAc7BC,GAKF,SAAAA,EAAY1F,EAAQha,GAChB9E,KAAK8e,OAASA,EACd9e,KAAK8E,MAAQA,OAOf2f,GAQF,SAAAA,EAAYC,EAAaC,EAA2BC,EAAaC,EAAkBC,GAC/E9kB,KAAK0kB,YAAcA,EACnB1kB,KAAK2kB,0BAA4BA,EACjC3kB,KAAK4kB,YAAcA,EACnB5kB,KAAK6kB,iBAAmBA,EACxB7kB,KAAK8kB,UAAYA,GAIzB,IAAMC,GAAsB/jB,OAAA6f,EAAAsD,EAAAnjB,CAAmBA,OAAA6f,EAAAmE,EAAAhkB,CAAcA,OAAA6f,EAAAzY,EAAApH,CAAcA,OAAA6f,EAAAoE,EAAAjkB,CAAgByjB,6BAIrFS,wBAENA,EAAiBrX,eAAiB8S,EAAA7S,GAAyB,CAAE/C,KAAMma,EAAkBla,UAAW,CAAC,CAAC,uBAAwBtJ,QAAS,SAAAA,EAAkCC,GAAK,OAAO,IAAKA,GAAKujB,6BAOrLhF,qBAgBF,SAAAA,EAAYiF,EAAgB7c,EAAoB8c,EAAST,EAA2B1X,EAAYoY,EAAMT,EAAaC,EAAkBS,EAAkBR,EAAWS,EAAUC,EAAuBC,GAAAA,IAAAA,EAC/Lld,EAAAA,EAAAA,KAAAA,KAAM0E,EAAY0X,EAA2BC,EAAaC,EAAkBC,IAA5Evc,KACAvI,EAAKmlB,eAAiBA,EACtBnlB,EAAKsI,mBAAqBA,EAC1BtI,EAAKolB,QAAUA,EACfplB,EAAKqlB,KAAOA,EACZrlB,EAAKslB,iBAAmBA,EACxBtlB,EAAK8kB,UAAYA,EACjB9kB,EAAKylB,eAAiBA,EAItBzlB,EAAK0lB,YAAa,EAIlB1lB,EAAK2lB,WAAY,EAIjB3lB,EAAK4lB,WAAa,EAIlB5lB,EAAK6lB,WAAY,EAIjB7lB,EAAK8lB,aAAe,SAKnBC,EAAIC,GALe,OAKRD,IAAOC,GAInBhmB,EAAKimB,KAALjmB,cAA0B2jB,KAI1B3jB,EAAKkmB,SAAW,IAAInF,EAAA1gB,EAIpBL,EAAK8iB,iBAAmB,EAIxB9iB,EAAKmmB,UAAY,aAOjBnmB,EAAKomB,WAAa,aAOlBpmB,EAAKqmB,WAAa,GAIlBrmB,EAAK6iB,iBAAmB,MAIxB7iB,EAAKuiB,0BAA4B,IAAIxB,EAAA1gB,EAMrCL,EAAKsmB,SAAW,EAOhBtmB,EAAKumB,WAAa,CACd,CACIC,QAAS,QACTC,QAAS,MACTC,SAAU,QACVC,SAAU,OAEd,CACIH,QAAS,QACTC,QAAS,SACTC,SAAU,QACVC,SAAU,WAMlB3mB,EAAK4mB,yBAA0B,EAC/B5mB,EAAK6mB,UAAW,EAIhB7mB,EAAK8mB,YAAc,aAInB9mB,EAAK+mB,UAAY,GAIjB/mB,EAAKgnB,uBAA4ChmB,OAAAggB,EAAnB3gB,EAAmBW,CAAM,WAKnD,IAAMf,EAAUD,EAAKC,QACrB,OAAIA,EACOA,EAAQgH,QAAQlG,KAAKC,OAAAkgB,EAAA7gB,EAAAW,CAAUf,GAAUe,OAAAmgB,EAAA9gB,EAAAW,CAAU,WAAA,OAGpDA,OAAAigB,EAAA5gB,GAAA4mB,WAAA,EAAShnB,EAAQyK,IAIvBwc,SAAAA,GAAAA,OAAUA,EAAOC,wBAEdnnB,EAAKolB,QAAQgC,SACftmB,eACAC,KAAKC,OAAAogB,EAAA/gB,EAAAW,CAAK,GAAIA,OAAAmgB,EAAA9gB,EAAAW,CAAU,WAAA,OAGvBhB,EAAKgnB,4BAKfhnB,EAAKqnB,aAAe,IAAI1G,EAAAhf,EAIxB3B,EAAKsnB,cAAgBtnB,EAAKqnB,aAAatmB,KAAKC,OAAAqgB,EAAAhhB,EAAAW,CAI5CmiB,SAAAA,GAAAA,OAAKA,IAAKniB,OAAAsgB,EAAAjhB,EAAAW,CAAI,eAOdhB,EAAKunB,cAAgBvnB,EAAKqnB,aAAatmB,KAAKC,OAAAqgB,EAAAhhB,EAAAW,CAI5CmiB,SAAAA,GAAAA,OAAMA,IAAKniB,OAAAsgB,EAAAjhB,EAAAW,CAAI,eAOfhB,EAAKwnB,gBAAkB,IAAI7G,EAAAhf,EAM3B3B,EAAKynB,YAAc,IAAI9G,EAAAhf,EACnB3B,EAAK8kB,YAGL9kB,EAAK8kB,UAAU4C,cAAf1nB,EAAAA,IAEJA,EAAK2nB,uBAAyBnC,EAC9BxlB,EAAK4nB,gBAAkB5nB,EAAK2nB,yBAC5B3nB,EAAKulB,SAAWsC,SAAStC,IAAa,EAEtCvlB,EAAKoY,GAAKpY,EAAKoY,GAtLgLqN,OAAAA,sBAiTnMzc,SAAA,SAAAA,IAAA,IAAA8e,EAAA9nB,KACIA,KAAK+nB,gBAAkB,IAAIxH,EAAA3V,EAAe5K,KAAKgjB,UAC/ChjB,KAAKgoB,aAAa1mB,OAIlBtB,KAAKuiB,0BACAxhB,KAAKC,OAAAugB,EAAAlhB,EAAAW,GAAwBA,OAAAwgB,EAAAnhB,EAAAW,CAAUhB,KAAKkmB,WAC5Cpd,UAAU,WAIP9I,EAAKioB,WACLjoB,EAAK4lB,WAAa,EAClB5lB,EAAKqnB,aAAa7c,MAAK,KAGvBxK,EAAKqnB,aAAa7c,MAAK,GACvBxK,EAAKkoB,WAAWC,QAAU,EAC1BnoB,EAAKsI,mBAAmBS,kBAGhC/I,KAAKmlB,eAAeiD,SACfrnB,KAAKC,OAAAwgB,EAAAnhB,EAAAW,CAAUhB,KAAKkmB,WACpBpd,UAAU,WAIP9I,EAAK0lB,aACL1lB,EAAKqoB,aAAeroB,EAAKsoB,QAAQ5a,cAAc6a,wBAC/CvoB,EAAKsI,mBAAmBS,qBAOpCyf,mBAAA,SAAAA,IAAA,IAAAC,EAAAzoB,KACIA,KAAK0oB,kBACL1oB,KAAK+nB,gBAAgBY,SAAS5nB,KAAKC,OAAAwgB,EAAAnhB,EAAAW,CAAUhB,KAAKkmB,WAAWpd,UAI7D2R,SAAAA,GACIA,EAAM5C,MAAMxW,QAIZ6lB,SAAAA,GAAAA,OAAUA,EAAOxN,WACjBe,EAAMmO,QAAQvnB,QAId6lB,SAAAA,GAAAA,OAAUA,EAAOnP,eAErB/X,KAAKC,QAAQgH,QAAQlG,KAAKC,OAAAkgB,EAAA7gB,EAAAW,CAAU,MAAOA,OAAAwgB,EAAAnhB,EAAAW,CAAUhB,KAAKkmB,WAAWpd,UAAU,WAI3E9I,EAAK6oB,gBACL7oB,EAAK8oB,4BAMbC,UAAA,SAAAA,IACQ/oB,KAAK8kB,WACL9kB,KAAKgpB,sBAObC,YAAA,SAAAA,EAAYhiB,GAGJA,EAAkB9B,UAClBnF,KAAKgoB,aAAa1mB,UAM1B8H,YAAA,SAAAA,IACIpJ,KAAKkmB,SAAS5kB,OACdtB,KAAKkmB,SAAS9W,WACdpP,KAAKgoB,aAAa5Y,cAMtB6K,OAAA,SAAAA,IACIja,KAAKioB,UAAYjoB,KAAKsW,QAAUtW,KAAKkpB,UAMzCA,KAAA,SAAAA,IAAA,IAAAC,EAAAnpB,MACQA,KAAKmF,UAAanF,KAAKC,SAAYD,KAAKC,QAAQ0F,SAAU3F,KAAK0lB,aAGnE1lB,KAAKqoB,aAAeroB,KAAKsoB,QAAQ5a,cAAc6a,wBAG/CvoB,KAAK8iB,iBAAmB+E,SAASuB,iBAAiBppB,KAAKsoB,QAAQ5a,eAAe2b,UAAY,KAC1FrpB,KAAK0lB,YAAa,EAClB1lB,KAAKspB,YAAYC,0BAA0B,MAC3CvpB,KAAKwpB,4BACLxpB,KAAKypB,0BACLzpB,KAAKsI,mBAAmBS,eAExB/I,KAAKolB,QAAQgC,SAAStmB,eAAeC,KAAKC,OAAAogB,EAAA/gB,EAAAW,CAAK,IAAI8H,UAAU,WAIrD9I,EAAK8iB,kBAAoB9iB,EAAKkoB,WAAWwB,YACzC1pB,EAAKkoB,WAAWwB,WAAWC,iBAC3B3pB,EAAKkoB,WAAWwB,WAAWC,eAAeC,MAAMP,SAAcrpB,EAAK8iB,iBAAnE9iB,YAQZsW,MAAA,SAAAA,IACQtW,KAAK0lB,aACL1lB,KAAK0lB,YAAa,EAClB1lB,KAAKspB,YAAYC,0BAA0BvpB,KAAK6pB,SAAW,MAAQ,OACnE7pB,KAAKsI,mBAAmBS,eACxB/I,KAAKomB,iBAUb0D,WAAA,SAAAA,EAAWhlB,GACH9E,KAAKC,SACLD,KAAK+pB,qBAAqBjlB,MAWlCklB,iBAAA,SAAAA,EAAiBC,GACbjqB,KAAKmmB,UAAY8D,KAUrBC,kBAAA,SAAAA,EAAkBD,GACdjqB,KAAKomB,WAAa6D,KAStBE,iBAAA,SAAAA,EAAiBC,GACbpqB,KAAKmF,SAAWilB,EAChBpqB,KAAKsI,mBAAmBS,eACxB/I,KAAKgoB,aAAa1mB,UA2CtBuoB,OAAA,SAAAA,IACI,QAAO7pB,KAAKqlB,MAA2B,QAApBrlB,KAAKqlB,KAAKvgB,SAOjC2d,eAAA,SAAAA,EAAehI,GACNza,KAAKmF,WACNnF,KAAKioB,UAAYjoB,KAAKqqB,mBAAmB5P,GAASza,KAAKsqB,qBAAqB7P,OASpF6P,qBAAA,SAAAA,EAAqB7P,GAEjB,IAAM8P,EAAU9P,EAAM8P,QAEhBC,EAAaD,IAAY/J,EAAA/gB,GAAc8qB,IAAY/J,EAAA7V,GACrD4f,IAAY/J,EAAAnO,GAAckY,IAAY/J,EAAAtU,EAIpCue,EAAUzqB,KAAKspB,YAErB,IAJkBiB,IAAY/J,EAAA/V,GAAS8f,IAAY/J,EAAAvU,KAIhCjL,OAAAwf,EAAAvL,EAAAjU,CAAeyZ,KAAaza,KAAKgjB,UAAYvI,EAAMiQ,SAAWF,EAC7E/P,EAAMkQ,iBACN3qB,KAAKkpB,YAEJ,IAAKlpB,KAAKgjB,SAAU,CAErB,IAAM4H,EAA2B5qB,KAAK8X,SAClCyS,IAAY/J,EAAArN,GAAQoX,IAAY/J,EAAAiD,GAChC8G,IAAY/J,EAAArN,EAAOsX,EAAQI,qBAAuBJ,EAAQK,oBAC1DrQ,EAAMkQ,kBAGNF,EAAQM,UAAUtQ,GAGtB,IAAMuQ,EAAiBhrB,KAAK8X,SAGxB9X,KAAKylB,gBAAkBuF,GAAkBJ,IAA6BI,GAGtEhrB,KAAKylB,eAAewF,SAASD,EAAsCE,UAAW,SAU1Fb,mBAAA,SAAAA,EAAmB5P,GAEf,IAAM8P,EAAU9P,EAAM8P,QAEhBC,EAAaD,IAAY/J,EAAA/gB,GAAc8qB,IAAY/J,EAAA7V,EAEnD8f,EAAUzqB,KAAKspB,YACrB,GAAIiB,IAAY/J,EAAArN,GAAQoX,IAAY/J,EAAAiD,EAChChJ,EAAMkQ,iBACNJ,IAAY/J,EAAArN,EAAOsX,EAAQI,qBAAuBJ,EAAQK,yBAEzD,GAAIN,GAAc/P,EAAMiQ,OAEzBjQ,EAAMkQ,iBACN3qB,KAAKsW,aAEJ,GAAKiU,IAAY/J,EAAA/V,GAAS8f,IAAY/J,EAAAvU,IAAUwe,EAAQU,YACxDnqB,OAAAwf,EAAAvL,EAAAjU,CAAeyZ,GADf,CAKA,GAAIza,KAAK6lB,WAAa0E,IAAY/J,EAAAngB,GAAKoa,EAAM2Q,QAAS,CACvD3Q,EAAMkQ,iBAEN,IAAMU,EAAuBrrB,KAAKC,QAAQqrB,KAI1CC,SAAAA,GAAAA,OAAQA,EAAIpmB,WAAaomB,EAAIzT,WAC7B9X,KAAKC,QAAQoB,QAIb6lB,SAAAA,GACSA,EAAO/hB,WACRkmB,EAAuBnE,EAAOxN,SAAWwN,EAAOnP,kBAIvD,CAED,IAAMyT,EAAyBf,EAAQgB,gBACvChB,EAAQM,UAAUtQ,GACdza,KAAK6lB,WAAa2E,GAAc/P,EAAMiR,UAAYjB,EAAQU,YAC1DV,EAAQgB,kBAAoBD,GAC5Bf,EAAQU,WAAWQ,8BA3BvBlR,EAAMkQ,iBACNF,EAAQU,WAAWQ,2BAiC3BC,SAAA,SAAAA,IACS5rB,KAAKmF,WACNnF,KAAK6mB,UAAW,EAChB7mB,KAAKgoB,aAAa1mB,WAQ1BuqB,QAAA,SAAAA,IACI7rB,KAAK6mB,UAAW,EACX7mB,KAAKmF,UAAanF,KAAKioB,YACxBjoB,KAAKomB,aACLpmB,KAAKsI,mBAAmBS,eACxB/I,KAAKgoB,aAAa1mB,WAO1BwqB,YAAA,SAAAA,IAAA,IAAAC,EAAA/rB,KACIA,KAAKkoB,WAAW8D,eAAejrB,KAAKC,OAAAogB,EAAA/gB,EAAAW,CAAK,IAAI8H,UAAU,WAInD9I,EAAKisB,gCACLjsB,EAAKsI,mBAAmB4jB,gBACxBlsB,EAAKmsB,2BACLnsB,EAAKosB,MAAM1e,cAAc2e,UAAYrsB,EAAK4lB,gBAOlDhD,eAAA,SAAAA,IACI,OAAO5iB,KAAKslB,iBAALtlB,OAA+BA,KAAKslB,iBAAiBrgB,MAAU,MAQ1EgnB,8BAAA,SAAAA,IACI,IAAKjI,IAAmChkB,KAAKgjB,SAAU,CAEnD,IAAMsJ,EAAiBtsB,KAAKosB,MAAM1e,cAAcgD,cAAc,wBAC1D4b,IACAtI,GAA2D,IAAzBH,GAA+ByI,EAAeC,iBAe5FzD,qBAAA,SAAAA,IAAA,IAAA0D,EAAAxsB,KAGIysB,QAAQC,UAAUC,KAAK,WAInB3sB,EAAK+pB,qBAAqB/pB,EAAK8kB,UAAY9kB,EAAK8kB,UAAUhgB,MAAQ9E,EAAK4sB,QACvE5sB,EAAKgoB,aAAa1mB,YAU1ByoB,qBAAA,SAAAA,EAAqBjlB,GAAAA,IAAAA,EAAAA,KACjB,GAAI9E,KAAKgjB,UAAYle,EAAO,CACxB,IAAK+nB,MAAMC,QAAQhoB,GACf,MA12BLqK,MAAM,sDA42BLnP,KAAK+nB,gBAAgBtO,QACrB3U,EAAMzD,QAIL0rB,SAAAA,GAAAA,OAAiB/sB,EAAKgtB,aAAaD,KACpC/sB,KAAKitB,kBAEJ,CACDjtB,KAAK+nB,gBAAgBtO,QAErB,IAAMyT,EAAsBltB,KAAKgtB,aAAaloB,GAG1CooB,GACAltB,KAAKspB,YAAY6D,cAAcD,GAGvCltB,KAAKsI,mBAAmBS,kBAQ5BikB,aAAA,SAAAA,EAAaloB,GAAAA,IAAAA,EAAAA,KAET,IAAMooB,EAAsBltB,KAAKC,QAAQmtB,KAIxClG,SAAAA,GACG,IAEI,OAAuB,MAAhBA,EAAOpiB,OAAiB9E,EAAK8lB,aAAaoB,EAAOpiB,MAAOA,GAEnE,MAAOyY,GAKH,OAJIvc,OAAA2f,EAAA0M,GAAArsB,IAEAuR,QAAQ+a,KAAK/P,IAEV,KAMf,OAHI2P,GACAltB,KAAK+nB,gBAAgBrO,OAAOwT,GAEzBA,KAOXxE,gBAAA,SAAAA,IAAA,IAAA6E,EAAAvtB,KACIA,KAAKspB,YAAc,IAAIlJ,EAAA7V,EAA2BvK,KAAKC,SAClDutB,gBACAC,0BACAlE,0BAA0BvpB,KAAK6pB,SAAW,MAAQ,OAClD6D,wBAAwB,CAAC,aAC9B1tB,KAAKspB,YAAYqE,OAAO5sB,KAAKC,OAAAwgB,EAAAnhB,EAAAW,CAAUhB,KAAKkmB,WAAWpd,UAAU,WAM7D9I,EAAK4tB,QACL5tB,EAAKsW,UAETtW,KAAKspB,YAAYlB,OAAOrnB,KAAKC,OAAAwgB,EAAAnhB,EAAAW,CAAUhB,KAAKkmB,WAAWpd,UAAU,WAIzD9I,EAAK0lB,YAAc1lB,EAAKosB,MACxBpsB,EAAK6tB,8BAEC7tB,EAAK0lB,YAAe1lB,EAAKgjB,WAAYhjB,EAAKspB,YAAY6B,YAC5DnrB,EAAKspB,YAAY6B,WAAWQ,6BASxC9C,cAAA,SAAAA,IAAA,IAAAiF,EAAA9tB,KAEI,IAAM+tB,EAAqB/sB,OAAAigB,EAAA5gB,EAAAW,CAAMhB,KAAKC,QAAQgH,QAASjH,KAAKkmB,UAC5DlmB,KAAKgnB,uBAAuBjmB,KAAKC,OAAAwgB,EAAAnhB,EAAAW,CAAU+sB,IAAqBjlB,UAIhE2R,SAAAA,GACIza,EAAKguB,UAAUvT,EAAMqE,OAAQrE,EAAMwT,aAC/BxT,EAAMwT,cAAgBjuB,EAAKgjB,UAAYhjB,EAAK0lB,aAC5C1lB,EAAKsW,QACLtW,EAAK4tB,WAKb5sB,OAAAigB,EAAA5gB,GAAA4mB,WAAA,EAASjnB,KAAKC,QAAQyK,IAItBwc,SAAAA,GAAAA,OAAUA,EAAOgH,iBACZntB,KAAKC,OAAAwgB,EAAAnhB,EAAAW,CAAU+sB,IACfjlB,UAAU,WAIX9I,EAAKsI,mBAAmBS,eACxB/I,EAAKgoB,aAAa1mB,SAEtBtB,KAAKmuB,mBASTH,UAAA,SAAAA,EAAU9G,EAAQ+G,GAEd,IAAMG,EAAcpuB,KAAK+nB,gBAAgB5O,WAAW+N,GAChC,MAAhBA,EAAOpiB,OAAkB9E,KAAK6lB,WAM9BqB,EAAOpP,SAAW9X,KAAK+nB,gBAAgBrO,OAAOwN,GAAUlnB,KAAK+nB,gBAAgBhQ,SAASmP,GAClF+G,GACAjuB,KAAKspB,YAAY6D,cAAcjG,GAE/BlnB,KAAKgjB,WACLhjB,KAAKitB,cACDgB,GAKAjuB,KAAK4tB,WAhBb1G,EAAOnP,WACP/X,KAAK+nB,gBAAgBtO,QACrBzZ,KAAKquB,kBAAkBnH,EAAOpiB,QAkB9BspB,IAAgBpuB,KAAK+nB,gBAAgB5O,WAAW+N,IAChDlnB,KAAKquB,oBAETruB,KAAKgoB,aAAa1mB,UAOtB2rB,YAAA,SAAAA,IAAA,IAAAqB,EAAAtuB,KACI,GAAIA,KAAKgjB,SAAU,CAEf,IAAM/iB,EAAUD,KAAKC,QAAQsuB,UAC7BvuB,KAAK+nB,gBAAgBzd,KAAK,SAKzBjK,EAAGkK,GALsB,OAMfvK,EAAKwuB,eAAiBxuB,EAAKwuB,eAAenuB,EAAGkK,EAAGtK,GACnDA,EAAQmK,QAAQ/J,GAAKJ,EAAQmK,QAAQG,KAE7CvK,KAAKgoB,aAAa1mB,WAS1B+sB,kBAAA,SAAAA,EAAkBI,GAEd,IAAIC,EAAc,KAEdA,EADA1uB,KAAKgjB,SAC6BhjB,KAAe8X,SAAEpN,IAInDwc,SAAAA,GAAAA,OAAUA,EAAOpiB,QAGH9E,KAAK8X,SAA+B9X,KAAe8X,SAAEhT,MAAQ2pB,EAE/EzuB,KAAK4sB,OAAS8B,EACd1uB,KAAKynB,YAAYjd,KAAKkkB,GACtB1uB,KAAKmmB,UAAUuI,GACf1uB,KAAKwnB,gBAAgBhd,KAAK,IAAIga,GAAgBxkB,KAAM0uB,IACpD1uB,KAAKsI,mBAAmBS,kBAO5BolB,cAAA,SAAAA,IACInuB,KAAKqmB,WAAarmB,KAAKC,QAAQyK,IAI/Bwc,SAAAA,GAAAA,OAAUA,EAAO9O,KAAKuW,KAAK,QAQ/BlF,wBAAA,SAAAA,IACQzpB,KAAKspB,cACDtpB,KAAK4uB,MACL5uB,KAAKspB,YAAYuB,qBAGjB7qB,KAAKspB,YAAY6D,cAAcntB,KAAK+nB,gBAAgBjQ,SAAS,QASzE+V,4BAAA,SAAAA,IAEI,IAAMgB,EAAoB7uB,KAAKspB,YAAYmC,iBAAmB,EAExDqD,EAAa9tB,OAAA6f,EAAAzF,EAAApa,CAA8B6tB,EAAmB7uB,KAAKC,QAASD,KAAK+uB,cACvF/uB,KAAKosB,MAAM1e,cAAc2e,UAAYrrB,OAAA6f,EAAAmO,EAAAhuB,CAAyB6tB,EAAoBC,EAAY9uB,KAAKivB,iBAAkBjvB,KAAKosB,MAAM1e,cAAc2e,UAAWzI,OAO7JgK,MAAA,SAAAA,EAAM3tB,GACFD,KAAK0kB,YAAYhX,cAAckgB,MAAM3tB,MAQzCivB,gBAAA,SAAAA,EAAgBhI,GACZ,OAAOlnB,KAAKC,QAAQwf,OAAO,SAM1B3G,EAAQ6G,EAASwP,GANS,YAOLlgB,IAAX6J,EAAwBoO,IAAWvH,EAAUwP,OAAQlgB,EAAa6J,QACzE7J,MAORua,0BAAA,SAAAA,IAEI,IAAM4F,EAAapvB,KAAKivB,iBAElBI,EAAQrvB,KAAKsvB,gBAEbC,EAAchoB,KAAKE,IAAI4nB,EAAQD,EAAYxL,IAK3C4L,EAHwBH,EAAQD,EAGIG,EAG1C,IAAIE,EAAuBzvB,KAAK4uB,MAAQ,EAAuB5uB,KAAKkvB,gBAAgBlvB,KAAK+nB,gBAAgBjQ,SAAS,IAClH2X,GAAwBzuB,OAAA6f,EAAAzF,EAAApa,CAA8ByuB,EAAsBzvB,KAAKC,QAASD,KAAK+uB,cAI/F,IAAMW,EAAeH,EAAc,EACnCvvB,KAAK4lB,WAAa5lB,KAAK2vB,wBAAwBF,EAAsBC,EAAcF,GACnFxvB,KAAKsmB,SAAWtmB,KAAK4vB,yBAAyBH,EAAsBC,EAAcF,GAClFxvB,KAAK6vB,4BAA4BL,MAarCG,wBAAA,SAAAA,EAAwBG,EAAeJ,EAAcF,GAEjD,IAAMJ,EAAapvB,KAAKivB,iBAWxB,OAAO1nB,KAAKE,IAAIF,KAAKC,IAAI,EATS4nB,EAAaU,EAQWJ,EANjCN,EAAa,GAOcI,MAMxDO,cAAA,SAAAA,IAGI,OAAO/vB,KAAKgwB,eAAiB,KAAOhwB,KAAK+mB,WAAa/mB,KAAK4hB,eAM/DqO,mBAAA,SAAAA,IACI,OAAIjwB,KAAKgwB,eACEhwB,KAAKgwB,eAIXhwB,KAAKslB,kBAAqBtlB,KAAKslB,iBAAiB4K,sBACjDlwB,KAAK+vB,iBAGF/vB,KAAKslB,iBAAiB6K,UAFlB,QAQfC,yBAAA,SAAAA,IACI,OAAIpwB,KAAKioB,WAAajoB,KAAKspB,aAAetpB,KAAKspB,YAAY6B,WAChDnrB,KAAKspB,YAAY6B,WAAW/S,GAEhC,QAWX+T,yBAAA,SAAAA,IAEI,IAAMkE,EAAcrwB,KAAKkoB,WAAWwB,WAAWC,eAAepB,wBAExD+H,EAAetwB,KAAKmlB,eAAeoL,kBAEnCC,EAAQxwB,KAAK6pB,SAEb4G,EAAezwB,KAAKgjB,SAAWgB,GAAkCH,GAC1C,EAAzBA,GAEJ,IAAIsE,EAEJ,GAAInoB,KAAKgjB,SACLmF,EAAUnE,OAET,CAED,IAAIlM,EAAW9X,KAAK+nB,gBAAgBjQ,SAAS,IAAM9X,KAAKC,QAAQ8b,MAChEoM,EAAUrQ,GAAYA,EAAS4Y,MAAQ5M,GAAgCD,GAGtE2M,IACDrI,IAAY,GAIhB,IAAMwI,EAAe,GAAKN,EAAYO,KAAOzI,GAAWqI,EAAQC,EAAe,IAEzEI,EAAgBR,EAAYS,MAAQ3I,EAAUmI,EAAaS,OAC1DP,EAAQ,EAAIC,GAEfE,EAAe,EACfxI,GAAWwI,EAAe1M,GAErB4M,EAAgB,IACrB1I,GAAW0I,EAAgB5M,IAK/BjkB,KAAKkoB,WAAWC,QAAU5gB,KAAKypB,MAAM7I,GACrCnoB,KAAKkoB,WAAWwB,WAAWuH,oBAY/BrB,yBAAA,SAAAA,EAAyBE,EAAeJ,EAAcF,GAElD,IAAMJ,EAAapvB,KAAKivB,iBAElBiC,GAA0B9B,EAAapvB,KAAKqoB,aAAa8I,QAAU,EAEnEC,EAAsB7pB,KAAKyC,MAAM4Z,GAA0BwL,GAEjE,IAAIiC,EAEJ,OAAIrxB,KAAK4mB,wBACE,GAGPyK,EADoB,IAApBrxB,KAAK4lB,WACsBkK,EAAgBV,EAEtCpvB,KAAK4lB,aAAe4J,GAIIM,GAFD9vB,KAAKsvB,gBAAkB8B,IAWDhC,GAL1BA,GAAcpvB,KAAKsvB,gBAAkBF,EAAaxL,IAA2BwL,GAW1EM,EAAeN,EAAa,EAKpD7nB,KAAKypB,OAAkC,EAA5BK,EAAgCH,OAWtDrB,4BAAA,SAAAA,EAA4BL,GAExB,IAAMJ,EAAapvB,KAAKivB,iBAElBqB,EAAetwB,KAAKmlB,eAAeoL,kBAEnCe,EAAoBtxB,KAAKqoB,aAAakJ,IAAMtN,GAE5CuN,EAAuBlB,EAAaa,OAASnxB,KAAKqoB,aAAaoJ,OAASxN,GAExEyN,EAAiBnqB,KAAKoqB,IAAI3xB,KAAKsmB,UAI/BsL,EAFmBrqB,KAAKE,IAAIzH,KAAKsvB,gBAAkBF,EAAYxL,IAExB8N,EAAiB1xB,KAAKqoB,aAAa8I,OAC5ES,EAAoBJ,EACpBxxB,KAAK6xB,eAAeD,EAAmBJ,GAElCE,EAAiBJ,EACtBtxB,KAAK8xB,iBAAiBJ,EAAgBJ,EAAmB9B,GAGzDxvB,KAAK6iB,iBAAmB7iB,KAAK+xB,6BAUrCF,eAAA,SAAAA,EAAeD,EAAmBJ,GAG9B,IAAMQ,EAAwBzqB,KAAKypB,MAAMY,EAAoBJ,GAG7DxxB,KAAK4lB,YAAcoM,EACnBhyB,KAAKsmB,UAAY0L,EACjBhyB,KAAK6iB,iBAAmB7iB,KAAK+xB,0BAIzB/xB,KAAK4lB,YAAc,IACnB5lB,KAAK4lB,WAAa,EAClB5lB,KAAKsmB,SAAW,EAChBtmB,KAAK6iB,iBAAmB,qBAWhCiP,iBAAA,SAAAA,EAAiBJ,EAAgBJ,EAAmB9B,GAGhD,IAAMyC,EAAwB1qB,KAAKypB,MAAMU,EAAiBJ,GAS1D,GANAtxB,KAAK4lB,YAAcqM,EACnBjyB,KAAKsmB,UAAY2L,EACjBjyB,KAAK6iB,iBAAmB7iB,KAAK+xB,0BAIzB/xB,KAAK4lB,YAAc4J,EAInB,OAHAxvB,KAAK4lB,WAAa4J,EAClBxvB,KAAKsmB,SAAW,OAChBtmB,KAAK6iB,iBAAmB,kBAShCkP,wBAAA,SAAAA,IAEI,IAAM3C,EAAapvB,KAAKivB,iBAElBiC,GAA0B9B,EAAapvB,KAAKqoB,aAAa8I,QAAU,EAGzE,MAAA,QADgB5pB,KAAKoqB,IAAI3xB,KAAKsmB,UAAY4K,EAAyB9B,EAAa,GAChF,YAOJE,cAAA,SAAAA,IACI,OAAOtvB,KAAKC,QAAQ0F,OAAS3F,KAAK+uB,aAAappB,UAOnDspB,eAAA,SAAAA,IACI,OAAOjvB,KAAK8iB,iBAAmBiB,MAQnCmO,kBAAA,SAAAA,EAAkBC,GACdnyB,KAAKoyB,iBAAmBD,EAAIxD,KAAK,QAOrC0D,iBAAA,SAAAA,IACIryB,KAAK4tB,QACL5tB,KAAKkpB,6CA/mCL,OAAOlpB,KAAK6mB,UAAY7mB,KAAK0lB,2BAQrB5gB,GACR9E,KAAK6mB,SAAW/hB,wCAMA,OAAO9E,KAAKsyB,6BAKhBxtB,GACZ9E,KAAKsyB,aAAextB,EACpB9E,KAAKgoB,aAAa1mB,0CAML,OAAOtB,KAAK2lB,0BAKhB7gB,GACT9E,KAAK2lB,UAAY3kB,OAAAsf,EAAA1V,EAAA5J,CAAsB8D,GACvC9E,KAAKgoB,aAAa1mB,0CAML,OAAOtB,KAAK6lB,0BAKhB/gB,GACT,GAAI9E,KAAK+nB,gBACL,MAvYD5Y,MAAM,iEAyYTnP,KAAK6lB,UAAY7kB,OAAAsf,EAAA1V,EAAA5J,CAAsB8D,oDAMZ,OAAO9E,KAAK4mB,wCAKhB9hB,GACvB9E,KAAK4mB,wBAA0B5lB,OAAAsf,EAAA1V,EAAA5J,CAAsB8D,yCAQrC,OAAO9E,KAAK8lB,6BAKhBmE,GACZ,GAAkB,mBAAPA,EACP,MAjZD9a,MAAM,qCAmZTnP,KAAK8lB,aAAemE,EAChBjqB,KAAK+nB,iBAEL/nB,KAAK8oB,uDAOC,OAAO9oB,KAAK4sB,uBAKhB2F,GACFA,IAAavyB,KAAK4sB,SAClB5sB,KAAK8pB,WAAWyI,GAChBvyB,KAAK4sB,OAAS2F,gCAOX,OAAOvyB,KAAKwyB,oBAKhB1tB,GACH9E,KAAKwyB,IAAM1tB,GAAS9E,KAAKimB,KACzBjmB,KAAKgoB,aAAa1mB,2CAiMlB,OAAOtB,KAAK0lB,8CAOZ,OAAO1lB,KAAKgjB,SAAWhjB,KAAK+nB,gBAAgBjQ,SAAW9X,KAAK+nB,gBAAgBjQ,SAAS,0CAOrF,GAAI9X,KAAK4uB,MACL,MAAO,GAEX,GAAI5uB,KAAK6lB,UAAW,CAEhB,IAAM4M,EAAkBzyB,KAAK+nB,gBAAgBjQ,SAASpN,IAItDwc,SAAAA,GAAAA,OAAUA,EAAOgE,YAKjB,OAJIlrB,KAAK6pB,UACL4I,EAAgBC,UAGbD,EAAgB9D,KAAK,MAEhC,OAAO3uB,KAAK+nB,gBAAgBjQ,SAAS,GAAGoT,0CAoLxC,OAAQlrB,KAAK+nB,iBAAmB/nB,KAAK+nB,gBAAgB4K,qDAqnBrD,OAAO3yB,KAAK0lB,aAAe1lB,KAAK4uB,oBAp0ChB7J,WAu0CxB7E,EAAUrV,eAAiB8V,EAAA7V,GAAyB,CAAEC,KAAMmV,EAAWlV,UAAW,CAAC,CAAC,eAAgBtJ,QAAS,SAAAA,EAA2BC,GAAK,OAAO,IAAKA,GAAKue,GAAWS,EAAA1V,GAAyByV,EAAAvN,GAAgBwN,EAAA1V,GAAyB0V,EAAAzV,GAAoByV,EAAA1V,GAAyB0V,EAAAiS,GAASjS,EAAA1V,GAAyB4V,EAAAphB,GAAoBkhB,EAAA1V,GAAyB0V,EAAA5S,GAAa4S,EAAA1V,GAAyBoV,EAAA9V,EAAgB,GAAIoW,EAAA1V,GAAyB2V,EAAAiS,EAAQ,GAAIlS,EAAA1V,GAAyB2V,EAAAwC,EAAoB,GAAIzC,EAAA1V,GAAyB6V,EAAAvW,EAAc,GAAIoW,EAAA1V,GAAyB2V,EAAA3U,EAAW,IAAK0U,EAAAmS,GAAyB,YAAanS,EAAA1V,GAAyBiZ,IAA6BvD,EAAA1V,GAAyBmV,EAAAgD,KAAoB2P,eAAgB,SAAAA,EAAkCnvB,EAAIC,EAAKmvB,GAKvwB,IAAIrX,EALwxB,EAAL/X,IACvxB+c,EAAAsS,GAAsBD,EAAU9N,IAAkB,GAClDvE,EAAAsS,GAAsBD,EAAUnS,EAAAlW,GAAW,GAC3CgW,EAAAsS,GAAsBD,EAAUnS,EAAAsC,GAAa,IACtC,EAALvf,IAEF+c,EAAA9E,GAAsBF,EAAKgF,EAAA7E,QAA0BjY,EAAIue,cAAgBzG,EAAGI,OAC5E4E,EAAA9E,GAAsBF,EAAKgF,EAAA7E,QAA0BjY,EAAI5D,QAAU0b,GACnEgF,EAAA9E,GAAsBF,EAAKgF,EAAA7E,QAA0BjY,EAAIkrB,aAAepT,KACvED,UAAW,SAAAA,EAAyB9X,EAAIC,GAKzC,IAAI8X,EALqD,EAAL/X,IACpD+c,EAAAuS,GAAmB5wB,GAAK,GACxBqe,EAAAuS,GAAmB3wB,GAAK,GACxBoe,EAAAuS,GAAmBzS,EAAApgB,GAAqB,IACjC,EAALuD,IAEF+c,EAAA9E,GAAsBF,EAAKgF,EAAA7E,QAA0BjY,EAAIykB,QAAU3M,EAAGI,OACtE4E,EAAA9E,GAAsBF,EAAKgF,EAAA7E,QAA0BjY,EAAIuoB,MAAQzQ,EAAGI,OACpE4E,EAAA9E,GAAsBF,EAAKgF,EAAA7E,QAA0BjY,EAAIqkB,WAAavM,EAAGI,SACxE5Q,aAAc,SAAAA,EAAgCvH,EAAIC,EAAKuH,GAAoB,EAALxH,IACvE+c,EAAA9N,GAAuB,IACvB8N,EAAAlc,GAAkB,UAAW,SAA8CC,GAAU,OAAOb,EAAI4e,eAAe/d,KAC/Gic,EAAAlc,GAAkB,QAAS,SAA4CC,GAAU,OAAOb,EAAI+nB,aAC5FjL,EAAAlc,GAAkB,OAAQ,SAA2CC,GAAU,OAAOb,EAAIgoB,YAC1FlL,EAAAtV,GAA0B7I,GAC1Bme,EAAA1P,MACO,EAALrN,IACF+c,EAAAra,GAAmB,KAAMzC,EAAzBuU,GAAAuI,CAAiC,WAAY9c,EAA7C0hB,SAAA5E,CAA2D,aAAc9c,EAAzEksB,gBAAApP,CAA8F,kBAAmB9c,EAAjHosB,qBAAAtP,CAA2I,gBAAiB9c,EAAIsvB,SAAhKhW,WAAAwD,CAAqL,gBAAiB9c,EAAIsB,SAA1MgY,WAAAwD,CAA+N,eAAgB9c,EAA/OuvB,WAAAzS,CAA+P,YAAa9c,EAAIokB,UAAYpkB,EAAIwiB,WAAhS,KAAA1F,CAAmT,uBAAwB9c,EAA3Umf,SAAArC,CAAyV,mBAAoB9c,EAAIuuB,kBAAjX,KAAAzR,CAA2Y,wBAAyB9c,EAAIusB,4BACxazP,EAAA0S,GAAmB,sBAAuBxvB,EAAIsB,UAC9Cwb,EAAA0S,GAAmB,qBAAsBxvB,EAAIuvB,YAC7CzS,EAAA0S,GAAmB,sBAAuBxvB,EAAIsvB,UAC9CxS,EAAA0S,GAAmB,mBAAoBxvB,EAAI+qB,OAC3CjO,EAAAnP,OACClG,OAAQ,CAAEnG,SAAU,WAAYmuB,cAAe,gBAAiB/N,SAAU,WAAYwB,UAAW,CAAC,aAAc,aAAc3O,GAAI,KAAMwJ,YAAa,cAAeuR,SAAU,WAAYnQ,SAAU,WAAYuQ,uBAAwB,yBAA0BC,YAAa,cAAe1uB,MAAO,QAASie,WAAY,aAAciN,eAAgB,CAAC,kBAAmB,kBAAmByD,kBAAmB,oBAAqBjF,eAAgB,kBAAoB/iB,QAAS,CAAE4b,aAAc,eAAgBC,cAAe,SAAUC,cAAe,SAAUC,gBAAiB,kBAAmBC,YAAa,eAAiB/b,SAAU,CAAC,aAAcC,SAAU,CAACgV,EAAA+S,GAA0B,CACnqB,CAAE/rB,QAASmZ,EAAAlW,EAAqB+oB,YAAazT,GAC7C,CAAEvY,QAASkZ,EAAAxO,EAA6BshB,YAAazT,KACrDS,EAAA/U,GAAmC+U,EAAAiT,MAAgCC,mBAAoBpwB,GAAMoI,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAA4BnI,EAAIC,GAgBjK,GAhBiL,EAALD,IAC1K+c,EAAAmT,GAAuBtwB,GACvBmd,EAAA7c,GAAsB,EAAG,MAAOrB,EAAKC,GACrCie,EAAAlc,GAAkB,QAAS,SAAiDC,GAAU,OAAOb,EAAIoW,WACjG0G,EAAA7c,GAAsB,EAAG,MAAOnB,GAChCge,EAAA5b,GAAkB,EAAG2c,EAA2B,EAAG,EAAG,OAAQ9e,GAC9D+d,EAAA5b,GAAkB,EAAGmd,EAA2B,EAAG,EAAG,OAAQrf,GAC9D8d,EAAA3c,KACA2c,EAAA7c,GAAsB,EAAG,MAAOhB,GAChC6d,EAAAza,GAAiB,EAAG,MAAOnD,GAC3B4d,EAAA3c,KACA2c,EAAA3c,KACA2c,EAAA5b,GAAkB,EAAGsd,EAAkC,EAAG,EAAG,cAAerf,GAC5E2d,EAAAlc,GAAkB,gBAAiB,SAAiEC,GAAU,OAAOb,EAAIyS,UACzHqK,EAAAlc,GAAkB,SAAU,SAA0DC,GAAU,OAAOb,EAAIioB,gBAC3GnL,EAAAlc,GAAkB,SAAU,SAA0DC,GAAU,OAAOb,EAAIyS,WACpG,EAAL1S,EAAQ,CACV,IAAMmwB,EAAOpT,EAAA3N,GAAmB,GAChC2N,EAAAvc,GAAgB,GAChBuc,EAAAxc,GAAkB,WAAYN,EAAI+qB,OAClCjO,EAAAvc,GAAgB,GAChBuc,EAAAxc,GAAkB,gBAAgB,GAClCwc,EAAAvc,GAAgB,GAChBuc,EAAAxc,GAAkB,gBAAgB,GAClCwc,EAAAvc,GAAgB,GAChBuc,EAAAxc,GAAkB,oCAAqCN,EAAvD+jB,gBAAAjH,CAA4E,4BAA5EoT,EAAApT,CAA+G,0BAA2B9c,EAA1IokB,UAAAtH,CAAyJ,+BAAgC9c,EAAzL0iB,WAAA5F,CAAyM,8BAAmD,MAApB9c,EAAIwkB,aAAuB,KAAOxkB,EAAIwkB,aAA9Q0I,MAAApQ,CAAkS,6BAA8B9c,EAAIyiB,YACnUta,WAAY,CAACyU,EAAAlW,EAAyBkX,EAAA9W,EAAiB8W,EAAAoR,EAAqBpS,EAAApgB,EAA4BohB,EAAA1T,EAAwB0T,EAAAuS,GAAiB7nB,OAAQ,CAAC,4mEAA6mEC,cAAe,EAAG2J,KAAM,CAAEke,UAAW,CACzyEhR,GAAoBC,mBACpBD,GAAoBK,iBACnBjX,gBAAiB,2BAkKxB4T,wBAENA,EAAgB3T,YAAcqU,EAAApU,GAAwB,CAAExB,KAAMkV,IAC9DA,EAAgBzT,cAAgBmU,EAAAlU,GAAwB,CAAE/K,QAAS,SAAAA,EAAiCC,GAAK,OAAO,IAAKA,GAAKse,IAAuBvT,UAAW,CAAC0X,IAAsCzX,QAAS,CAAC,CACjM8U,EAAA7W,EACA6V,EAAAhW,EACAoW,EAAAgS,EACAhS,EAAA3V,GAEJ4V,EAAArhB,EAAoBohB,EAAAgS,EAAiBhS,EAAA3V,iDC53D7C1L,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAw0B,IAAA10B,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAy0B,IAAA30B,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA00B,IAAA50B,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA20B,IAAA70B,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA40B,IAAA90B,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA60B,IAAA/0B,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA80B,IAAA,IAAA50B,EAAAJ,EAAA,QAAAi1B,EAAAj1B,EAAA,QAAAk1B,EAAAl1B,EAAA,QAAAO,EAAAP,EAAA,QAAAm1B,GAAAn1B,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,SAAAo1B,EAAAp1B,EAAA,QA8BA,IAAM8C,EAAM,CAAC,OAAQ,aAAc,EAAG,eAAgB,iBAChDC,EAAM,CAAC,KACPC,EAAM,CAAC,EAAG,WAAY,iBACtBC,EAAM,CAAC,EAAG,mBACVC,EAAM,CAAC,EAAG,iBACVC,EAAM,CAAC,EAAG,iBACVC,EAAM,CAAC,EAAG,iBACVC,EAAM,CAAC,EAAG,yBACVC,EAAM,CAAC,aAAc,GAAI,EAAG,uBAAwB,EAAG,mBAAoB,qBAC3EC,EAAM,CAAC,EAAG,iBACVC,EAAO,CAAC,CAAC,CAAC,GAAI,kBAAmB,IAAK,CAAC,GAAI,gBAAiB,IAAK,CAAC,GAAI,gBAAiB,IAAK,CAAC,GAAI,cAAe,KAAM,CAAC,CAAC,GAAI,WAAY,IAAK,CAAC,GAAI,UAAW,KAAM,KACnKC,EAAO,CAAC,qEAAsE,wBAAyB,SAQvG4xB,iBAGN,IAAMC,EAAoB9zB,OAAAyzB,EAAAtQ,EAAAnjB,CAAmB6zB,OAKvCE,iBAGN,IAAMC,EAAwBh0B,OAAAyzB,EAAAtQ,EAAAnjB,CAAmB+zB,wBAC3CZ,qBACF,SAAAA,IAAA,IAAAc,EACI1sB,EAAAA,EAAAA,MAAAA,KAAS2sB,YAAT3sB,KAIAvI,EAAKkuB,cAAgB,IAAIwG,EAAAr0B,EAL7B,OAAA40B,sBAUAhM,YAAA,SAAAA,IACIjpB,KAAKkuB,cAAc5sB,UAKvB8H,YAAA,SAAAA,IACIpJ,KAAKkuB,cAAc9e,sBAlBF0lB,UAqBzBX,EAAWtpB,eAAiBjL,EAAAkL,GAAyB,CAAEC,KAAMopB,EAAYnpB,UAAW,CAAC,CAAC,iBAAkBtJ,QAAS,SAAAA,EAA4BC,GAAK,OAAOwzB,EAAwBxzB,GAAKwyB,IAAgBhpB,aAAc,SAAAA,EAAiCvH,EAAIC,EAAKuH,GAAoB,EAALxH,GACrQhE,EAAAyL,GAA0B/I,IACzBgJ,OAAQ,CAAEgoB,cAAe,iBAAmB5nB,SAAU,CAAC,cAAeC,SAAU,CAAC/L,EAAAgM,GAAmChM,EAAAg0B,MAAgCC,mBAAoBtxB,EAAKsJ,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAA6BnI,EAAIC,GAAgB,EAALD,IACxPhE,EAAAk0B,KACAl0B,EAAAqiB,GAAoB,KACnB9V,OAAQ,CAAC,wvZAAyvZC,cAAe,EAAGC,gBAAiB,SAC9yZ,IAAM8oB,EAA0Bv1B,EAAAgY,GAA6Buc,wBAgBvDC,qBAIF,SAAAA,EAAY1P,GAAAA,IAAAA,EACRnc,EAAAA,EAAAA,KAAAA,OAAAA,KACAvI,EAAK0kB,YAAcA,EAInB1kB,EAAKkuB,cAAgB,IAAIwG,EAAAr0B,EACG,gBAAxBL,EAAKo1B,gBACL1Q,EAAYhX,cAAcwC,UAAUC,IAAI,mBARpCuU,OAAAA,sBAcZ0Q,aAAA,SAAAA,IAEI,IAAMC,EAAWr1B,KAAK0kB,YAAYhX,cAAc2nB,SAASvb,cACzD,MAAiB,aAAbub,EACO,OAEM,oBAAbA,EACO,cAEJ,QAKXpM,YAAA,SAAAA,IACIjpB,KAAKkuB,cAAc5sB,UAKvB8H,YAAA,SAAAA,IACIpJ,KAAKkuB,cAAc9e,sBAvCL0lB,UA0CtBV,EAAQvpB,eAAiBjL,EAAAkL,GAAyB,CAAEC,KAAMqpB,EAASppB,UAAW,CAAC,CAAC,YAAa,CAAC,oBAAqBtJ,QAAS,SAAAA,EAAyBC,GAAK,OAAO,IAAKA,GAAKyyB,GAASx0B,EAAAqL,GAAyBrL,EAAAmO,KAAiB5C,aAAc,SAAAA,EAA8BvH,EAAIC,EAAKuH,GAAoB,EAALxH,GAC1RhE,EAAAyL,GAA0B7I,IACzB8I,OAAQ,CAAEgoB,cAAe,iBAAmB5nB,SAAU,CAAC,WAAYC,SAAU,CAAC/L,EAAAgM,GAAmChM,EAAAg0B,MAAgCC,mBAAoBtxB,EAAKsJ,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAA0BnI,EAAIC,GAAgB,EAALD,IAClPhE,EAAAk0B,KACAl0B,EAAAqiB,GAAoB,KACnB9V,OAAQ,CAAC,wvZAAyvZC,cAAe,EAAGC,gBAAiB,0BAuBxyZgoB,wBAENA,EAA0BxmB,eAAiBjO,EAAAkO,GAAyB,CAAE/C,KAAMspB,EAA2BrpB,UAAW,CAAC,CAAC,GAAI,kBAAmB,IAAK,CAAC,GAAI,gBAAiB,KAAMtJ,QAAS,SAAAA,EAA2CC,GAAK,OAAO,IAAKA,GAAK0yB,IAAiClpB,aAAc,SAAAA,EAAgDvH,EAAIC,EAAKuH,GAAoB,EAALxH,GACrWhE,EAAAyL,GAA0B5I,4BAa5B6xB,wBAENA,EAAwBzmB,eAAiBjO,EAAAkO,GAAyB,CAAE/C,KAAMupB,EAAyBtpB,UAAW,CAAC,CAAC,GAAI,gBAAiB,IAAK,CAAC,GAAI,cAAe,KAAMtJ,QAAS,SAAAA,EAAyCC,GAAK,OAAO,IAAKA,GAAK2yB,IAA+BnpB,aAAc,SAAAA,EAA8CvH,EAAIC,EAAKuH,GAAoB,EAALxH,GACvVhE,EAAAyL,GAA0B3I,4BAa5B6xB,wBAENA,EAA6B1mB,eAAiBjO,EAAAkO,GAAyB,CAAE/C,KAAMwpB,EAA8BvpB,UAAW,CAAC,CAAC,GAAI,gBAAiB,IAAK,CAAC,GAAI,eAAgB,KAAMtJ,QAAS,SAAAA,EAA8CC,GAAK,OAAO,IAAKA,GAAK4yB,IAAoCppB,aAAc,SAAAA,EAAmDvH,EAAIC,EAAKuH,GAAoB,EAALxH,GACjXhE,EAAAyL,GAA0B1I,4BAY5B6xB,qBAOF,SAAAA,EAAYc,EAAUhtB,EAAoBitB,EAASC,GAAAA,IAAAA,EAC/CjtB,EAAAA,EAAAA,KAAAA,OAAAA,KACAvI,EAAKs1B,SAAWA,EAChBt1B,EAAKy1B,oBAAqB,EAC1Bz1B,EAAK01B,WAAa,IAAIhB,EAAAr0B,EACtBL,EAAKy1B,sBAAwBF,GAAYC,GAAgC,gBAAxBA,EAAKJ,gBACtDp1B,EAAK21B,MAAQJ,GAAWC,EAIxB,IAAM30B,EAAUb,EAAK41B,kBACkB,WAAnC/0B,EAAQw0B,SAASvb,eAA+BjZ,EAAQg1B,aAAa,SACrEh1B,EAAQoP,aAAa,OAAQ,UAE7BjQ,EAAK21B,OAGL31B,EAAK21B,MAAMzH,cAAcntB,KAAKC,OAAAjB,EAAAM,EAAAW,CAAUhB,EAAK01B,aAAa5sB,UAAU,WAIhER,EAAmBS,iBArBoBysB,OAAAA,sBA4BnDhN,mBAAA,SAAAA,IACIxnB,OAAAyzB,EAAAqB,EAAA90B,CAAShB,KAAK+1B,OAAQ/1B,KAAKs1B,aAK/BlsB,YAAA,SAAAA,IACIpJ,KAAK01B,WAAWp0B,OAChBtB,KAAK01B,WAAWtmB,cAMpB4mB,kBAAA,SAAAA,IACI,OAAQh2B,KAAKy1B,oBAAsBz1B,KAAKszB,kBACjCtzB,KAAK21B,QAAS31B,KAAK21B,MAAMrC,kBAMpCsC,gBAAA,SAAAA,IACI,OAAO51B,KAAKs1B,SAAS5nB,yBA1DHsnB,UA6D1BR,EAAY3pB,eAAiBjL,EAAAkL,GAAyB,CAAEC,KAAMypB,EAAaxpB,UAAW,CAAC,CAAC,iBAAkB,CAAC,IAAK,gBAAiB,IAAK,CAAC,SAAU,gBAAiB,KAAMtJ,QAAS,SAAAA,EAA6BC,GAAK,OAAO,IAAKA,GAAK6yB,GAAa50B,EAAAqL,GAAyBrL,EAAAmO,GAAanO,EAAAqL,GAAyBrL,EAAAsL,GAAoBtL,EAAAqL,GAAyBkpB,EAAY,GAAIv0B,EAAAqL,GAAyBmpB,EAAS,KAAQrB,eAAgB,SAAAA,EAAoCnvB,EAAIC,EAAKmvB,GAK5c,IAAIrX,EAL6d,EAAL/X,IAC5dhE,EAAAqzB,GAAsBD,EAAUqB,GAA2B,GAC3Dz0B,EAAAqzB,GAAsBD,EAAUsB,GAAyB,GACzD10B,EAAAqzB,GAAsBD,EAAUyB,EAAAT,GAAS,IAClC,EAALpwB,IAEFhE,EAAAic,GAAsBF,EAAK/b,EAAAkc,QAA0BjY,EAAIoyB,QAAUta,EAAGI,OACtEnc,EAAAic,GAAsBF,EAAK/b,EAAAkc,QAA0BjY,EAAIqyB,MAAQva,EAAGI,OACpEnc,EAAAic,GAAsBF,EAAK/b,EAAAkc,QAA0BjY,EAAIkyB,OAASpa,KACjExQ,aAAc,SAAAA,EAAkCvH,EAAIC,EAAKuH,GAAoB,EAALxH,IACzEhE,EAAAiT,GAAuB,GACvBjT,EAAAyL,GAA0BzI,GAC1BhD,EAAAqR,MACO,EAALrN,IACFhE,EAAAyzB,GAAmB,uBAAwBxvB,EAAIoyB,SAAWpyB,EAAIqyB,OAC9Dt2B,EAAAyzB,GAAmB,4BAA6BxvB,EAAIoyB,SAAWpyB,EAAIqyB,OACnEt2B,EAAA4R,OACClG,OAAQ,CAAEgoB,cAAe,iBAAmB5nB,SAAU,CAAC,eAAgBC,SAAU,CAAC/L,EAAAgM,IAAoCioB,mBAAoB5wB,EAAM4I,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAA8BnI,EAAIC,GAAgB,EAALD,IAC5NhE,EAAAk0B,GAAuB9wB,GACvBpD,EAAAkE,GAAsB,EAAG,MAAOjB,GAChCjD,EAAAsG,GAAiB,EAAG,MAAOpD,GAC3BlD,EAAAqiB,GAAoB,GACpBriB,EAAAkE,GAAsB,EAAG,MAAOf,GAChCnD,EAAAqiB,GAAoB,EAAG,GACvBriB,EAAAoE,KACApE,EAAAqiB,GAAoB,EAAG,GACvBriB,EAAAoE,MACO,EAALJ,IACFhE,EAAAwE,GAAgB,GAChBxE,EAAAuE,GAAkB,mBAAoBN,EAAtC+xB,kBAAAh2B,CAA6D,oBAAqBiE,EAAImyB,uBACrFhqB,WAAY,CAACyoB,EAAA0B,GAAmB/pB,cAAe,EAAGC,gBAAiB,0BA85BtE6nB,wBAENA,EAAc5nB,YAAc1M,EAAA2M,GAAwB,CAAExB,KAAMmpB,IAC5DA,EAAc1nB,cAAgB5M,EAAA6M,GAAwB,CAAE/K,QAAS,SAAAA,EAA+BC,GAAK,OAAO,IAAKA,GAAKuyB,IAAqBvnB,QAAS,CAAC,CAAC8nB,EAAAvoB,EAAeuoB,EAAA2B,EAAiB3B,EAAAvpB,EAAiBupB,EAAA9yB,EAAyBgzB,EAAA/pB,GACxN6pB,EAAAvoB,EACAuoB,EAAAvpB,EACAupB,EAAA9yB,EACAizB,EAAArqB,+CC7tCR/K,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA22B,IAAA,IAAAz2B,EAAAJ,EAAA,QAGO,IAAA62B,EAAA,WAAA,IAAMA,EAAN,SAAAA,aCCPA,EAAyB/pB,YAAc1M,EAAA2M,GAAoB,CAAExB,KDDhDsrB,ICEbA,EAAyB7pB,cAAgB5M,EAAA6M,GAAoB,CAAE/K,QAAS,SAAAA,EAA0CC,GAAK,OAAO,IAAKA,GDFtH00B,QAAN,wCEHP72B,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA42B,IAAA,IAAAC,EAAA/2B,EAAA,QA4Be,SAAS82B,EAAyBE,EAAeC,GAC9D,GAAIvB,UAAUvvB,OAAS,EACrB,MAAM,IAAI+wB,UAAU,kCAAoCxB,UAAUvvB,OAAS,YAG7E,IAAIgxB,EAAW31B,OAAAu1B,EAAAl2B,EAAAW,CAAOw1B,GAClBI,EAAY51B,OAAAu1B,EAAAl2B,EAAAW,CAAOy1B,GACvB,OAAOE,EAASE,UAAYD,EAAUC,wFCnCzB,SAASC,EAAgBC,EAAQC,GAI9C,IAHA,IAAIC,EAAOF,EAAS,EAAI,IAAM,GAC1BG,EAAS3vB,KAAKoqB,IAAIoF,GAAQ5Z,WAEvB+Z,EAAOvxB,OAASqxB,GAAvB,CACEE,EAAS,IAAMA,EAGjB,OAAOD,EAAOC,ECLD,SAASC,EAAkBC,GACxC,GAAIlC,UAAUvvB,OAAS,EACrB,MAAM,IAAI+wB,UAAU,iCAAmCxB,UAAUvvB,OAAS,YAG5E,IACImV,EAAO9Z,OAAAq2B,EAAAh3B,EAAAW,CAAOo2B,GACdE,EAAMxc,EAAKyc,YACXC,GAAQF,EAHO,EAGc,EAAI,GAAKA,EAHvB,EAMnB,OAFAxc,EAAK2c,WAAW3c,EAAK4c,aAAeF,GACpC1c,EAAK6c,YAAY,EAAG,EAAG,EAAG,GACnB7c,ECVM,SAAS8c,EAAkBR,GACxC,GAAIlC,UAAUvvB,OAAS,EACrB,MAAM,IAAI+wB,UAAU,iCAAmCxB,UAAUvvB,OAAS,YAG5E,IAAImV,EAAO9Z,OAAAq2B,EAAAh3B,EAAAW,CAAOo2B,GACdS,EAAO/c,EAAKgd,iBACZC,EAA4B,IAAI/Z,KAAK,GACzC+Z,EAA0BC,eAAeH,EAAO,EAAG,EAAG,GACtDE,EAA0BJ,YAAY,EAAG,EAAG,EAAG,GAC/C,IAAIM,EAAkBd,EAAkBY,GACpCG,EAA4B,IAAIla,KAAK,GACzCka,EAA0BF,eAAeH,EAAM,EAAG,GAClDK,EAA0BP,YAAY,EAAG,EAAG,EAAG,GAC/C,IAAIQ,EAAkBhB,EAAkBe,GAExC,OAAIpd,EAAK+b,WAAaoB,EAAgBpB,UAC7BgB,EAAO,EACL/c,EAAK+b,WAAasB,EAAgBtB,UACpCgB,EAEAA,EAAO,ECrBH,SAASO,EAAehB,EAAWiB,GAChD,GAAInD,UAAUvvB,OAAS,EACrB,MAAM,IAAI+wB,UAAU,iCAAmCxB,UAAUvvB,OAAS,YAG5E,IAAI1F,EAAUo4B,GAAgB,GAC1BC,EAASr4B,EAAQq4B,OACjBC,EAAqBD,GAAUA,EAAOr4B,SAAWq4B,EAAOr4B,QAAQu4B,aAChEC,EAA4C,MAAtBF,EAA6B,EAAIv3B,OAAA03B,EAAAr4B,EAAAW,CAAUu3B,GACjEC,EAAuC,MAAxBv4B,EAAQu4B,aAAuBC,EAAsBz3B,OAAA03B,EAAAr4B,EAAAW,CAAUf,EAAQu4B,cAE1F,KAAMA,GAAgB,GAAKA,GAAgB,GACzC,MAAM,IAAIG,WAAW,oDAGvB,IAAI7d,EAAO9Z,OAAAq2B,EAAAh3B,EAAAW,CAAOo2B,GACdE,EAAMxc,EAAKyc,YACXC,GAAQF,EAAMkB,EAAe,EAAI,GAAKlB,EAAMkB,EAGhD,OAFA1d,EAAK2c,WAAW3c,EAAK4c,aAAeF,GACpC1c,EAAK6c,YAAY,EAAG,EAAG,EAAG,GACnB7c,ECnBM,SAAS8d,EAAexB,EAAWiB,GAChD,GAAInD,UAAUvvB,OAAS,EACrB,MAAM,IAAI+wB,UAAU,iCAAmCxB,UAAUvvB,OAAS,YAG5E,IAAImV,EAAO9Z,OAAAq2B,EAAAh3B,EAAAW,CAAOo2B,EAAWiB,GACzBR,EAAO/c,EAAKgd,iBACZ73B,EAAUo4B,GAAgB,GAC1BC,EAASr4B,EAAQq4B,OACjBO,EAA8BP,GAAUA,EAAOr4B,SAAWq4B,EAAOr4B,QAAQ64B,sBACzEC,EAA8D,MAA/BF,EAAsC,EAAI73B,OAAA03B,EAAAr4B,EAAAW,CAAU63B,GACnFC,EAAyD,MAAjC74B,EAAQ64B,sBAAgCC,EAA+B/3B,OAAA03B,EAAAr4B,EAAAW,CAAUf,EAAQ64B,uBAErH,KAAMA,GAAyB,GAAKA,GAAyB,GAC3D,MAAM,IAAIH,WAAW,6DAGvB,IAAIK,EAAsB,IAAIhb,KAAK,GACnCgb,EAAoBhB,eAAeH,EAAO,EAAG,EAAGiB,GAChDE,EAAoBrB,YAAY,EAAG,EAAG,EAAG,GACzC,IAAIM,EAAkBG,EAAeY,EAAqBX,GACtDY,EAAsB,IAAIjb,KAAK,GACnCib,EAAoBjB,eAAeH,EAAM,EAAGiB,GAC5CG,EAAoBtB,YAAY,EAAG,EAAG,EAAG,GACzC,IAAIQ,EAAkBC,EAAea,EAAqBZ,GAE1D,OAAIvd,EAAK+b,WAAaoB,EAAgBpB,UAC7BgB,EAAO,EACL/c,EAAK+b,WAAasB,EAAgBtB,UACpCgB,EAEAA,EAAO,ECmxBlB,SAASqB,EAAoBC,EAAQC,GACnC,IAAInC,EAAOkC,EAAS,EAAI,IAAM,IAC1BE,EAAY9xB,KAAKoqB,IAAIwH,GACrBG,EAAQ/xB,KAAKyC,MAAMqvB,EAAY,IAC/BE,EAAUF,EAAY,GAE1B,GAAgB,IAAZE,EACF,OAAOtC,EAAOlc,OAAOue,GAGvB,IAAIE,EAAYJ,GAAkB,GAClC,OAAOnC,EAAOlc,OAAOue,GAASE,EAAY1C,EAAgByC,EAAS,GAGrE,SAASE,EAAkCN,EAAQC,GACjD,OAAID,EAAS,IAAO,GACPA,EAAS,EAAI,IAAM,KAChBrC,EAAgBvvB,KAAKoqB,IAAIwH,GAAU,GAAI,GAGhDO,EAAeP,EAAQC,GAGhC,SAASM,EAAeP,EAAQC,GAC9B,IAAII,EAAYJ,GAAkB,GAC9BnC,EAAOkC,EAAS,EAAI,IAAM,IAC1BE,EAAY9xB,KAAKoqB,IAAIwH,GAGzB,OAAOlC,EAFKH,EAAgBvvB,KAAKyC,MAAMqvB,EAAY,IAAK,GAElCG,EADR1C,EAAgBuC,EAAY,GAAI,GAIjC,IAAAM,EAxxBE,CAEfC,EAAG,SAAAA,EAAU9e,EAAMrZ,EAAOo4B,GACxB,IAAIC,EAAMhf,EAAKgd,iBAAmB,EAAI,EAAI,EAE1C,OAAQr2B,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OAAOo4B,EAASC,IAAIA,EAAK,CACvB/I,MAAO,gBAIX,IAAK,QACH,OAAO8I,EAASC,IAAIA,EAAK,CACvB/I,MAAO,WAIX,IAAK,OACL,QACE,OAAO8I,EAASC,IAAIA,EAAK,CACvB/I,MAAO,WAKf/B,EAAG,SAAAA,EAAUlU,EAAMrZ,EAAOo4B,GAExB,GAAc,OAAVp4B,EAAgB,CAClB,IAAIs4B,EAAajf,EAAKgd,iBAGtB,OAAO+B,EAASG,cADLD,EAAa,EAAIA,EAAa,EAAIA,EACT,CAClCE,KAAM,SAIV,OCvFC,SAAUnf,EAAMrZ,GASjB,IAAIs4B,EAAajf,EAAKgd,iBAElBD,EAAOkC,EAAa,EAAIA,EAAa,EAAIA,EAC7C,OAAOjD,EAA0B,OAAVr1B,EAAiBo2B,EAAO,IAAMA,EAAMp2B,EAAMkE,QAZhE,CDuFwBmV,EAAMrZ,IAGjCqG,EAAG,SAAAA,EAAUgT,EAAMrZ,EAAOo4B,EAAU55B,GAClC,IAAIi6B,EAAiBtB,EAAe9d,EAAM7a,GAEtCk6B,EAAWD,EAAiB,EAAIA,EAAiB,EAAIA,EAEzD,MAAc,OAAVz4B,EAEKq1B,EADYqD,EAAW,IACO,GAIzB,OAAV14B,EACKo4B,EAASG,cAAcG,EAAU,CACtCF,KAAM,SAKHnD,EAAgBqD,EAAU14B,EAAMkE,SAGzCy0B,EAAG,SAAAA,EAAUtf,EAAMrZ,GAGjB,OAAOq1B,EAFWc,EAAkB9c,GAEArZ,EAAMkE,SAW5CwwB,EAAG,SAAAA,EAAUrb,EAAMrZ,GAEjB,OAAOq1B,EADIhc,EAAKgd,iBACar2B,EAAMkE,SAGrC00B,EAAG,SAAAA,EAAUvf,EAAMrZ,EAAOo4B,GACxB,IAAIS,EAAU/yB,KAAKwC,MAAM+Q,EAAKyf,cAAgB,GAAK,GAEnD,OAAQ94B,GAEN,IAAK,IACH,OAAOsZ,OAAOuf,GAGhB,IAAK,KACH,OAAOxD,EAAgBwD,EAAS,GAGlC,IAAK,KACH,OAAOT,EAASG,cAAcM,EAAS,CACrCL,KAAM,YAIV,IAAK,MACH,OAAOJ,EAASS,QAAQA,EAAS,CAC/BvJ,MAAO,cACPyJ,QAAS,eAIb,IAAK,QACH,OAAOX,EAASS,QAAQA,EAAS,CAC/BvJ,MAAO,SACPyJ,QAAS,eAIb,IAAK,OACL,QACE,OAAOX,EAASS,QAAQA,EAAS,CAC/BvJ,MAAO,OACPyJ,QAAS,iBAKjB3H,EAAG,SAAAA,EAAU/X,EAAMrZ,EAAOo4B,GACxB,IAAIS,EAAU/yB,KAAKwC,MAAM+Q,EAAKyf,cAAgB,GAAK,GAEnD,OAAQ94B,GAEN,IAAK,IACH,OAAOsZ,OAAOuf,GAGhB,IAAK,KACH,OAAOxD,EAAgBwD,EAAS,GAGlC,IAAK,KACH,OAAOT,EAASG,cAAcM,EAAS,CACrCL,KAAM,YAIV,IAAK,MACH,OAAOJ,EAASS,QAAQA,EAAS,CAC/BvJ,MAAO,cACPyJ,QAAS,eAIb,IAAK,QACH,OAAOX,EAASS,QAAQA,EAAS,CAC/BvJ,MAAO,SACPyJ,QAAS,eAIb,IAAK,OACL,QACE,OAAOX,EAASS,QAAQA,EAAS,CAC/BvJ,MAAO,OACPyJ,QAAS,iBAKjB3yB,EAAG,SAAAA,EAAUiT,EAAMrZ,EAAOo4B,GACxB,IAAIY,EAAQ3f,EAAKyf,cAEjB,OAAQ94B,GACN,IAAK,IACL,IAAK,KACH,OC7MH,SAAUqZ,EAAMrZ,GACjB,IAAIg5B,EAAQ3f,EAAKyf,cACjB,MAAiB,MAAV94B,EAAgBsZ,OAAO0f,EAAQ,GAAK3D,EAAgB2D,EAAQ,EAAG,GAFrE,CD6M4B3f,EAAMrZ,GAGjC,IAAK,KACH,OAAOo4B,EAASG,cAAcS,EAAQ,EAAG,CACvCR,KAAM,UAIV,IAAK,MACH,OAAOJ,EAASY,MAAMA,EAAO,CAC3B1J,MAAO,cACPyJ,QAAS,eAIb,IAAK,QACH,OAAOX,EAASY,MAAMA,EAAO,CAC3B1J,MAAO,SACPyJ,QAAS,eAIb,IAAK,OACL,QACE,OAAOX,EAASY,MAAMA,EAAO,CAC3B1J,MAAO,OACPyJ,QAAS,iBAKjB5H,EAAG,SAAAA,EAAU9X,EAAMrZ,EAAOo4B,GACxB,IAAIY,EAAQ3f,EAAKyf,cAEjB,OAAQ94B,GAEN,IAAK,IACH,OAAOsZ,OAAO0f,EAAQ,GAGxB,IAAK,KACH,OAAO3D,EAAgB2D,EAAQ,EAAG,GAGpC,IAAK,KACH,OAAOZ,EAASG,cAAcS,EAAQ,EAAG,CACvCR,KAAM,UAIV,IAAK,MACH,OAAOJ,EAASY,MAAMA,EAAO,CAC3B1J,MAAO,cACPyJ,QAAS,eAIb,IAAK,QACH,OAAOX,EAASY,MAAMA,EAAO,CAC3B1J,MAAO,SACPyJ,QAAS,eAIb,IAAK,OACL,QACE,OAAOX,EAASY,MAAMA,EAAO,CAC3B1J,MAAO,OACPyJ,QAAS,iBAKjB/sB,EAAG,SAAAA,EAAUqN,EAAMrZ,EAAOo4B,EAAU55B,GAClC,IAAIy6B,EEjTO,SAAoBtD,EAAWn3B,GAC5C,GAAIi1B,UAAUvvB,OAAS,EACrB,MAAM,IAAI+wB,UAAU,iCAAmCxB,UAAUvvB,OAAS,YAG5E,IAAImV,EAAO9Z,OAAAq2B,EAAAh3B,EAAAW,CAAOo2B,GACdI,EAAOY,EAAetd,EAAM7a,GAAS42B,UCP5B,SAA4BO,EAAWiB,GACpD,GAAInD,UAAUvvB,OAAS,EACrB,MAAM,IAAI+wB,UAAU,iCAAmCxB,UAAUvvB,OAAS,YAG5E,IAAI1F,EAAUo4B,GAAgB,GAC1BC,EAASr4B,EAAQq4B,OACjBO,EAA8BP,GAAUA,EAAOr4B,SAAWq4B,EAAOr4B,QAAQ64B,sBACzEC,EAA8D,MAA/BF,EAAsC,EAAI73B,OAAA03B,EAAAr4B,EAAAW,CAAU63B,GACnFC,EAAyD,MAAjC74B,EAAQ64B,sBAAgCC,EAA+B/3B,OAAA03B,EAAAr4B,EAAAW,CAAUf,EAAQ64B,uBACjHjB,EAAOe,EAAexB,EAAWiB,GACjCsC,EAAY,IAAI3c,KAAK,GAIzB,OAHA2c,EAAU3C,eAAeH,EAAM,EAAGiB,GAClC6B,EAAUhD,YAAY,EAAG,EAAG,EAAG,GACpBS,EAAeuC,EAAWtC,GAdxB,CDO2Dvd,EAAM7a,GAAS42B,UAIvF,OAAOtvB,KAAKypB,MAAMwG,EAbO,QAawB,EAVpC,CFiTW1c,EAAM7a,GAE5B,MAAc,OAAVwB,EACKo4B,EAASG,cAAcU,EAAM,CAClCT,KAAM,SAIHnD,EAAgB4D,EAAMj5B,EAAMkE,SAGrCi1B,EAAG,SAAAA,EAAU9f,EAAMrZ,EAAOo4B,GACxB,IAAIgB,EI7TO,SAAuBzD,GACpC,GAAIlC,UAAUvvB,OAAS,EACrB,MAAM,IAAI+wB,UAAU,iCAAmCxB,UAAUvvB,OAAS,YAG5E,IAAImV,EAAO9Z,OAAAq2B,EAAAh3B,EAAAW,CAAOo2B,GACdI,EAAOL,EAAkBrc,GAAM+b,UCRtB,SAA+BO,GAC5C,GAAIlC,UAAUvvB,OAAS,EACrB,MAAM,IAAI+wB,UAAU,iCAAmCxB,UAAUvvB,OAAS,YAG5E,IAAIkyB,EAAOD,EAAkBR,GACzB0D,EAAkB,IAAI9c,KAAK,GAI/B,OAHA8c,EAAgB9C,eAAeH,EAAM,EAAG,GACxCiD,EAAgBnD,YAAY,EAAG,EAAG,EAAG,GAC1BR,EAAkB2D,GAThB,CDQwDhgB,GAAM+b,UAI3E,OAAOtvB,KAAKypB,MAAMwG,EAbO,QAawB,EAVpC,CJ6TiB1c,GAE5B,MAAc,OAAVrZ,EACKo4B,EAASG,cAAca,EAAS,CACrCZ,KAAM,SAIHnD,EAAgB+D,EAASp5B,EAAMkE,SAGxClG,EAAG,SAAAA,EAAUqb,EAAMrZ,EAAOo4B,GACxB,MAAc,OAAVp4B,EACKo4B,EAASG,cAAclf,EAAK4c,aAAc,CAC/CuC,KAAM,SC7ST,SAAUnf,EAAMrZ,GACjB,OAAOq1B,EAAgBhc,EAAK4c,aAAcj2B,EAAMkE,QAD/C,CDiTwBmV,EAAMrZ,IAGjC4G,EAAG,SAAAA,EAAUyS,EAAMrZ,EAAOo4B,GACxB,IAAIkB,EMrVO,SAAyB3D,GACtC,GAAIlC,UAAUvvB,OAAS,EACrB,MAAM,IAAI+wB,UAAU,iCAAmCxB,UAAUvvB,OAAS,YAG5E,IAAImV,EAAO9Z,OAAAq2B,EAAAh3B,EAAAW,CAAOo2B,GACd4D,EAAYlgB,EAAK+b,UACrB/b,EAAKmgB,YAAY,EAAG,GACpBngB,EAAK6c,YAAY,EAAG,EAAG,EAAG,GAC1B,IAAIuD,EAAuBpgB,EAAK+b,UAEhC,OAAOtvB,KAAKyC,OADKgxB,EAAYE,GAbL,OAc8B,EAXzC,CNqVqBpgB,GAEhC,MAAc,OAAVrZ,EACKo4B,EAASG,cAAce,EAAW,CACvCd,KAAM,cAIHnD,EAAgBiE,EAAWt5B,EAAMkE,SAG1Cqf,EAAG,SAAAA,EAAUlK,EAAMrZ,EAAOo4B,GACxB,IAAIsB,EAAYrgB,EAAKyc,YAErB,OAAQ91B,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OAAOo4B,EAASvC,IAAI6D,EAAW,CAC7BpK,MAAO,cACPyJ,QAAS,eAIb,IAAK,QACH,OAAOX,EAASvC,IAAI6D,EAAW,CAC7BpK,MAAO,SACPyJ,QAAS,eAIb,IAAK,SACH,OAAOX,EAASvC,IAAI6D,EAAW,CAC7BpK,MAAO,QACPyJ,QAAS,eAIb,IAAK,OACL,QACE,OAAOX,EAASvC,IAAI6D,EAAW,CAC7BpK,MAAO,OACPyJ,QAAS,iBAKjB/W,EAAG,SAAAA,EAAU3I,EAAMrZ,EAAOo4B,EAAU55B,GAClC,IAAIk7B,EAAYrgB,EAAKyc,YACjB6D,GAAkBD,EAAYl7B,EAAQu4B,aAAe,GAAK,GAAK,EAEnE,OAAQ/2B,GAEN,IAAK,IACH,OAAOsZ,OAAOqgB,GAGhB,IAAK,KACH,OAAOtE,EAAgBsE,EAAgB,GAGzC,IAAK,KACH,OAAOvB,EAASG,cAAcoB,EAAgB,CAC5CnB,KAAM,QAGV,IAAK,MACH,OAAOJ,EAASvC,IAAI6D,EAAW,CAC7BpK,MAAO,cACPyJ,QAAS,eAIb,IAAK,QACH,OAAOX,EAASvC,IAAI6D,EAAW,CAC7BpK,MAAO,SACPyJ,QAAS,eAIb,IAAK,SACH,OAAOX,EAASvC,IAAI6D,EAAW,CAC7BpK,MAAO,QACPyJ,QAAS,eAIb,IAAK,OACL,QACE,OAAOX,EAASvC,IAAI6D,EAAW,CAC7BpK,MAAO,OACPyJ,QAAS,iBAKjB5vB,EAAG,SAAAA,EAAUkQ,EAAMrZ,EAAOo4B,EAAU55B,GAClC,IAAIk7B,EAAYrgB,EAAKyc,YACjB6D,GAAkBD,EAAYl7B,EAAQu4B,aAAe,GAAK,GAAK,EAEnE,OAAQ/2B,GAEN,IAAK,IACH,OAAOsZ,OAAOqgB,GAGhB,IAAK,KACH,OAAOtE,EAAgBsE,EAAgB35B,EAAMkE,QAG/C,IAAK,KACH,OAAOk0B,EAASG,cAAcoB,EAAgB,CAC5CnB,KAAM,QAGV,IAAK,MACH,OAAOJ,EAASvC,IAAI6D,EAAW,CAC7BpK,MAAO,cACPyJ,QAAS,eAIb,IAAK,QACH,OAAOX,EAASvC,IAAI6D,EAAW,CAC7BpK,MAAO,SACPyJ,QAAS,eAIb,IAAK,SACH,OAAOX,EAASvC,IAAI6D,EAAW,CAC7BpK,MAAO,QACPyJ,QAAS,eAIb,IAAK,OACL,QACE,OAAOX,EAASvC,IAAI6D,EAAW,CAC7BpK,MAAO,OACPyJ,QAAS,iBAKjBnoB,EAAG,SAAAA,EAAUyI,EAAMrZ,EAAOo4B,GACxB,IAAIsB,EAAYrgB,EAAKyc,YACjB8D,EAA6B,IAAdF,EAAkB,EAAIA,EAEzC,OAAQ15B,GAEN,IAAK,IACH,OAAOsZ,OAAOsgB,GAGhB,IAAK,KACH,OAAOvE,EAAgBuE,EAAc55B,EAAMkE,QAG7C,IAAK,KACH,OAAOk0B,EAASG,cAAcqB,EAAc,CAC1CpB,KAAM,QAIV,IAAK,MACH,OAAOJ,EAASvC,IAAI6D,EAAW,CAC7BpK,MAAO,cACPyJ,QAAS,eAIb,IAAK,QACH,OAAOX,EAASvC,IAAI6D,EAAW,CAC7BpK,MAAO,SACPyJ,QAAS,eAIb,IAAK,SACH,OAAOX,EAASvC,IAAI6D,EAAW,CAC7BpK,MAAO,QACPyJ,QAAS,eAIb,IAAK,OACL,QACE,OAAOX,EAASvC,IAAI6D,EAAW,CAC7BpK,MAAO,OACPyJ,QAAS,iBAKjBn6B,EAAG,SAAAA,EAAUya,EAAMrZ,EAAOo4B,GACxB,IACIyB,EADQxgB,EAAKygB,cACgB,IAAM,EAAI,KAAO,KAElD,OAAQ95B,GACN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OAAOo4B,EAAS2B,UAAUF,EAAoB,CAC5CvK,MAAO,cACPyJ,QAAS,eAGb,IAAK,QACH,OAAOX,EAAS2B,UAAUF,EAAoB,CAC5CvK,MAAO,SACPyJ,QAAS,eAGb,IAAK,OACL,QACE,OAAOX,EAAS2B,UAAUF,EAAoB,CAC5CvK,MAAO,OACPyJ,QAAS,iBAKjBjwB,EAAG,SAAAA,EAAUuQ,EAAMrZ,EAAOo4B,GACxB,IACIyB,EADAhC,EAAQxe,EAAKygB,cAWjB,OAPED,EADY,KAAVhC,EAljBA,OAojBiB,IAAVA,EArjBH,WAwjBeA,EAAQ,IAAM,EAAI,KAAO,KAGxC73B,GACN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OAAOo4B,EAAS2B,UAAUF,EAAoB,CAC5CvK,MAAO,cACPyJ,QAAS,eAGb,IAAK,QACH,OAAOX,EAAS2B,UAAUF,EAAoB,CAC5CvK,MAAO,SACPyJ,QAAS,eAGb,IAAK,OACL,QACE,OAAOX,EAAS2B,UAAUF,EAAoB,CAC5CvK,MAAO,OACPyJ,QAAS,iBAKjBpyB,EAAG,SAAAA,EAAU0S,EAAMrZ,EAAOo4B,GACxB,IACIyB,EADAhC,EAAQxe,EAAKygB,cAajB,OATED,EADEhC,GAAS,GAnlBN,UAqlBIA,GAAS,GAtlBX,YAwlBEA,GAAS,EAzlBb,UAGF,QA4lBG73B,GACN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OAAOo4B,EAAS2B,UAAUF,EAAoB,CAC5CvK,MAAO,cACPyJ,QAAS,eAGb,IAAK,QACH,OAAOX,EAAS2B,UAAUF,EAAoB,CAC5CvK,MAAO,SACPyJ,QAAS,eAGb,IAAK,OACL,QACE,OAAOX,EAAS2B,UAAUF,EAAoB,CAC5CvK,MAAO,OACPyJ,QAAS,iBAKjBrnB,EAAG,SAAAA,EAAU2H,EAAMrZ,EAAOo4B,GACxB,GAAc,OAAVp4B,EAAgB,CAClB,IAAI63B,EAAQxe,EAAKygB,cAAgB,GAEjC,OADc,IAAVjC,IAAaA,EAAQ,IAClBO,EAASG,cAAcV,EAAO,CACnCW,KAAM,SAIV,OCllBC,SAAUnf,EAAMrZ,GACjB,OAAOq1B,EAAgBhc,EAAKygB,cAAgB,IAAM,GAAI95B,EAAMkE,QAD3D,CDklBwBmV,EAAMrZ,IAGjCg6B,EAAG,SAAAA,EAAU3gB,EAAMrZ,EAAOo4B,GACxB,MAAc,OAAVp4B,EACKo4B,EAASG,cAAclf,EAAKygB,cAAe,CAChDtB,KAAM,SCplBT,SAAUnf,EAAMrZ,GACjB,OAAOq1B,EAAgBhc,EAAKygB,cAAe95B,EAAMkE,QADhD,CDwlBwBmV,EAAMrZ,IAGjCi6B,EAAG,SAAAA,EAAU5gB,EAAMrZ,EAAOo4B,GACxB,IAAIP,EAAQxe,EAAKygB,cAAgB,GAEjC,MAAc,OAAV95B,EACKo4B,EAASG,cAAcV,EAAO,CACnCW,KAAM,SAIHnD,EAAgBwC,EAAO73B,EAAMkE,SAGtCuF,EAAG,SAAAA,EAAU4P,EAAMrZ,EAAOo4B,GACxB,IAAIP,EAAQxe,EAAKygB,cAGjB,OAFc,IAAVjC,IAAaA,EAAQ,IAEX,OAAV73B,EACKo4B,EAASG,cAAcV,EAAO,CACnCW,KAAM,SAIHnD,EAAgBwC,EAAO73B,EAAMkE,SAGtCuG,EAAG,SAAAA,EAAU4O,EAAMrZ,EAAOo4B,GACxB,MAAc,OAAVp4B,EACKo4B,EAASG,cAAclf,EAAK6gB,gBAAiB,CAClD1B,KAAM,WCnnBT,SAAUnf,EAAMrZ,GACjB,OAAOq1B,EAAgBhc,EAAK6gB,gBAAiBl6B,EAAMkE,QADlD,CDunBwBmV,EAAMrZ,IAGjCwT,EAAG,SAAAA,EAAU6F,EAAMrZ,EAAOo4B,GACxB,MAAc,OAAVp4B,EACKo4B,EAASG,cAAclf,EAAK8gB,gBAAiB,CAClD3B,KAAM,WCznBT,SAAUnf,EAAMrZ,GACjB,OAAOq1B,EAAgBhc,EAAK8gB,gBAAiBn6B,EAAMkE,QADlD,CD6nBwBmV,EAAMrZ,IAGjCo6B,EAAG,SAAAA,EAAU/gB,EAAMrZ,GACjB,OC7nBC,SAAUqZ,EAAMrZ,GACjB,IAAIq6B,EAAiBr6B,EAAMkE,OACvBo2B,EAAejhB,EAAKkhB,qBAExB,OAAOlF,EADiBvvB,KAAKyC,MAAM+xB,EAAex0B,KAAK00B,IAAI,GAAIH,EAAiB,IACtCr6B,EAAMkE,QAJ/C,CD6nBwBmV,EAAMrZ,IAGjCy6B,EAAG,SAAAA,EAAUphB,EAAMrZ,EAAO06B,EAAWl8B,GACnC,IACIm8B,GADen8B,EAAQo8B,eAAiBvhB,GACVwhB,oBAElC,GAAuB,IAAnBF,EACF,MAAO,IAGT,OAAQ36B,GAEN,IAAK,IACH,OAAOg4B,EAAkC2C,GAK3C,IAAK,OACL,IAAK,KAEH,OAAO1C,EAAe0C,GAKxB,IAAK,QACL,IAAK,MAEL,QACE,OAAO1C,EAAe0C,EAAgB,OAI5ChhB,EAAG,SAAAA,EAAUN,EAAMrZ,EAAO06B,EAAWl8B,GACnC,IACIm8B,GADen8B,EAAQo8B,eAAiBvhB,GACVwhB,oBAElC,OAAQ76B,GAEN,IAAK,IACH,OAAOg4B,EAAkC2C,GAK3C,IAAK,OACL,IAAK,KAEH,OAAO1C,EAAe0C,GAKxB,IAAK,QACL,IAAK,MAEL,QACE,OAAO1C,EAAe0C,EAAgB,OAI5CpuB,EAAG,SAAAA,EAAU8M,EAAMrZ,EAAO06B,EAAWl8B,GACnC,IACIm8B,GADen8B,EAAQo8B,eAAiBvhB,GACVwhB,oBAElC,OAAQ76B,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,MAAO,MAAQy3B,EAAoBkD,EAAgB,KAGrD,IAAK,OACL,QACE,MAAO,MAAQ1C,EAAe0C,EAAgB,OAIpDG,EAAG,SAAAA,EAAUzhB,EAAMrZ,EAAO06B,EAAWl8B,GACnC,IACIm8B,GADen8B,EAAQo8B,eAAiBvhB,GACVwhB,oBAElC,OAAQ76B,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,MAAO,MAAQy3B,EAAoBkD,EAAgB,KAGrD,IAAK,OACL,QACE,MAAO,MAAQ1C,EAAe0C,EAAgB,OAIpDz6B,EAAG,SAAAA,EAAUmZ,EAAMrZ,EAAO06B,EAAWl8B,GAGnC,OAAO62B,EADSvvB,KAAKyC,OADF/J,EAAQo8B,eAAiBvhB,GACJ+b,UAAY,KAClBp1B,EAAMkE,SAG1C62B,EAAG,SAAAA,EAAU1hB,EAAMrZ,EAAO06B,EAAWl8B,GAGnC,OAAO62B,GAFY72B,EAAQo8B,eAAiBvhB,GACf+b,UACKp1B,EAAMkE,UOnzB5C,SAAS82B,EAAkBC,EAASC,GAClC,OAAQD,GACN,IAAK,IACH,OAAOC,EAAW7hB,KAAK,CACrBiW,MAAO,UAGX,IAAK,KACH,OAAO4L,EAAW7hB,KAAK,CACrBiW,MAAO,WAGX,IAAK,MACH,OAAO4L,EAAW7hB,KAAK,CACrBiW,MAAO,SAGX,IAAK,OACL,QACE,OAAO4L,EAAW7hB,KAAK,CACrBiW,MAAO,UAKf,SAAS6L,EAAkBF,EAASC,GAClC,OAAQD,GACN,IAAK,IACH,OAAOC,EAAWE,KAAK,CACrB9L,MAAO,UAGX,IAAK,KACH,OAAO4L,EAAWE,KAAK,CACrB9L,MAAO,WAGX,IAAK,MACH,OAAO4L,EAAWE,KAAK,CACrB9L,MAAO,SAGX,IAAK,OACL,QACE,OAAO4L,EAAWE,KAAK,CACrB9L,MAAO,UA8Cf,IAIe+L,EAJM,CACnBnyB,EAAGiyB,EACHG,EA3CF,SAAAA,EAA+BL,EAASC,GACtC,IAQIK,EARAC,EAAcP,EAAQQ,MAAM,aAC5BC,EAAcF,EAAY,GAC1BG,EAAcH,EAAY,GAE9B,IAAKG,EACH,OAAOX,EAAkBC,EAASC,GAKpC,OAAQQ,GACN,IAAK,IACHH,EAAiBL,EAAWU,SAAS,CACnCtM,MAAO,UAET,MAEF,IAAK,KACHiM,EAAiBL,EAAWU,SAAS,CACnCtM,MAAO,WAET,MAEF,IAAK,MACHiM,EAAiBL,EAAWU,SAAS,CACnCtM,MAAO,SAET,MAEF,IAAK,OACL,QACEiM,EAAiBL,EAAWU,SAAS,CACnCtM,MAAO,SAKb,OAAOiM,EAAeM,QAAQ,WAAYb,EAAkBU,EAAaR,IAAaW,QAAQ,WAAYV,EAAkBQ,EAAaT,kBCxFvIY,EAA2B,CAAC,IAAK,MACjCC,EAA0B,CAAC,KAAM,QAO9B,SAASC,EAAoBh8B,GAClC,GAAc,SAAVA,EACF,MAAM,IAAIk3B,WAAW,gFAChB,GAAc,OAAVl3B,EACT,MAAM,IAAIk3B,WAAW,4EAChB,GAAc,MAAVl3B,EACT,MAAM,IAAIk3B,WAAW,sFAChB,GAAc,OAAVl3B,EACT,MAAM,IAAIk3B,WAAW,wFChBzBn5B,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAwe,IAoBA,IAAIwf,EAAyB,wDAGzBC,EAA6B,oCAC7BC,EAAsB,aACtBC,EAAoB,MACpBC,EAAgC,WAsTrB,SAAS5f,EAAOkZ,EAAW2G,EAAgB1F,GACxD,GAAInD,UAAUvvB,OAAS,EACrB,MAAM,IAAI+wB,UAAU,kCAAoCxB,UAAUvvB,OAAS,YAG7E,IAAIq4B,EAAYjjB,OAAOgjB,GACnB99B,EAAUo4B,GAAgB,GAC1BC,EAASr4B,EAAQq4B,QAAU2F,EAAA59B,EAC3Bw4B,EAA8BP,EAAOr4B,SAAWq4B,EAAOr4B,QAAQ64B,sBAC/DC,EAA8D,MAA/BF,EAAsC,EAAI73B,OAAA03B,EAAAr4B,EAAAW,CAAU63B,GACnFC,EAAyD,MAAjC74B,EAAQ64B,sBAAgCC,EAA+B/3B,OAAA03B,EAAAr4B,EAAAW,CAAUf,EAAQ64B,uBAErH,KAAMA,GAAyB,GAAKA,GAAyB,GAC3D,MAAM,IAAIH,WAAW,6DAGvB,IAAIJ,EAAqBD,EAAOr4B,SAAWq4B,EAAOr4B,QAAQu4B,aACtDC,EAA4C,MAAtBF,EAA6B,EAAIv3B,OAAA03B,EAAAr4B,EAAAW,CAAUu3B,GACjEC,EAAuC,MAAxBv4B,EAAQu4B,aAAuBC,EAAsBz3B,OAAA03B,EAAAr4B,EAAAW,CAAUf,EAAQu4B,cAE1F,KAAMA,GAAgB,GAAKA,GAAgB,GACzC,MAAM,IAAIG,WAAW,oDAGvB,IAAKL,EAAOuB,SACV,MAAM,IAAIlB,WAAW,yCAGvB,IAAKL,EAAOqE,WACV,MAAM,IAAIhE,WAAW,2CAGvB,IAAIuF,EAAel9B,OAAAq2B,EAAAh3B,EAAAW,CAAOo2B,GAE1B,ICvTa,SAAiBA,GAC9B,GAAIlC,UAAUvvB,OAAS,EACrB,MAAM,IAAI+wB,UAAU,iCAAmCxB,UAAUvvB,OAAS,YAG5E,IAAImV,EAAO9Z,OAAAq2B,EAAAh3B,EAAAW,CAAOo2B,GAClB,OAAQ+G,MAAMrjB,GAND,CDuTAojB,GACX,MAAM,IAAIvF,WAAW,sBAMvB,IACIyF,EEjWS,SAAyBhH,EAAWiH,GACjD,GAAInJ,UAAUvvB,OAAS,EACrB,MAAM,IAAI+wB,UAAU,kCAAoCxB,UAAUvvB,OAAS,YAI7E,OCNa,SAAyByxB,EAAWiH,GACjD,GAAInJ,UAAUvvB,OAAS,EACrB,MAAM,IAAI+wB,UAAU,kCAAoCxB,UAAUvvB,OAAS,YAG7E,IAAIq1B,EAAYh6B,OAAAq2B,EAAAh3B,EAAAW,CAAOo2B,GAAWP,UAC9ByH,EAASt9B,OAAA03B,EAAAr4B,EAAAW,CAAUq9B,GACvB,OAAO,IAAIrgB,KAAKgd,EAAYsD,GAPf,CDMUlH,GADVp2B,OAAA03B,EAAAr4B,EAAAW,CAAUq9B,IALV,CFiWiBH,EADTl9B,OAAAu9B,EAAAl+B,EAAAW,CAAgCk9B,IAEjDM,EAAmB,CACrB1F,sBAAuBA,EACvBN,aAAcA,EACdF,OAAQA,EACR+D,cAAe6B,GA2CjB,OAzCaF,EAAUd,MAAMS,GAA4BjzB,IAAI,SAAU+zB,GACrE,IAAIC,EAAiBD,EAAU,GAE/B,MAAuB,MAAnBC,GAA6C,MAAnBA,GAErBC,EADa7B,EAAe4B,IACdD,EAAWnG,EAAOqE,WAAY6B,GAG9CC,IACN9P,KAAK,IAAIuO,MAAMQ,GAAwBhzB,IAAI,SAAU+zB,GAEtD,GAAkB,OAAdA,EACF,MAAO,IAGT,IAAIC,EAAiBD,EAAU,GAE/B,GAAuB,MAAnBC,EACF,OAA0BD,EA2BjBvB,MAAMU,GAAqB,GAAGN,QAAQO,EAAmB,KAxBpE,IAAIe,EAAYjF,EAAW+E,GAE3B,GAAIE,EASF,OARK3+B,EAAQ4+B,8BDnZkC,IAA5CrB,EAAwBpzB,QCmZ0Cq0B,IACnEhB,EAAoBgB,IAGjBx+B,EAAQ6+B,+BD1ZmC,IAA7CvB,EAAyBnzB,QC0Z2Cq0B,IACrEhB,EAAoBgB,GAGfG,EAAUR,EAASK,EAAWnG,EAAOuB,SAAU2E,GAGxD,GAAIE,EAAexB,MAAMY,GACvB,MAAM,IAAInF,WAAW,iEAAmE+F,EAAiB,KAG3G,OAAOD,IACN9P,KAAK,0CIzaVnvB,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAq/B,IAAAv/B,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAs/B,IAAA,IAAAp/B,EAAAJ,EAAA,QAAAy/B,EAAAz/B,EAAA,QAAA0/B,EAAA1/B,EAAA,QAAAwC,EAAAxC,EAAA,QAkBA,IAAM8C,EAAM,CAAC,OAAQ,YAAa,EAAG,oCAC/By8B,aACF,SAAAA,IACI/+B,KAAKm/B,WAAY,EACjBn/B,KAAKo/B,QAAS,wCAMD,OAAOp/B,KAAKm/B,0BAKhBr6B,GAAS9E,KAAKm/B,UAAYn+B,OAAAi+B,EAAAr0B,EAAA5J,CAAsB8D,mCAK/C,OAAO9E,KAAKo/B,uBAKhBt6B,GAAS9E,KAAKo/B,OAASp+B,OAAAi+B,EAAAr0B,EAAA5J,CAAsB8D,0BAE3Di6B,EAAWl0B,eAAiBjL,EAAAkL,GAAyB,CAAEC,KAAMg0B,EAAY/zB,UAAW,CAAC,CAAC,gBAAiBtJ,QAAS,SAAAA,EAA4BC,GAAK,OAAO,IAAKA,GAAKo9B,IAAkB5zB,aAAc,SAAAA,EAAiCvH,EAAIC,EAAKuH,GAAoB,EAALxH,IACnPhE,EAAAiT,GAAuB,GACvBjT,EAAAyL,GAA0B/I,GAC1B1C,EAAAqR,MACO,EAALrN,IACFhE,EAAA0G,GAAmB,mBAAoBzC,EAAIw7B,SAAW,WAAa,cACnEz/B,EAAAyzB,GAAmB,uBAAwBxvB,EAAIw7B,UAC/Cz/B,EAAAyzB,GAAmB,0BAA2BxvB,EAAIw7B,UAClDz/B,EAAAyzB,GAAmB,oBAAqBxvB,EAAIy7B,OAC5C1/B,EAAA4R,OACClG,OAAQ,CAAE+zB,SAAU,WAAYC,MAAO,SAAWzzB,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAA6BnI,EAAIC,KAAUsI,OAAQ,CAAC,+SAAgTC,cAAe,EAAGC,gBAAiB,0BA+B1d2yB,wBAENA,EAAiB1yB,YAAc1M,EAAA2M,GAAwB,CAAExB,KAAMi0B,IAC/DA,EAAiBxyB,cAAgB5M,EAAA6M,GAAwB,CAAE/K,QAAS,SAAAA,EAAkCC,GAAK,OAAO,IAAKA,GAAKq9B,IAAwBryB,QAAS,CAAC,CAAC3K,EAAAkJ,EAAiBg0B,EAAAt0B,GACxK5I,EAAAkJ,+CC1FR1L,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA6/B,KAAA//B,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA8/B,KAAAhgC,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA+/B,KAAAjgC,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAggC,KAAA,IAAA9/B,EAAAJ,EAAA,QAAAK,EAAAL,EAAA,QAAAk1B,EAAAl1B,EAAA,QAAAmgC,EAAAngC,EAAA,QAAAogC,EAAApgC,EAAA,QAAAqgC,EAAArgC,EAAA,QAAAsgC,EAAAtgC,EAAA,QAAAugC,EAAAvgC,EAAA,QAAAwgC,EAAAxgC,EAAA,QAAAygC,EAAAzgC,EAAA,QAAA0gC,EAAA1gC,EAAA,QAAA2gC,EAAA3gC,EAAA,QAAA4gC,EAAA5gC,EAAA,QAAA6gC,EAAA7gC,EAAA,QAAA8gC,EAAA9gC,EAAA,QAAA+gC,EAAA/gC,EAAA,QAAAghC,EAAAhhC,EAAA,QAAAihC,EAAAjhC,EAAA,QAAAkhC,EAAAlhC,EAAA,QAAAmhC,EAAAnhC,EAAA,QAAAohC,EAAAphC,EAAA,QAyCA,IAAM8C,EAAM,CAAC,OAAQ,OAAQ,gBAAiB,OAAQ,EAAG,qBACnDC,EAAM,CAAC,oBAAqB,IAC5BC,EAAM,CAAC,cAAe,OAAQ,EAAG,QACjCC,EAAM,CAAC,OAAQ,MAAO,EAAG,QAAS,WAClCC,EAAM,CAAC,cAAe,QACtBC,EAAM,CAAC,EAAG,2BAChB,SAASk+B,EAA8Bj9B,EAAIC,GAOzC,GAPyD,EAALD,IAClDhE,EAAAkE,GAAsB,EAAG,KAAMpB,GAC/B9C,EAAAkE,GAAsB,EAAG,KAAMnB,GAC/B/C,EAAAqR,KACArR,EAAAmE,GAAc,GACdnE,EAAAoE,KACApE,EAAAoE,MACO,EAALJ,EAAQ,CACV,IAAMk9B,EAAUlhC,EAAAgF,KAChBhF,EAAAwE,GAAgB,GAChBxE,EAAA0R,GAAmB,cAAewvB,EAAQC,cAC1CnhC,EAAA0R,GAAmB,iBAAkBwvB,EAAQC,cAC7CnhC,EAAA4R,KACA5R,EAAA0G,GAAmB,UAAWw6B,EAAQE,SACtCphC,EAAAwE,GAAgB,GAChBxE,EAAAyE,GAAyBy8B,EAAQG,QAErC,IAAMr+B,EAAM,CAAC,OAAQ,OACfC,EAAM,CAAC,cAAe,OAAQ,QAAS,0BAA2B,EAAG,aAAc,gBAAiB,EAAG,QACvGC,EAAM,CAAC,OAAQ,WAAY,QAAS,yBAA0B,OAAQ,SAAU,EAAG,UAAW,WAAY,6BAA8B,2BAA4B,QAAS,aAAc,gBAAiB,QAAS,EAAG,QAAS,WACjOC,EAAM,CAAC,cAAe,OAAQ,EAAG,2BACvC,SAASm+B,EAAmCt9B,EAAIC,GAK9C,GAL8D,EAALD,IACvDhE,EAAAkE,GAAsB,EAAG,KAAMf,GAC/BnD,EAAAqR,KACArR,EAAAmE,GAAc,GACdnE,EAAAoE,MACO,EAALJ,EAAQ,CACV,IAAMu9B,EAAUvhC,EAAAgF,GAAqB,GACrChF,EAAA0R,GAAmB,cAAe6vB,EAAQJ,cAC1CnhC,EAAA0R,GAAmB,iBAAkB6vB,EAAQJ,cAC7CnhC,EAAA4R,KACA5R,EAAA0G,GAAmB,UAAW66B,EAAQC,iBACtCxhC,EAAAwE,GAAgB,GAChBxE,EAAAyE,GAAyB88B,EAAQC,iBAAmBD,EAAQE,sBAAwBF,EAAQF,MAAQ,KAExG,IAAMj+B,EAAO,CAAC,OAAQ,WAAY,OAAQ,SAAU,EAAG,yBAA0B,EAAG,UAAW,WAAY,SACrGC,EAAO,CAAC,EAAG,kCACjB,SAASq+B,EAAmC19B,EAAIC,GAAO,GAAS,EAALD,EAAQ,CAC/D,IAAM29B,EAAO3hC,EAAA4E,KACb5E,EAAAkE,GAAsB,EAAG,KAAMd,GAC/BpD,EAAAqR,KACArR,EAAA6E,GAAkB,QAAS,SAAgEC,GAAU9E,EAAA+E,GAAqB48B,GAAO,IAAMC,EAAW39B,EAAIK,UAAoD,OAAzBtE,EAAAgF,GAAqB,GAAmB68B,aAAaD,KACtO5hC,EAAAkE,GAAsB,EAAG,MAAOb,GAChCrD,EAAAqR,KACArR,EAAAmE,GAAc,GACdnE,EAAAoE,KACApE,EAAAoE,KACF,GAAS,EAALJ,EAAQ,CACV,IAAM49B,EAAW39B,EAAIK,UACfw9B,EAAe79B,EAAIsrB,MACnBwS,EAAe/hC,EAAAgF,KAAuBuqB,MACtCyS,EAAUhiC,EAAAgF,KAChBhF,EAAA0R,GAAmB,QAASswB,EAAQC,YACpCjiC,EAAA0R,GAAmB,cAAeswB,EAAQb,cAC1CnhC,EAAA0R,GAAmB,iBAAkBswB,EAAQb,cAC7CnhC,EAAAyzB,GAAmB,8BAA+BmO,EAASM,SAC3DliC,EAAAyzB,GAAmB,2BAA4BuO,EAAQG,cAAcJ,EAAcD,IACnF9hC,EAAA4R,KACA5R,EAAAuE,GAAkB,UAAWq9B,EAA7BQ,WAAApiC,CAAkD,WAAYgiC,EAAQG,cAAcJ,EAAcD,GAAgB,GAAI,GACtH9hC,EAAA0G,GAAmB,aAAck7B,EAAjCza,UAAAnnB,CAAqD,iBAAkB4hC,EAASM,SAAhF,KAAAliC,CAAiG,gBAAiBgiC,EAAQK,gBAAkBT,EAAS18B,OACrJlF,EAAAwE,GAAgB,GAChBxE,EAAAyzB,GAAmB,6BAA8BuO,EAAQK,gBAAkBT,EAAS18B,OACpFlF,EAAAyzB,GAAmB,0BAA2BuO,EAAQM,aAAeV,EAAS18B,OAC9ElF,EAAA4R,KACA5R,EAAAwE,GAAgB,GAChBxE,EAAAyE,GAAyBm9B,EAASW,eAEtC,SAASC,EAA8Bx+B,EAAIC,GAKzC,GALyD,EAALD,IAClDhE,EAAAkE,GAAsB,EAAG,KAAMlB,GAC/BhD,EAAAmF,GAAkB,EAAGm8B,EAAoC,EAAG,EAAG,KAAMr+B,GACrEjD,EAAAmF,GAAkB,EAAGu8B,EAAoC,EAAG,GAAI,KAAMx+B,GACtElD,EAAAoE,MACO,EAALJ,EAAQ,CACV,IAAMy+B,EAAUx+B,EAAIK,UACdy9B,EAAe99B,EAAIsrB,MACnBmT,EAAU1iC,EAAAgF,KAChBhF,EAAAwE,GAAgB,GAChBxE,EAAAuE,GAAkB,OAAyB,IAAjBw9B,GAAsBW,EAAQlB,iBACxDxhC,EAAAwE,GAAgB,GAChBxE,EAAAuE,GAAkB,UAAWk+B,IAEjC,IAAMn/B,EAAO,CAAC,OAAQ,eAAgB,EAAG,sBACnCC,EAAO,CAAC,EAAG,6BACXC,EAAO,CAAC,EAAG,QAAS,WACpBC,EAAO,CAAC,UAAW,IAAK,cAAe,OAAQ,EAAG,qCAClDC,EAAO,CAAC,oBAAqB,GAAI,EAAG,QAAS,OAAQ,aAAc,gBAAiB,wBAAyB,aAAc,sBAAuB,WACxJ,SAASi/B,EAA2B3+B,EAAIC,GAItC,GAJsD,EAALD,IAC/ChE,EAAAkE,GAAsB,EAAG,MACzBlE,EAAAmE,GAAc,GACdnE,EAAAoE,MACO,EAALJ,EAAQ,CACV,IAAM4+B,EAAU3+B,EAAIK,UACpBtE,EAAA0G,GAAmB,aAAck8B,EAAAA,SACjC5iC,EAAAwE,GAAgB,GAChBxE,EAAAyE,GAAyBm+B,EAAQC,SAErC,IAAMl/B,EAAO,CAAC,UAAW,IAAK,EAAG,qCAC3BC,EAAO,CAAC,oBAAqB,GAAI,EAAG,OAAQ,aAAc,gBAAiB,UAAW,kBAAmB,aAAc,sBAAuB,WAC9IC,EAAO,CAAC,oBAAqB,GAAI,EAAG,QAAS,OAAQ,aAAc,gBAAiB,wBAAyB,UAAW,kBAAmB,aAAc,sBAAuB,WAChLC,EAAO,CAAC,EAAG,uBACXkC,EAAO,CAAC,EAAG,yBACXC,GAAO,CAAC,aAAc,GAAI,OAAQ,SAAU,cAAe,SAAU,EAAG,6BAA8B,EAAG,SACzGU,GAAO,CAAC,EAAG,sBACXC,GAAO,CAAC,EAAG,uBACXk8B,GAAO,CAAC,kBAAmB,GAAI,OAAQ,SAAU,EAAG,+BAAgC,EAAG,WAAY,SACnGC,GAAO,CAAC,kBAAmB,GAAI,OAAQ,SAAU,EAAG,2BAA4B,EAAG,WAAY,SAC/FC,GAAO,CAAC,KACRC,GAAO,CAAC,EAAG,gBACXC,GAAO,CAAC,EAAG,mBACXC,GAAO,CAAC,yBAA0B,GAAI,WAAY,KAAM,EAAG,uBAAwB,EAAG,YACtFC,GAAO,CAAC,EAAG,aAAc,WAAY,aAAc,UAAW,UAAW,YAAa,mBAAoB,iBAAkB,iBAAkB,EAAG,gBACjJC,GAAO,CAAC,EAAG,aAAc,WAAY,aAAc,UAAW,UAAW,mBAAoB,gBAAiB,iBAAkB,EAAG,gBACnIC,GAAO,CAAC,EAAG,aAAc,WAAY,aAAc,UAAW,UAAW,mBAAoB,eAAgB,iBAAkB,EAAG,gBACxI,SAASC,GAAmCv/B,EAAIC,IAChD,IAAMu/B,GAAO,CAAC,EAAG,aAAc,WAAY,aAAc,UAAW,UAAW,YAAa,mBAAoB,iBAAkB,kBAClI,SAASC,GAAsCz/B,EAAIC,GAAO,GAAS,EAALD,EAAQ,CAClE,IAAM0/B,EAAO1jC,EAAA4E,KACb5E,EAAAkE,GAAsB,EAAG,iBAAkBs/B,IAC3CxjC,EAAA6E,GAAkB,mBAAoB,SAA0FC,GAA8E,OAApE9E,EAAA+E,GAAqB2+B,GAAuB1jC,EAAAgF,KAAuC2+B,WAAa7+B,IAC1O9E,EAAA6E,GAAkB,iBAAkB,SAAwFC,GAA8E,OAApE9E,EAAA+E,GAAqB2+B,GAAuB1jC,EAAAgF,KAAuC4+B,cAAc9+B,KACvO9E,EAAA6E,GAAkB,iBAAkB,SAAwFC,GAA8E,OAApE9E,EAAA+E,GAAqB2+B,GAAuB1jC,EAAAgF,KAAuC6+B,kBACzN7jC,EAAAoE,KACF,GAAS,EAALJ,EAAQ,CACV,IAAM8/B,EAAU9jC,EAAAgF,KAChBhF,EAAAuE,GAAkB,aAAcu/B,EAAhCH,WAAA3jC,CAAoD,WAAY8jC,EAAhE5rB,SAAAlY,CAAkF,aAAc8jC,EAAhGC,WAAA/jC,CAAoH,UAAW8jC,EAA/HE,QAAAhkC,CAAgJ,UAAW8jC,EAA3JG,QAAAjkC,CAA4K,YAAa8jC,EAAQI,YAErM,IAAMC,GAAO,CAAC,EAAG,aAAc,WAAY,aAAc,UAAW,UAAW,mBAAoB,gBAAiB,kBACpH,SAASC,GAAqCpgC,EAAIC,GAAO,GAAS,EAALD,EAAQ,CACjE,IAAMqgC,EAAOrkC,EAAA4E,KACb5E,EAAAkE,GAAsB,EAAG,gBAAiBigC,IAC1CnkC,EAAA6E,GAAkB,mBAAoB,SAAwFC,GAA8E,OAApE9E,EAAA+E,GAAqBs/B,GAAuBrkC,EAAAgF,KAAuC2+B,WAAa7+B,IACxO9E,EAAA6E,GAAkB,gBAAiB,SAAqFC,GAA8E,OAApE9E,EAAA+E,GAAqBs/B,GAAuBrkC,EAAAgF,KAAuCs/B,yBAAyBx/B,KAC9O9E,EAAA6E,GAAkB,iBAAkB,SAAsFC,GAA8E,OAApE9E,EAAA+E,GAAqBs/B,GAAuBrkC,EAAAgF,KAAuCu/B,gBAAgBz/B,EAAQ,WAC/O9E,EAAAoE,KACF,GAAS,EAALJ,EAAQ,CACV,IAAMwgC,EAAUxkC,EAAAgF,KAChBhF,EAAAuE,GAAkB,aAAcigC,EAAhCb,WAAA3jC,CAAoD,WAAYwkC,EAAhEtsB,SAAAlY,CAAkF,aAAcwkC,EAAhGT,WAAA/jC,CAAoH,UAAWwkC,EAA/HR,QAAAhkC,CAAgJ,UAAWwkC,EAAQP,UAEvK,IAAMQ,GAAO,CAAC,EAAG,aAAc,WAAY,aAAc,UAAW,UAAW,mBAAoB,eAAgB,kBACnH,SAASC,GAA2C1gC,EAAIC,GAAO,GAAS,EAALD,EAAQ,CACvE,IAAM2gC,EAAO3kC,EAAA4E,KACb5E,EAAAkE,GAAsB,EAAG,sBAAuBugC,IAChDzkC,EAAA6E,GAAkB,mBAAoB,SAAoGC,GAA8E,OAApE9E,EAAA+E,GAAqB4/B,GAAuB3kC,EAAAgF,KAAuC2+B,WAAa7+B,IACpP9E,EAAA6E,GAAkB,eAAgB,SAAgGC,GAA8E,OAApE9E,EAAA+E,GAAqB4/B,GAAuB3kC,EAAAgF,KAAuC4/B,6BAA6B9/B,KAC5P9E,EAAA6E,GAAkB,iBAAkB,SAAkGC,GAA8E,OAApE9E,EAAA+E,GAAqB4/B,GAAuB3kC,EAAAgF,KAAuCu/B,gBAAgBz/B,EAAQ,UAC3P9E,EAAAoE,KACF,GAAS,EAALJ,EAAQ,CACV,IAAM6gC,EAAU7kC,EAAAgF,KAChBhF,EAAAuE,GAAkB,aAAcsgC,EAAhClB,WAAA3jC,CAAoD,WAAY6kC,EAAhE3sB,SAAAlY,CAAkF,aAAc6kC,EAAhGd,WAAA/jC,CAAoH,UAAW6kC,EAA/Hb,QAAAhkC,CAAgJ,UAAW6kC,EAAQZ,UAEvK,IAAMa,GAAO,CAAC,EAAG,0BACXC,GAAO,CAAC,eAAgB,GAAI,EAAG,KAAM,UAAW,UAAW,YAAa,UAAW,UAAW,aAAc,kBAAmB,WAAY,YAAa,iBAAkB,eAAgB,gBAAiB,kBAC3MC,GAAO,CAAC,gBAAiB,UACzBC,GAAO,CAAC,UACRC,GAAO,CAAC,EAAG,yBACXC,GAAO,CAAC,kBAAmB,GAAI,OAAQ,SAAU,gBAAiB,SAAU,EAAG,WAAY,gBAAiB,SAC5GC,GAAO,CAAC,SAAU,IAClBC,GAAO,CAAC,QAAS,qCAAsC,UAAW,YAAa,QAAS,OAAQ,SAAU,OAAQ,OAAQ,eAAgB,YAAa,QAAS,EAAG,QACnKC,GAAO,CAAC,UAAW,YAAa,QAAS,OAAQ,SAAU,OAAQ,OAAQ,eAAgB,YAAa,QAAS,EAAG,sCACpHC,GAAO,CAAC,IAAK,uIACnB,SAASC,GAAwCxhC,EAAIC,GAAgB,EAALD,IAC5DhE,EAAAqG,KACArG,EAAAkE,GAAsB,EAAG,MAAOohC,IAChCtlC,EAAAsG,GAAiB,EAAG,OAAQi/B,IAC5BvlC,EAAAoE,MAEJ,IAAMqhC,GAAO,CAAC,CAAC,CAAC,GAAI,0BAA2B,MACzCC,GAAO,CAAC,6BACd,SAASC,GAA2BC,GAChC,OAAOr2B,MAAAA,wCAA8Cq2B,EAA9Cr2B,0CACH,yIAWFs2B,EACF,SAAAA,IAKIzlC,KAAKiH,QAAU,IAAIpH,EAAAQ,EAInBL,KAAK0lC,cAAgB,WAIrB1lC,KAAK2lC,kBAAoB,gBAIzB3lC,KAAK4lC,eAAiB,iBAItB5lC,KAAK6lC,eAAiB,aAItB7lC,KAAK8lC,cAAgB,gBAIrB9lC,KAAK+lC,cAAgB,YAIrB/lC,KAAKgmC,mBAAqB,oBAI1BhmC,KAAKimC,mBAAqB,gBAI1BjmC,KAAKkmC,uBAAyB,cAI9BlmC,KAAKmmC,2BAA6B,gCAG1CV,EAAkBlkC,gBAAkB3B,EAAA4B,GAA0B,CAAEC,MAAOgkC,EAAmB/jC,QAAS,SAAAA,EAAmCC,GAAK,OAAO,IAAKA,GAAK8jC,IAAyB7jC,WAAY,SAK9K6jC,EAAkBlkC,gBAAkBP,OAAApB,EAAA4B,GAAAR,CAAmB,CAAEU,QAAS,SAAAA,IAAuC,OAAO,IAAI+jC,GAAwBhkC,MAAOgkC,EAAmB7jC,WAAY,kBAU/LwkC,GAQF,SAAAA,EAAYthC,EAAOq9B,EAAcpb,EAAW+a,EAASE,GACjDhiC,KAAK8E,MAAQA,EACb9E,KAAKmiC,aAAeA,EACpBniC,KAAK+mB,UAAYA,EACjB/mB,KAAK8hC,QAAUA,EACf9hC,KAAKgiC,WAAaA,yBAOpBqE,aAKF,SAAAA,EAAY3hB,EAAaU,GACrBplB,KAAK0kB,YAAcA,EACnB1kB,KAAKolB,QAAUA,EAIfplB,KAAKghC,QAAU,EAIfhhC,KAAKsmC,WAAa,EAKlBtmC,KAAKumC,gBAAkB,EAIvBvmC,KAAKwmC,oBAAsB,IAAI5mC,EAAA+B,sBAMnC8/B,aAAA,SAAAA,EAAagF,GACLA,EAAK3E,SACL9hC,KAAKwmC,oBAAoBh8B,KAAKi8B,EAAK3hC,UAO3CmkB,YAAA,SAAAA,EAAYhiB,GAEFy/B,IAAAA,EAAgBz/B,EAAiB+5B,QAC/B2F,EAAkB3mC,KAApB2mC,KAAQ3F,EAAYhhC,KAAdghC,SACR/5B,EAAc0/B,MAAKD,KACnB1mC,KAAKohC,gBAAkBuF,GAAQA,EAAKhhC,QAAUghC,EAAK,GAAGhhC,OAASq7B,EAAU2F,EAAK,GAAGhhC,OAAS,IAE1FsB,EAAyBs/B,iBAAKG,IAAkB1mC,KAAK+gC,gBACrD/gC,KAAK+gC,aAAkB,GAAK/gC,KAAKumC,gBAAkBvF,EAAnDhhC,MAEA0mC,GAAkB1mC,KAAK6hC,aACvB7hC,KAAK6hC,WAAgB,IAAMb,EAA3BhhC,QAQR+hC,cAAA,SAAAA,EAAc6E,EAAUC,GAEpB,IAAIC,EAAaF,EAAW5mC,KAAKghC,QAAU6F,EAK3C,OAHID,IACAE,GAAc9mC,KAAKohC,iBAEhB0F,GAAc9mC,KAAKsmC,cAM9BS,iBAAA,SAAAA,IAAA,IAAAC,EAAAhnC,KACIA,KAAKolB,QAAQ6hB,kBAAkB,WAI3BjnC,EAAKolB,QAAQgC,SAAStmB,eAAeC,KAAKC,OAAA6+B,EAAAx/B,EAAAW,CAAK,IAAI8H,UAAU,WAKzD,IAAMw9B,EAAatmC,EAAK0kB,YAAYhX,cAAcgD,cAAc,6BAC5D41B,GACAA,EAAW1Y,gCAM/ByY,EAAgBx7B,eAAiBjL,EAAAkL,GAAyB,CAAEC,KAAMs7B,EAAiBr7B,UAAW,CAAC,CAAC,GAAI,oBAAqB,KAAMtJ,QAAS,SAAAA,EAAiCC,GAAK,OAAO,IAAKA,GAAK0kC,GAAiBzmC,EAAAqL,GAAyBrL,EAAAmO,GAAanO,EAAAqL,GAAyBrL,EAAAgzB,KAAaznB,aAAc,SAAAA,EAAsCvH,EAAIC,EAAKuH,GAAoB,EAALxH,GAChWhE,EAAAyL,GAA0B/I,IACzBgJ,OAAQ,CAAE01B,QAAS,UAAWsF,WAAY,aAAcC,gBAAiB,kBAAmBtF,MAAO,QAAS0F,KAAM,OAAQzE,WAAY,aAAcD,cAAe,gBAAiBZ,sBAAuB,yBAA2B51B,QAAS,CAAE+6B,oBAAqB,uBAAyB96B,SAAU,CAAC,mBAAoBC,SAAU,CAAC/L,EAAAg0B,MAAgCsT,MAAO3kC,EAAKsJ,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAAkCnI,EAAIC,GAAgB,EAALD,IACrchE,EAAAmF,GAAkB,EAAG87B,EAA+B,EAAG,EAAG,KAAMr+B,GAChE5C,EAAAmF,GAAkB,EAAGq9B,EAA+B,EAAG,EAAG,KAAM3/B,IACzD,EAALmB,IACFhE,EAAAuE,GAAkB,OAAQN,EAAIu9B,gBAAkBv9B,EAAIw9B,uBACpDzhC,EAAAwE,GAAgB,GAChBxE,EAAAuE,GAAkB,UAAWN,EAAI8iC,QAChC36B,WAAY,CAACs0B,EAAAr0B,EAAaq0B,EAAAp0B,EAAgBo0B,EAAAtM,GAAiB7nB,OAAQ,CAAC,0iCAA2iCC,cAAe,EAAGC,gBAAiB,SAwD3pC,IAAM86B,GAAgB,wBAMhBC,aAOF,SAAAA,EAAY9+B,EAAoB++B,EAAcC,EAAcjiB,GAiBxD,GAhBArlB,KAAKsI,mBAAqBA,EAC1BtI,KAAKqnC,aAAeA,EACpBrnC,KAAKsnC,aAAeA,EACpBtnC,KAAKqlB,KAAOA,EAIZrlB,KAAKunC,eAAiB,IAAI3nC,EAAA+B,EAI1B3B,KAAKwnC,eAAiB,IAAI5nC,EAAA+B,EAI1B3B,KAAKynC,iBAAmB,IAAI7nC,EAAA+B,GACvB3B,KAAKsnC,aACN,MAAM/B,GAA2B,eAErC,IAAKvlC,KAAKqnC,aACN,MAAM9B,GAA2B,oBAErCvlC,KAAK0nC,YAAc1nC,KAAKsnC,aAAaK,4BA6DzCnf,mBAAA,SAAAA,IACIxoB,KAAK4nC,WAOTpE,cAAA,SAAAA,EAAc1oB,GACV,GAAI9a,KAAK6nC,eAAiB/sB,EAAM,CAE5B,IAAMgtB,EAAe9nC,KAAKsnC,aAAaS,QAAQ/nC,KAAKujC,YAE9CyE,EAAgBhoC,KAAKsnC,aAAaW,SAASjoC,KAAKujC,YAEhD2E,EAAeloC,KAAKsnC,aAAaa,WAAWL,EAAcE,EAAeltB,GAC/E9a,KAAKunC,eAAe/8B,KAAK09B,GAE7BloC,KAAKwnC,eAAeh9B,UAOxB49B,2BAAA,SAAAA,EAA2B3tB,GAQvB,IAAM4tB,EAAgBroC,KAAK0nC,YAErBlX,EAAQxwB,KAAK6pB,SACnB,OAAQpP,EAAM8P,SACV,KAAKwV,EAAA1tB,EACDrS,KAAKujC,WAAavjC,KAAKsnC,aAAagB,gBAAgBtoC,KAAK0nC,YAAalX,EAAQ,GAAK,GACnF,MACJ,KAAKuP,EAAA7zB,EACDlM,KAAKujC,WAAavjC,KAAKsnC,aAAagB,gBAAgBtoC,KAAK0nC,YAAalX,GAAS,EAAI,GACnF,MACJ,KAAKuP,EAAAp1B,EACD3K,KAAKujC,WAAavjC,KAAKsnC,aAAagB,gBAAgBtoC,KAAK0nC,aAAc,GACvE,MACJ,KAAK3H,EAAAtgC,EACDO,KAAKujC,WAAavjC,KAAKsnC,aAAagB,gBAAgBtoC,KAAK0nC,YAAa,GACtE,MACJ,KAAK3H,EAAA5sB,EACDnT,KAAKujC,WAAavjC,KAAKsnC,aAAagB,gBAAgBtoC,KAAK0nC,YAAa,EAAI1nC,KAAKsnC,aAAaiB,QAAQvoC,KAAK0nC,cACzG,MACJ,KAAK3H,EAAAtc,EACDzjB,KAAKujC,WAAavjC,KAAKsnC,aAAagB,gBAAgBtoC,KAAK0nC,YAAc1nC,KAAKsnC,aAAakB,kBAAkBxoC,KAAK0nC,aAC5G1nC,KAAKsnC,aAAaiB,QAAQvoC,KAAK0nC,cACnC,MACJ,KAAK3H,EAAA/L,EACDh0B,KAAKujC,WAAa9oB,EAAMiQ,OACpB1qB,KAAKsnC,aAAamB,iBAAiBzoC,KAAK0nC,aAAc,GACtD1nC,KAAKsnC,aAAaoB,kBAAkB1oC,KAAK0nC,aAAc,GAC3D,MACJ,KAAK3H,EAAA70B,EACDlL,KAAKujC,WAAa9oB,EAAMiQ,OACpB1qB,KAAKsnC,aAAamB,iBAAiBzoC,KAAK0nC,YAAa,GACrD1nC,KAAKsnC,aAAaoB,kBAAkB1oC,KAAK0nC,YAAa,GAC1D,MACJ,KAAK3H,EAAAt1B,EACL,KAAKs1B,EAAA9zB,EAOD,YANKjM,KAAK2jC,aAAc3jC,KAAK2jC,WAAW3jC,KAAK0nC,eACzC1nC,KAAKwjC,cAAcxjC,KAAKsnC,aAAaiB,QAAQvoC,KAAK0nC,cAClD1nC,KAAKwnC,eAAeh9B,OAEpBiQ,EAAMkQ,mBAGd,QAEI,OAEJ3qB,KAAKsnC,aAAaqB,YAAYN,EAAeroC,KAAKujC,aAClDvjC,KAAKynC,iBAAiBj9B,KAAKxK,KAAKujC,YAEpCvjC,KAAK+mC,mBAELtsB,EAAMkQ,oBAMVid,MAAA,SAAAA,IACI5nC,KAAK6nC,cAAgB7nC,KAAK4oC,uBAAuB5oC,KAAK8X,UACtD9X,KAAK6oC,WAAa7oC,KAAK4oC,uBAAuB5oC,KAAKsnC,aAAaK,SAChE3nC,KAAK8oC,YACD9oC,KAAKsnC,aAAayB,cAAc,SAAS/oC,KAAKsnC,aAAaW,SAASjoC,KAAKujC,aACpEyF,oBAET,IAAIC,EAAejpC,KAAKsnC,aAAaa,WAAWnoC,KAAKsnC,aAAaS,QAAQ/nC,KAAKujC,YAAavjC,KAAKsnC,aAAaW,SAASjoC,KAAKujC,YAAa,GACzIvjC,KAAKkpC,kBACA/B,GAAgBnnC,KAAKsnC,aAAa6B,aAAaF,GAC5CjpC,KAAKsnC,aAAa8B,qBAAuBjC,GACjDnnC,KAAKqpC,gBACLrpC,KAAKspC,mBACLtpC,KAAKsI,mBAAmBS,kBAM5Bg+B,iBAAA,SAAAA,IACI/mC,KAAKupC,iBAAiBxC,sBAO1BsC,cAAA,SAAAA,IAEI,IAAMG,EAAiBxpC,KAAKsnC,aAAa8B,oBAEnCK,EAAiBzpC,KAAKsnC,aAAaoC,kBAAkB,UAK3D,IAAIC,EAHiB3pC,KAAKsnC,aAAaoC,kBAAkB,QAG7Bh/B,IAAI,SAK/Bk/B,EAAMv3B,GALyB,MAMrB,CAAEu3B,KAAAA,EAAMnH,OAAQgH,EAAep3B,MAE1CrS,KAAK6pC,UAAYF,EAASx/B,MAAMq/B,GAAgBjuB,OAAOouB,EAASx/B,MAAM,EAAGq/B,OAO7EF,iBAAA,SAAAA,IAEI,IAAMQ,EAAc9pC,KAAKsnC,aAAakB,kBAAkBxoC,KAAKujC,YAEvDwG,EAAY/pC,KAAKsnC,aAAa0C,eACpChqC,KAAKiqC,OAAS,CAAC,IACf,IAAK,IAAI53B,EAAI,EAAGo0B,EAAOzmC,KAAKkpC,iBAAkB72B,EAAIy3B,EAAaz3B,IAAKo0B,IAAQ,CACpEA,GAAQU,KACRnnC,KAAKiqC,OAAO5/B,KAAK,IACjBo8B,EAAO,GAGX,IAAM3rB,EAAO9a,KAAKsnC,aAAaa,WAAWnoC,KAAKsnC,aAAaS,QAAQ/nC,KAAKujC,YAAavjC,KAAKsnC,aAAaW,SAASjoC,KAAKujC,YAAalxB,EAAI,GAEjIyvB,EAAU9hC,KAAKkqC,kBAAkBpvB,GAEjCiM,EAAY/mB,KAAKsnC,aAAappB,OAAOpD,EAAM9a,KAAKqnC,aAAa/xB,QAAQE,eAErE20B,EAAcnqC,KAAK8jC,UAAY9jC,KAAK8jC,UAAUhpB,QAAQ7L,EAC5DjP,KAAKiqC,OAAOjqC,KAAKiqC,OAAOtkC,OAAS,GAC5B0E,KAAK,IAAI+7B,GAAgB/zB,EAAI,EAAG03B,EAAU13B,GAAI0U,EAAW+a,EAASqI,QAS/ED,kBAAA,SAAAA,EAAkBpvB,GACd,QAASA,KACH9a,KAAK2jC,YAAc3jC,KAAK2jC,WAAW7oB,OACnC9a,KAAK6jC,SAAW7jC,KAAKsnC,aAAaqB,YAAY7tB,EAAM9a,KAAK6jC,UAAY,MACrE7jC,KAAK4jC,SAAW5jC,KAAKsnC,aAAaqB,YAAY7tB,EAAM9a,KAAK4jC,UAAY,MAS/EgF,uBAAA,SAAAA,EAAuB9tB,GACnB,OAAOA,GAAQ9a,KAAKoqC,qBAAqBtvB,EAAM9a,KAAKujC,YAChDvjC,KAAKsnC,aAAaiB,QAAQztB,GAAQ,QAS1CsvB,qBAAA,SAAAA,EAAqBC,EAAIC,GACrB,SAAUD,IAAMC,GAAMtqC,KAAKsnC,aAAaW,SAASoC,IAAOrqC,KAAKsnC,aAAaW,SAASqC,IAC/EtqC,KAAKsnC,aAAaS,QAAQsC,IAAOrqC,KAAKsnC,aAAaS,QAAQuC,OAOnEC,oBAAA,SAAAA,EAAoBC,GAChB,OAAQxqC,KAAKsnC,aAAamD,eAAeD,IAAQxqC,KAAKsnC,aAAaoD,QAAQF,GAAQA,EAAM,QAO7F3gB,OAAA,SAAAA,IACI,OAAO7pB,KAAKqlB,MAA4B,QAApBrlB,KAAKqlB,KAAKvgB,+CA3Qf,OAAO9E,KAAK0nC,4BAKhB5iC,GAEX,IAAMujC,EAAgBroC,KAAK0nC,YAErBiD,EAAY3qC,KAAKuqC,oBAAoBvqC,KAAKsnC,aAAasD,YAAY9lC,KAAW9E,KAAKsnC,aAAaK,QACtG3nC,KAAK0nC,YAAc1nC,KAAKsnC,aAAauD,UAAUF,EAAW3qC,KAAK6jC,QAAS7jC,KAAK4jC,SACxE5jC,KAAKoqC,qBAAqB/B,EAAeroC,KAAK0nC,cAC/C1nC,KAAK4nC,2CAOI,OAAO5nC,KAAK8qC,0BAKhBhmC,GACT9E,KAAK8qC,UAAY9qC,KAAKuqC,oBAAoBvqC,KAAKsnC,aAAasD,YAAY9lC,IACxE9E,KAAK6nC,cAAgB7nC,KAAK4oC,uBAAuB5oC,KAAK8qC,6CAM1C,OAAO9qC,KAAK+qC,yBAKhBjmC,GACR9E,KAAK+qC,SAAW/qC,KAAKuqC,oBAAoBvqC,KAAKsnC,aAAasD,YAAY9lC,sCAM3D,OAAO9E,KAAKgrC,yBAKhBlmC,GACR9E,KAAKgrC,SAAWhrC,KAAKuqC,oBAAoBvqC,KAAKsnC,aAAasD,YAAY9lC,2BA4N/EsiC,EAAav8B,eAAiBjL,EAAAkL,GAAyB,CAAEC,KAAMq8B,EAAcp8B,UAAW,CAAC,CAAC,mBAAoBtJ,QAAS,SAAAA,EAA8BC,GAAK,OAAO,IAAKA,GAAKylC,GAAcxnC,EAAAqL,GAAyBrL,EAAAsL,GAAoBtL,EAAAqL,GAAyB+0B,EAAAv1B,EAAkB,GAAI7K,EAAAqL,GAAyB+0B,EAAAp1B,EAAa,GAAIhL,EAAAqL,GAAyBg1B,EAAA11B,EAAgB,KAAQmR,UAAW,SAAAA,EAA4B9X,EAAIC,GAGnZ,IAAI8X,EAH+Z,EAAL/X,GAC9ZhE,EAAAszB,GAAmBmT,IAAiB,GAC7B,EAALziC,GAEFhE,EAAAic,GAAsBF,EAAK/b,EAAAkc,QAA0BjY,EAAI0lC,iBAAmB5tB,EAAGI,QAC9EzQ,OAAQ,CAAEi4B,WAAY,aAAczrB,SAAU,WAAY+rB,QAAS,UAAWD,QAAS,UAAWD,WAAY,aAAcG,UAAW,aAAer4B,QAAS,CAAE87B,eAAgB,iBAAkBC,eAAgB,iBAAkBC,iBAAkB,oBAAsB/7B,SAAU,CAAC,gBAAiBG,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAA+BnI,EAAIC,GAAgB,EAALD,IACtXhE,EAAAkE,GAAsB,EAAG,QAASZ,GAClCtD,EAAAkE,GAAsB,EAAG,QAASX,GAClCvD,EAAAkE,GAAsB,EAAG,MACzBlE,EAAAmF,GAAkB,EAAGw9B,EAA4B,EAAG,EAAG,KAAMn/B,GAC7DxD,EAAAoE,KACApE,EAAAkE,GAAsB,EAAG,MACzBlE,EAAAsG,GAAiB,EAAG,KAAM7C,GAC1BzD,EAAAoE,KACApE,EAAAoE,KACApE,EAAAkE,GAAsB,EAAG,QAASR,GAClC1D,EAAA6E,GAAkB,sBAAuB,SAAoEC,GAAU,OAAOb,EAAI2/B,cAAc9+B,KAChJ9E,EAAA6E,GAAkB,UAAW,SAAwDC,GAAU,OAAOb,EAAIukC,2BAA2B1jC,KACrI9E,EAAAoE,KACApE,EAAAoE,MACO,EAALJ,IACFhE,EAAAwE,GAAgB,GAChBxE,EAAAuE,GAAkB,UAAWN,EAAIgmC,WACjCjqC,EAAAwE,GAAgB,GAChBxE,EAAAuE,GAAkB,QAASN,EAA3BilC,YAAAlpC,CAA4C,OAAQiE,EAApDomC,OAAArqC,CAAgE,aAAciE,EAA9EglC,WAAAjpC,CAA8F,gBAAiBiE,EAA/GgkC,cAAAjoC,CAAkI,wBAAlI,EAAAA,CAA8J,aAAciE,EAAIyjC,aAAaiB,QAAQ1kC,EAAI0/B,YAAc,KACtNv3B,WAAY,CAACs0B,EAAAp0B,EAAgBm6B,IAAkBj6B,cAAe,EAAGC,gBAAiB,SAiE3F,IAAM4+B,GAAe,GAEfC,GAAc,wBAMdC,aAMF,SAAAA,EAAY7iC,EAAoBg/B,EAAcjiB,GAgB1C,GAfArlB,KAAKsI,mBAAqBA,EAC1BtI,KAAKsnC,aAAeA,EACpBtnC,KAAKqlB,KAAOA,EAIZrlB,KAAKunC,eAAiB,IAAI3nC,EAAA+B,EAI1B3B,KAAKorC,aAAe,IAAIxrC,EAAA+B,EAIxB3B,KAAKynC,iBAAmB,IAAI7nC,EAAA+B,GACvB3B,KAAKsnC,aACN,MAAM/B,GAA2B,eAErCvlC,KAAK0nC,YAAc1nC,KAAKsnC,aAAaK,4BA6DzCnf,mBAAA,SAAAA,IACIxoB,KAAK4nC,WAMTA,MAAA,SAAAA,IAAA,IAAAyD,EAAArrC,KACIA,KAAKsrC,WAAatrC,KAAKsnC,aAAaS,QAAQ/nC,KAAKsnC,aAAaK,SAO9D,IAEM4D,EAFavrC,KAAKsnC,aAAaS,QAAQ/nC,KAAK0nC,aAEf8D,GAAgBxrC,KAAKsnC,aAActnC,KAAKujC,WAAYvjC,KAAK6jC,QAAS7jC,KAAK4jC,SAC1G5jC,KAAKyrC,OAAS,GACd,IAAK,IAAIp5B,EAAI,EAAGq5B,EAAM,GAAIr5B,EAAI44B,GAAc54B,IAA5C,CACIq5B,EAAIrhC,KAAKkhC,EAAgBl5B,GACrBq5B,EAAI/lC,QAAUulC,KACdlrC,KAAKyrC,OAAOphC,KAAKqhC,EAAIhhC,IAIrBmtB,SAAAA,GAAAA,OAAQ73B,EAAK2rC,mBAAmB9T,MAChC6T,EAAM,IAGd1rC,KAAKsI,mBAAmBS,kBAO5B6iC,cAAA,SAAAA,EAAc/T,GACV73B,KAAKorC,aAAa5gC,KAAKxK,KAAKsnC,aAAaa,WAAWtQ,EAAM,EAAG,IAE7D,IAAI4C,EAAQz6B,KAAKsnC,aAAaW,SAASjoC,KAAKujC,YAExCuG,EAAc9pC,KAAKsnC,aAAakB,kBAAkBxoC,KAAKsnC,aAAaa,WAAWtQ,EAAM4C,EAAO,IAChGz6B,KAAKunC,eAAe/8B,KAAKxK,KAAKsnC,aAAaa,WAAWtQ,EAAM4C,EAAOlzB,KAAKE,IAAIzH,KAAKsnC,aAAaiB,QAAQvoC,KAAKujC,YAAauG,QAO5H1B,2BAAA,SAAAA,EAA2B3tB,GAEvB,IAAM4tB,EAAgBroC,KAAK0nC,YAErBlX,EAAQxwB,KAAK6pB,SACnB,OAAQpP,EAAM8P,SACV,KAAKwV,EAAA1tB,EACDrS,KAAKujC,WAAavjC,KAAKsnC,aAAamB,iBAAiBzoC,KAAK0nC,YAAalX,EAAQ,GAAK,GACpF,MACJ,KAAKuP,EAAA7zB,EACDlM,KAAKujC,WAAavjC,KAAKsnC,aAAamB,iBAAiBzoC,KAAK0nC,YAAalX,GAAS,EAAI,GACpF,MACJ,KAAKuP,EAAAp1B,EACD3K,KAAKujC,WAAavjC,KAAKsnC,aAAamB,iBAAiBzoC,KAAK0nC,aAAcwD,IACxE,MACJ,KAAKnL,EAAAtgC,EACDO,KAAKujC,WAAavjC,KAAKsnC,aAAamB,iBAAiBzoC,KAAK0nC,YAAawD,IACvE,MACJ,KAAKnL,EAAA5sB,EACDnT,KAAKujC,WAAavjC,KAAKsnC,aAAamB,iBAAiBzoC,KAAK0nC,aAAc8D,GAAgBxrC,KAAKsnC,aAActnC,KAAKujC,WAAYvjC,KAAK6jC,QAAS7jC,KAAK4jC,UAC/I,MACJ,KAAK7D,EAAAtc,EACDzjB,KAAKujC,WAAavjC,KAAKsnC,aAAamB,iBAAiBzoC,KAAK0nC,YAAauD,GAAeO,GAAgBxrC,KAAKsnC,aAActnC,KAAKujC,WAAYvjC,KAAK6jC,QAAS7jC,KAAK4jC,SAAW,GACxK,MACJ,KAAK7D,EAAA/L,EACDh0B,KAAKujC,WACDvjC,KAAKsnC,aAAamB,iBAAiBzoC,KAAK0nC,YAAajtB,EAAMiQ,OAAyB,IAAfugB,IAAqBA,IAC9F,MACJ,KAAKlL,EAAA70B,EACDlL,KAAKujC,WACDvjC,KAAKsnC,aAAamB,iBAAiBzoC,KAAK0nC,YAAajtB,EAAMiQ,OAAwB,GAAfugB,GAAoBA,IAC5F,MACJ,KAAKlL,EAAAt1B,EACL,KAAKs1B,EAAA9zB,EACDjM,KAAK4rC,cAAc5rC,KAAKsnC,aAAaS,QAAQ/nC,KAAK0nC,cAClD,MACJ,QAEI,OAEJ1nC,KAAKsnC,aAAaqB,YAAYN,EAAeroC,KAAKujC,aAClDvjC,KAAKynC,iBAAiBj9B,KAAKxK,KAAKujC,YAEpCvjC,KAAK+mC,mBAELtsB,EAAMkQ,oBAKVkhB,eAAA,SAAAA,IACI,OAAOL,GAAgBxrC,KAAKsnC,aAActnC,KAAKujC,WAAYvjC,KAAK6jC,QAAS7jC,KAAK4jC,YAMlFmD,iBAAA,SAAAA,IACI/mC,KAAKupC,iBAAiBxC,sBAQ1B4E,mBAAA,SAAAA,EAAmB9T,GAEf,IAAIiU,EAAW9rC,KAAKsnC,aAAayE,YAAY/rC,KAAKsnC,aAAaa,WAAWtQ,EAAM,EAAG,IACnF,OAAO,IAAIuO,GAAgBvO,EAAMiU,EAAUA,EAAU9rC,KAAKgsC,kBAAkBnU,OAQhFmU,kBAAA,SAAAA,EAAkBnU,GAEd,GAAIA,MAAAA,GACC73B,KAAK4jC,SAAW/L,EAAO73B,KAAKsnC,aAAaS,QAAQ/nC,KAAK4jC,UACtD5jC,KAAK6jC,SAAWhM,EAAO73B,KAAKsnC,aAAaS,QAAQ/nC,KAAK6jC,SACvD,OAAO,EAGX,IAAK7jC,KAAK2jC,WACN,OAAO,EAKX,IAAK,IAAI7oB,EAFW9a,KAAKsnC,aAAaa,WAAWtQ,EAAM,EAAG,GAE7B73B,KAAKsnC,aAAaS,QAAQjtB,IAAS+c,EAAM/c,EAAO9a,KAAKsnC,aAAagB,gBAAgBxtB,EAAM,GAArH,CACI,GAAI9a,KAAK2jC,WAAW7oB,GAChB,OAAO,EAGf,OAAO,KAOXyvB,oBAAA,SAAAA,EAAoBC,GAChB,OAAQxqC,KAAKsnC,aAAamD,eAAeD,IAAQxqC,KAAKsnC,aAAaoD,QAAQF,GAAQA,EAAM,QAO7F3gB,OAAA,SAAAA,IACI,OAAO7pB,KAAKqlB,MAA4B,QAApBrlB,KAAKqlB,KAAKvgB,+CAzNf,OAAO9E,KAAK0nC,4BAKhB5iC,GAEX,IAAIujC,EAAgBroC,KAAK0nC,YAEzB,IAAMiD,EAAY3qC,KAAKuqC,oBAAoBvqC,KAAKsnC,aAAasD,YAAY9lC,KAAW9E,KAAKsnC,aAAaK,QACtG3nC,KAAK0nC,YAAc1nC,KAAKsnC,aAAauD,UAAUF,EAAW3qC,KAAK6jC,QAAS7jC,KAAK4jC,SACxEqI,GAAoBjsC,KAAKsnC,aAAce,EAAeroC,KAAK0nC,YAAa1nC,KAAK6jC,QAAS7jC,KAAK4jC,UAC5F5jC,KAAK4nC,2CAOI,OAAO5nC,KAAK8qC,0BAKhBhmC,GACT9E,KAAK8qC,UAAY9qC,KAAKuqC,oBAAoBvqC,KAAKsnC,aAAasD,YAAY9lC,IACxE9E,KAAKksC,cAAgBlsC,KAAK8qC,WAAa9qC,KAAKsnC,aAAaS,QAAQ/nC,KAAK8qC,6CAM1D,OAAO9qC,KAAK+qC,yBAKhBjmC,GACR9E,KAAK+qC,SAAW/qC,KAAKuqC,oBAAoBvqC,KAAKsnC,aAAasD,YAAY9lC,sCAM3D,OAAO9E,KAAKgrC,yBAKhBlmC,GACR9E,KAAKgrC,SAAWhrC,KAAKuqC,oBAAoBvqC,KAAKsnC,aAAasD,YAAY9lC,2BA0K/EqmC,EAAiBtgC,eAAiBjL,EAAAkL,GAAyB,CAAEC,KAAMogC,EAAkBngC,UAAW,CAAC,CAAC,wBAAyBtJ,QAAS,SAAAA,EAAkCC,GAAK,OAAO,IAAKA,GAAKwpC,GAAkBvrC,EAAAqL,GAAyBrL,EAAAsL,GAAoBtL,EAAAqL,GAAyB+0B,EAAAp1B,EAAa,GAAIhL,EAAAqL,GAAyBg1B,EAAA11B,EAAgB,KAAQmR,UAAW,SAAAA,EAAgC9X,EAAIC,GAG7X,IAAI8X,EAHyY,EAAL/X,GACxYhE,EAAAszB,GAAmBmT,IAAiB,GAC7B,EAALziC,GAEFhE,EAAAic,GAAsBF,EAAK/b,EAAAkc,QAA0BjY,EAAI0lC,iBAAmB5tB,EAAGI,QAC9EzQ,OAAQ,CAAEi4B,WAAY,aAAczrB,SAAU,WAAY+rB,QAAS,UAAWD,QAAS,UAAWD,WAAY,cAAgBl4B,QAAS,CAAE87B,eAAgB,iBAAkB6D,aAAc,eAAgB3D,iBAAkB,oBAAsB/7B,SAAU,CAAC,oBAAqBG,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAAmCnI,EAAIC,GAAgB,EAALD,IAClWhE,EAAAkE,GAAsB,EAAG,QAASZ,GAClCtD,EAAAkE,GAAsB,EAAG,QAASX,GAClCvD,EAAAkE,GAAsB,EAAG,MACzBlE,EAAAsG,GAAiB,EAAG,KAAM3C,GAC1B3D,EAAAoE,KACApE,EAAAoE,KACApE,EAAAkE,GAAsB,EAAG,QAASN,GAClC5D,EAAA6E,GAAkB,sBAAuB,SAAwEC,GAAU,OAAOb,EAAI+nC,cAAclnC,KACpJ9E,EAAA6E,GAAkB,UAAW,SAA4DC,GAAU,OAAOb,EAAIukC,2BAA2B1jC,KACzI9E,EAAAoE,KACApE,EAAAoE,MACO,EAALJ,IACFhE,EAAAwE,GAAgB,GAChBxE,EAAAuE,GAAkB,OAAQN,EAA1B4nC,OAAA7rC,CAAsC,aAAciE,EAApDynC,WAAA1rC,CAAoE,gBAAiBiE,EAArFqoC,cAAAtsC,CAAwG,UAAxG,EAAAA,CAAsH,kBAAmB,EAAzI,EAAAA,CAAgJ,aAAciE,EAAIgoC,oBACjK7/B,WAAY,CAACq6B,IAAkBj6B,cAAe,EAAGC,gBAAiB,SA2D3E,SAAS4/B,GAAoBE,EAAaC,EAAOC,EAAOxI,EAASD,GAE7D,IAAM0I,EAAQH,EAAYpE,QAAQqE,GAE5BG,EAAQJ,EAAYpE,QAAQsE,GAE5BG,EAAeC,GAAgBN,EAAatI,EAASD,GAC3D,OAAOr8B,KAAKyC,OAAOsiC,EAAQE,GAAgBvB,MACvC1jC,KAAKyC,OAAOuiC,EAAQC,GAAgBvB,IAa5C,SAASO,GAAgBW,EAAa5I,EAAYM,EAASD,GAGvD,QADmBuI,EAAYpE,QAAQxE,GACFkJ,GAAgBN,EAAatI,EAASD,KA8BnDr5B,EA9B8D0gC,IA+BtE1gC,GAAKA,EADzB,IAA4BA,EAnB5B,SAASkiC,GAAgBN,EAAatI,EAASD,GAE3C,IAAI4I,EAAe,EASnB,OARI5I,EAGA4I,EADgBL,EAAYpE,QAAQnE,GACXqH,GAAe,EAEnCpH,IACL2I,EAAeL,EAAYpE,QAAQlE,IAEhC2I,wBAqBLE,aAOF,SAAAA,EAAYpkC,EAAoB++B,EAAcC,EAAcjiB,GAiBxD,GAhBArlB,KAAKsI,mBAAqBA,EAC1BtI,KAAKqnC,aAAeA,EACpBrnC,KAAKsnC,aAAeA,EACpBtnC,KAAKqlB,KAAOA,EAIZrlB,KAAKunC,eAAiB,IAAI3nC,EAAA+B,EAI1B3B,KAAK2sC,cAAgB,IAAI/sC,EAAA+B,EAIzB3B,KAAKynC,iBAAmB,IAAI7nC,EAAA+B,GACvB3B,KAAKsnC,aACN,MAAM/B,GAA2B,eAErC,IAAKvlC,KAAKqnC,aACN,MAAM9B,GAA2B,oBAErCvlC,KAAK0nC,YAAc1nC,KAAKsnC,aAAaK,4BA6DzCnf,mBAAA,SAAAA,IACIxoB,KAAK4nC,WAOTgF,eAAA,SAAAA,EAAenS,GAEX,IAAMoS,EAAiB7sC,KAAKsnC,aAAaa,WAAWnoC,KAAKsnC,aAAaS,QAAQ/nC,KAAKujC,YAAa9I,EAAO,GACvGz6B,KAAK2sC,cAAcniC,KAAKqiC,GAExB,IAAM/C,EAAc9pC,KAAKsnC,aAAakB,kBAAkBqE,GACxD7sC,KAAKunC,eAAe/8B,KAAKxK,KAAKsnC,aAAaa,WAAWnoC,KAAKsnC,aAAaS,QAAQ/nC,KAAKujC,YAAa9I,EAAOlzB,KAAKE,IAAIzH,KAAKsnC,aAAaiB,QAAQvoC,KAAKujC,YAAauG,QAOlK1B,2BAAA,SAAAA,EAA2B3tB,GAQvB,IAAM4tB,EAAgBroC,KAAK0nC,YAErBlX,EAAQxwB,KAAK6pB,SACnB,OAAQpP,EAAM8P,SACV,KAAKwV,EAAA1tB,EACDrS,KAAKujC,WAAavjC,KAAKsnC,aAAaoB,kBAAkB1oC,KAAK0nC,YAAalX,EAAQ,GAAK,GACrF,MACJ,KAAKuP,EAAA7zB,EACDlM,KAAKujC,WAAavjC,KAAKsnC,aAAaoB,kBAAkB1oC,KAAK0nC,YAAalX,GAAS,EAAI,GACrF,MACJ,KAAKuP,EAAAp1B,EACD3K,KAAKujC,WAAavjC,KAAKsnC,aAAaoB,kBAAkB1oC,KAAK0nC,aAAc,GACzE,MACJ,KAAK3H,EAAAtgC,EACDO,KAAKujC,WAAavjC,KAAKsnC,aAAaoB,kBAAkB1oC,KAAK0nC,YAAa,GACxE,MACJ,KAAK3H,EAAA5sB,EACDnT,KAAKujC,WAAavjC,KAAKsnC,aAAaoB,kBAAkB1oC,KAAK0nC,aAAc1nC,KAAKsnC,aAAaW,SAASjoC,KAAK0nC,cACzG,MACJ,KAAK3H,EAAAtc,EACDzjB,KAAKujC,WAAavjC,KAAKsnC,aAAaoB,kBAAkB1oC,KAAK0nC,YAAa,GAAK1nC,KAAKsnC,aAAaW,SAASjoC,KAAK0nC,cAC7G,MACJ,KAAK3H,EAAA/L,EACDh0B,KAAKujC,WACDvjC,KAAKsnC,aAAamB,iBAAiBzoC,KAAK0nC,YAAajtB,EAAMiQ,QAAU,IAAM,GAC/E,MACJ,KAAKqV,EAAA70B,EACDlL,KAAKujC,WACDvjC,KAAKsnC,aAAamB,iBAAiBzoC,KAAK0nC,YAAajtB,EAAMiQ,OAAS,GAAK,GAC7E,MACJ,KAAKqV,EAAAt1B,EACL,KAAKs1B,EAAA9zB,EACDjM,KAAK4sC,eAAe5sC,KAAKsnC,aAAaW,SAASjoC,KAAK0nC,cACpD,MACJ,QAEI,OAEJ1nC,KAAKsnC,aAAaqB,YAAYN,EAAeroC,KAAKujC,aAClDvjC,KAAKynC,iBAAiBj9B,KAAKxK,KAAKujC,YAEpCvjC,KAAK+mC,mBAELtsB,EAAMkQ,oBAMVid,MAAA,SAAAA,IAAA,IAAAkF,EAAA9sC,KACIA,KAAK+sC,eAAiB/sC,KAAKgtC,uBAAuBhtC,KAAK8X,UACvD9X,KAAKitC,YAAcjtC,KAAKgtC,uBAAuBhtC,KAAKsnC,aAAaK,SACjE3nC,KAAKktC,WAAaltC,KAAKsnC,aAAayE,YAAY/rC,KAAKujC,YAErD,IAAI4J,EAAantC,KAAKsnC,aAAayB,cAAc,SAEjD/oC,KAAKotC,QAAU,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAK1iC,IAI5DghC,SAAAA,GAAAA,OAAOA,EAAIhhC,IAIX+vB,SAAAA,GAAAA,OAASz6B,EAAKqtC,oBAAoB5S,EAAO0S,EAAW1S,QACpDz6B,KAAKsI,mBAAmBS,kBAM5Bg+B,iBAAA,SAAAA,IACI/mC,KAAKupC,iBAAiBxC,sBAS1BiG,uBAAA,SAAAA,EAAuBlyB,GACnB,OAAOA,GAAQ9a,KAAKsnC,aAAaS,QAAQjtB,IAAS9a,KAAKsnC,aAAaS,QAAQ/nC,KAAKujC,YAC7EvjC,KAAKsnC,aAAaW,SAASntB,GAAQ,QAS3CuyB,oBAAA,SAAAA,EAAoB5S,EAAO6S,GAEvB,IAAIvmB,EAAY/mB,KAAKsnC,aAAappB,OAAOle,KAAKsnC,aAAaa,WAAWnoC,KAAKsnC,aAAaS,QAAQ/nC,KAAKujC,YAAa9I,EAAO,GAAIz6B,KAAKqnC,aAAa/xB,QAAQG,oBACvJ,OAAO,IAAI2wB,GAAgB3L,EAAO6S,EAAUtE,oBAAqBjiB,EAAW/mB,KAAKutC,mBAAmB9S,OAQxG8S,mBAAA,SAAAA,EAAmB9S,GAEf,IAAM+S,EAAaxtC,KAAKsnC,aAAaS,QAAQ/nC,KAAKujC,YAClD,GAAI9I,MAAAA,GACAz6B,KAAKytC,4BAA4BD,EAAY/S,IAC7Cz6B,KAAK0tC,6BAA6BF,EAAY/S,GAC9C,OAAO,EAEX,IAAKz6B,KAAK2jC,WACN,OAAO,EAKX,IAAK,IAAI7oB,EAFY9a,KAAKsnC,aAAaa,WAAWqF,EAAY/S,EAAO,GAEvCz6B,KAAKsnC,aAAaW,SAASntB,IAAS2f,EAAO3f,EAAO9a,KAAKsnC,aAAagB,gBAAgBxtB,EAAM,GAAxH,CACI,GAAI9a,KAAK2jC,WAAW7oB,GAChB,OAAO,EAGf,OAAO,KAUX2yB,4BAAA,SAAAA,EAA4B5V,EAAM4C,GAC9B,GAAIz6B,KAAK4jC,QAAS,CAEd,IAAM+J,EAAU3tC,KAAKsnC,aAAaS,QAAQ/nC,KAAK4jC,SAEzCgK,EAAW5tC,KAAKsnC,aAAaW,SAASjoC,KAAK4jC,SACjD,OAAO/L,EAAO8V,GAAY9V,IAAS8V,GAAWlT,EAAQmT,EAE1D,OAAO,KAUXF,6BAAA,SAAAA,EAA6B7V,EAAM4C,GAC/B,GAAIz6B,KAAK6jC,QAAS,CAEd,IAAMgK,EAAU7tC,KAAKsnC,aAAaS,QAAQ/nC,KAAK6jC,SAEzCiK,EAAW9tC,KAAKsnC,aAAaW,SAASjoC,KAAK6jC,SACjD,OAAOhM,EAAOgW,GAAYhW,IAASgW,GAAWpT,EAAQqT,EAE1D,OAAO,KAOXvD,oBAAA,SAAAA,EAAoBC,GAChB,OAAQxqC,KAAKsnC,aAAamD,eAAeD,IAAQxqC,KAAKsnC,aAAaoD,QAAQF,GAAQA,EAAM,QAO7F3gB,OAAA,SAAAA,IACI,OAAO7pB,KAAKqlB,MAA4B,QAApBrlB,KAAKqlB,KAAKvgB,+CAlQf,OAAO9E,KAAK0nC,4BAKhB5iC,GAEX,IAAIujC,EAAgBroC,KAAK0nC,YAEzB,IAAMiD,EAAY3qC,KAAKuqC,oBAAoBvqC,KAAKsnC,aAAasD,YAAY9lC,KAAW9E,KAAKsnC,aAAaK,QACtG3nC,KAAK0nC,YAAc1nC,KAAKsnC,aAAauD,UAAUF,EAAW3qC,KAAK6jC,QAAS7jC,KAAK4jC,SACzE5jC,KAAKsnC,aAAaS,QAAQM,KAAmBroC,KAAKsnC,aAAaS,QAAQ/nC,KAAK0nC,cAC5E1nC,KAAK4nC,2CAOI,OAAO5nC,KAAK8qC,0BAKhBhmC,GACT9E,KAAK8qC,UAAY9qC,KAAKuqC,oBAAoBvqC,KAAKsnC,aAAasD,YAAY9lC,IACxE9E,KAAK+sC,eAAiB/sC,KAAKgtC,uBAAuBhtC,KAAK8qC,6CAM3C,OAAO9qC,KAAK+qC,yBAKhBjmC,GACR9E,KAAK+qC,SAAW/qC,KAAKuqC,oBAAoBvqC,KAAKsnC,aAAasD,YAAY9lC,sCAM3D,OAAO9E,KAAKgrC,yBAKhBlmC,GACR9E,KAAKgrC,SAAWhrC,KAAKuqC,oBAAoBvqC,KAAKsnC,aAAasD,YAAY9lC,2BAmN/E4nC,EAAY7hC,eAAiBjL,EAAAkL,GAAyB,CAAEC,KAAM2hC,EAAa1hC,UAAW,CAAC,CAAC,kBAAmBtJ,QAAS,SAAAA,EAA6BC,GAAK,OAAO,IAAKA,GAAK+qC,GAAa9sC,EAAAqL,GAAyBrL,EAAAsL,GAAoBtL,EAAAqL,GAAyB+0B,EAAAv1B,EAAkB,GAAI7K,EAAAqL,GAAyB+0B,EAAAp1B,EAAa,GAAIhL,EAAAqL,GAAyBg1B,EAAA11B,EAAgB,KAAQmR,UAAW,SAAAA,EAA2B9X,EAAIC,GAG7Y,IAAI8X,EAHyZ,EAAL/X,GACxZhE,EAAAszB,GAAmBmT,IAAiB,GAC7B,EAALziC,GAEFhE,EAAAic,GAAsBF,EAAK/b,EAAAkc,QAA0BjY,EAAI0lC,iBAAmB5tB,EAAGI,QAC9EzQ,OAAQ,CAAEi4B,WAAY,aAAczrB,SAAU,WAAY+rB,QAAS,UAAWD,QAAS,UAAWD,WAAY,cAAgBl4B,QAAS,CAAE87B,eAAgB,iBAAkBoF,cAAe,gBAAiBlF,iBAAkB,oBAAsB/7B,SAAU,CAAC,eAAgBG,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAA8BnI,EAAIC,GAAgB,EAALD,IAC1VhE,EAAAkE,GAAsB,EAAG,QAASZ,GAClCtD,EAAAkE,GAAsB,EAAG,QAASX,GAClCvD,EAAAkE,GAAsB,EAAG,MACzBlE,EAAAsG,GAAiB,EAAG,KAAM3C,GAC1B3D,EAAAoE,KACApE,EAAAoE,KACApE,EAAAkE,GAAsB,EAAG,QAASL,GAClC7D,EAAA6E,GAAkB,sBAAuB,SAAmEC,GAAU,OAAOb,EAAI+oC,eAAeloC,KAChJ9E,EAAA6E,GAAkB,UAAW,SAAuDC,GAAU,OAAOb,EAAIukC,2BAA2B1jC,KACpI9E,EAAAoE,KACApE,EAAAoE,MACO,EAALJ,IACFhE,EAAAwE,GAAgB,GAChBxE,EAAAuE,GAAkB,QAASN,EAA3BqpC,WAAAttC,CAA2C,OAAQiE,EAAnDupC,QAAAxtC,CAAgE,aAAciE,EAA9EopC,YAAArtC,CAA+F,gBAAiBiE,EAAhHkpC,eAAAntC,CAAoI,wBAApI,EAAAA,CAAgK,UAAhK,EAAAA,CAA8K,kBAAmB,EAAjM,EAAAA,CAAwM,aAAciE,EAAIyjC,aAAaW,SAASpkC,EAAI0/B,eACnPv3B,WAAY,CAACq6B,IAAkBj6B,cAAe,EAAGC,gBAAiB,2BAiErE0hC,aAQF,SAAAA,EAAY3oC,EAAO4oC,EAAU1G,EAAcD,EAAc4G,GACrDjuC,KAAKoF,MAAQA,EACbpF,KAAKguC,SAAWA,EAChBhuC,KAAKsnC,aAAeA,EACpBtnC,KAAKqnC,aAAeA,EACpBrnC,KAAKguC,SAAShmB,aAAalf,UAAU,WAAA,OAG/BmlC,EAAkBllC,qCA2D5BmlC,qBAAA,SAAAA,IACIluC,KAAKguC,SAASG,YAA2C,SAA7BnuC,KAAKguC,SAASG,YAAyB,aAAe,WAMtFC,gBAAA,SAAAA,IACIpuC,KAAKguC,SAASzK,WAA0C,SAA7BvjC,KAAKguC,SAASG,YACrCnuC,KAAKsnC,aAAaoB,kBAAkB1oC,KAAKguC,SAASzK,YAAa,GAC/DvjC,KAAKsnC,aAAamB,iBAAiBzoC,KAAKguC,SAASzK,WAAyC,QAA7BvjC,KAAKguC,SAASG,aAAyB,GAAKlD,OAMjHoD,YAAA,SAAAA,IACIruC,KAAKguC,SAASzK,WAA0C,SAA7BvjC,KAAKguC,SAASG,YACrCnuC,KAAKsnC,aAAaoB,kBAAkB1oC,KAAKguC,SAASzK,WAAY,GAC9DvjC,KAAKsnC,aAAamB,iBAAiBzoC,KAAKguC,SAASzK,WAAyC,QAA7BvjC,KAAKguC,SAASG,YAAwB,EAAIlD,OAM/GqD,gBAAA,SAAAA,IACI,OAAKtuC,KAAKguC,SAASnK,UAGX7jC,KAAKguC,SAASnK,UACjB7jC,KAAKuuC,YAAYvuC,KAAKguC,SAASzK,WAAYvjC,KAAKguC,SAASnK,YAMlE2K,YAAA,SAAAA,IACI,OAAQxuC,KAAKguC,SAASpK,UACjB5jC,KAAKuuC,YAAYvuC,KAAKguC,SAASzK,WAAYvjC,KAAKguC,SAASpK,YASlE2K,YAAA,SAAAA,EAAYnC,EAAOC,GACf,MAAiC,SAA7BrsC,KAAKguC,SAASG,YACPnuC,KAAKsnC,aAAaS,QAAQqE,IAAUpsC,KAAKsnC,aAAaS,QAAQsE,IACjErsC,KAAKsnC,aAAaW,SAASmE,IAAUpsC,KAAKsnC,aAAaW,SAASoE,GAEvC,QAA7BrsC,KAAKguC,SAASG,YACPnuC,KAAKsnC,aAAaS,QAAQqE,IAAUpsC,KAAKsnC,aAAaS,QAAQsE,GAGlEJ,GAAoBjsC,KAAKsnC,aAAc8E,EAAOC,EAAOrsC,KAAKguC,SAASnK,QAAS7jC,KAAKguC,SAASpK,wDA5GjG,GAAiC,SAA7B5jC,KAAKguC,SAASG,YACd,OAAOnuC,KAAKsnC,aACPppB,OAAOle,KAAKguC,SAASzK,WAAYvjC,KAAKqnC,aAAa/xB,QAAQC,gBAC3DyzB,oBAET,GAAiC,QAA7BhpC,KAAKguC,SAASG,YACd,OAAOnuC,KAAKsnC,aAAayE,YAAY/rC,KAAKguC,SAASzK,YAMvD,IAEMgI,EAFavrC,KAAKsnC,aAAaS,QAAQ/nC,KAAKguC,SAASzK,YAExBiI,GAAgBxrC,KAAKsnC,aAActnC,KAAKguC,SAASzK,WAAYvjC,KAAKguC,SAASnK,QAAS7jC,KAAKguC,SAASpK,SAGrI,OAAU2H,EAAV,YADsBA,EAAgBN,GAAe,+CAOrD,MAAoC,SAA7BjrC,KAAKguC,SAASG,YACjBnuC,KAAKoF,MAAM+gC,2BAA6BnmC,KAAKoF,MAAM8gC,iEAOvD,MAAO,CACHzL,MAASz6B,KAAKoF,MAAMwgC,eACpB/N,KAAQ73B,KAAKoF,MAAM0gC,cACnB2I,aAAczuC,KAAKoF,MAAM4gC,oBAC3BhmC,KAAKguC,SAASG,uDAOhB,MAAO,CACH1T,MAASz6B,KAAKoF,MAAMygC,eACpBhO,KAAQ73B,KAAKoF,MAAM2gC,cACnB0I,aAAczuC,KAAKoF,MAAM6gC,oBAC3BjmC,KAAKguC,SAASG,oCAiExBJ,EAAkBljC,eAAiBjL,EAAAkL,GAAyB,CAAEC,KAAMgjC,EAAmB/iC,UAAW,CAAC,CAAC,wBAAyBtJ,QAAS,SAAAA,EAAmCC,GAAK,OAAO,IAAKA,GAAKosC,GAAmBnuC,EAAAqL,GAAyBw6B,IAAoB7lC,EAAAqL,GAAyBjK,OAAApB,EAAA8uC,GAAA1tC,CAAW,WAAA,OAEtQ2tC,MAAgB/uC,EAAAqL,GAAyB+0B,EAAAp1B,EAAa,GAAIhL,EAAAqL,GAAyB+0B,EAAAv1B,EAAkB,GAAI7K,EAAAqL,GAAyBrL,EAAAsL,KAAwBQ,SAAU,CAAC,qBAAsBmoB,mBAAoB+O,GAAM/2B,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAAoCnI,EAAIC,GAAgB,EAALD,IAC3ThE,EAAAk0B,KACAl0B,EAAAkE,GAAsB,EAAG,MAAOJ,GAChC9D,EAAAkE,GAAsB,EAAG,MAAO8B,GAChChG,EAAAkE,GAAsB,EAAG,SAAU+B,IACnCjG,EAAA6E,GAAkB,QAAS,SAA4DC,GAAU,OAAOb,EAAIqqC,yBAC5GtuC,EAAAmE,GAAc,GACdnE,EAAAkE,GAAsB,EAAG,MAAOyC,IAChC3G,EAAAqR,KACArR,EAAAoE,KACApE,EAAAoE,KACApE,EAAAsG,GAAiB,EAAG,MAAOM,IAC3B5G,EAAAqiB,GAAoB,GACpBriB,EAAAkE,GAAsB,EAAG,SAAU4+B,IACnC9iC,EAAA6E,GAAkB,QAAS,SAA4DC,GAAU,OAAOb,EAAIuqC,oBAC5GxuC,EAAAoE,KACApE,EAAAkE,GAAsB,EAAG,SAAU6+B,IACnC/iC,EAAA6E,GAAkB,QAAS,SAA4DC,GAAU,OAAOb,EAAIwqC,gBAC5GzuC,EAAAoE,KACApE,EAAAoE,KACApE,EAAAoE,MACO,EAALJ,IACFhE,EAAAwE,GAAgB,GAChBxE,EAAA0G,GAAmB,aAAczC,EAAI+qC,mBACrChvC,EAAAwE,GAAgB,GAChBxE,EAAAyE,GAAyBR,EAAIgrC,kBAC7BjvC,EAAAwE,GAAgB,GAChBxE,EAAAyzB,GAAmB,sBAAmD,SAA5BxvB,EAAImqC,SAASG,aACvDvuC,EAAA4R,KACA5R,EAAAwE,GAAgB,GAChBxE,EAAAuE,GAAkB,YAAaN,EAAIyqC,mBACnC1uC,EAAA0G,GAAmB,aAAczC,EAAIirC,iBACrClvC,EAAAwE,GAAgB,GAChBxE,EAAAuE,GAAkB,YAAaN,EAAI2qC,eACnC5uC,EAAA0G,GAAmB,aAAczC,EAAIkrC,mBACpC/iC,WAAY,CAAC20B,EAAAp2B,EAAkBq2B,EAAAnhC,GAAqB2M,cAAe,EAAGC,gBAAiB,2BAsC1FsiC,aAOF,SAAAA,EAAYvpC,EAAOkiC,EAAcD,EAAc/+B,GAAAA,IAAAA,EAAAA,KAoC3C,GAnCAtI,KAAKsnC,aAAeA,EACpBtnC,KAAKqnC,aAAeA,EACpBrnC,KAAKsI,mBAAqBA,EAM1BtI,KAAKgvC,sBAAuB,EAI5BhvC,KAAKivC,UAAY,QAIjBjvC,KAAKunC,eAAiB,IAAI3nC,EAAA+B,EAK1B3B,KAAKorC,aAAe,IAAIxrC,EAAA+B,EAKxB3B,KAAK2sC,cAAgB,IAAI/sC,EAAA+B,EAIzB3B,KAAKwnC,eAAiB,IAAI5nC,EAAA+B,EAI1B3B,KAAKgoB,aAAe,IAAInoB,EAAAQ,GACnBL,KAAKsnC,aACN,MAAM/B,GAA2B,eAErC,IAAKvlC,KAAKqnC,aACN,MAAM9B,GAA2B,oBAErCvlC,KAAK6I,aAAezD,EAAM6B,QAAQ6B,UAAU,WAIxCR,EAAmBS,eACnB/I,EAAKgoB,aAAa1mB,6BAmF1BknB,mBAAA,SAAAA,IACIxoB,KAAKkvC,sBAAwB,IAAIhP,EAAAzgC,EAAgBO,KAAKmvC,iBAAmBpB,IACzE/tC,KAAKujC,WAAavjC,KAAKovC,SAAWpvC,KAAKsnC,aAAaK,QAEpD3nC,KAAKqvC,aAAervC,KAAKivC,aAK7BK,mBAAA,SAAAA,IACQtvC,KAAKgvC,uBACLhvC,KAAKgvC,sBAAuB,EAC5BhvC,KAAKuvC,sBAMbnmC,YAAA,SAAAA,IACIpJ,KAAK6I,aAAaQ,cAClBrJ,KAAKgoB,aAAa5Y,cAMtB6Z,YAAA,SAAAA,EAAYhiB,GAER,IAAMmhB,EAASnhB,EAAiB48B,SAAK58B,EAAiB28B,SAAK38B,EAAoB08B,WAC/E,GAAIvb,IAAWA,EAAOonB,YAAa,CAE/B,IAAMC,EAAOzvC,KAAK0vC,2BACdD,IAGAzvC,KAAKsI,mBAAmB4jB,gBACxBujB,EAAK7H,SAGb5nC,KAAKgoB,aAAa1mB,UAKtBiuC,gBAAA,SAAAA,IACIvvC,KAAK0vC,2BAA2B3I,sBAMpC4I,iBAAA,SAAAA,KAEmC,SAApB3vC,KAAKmuC,YAAyBnuC,KAAK4vC,UACrB,QAApB5vC,KAAKmuC,YAAwBnuC,KAAK6vC,SAAW7vC,KAAK8vC,eAClDtnB,wBAOTgb,cAAA,SAAAA,EAAc1oB,GACL9a,KAAKsnC,aAAayI,SAASj1B,EAAM9a,KAAK8X,WACvC9X,KAAKunC,eAAe/8B,KAAKsQ,MAQjC0pB,6BAAA,SAAAA,EAA6BwL,GACzBhwC,KAAKorC,aAAa5gC,KAAKwlC,MAO3B9L,yBAAA,SAAAA,EAAyB+L,GACrBjwC,KAAK2sC,cAAcniC,KAAKylC,MAK5BxM,cAAA,SAAAA,IACIzjC,KAAKwnC,eAAeh9B,UAQxB25B,gBAAA,SAAAA,EAAgBrpB,EAAM20B,GAClBzvC,KAAKujC,WAAazoB,EAClB9a,KAAKmuC,YAAcsB,KAOvBlF,oBAAA,SAAAA,EAAoBC,GAChB,OAAQxqC,KAAKsnC,aAAamD,eAAeD,IAAQxqC,KAAKsnC,aAAaoD,QAAQF,GAAQA,EAAM,QAO7FkF,yBAAA,SAAAA,IACI,OAAO1vC,KAAK4vC,WAAa5vC,KAAK6vC,UAAY7vC,KAAK8vC,oDA7LnC,OAAO9vC,KAAKkwC,yBAKhBprC,GACR9E,KAAKkwC,SAAWlwC,KAAKuqC,oBAAoBvqC,KAAKsnC,aAAasD,YAAY9lC,uCAM1D,OAAO9E,KAAK8qC,0BAKhBhmC,GACT9E,KAAK8qC,UAAY9qC,KAAKuqC,oBAAoBvqC,KAAKsnC,aAAasD,YAAY9lC,sCAM5D,OAAO9E,KAAK+qC,yBAKhBjmC,GACR9E,KAAK+qC,SAAW/qC,KAAKuqC,oBAAoBvqC,KAAKsnC,aAAasD,YAAY9lC,sCAM3D,OAAO9E,KAAKgrC,yBAKhBlmC,GACR9E,KAAKgrC,SAAWhrC,KAAKuqC,oBAAoBvqC,KAAKsnC,aAAasD,YAAY9lC,yCAOxD,OAAO9E,KAAKmwC,mCAKhBrrC,GACX9E,KAAKmwC,mBAAqBnwC,KAAKsnC,aAAauD,UAAU/lC,EAAO9E,KAAK6jC,QAAS7jC,KAAK4jC,SAChF5jC,KAAKgoB,aAAa1mB,OAClBtB,KAAKsI,mBAAmBS,qDAMR,OAAO/I,KAAKqvC,6BAKhBvqC,GACZ9E,KAAKqvC,aAAevqC,EACpB9E,KAAKgvC,sBAAuB,EAC5BhvC,KAAKsI,mBAAmBS,sCAyHhC4lC,EAAY9jC,eAAiBjL,EAAAkL,GAAyB,CAAEC,KAAM4jC,EAAa3jC,UAAW,CAAC,CAAC,iBAAkBtJ,QAAS,SAAAA,EAA6BC,GAAK,OAAO,IAAKA,GAAKgtC,GAAa/uC,EAAAqL,GAAyBw6B,IAAoB7lC,EAAAqL,GAAyB+0B,EAAAp1B,EAAa,GAAIhL,EAAAqL,GAAyB+0B,EAAAv1B,EAAkB,GAAI7K,EAAAqL,GAAyBrL,EAAAsL,KAAwBwQ,UAAW,SAAAA,EAA2B9X,EAAIC,GAK5Y,IAAI8X,EALwZ,EAAL/X,IACvZhE,EAAAszB,GAAmBkU,IAAc,GACjCxnC,EAAAszB,GAAmBwZ,IAAa,GAChC9sC,EAAAszB,GAAmBiY,IAAkB,IAC9B,EAALvnC,IAEFhE,EAAAic,GAAsBF,EAAK/b,EAAAkc,QAA0BjY,EAAI+rC,UAAYj0B,EAAGI,OACxEnc,EAAAic,GAAsBF,EAAK/b,EAAAkc,QAA0BjY,EAAIgsC,SAAWl0B,EAAGI,OACvEnc,EAAAic,GAAsBF,EAAK/b,EAAAkc,QAA0BjY,EAAIisC,cAAgBn0B,EAAGI,SAC3E5Q,aAAc,SAAAA,EAAkCvH,EAAIC,EAAKuH,GAAoB,EAALxH,GACzEhE,EAAAyL,GAA0Bw3B,KACzBv3B,OAAQ,CAAE2jC,UAAW,YAAaG,QAAS,UAAWt3B,SAAU,WAAY+rB,QAAS,UAAWD,QAAS,UAAWuL,gBAAiB,kBAAmBxL,WAAY,aAAcG,UAAW,aAAer4B,QAAS,CAAE87B,eAAgB,iBAAkB6D,aAAc,eAAgBuB,cAAe,gBAAiBnF,eAAgB,kBAAoB97B,SAAU,CAAC,eAAgBC,SAAU,CAAC/L,EAAAg0B,MAAgC/nB,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAA8BnI,EAAIC,GAAgB,EAALD,IAC7ehE,EAAAmF,GAAkB,EAAGo+B,GAAoC,EAAG,EAAG,cAAeL,IAC9EljC,EAAAkE,GAAsB,EAAG,MAAOi/B,IAChCnjC,EAAAmF,GAAkB,EAAGs+B,GAAuC,EAAG,EAAG,iBAAkBL,IACpFpjC,EAAAmF,GAAkB,EAAGi/B,GAAsC,EAAG,EAAG,gBAAiBf,IAClFrjC,EAAAmF,GAAkB,EAAGu/B,GAA4C,EAAG,EAAG,sBAAuBpB,IAC9FtjC,EAAAoE,MACO,EAALJ,IACFhE,EAAAuE,GAAkB,kBAAmBN,EAAIqrC,uBACzCtvC,EAAAwE,GAAgB,GAChBxE,EAAAuE,GAAkB,WAAYN,EAAIsqC,aAClCvuC,EAAAwE,GAAgB,GAChBxE,EAAAuE,GAAkB,eAAgB,SAClCvE,EAAAwE,GAAgB,GAChBxE,EAAAuE,GAAkB,eAAgB,QAClCvE,EAAAwE,GAAgB,GAChBxE,EAAAuE,GAAkB,eAAgB,gBACjC6H,WAAY,CAACk0B,EAAAt1B,EAAwBg2B,EAAAnd,EAAwB6c,EAAA31B,EAAiB21B,EAAAzN,EAAqBuU,GACpGsF,GACAvB,IAAmBh/B,OAAQ,CAAC,67CAA87CC,cAAe,EAAGC,gBAAiB,SAwFrgD,IAAM+jC,GAA0B,CAI5B9sB,eAAgBtiB,OAAAm/B,EAAAx1B,EAAA3J,CAAQ,iBAAkB,CACtCA,OAAAm/B,EAAAj0B,EAAAlL,CAAM,OAAQA,OAAAm/B,EAAAl0B,EAAAjL,CAAM,CAChBwiB,QAAS,EACTlE,UAAW,mBAEfte,OAAAm/B,EAAAhd,EAAAniB,CAAW,gBAAiBA,OAAAm/B,EAAA1c,EAAAziB,CAAQ,mCAAoCA,OAAAm/B,EAAAl0B,EAAAjL,CAAM,CAC1EwiB,QAAS,EACTlE,UAAW,kBAEfte,OAAAm/B,EAAAhd,EAAAniB,CAAW,YAAaA,OAAAm/B,EAAA1c,EAAAziB,CAAQ,eAAgBA,OAAAm/B,EAAAl0B,EAAAjL,CAAM,CAAEwiB,QAAS,QAKrE6sB,eAAgBrvC,OAAAm/B,EAAAx1B,EAAA3J,CAAQ,iBAAkB,CACtCA,OAAAm/B,EAAAj0B,EAAAlL,CAAM,OAAQA,OAAAm/B,EAAAl0B,EAAAjL,CAAM,CAAEwiB,QAAS,KAC/BxiB,OAAAm/B,EAAAj0B,EAAAlL,CAAM,QAASA,OAAAm/B,EAAAl0B,EAAAjL,CAAM,CAAEwiB,QAAS,KAGhCxiB,OAAAm/B,EAAAhd,EAAAniB,CAAW,YAAaA,OAAAm/B,EAAA1c,EAAAziB,CAAQ,oDAYxC,IAAIsvC,GAAgB,EAKpB,IAAMC,GAAiC,IAAI3wC,EAAAukB,EAAe,kCAgBpDqsB,GAAkD,CACpD7oC,QAAS4oC,GACT3oC,KAAM,CAACy4B,EAAAz1B,GACP7C,WAbJ,SAAAA,EAAgDsc,GAC5C,OAAO,WAAA,OAGDA,EAAQC,iBAAiBC,oBAe7BksB,GAIF,SAAAA,EAAY/rB,GACR1kB,KAAK0kB,YAAcA,GAI3B,IAAMgsB,GAAiC1vC,OAAAg/B,EAAAzD,EAAAv7B,CAAWyvC,0BAS5CE,qBAIF,SAAAA,EAAY1jC,GAAAA,OACR1E,EAAAA,KAAAA,KAAM0E,IADEA,yBAMZgL,gBAAA,SAAAA,IACIjY,KAAK4wC,UAAUrB,6BAXYmB,WAcnCC,EAAqB9lC,eAAiBjL,EAAAkL,GAAyB,CAAEC,KAAM4lC,EAAsB3lC,UAAW,CAAC,CAAC,2BAA4BtJ,QAAS,SAAAA,EAAsCC,GAAK,OAAO,IAAKA,GAAKgvC,GAAsB/wC,EAAAqL,GAAyBrL,EAAAmO,KAAiB2N,UAAW,SAAAA,EAAoC9X,EAAIC,GAGtT,IAAI8X,EAHkU,EAAL/X,GACjUhE,EAAAszB,GAAmByb,IAAa,GACzB,EAAL/qC,GAEFhE,EAAAic,GAAsBF,EAAK/b,EAAAkc,QAA0BjY,EAAI+sC,UAAYj1B,EAAGI,QACvE5Q,aAAc,SAAAA,EAA2CvH,EAAIC,EAAKuH,GAAoB,EAALxH,IAClFhE,EAAAiT,GAAuB,GACvBjT,EAAAyL,GAA0Bq5B,IAC1B9kC,EAAAqR,MACO,EAALrN,IACFhE,EAAAixC,GAAoC,kBAAmB,SACvDjxC,EAAAyzB,GAAmB,+BAAgCxvB,EAAIgS,WAAWi7B,SAClElxC,EAAA4R,OACClG,OAAQ,CAAErG,MAAO,SAAWyG,SAAU,CAAC,wBAAyBC,SAAU,CAAC/L,EAAAgM,IAAoCC,OAAQ,EAAGC,KAAM,GAAIC,SAAU,SAAAA,EAAuCnI,EAAIC,GAAgB,EAALD,IACrMhE,EAAAkE,GAAsB,EAAG,eAAgB6gC,IACzC/kC,EAAA6E,GAAkB,iBAAkB,SAA8EC,GAAU,OAAOb,EAAIgS,WAAW6D,OAAOhV,KACzJ9E,EAAA6E,GAAkB,eAAgB,SAA4EC,GAAU,OAAOb,EAAIgS,WAAWk7B,YAAYrsC,KAC1J9E,EAAA6E,GAAkB,gBAAiB,SAA6EC,GAAU,OAAOb,EAAIgS,WAAWm7B,aAAatsC,KAC7J9E,EAAA6E,GAAkB,iBAAkB,SAA8EC,GAAU,OAAOb,EAAIgS,WAAWS,UAClJ1W,EAAAoE,MACO,EAALJ,GACFhE,EAAAuE,GAAkB,KAAMN,EAAIgS,WAA5BuC,GAAAxY,CAA2C,UAAWiE,EAAIgS,WAA1DkN,WAAAnjB,CAAiF,UAAWiE,EAAIgS,WAAhGu5B,QAAAxvC,CAAoH,YAAaiE,EAAIgS,WAArIo5B,UAAArvC,CAA2J,UAAWiE,EAAIgS,WAA1Kk1B,SAAAnrC,CAA+L,UAAWiE,EAAIgS,WAA9Mm1B,SAAAprC,CAAmO,aAAciE,EAAIgS,WAArPo7B,YAAArxC,CAA6Q,kBAAmBiE,EAAIgS,WAApSq7B,wBAAAtxC,CAAwU,WAAYiE,EAAIgS,WAAxVi1B,UAAAlrC,CAA8W,YAAaiE,EAAIgS,WAA/XiuB,UAAAlkC,CAAqZ,kBAAmB,UACvaoM,WAAY,CAAC2iC,GAAa/N,EAAAn2B,EAAqB61B,EAAAtM,GAAiB7nB,OAAQ,CAAC,shBAAuhBC,cAAe,EAAG2J,KAAM,CAAEke,UAAW,CACloBmc,GAAwB9sB,eACxB8sB,GAAwBC,iBACvBhkC,gBAAiB,2BAsCxBmzB,aAWF,SAAAA,EAAY2R,EAASC,EAAUhsB,EAASisB,EAAmBC,EAAgBhK,EAAcjiB,EAAMksB,GAqD3F,GApDAvxC,KAAKmxC,QAAUA,EACfnxC,KAAKoxC,SAAWA,EAChBpxC,KAAKolB,QAAUA,EACfplB,KAAKqxC,kBAAoBA,EACzBrxC,KAAKsnC,aAAeA,EACpBtnC,KAAKqlB,KAAOA,EACZrlB,KAAKuxC,UAAYA,EAIjBvxC,KAAKivC,UAAY,QACjBjvC,KAAKwxC,UAAW,EAKhBxxC,KAAKorC,aAAe,IAAIxrC,EAAA+B,EAKxB3B,KAAK2sC,cAAgB,IAAI/sC,EAAA+B,EAIzB3B,KAAKyxC,aAAe,IAAI7xC,EAAA+B,EAIxB3B,KAAK0xC,aAAe,IAAI9xC,EAAA+B,EACxB3B,KAAK2xC,SAAU,EAIf3xC,KAAKoY,GAALpY,kBAA4BswC,KAC5BtwC,KAAK4xC,eAAiB,KAItB5xC,KAAK6xC,0BAA4B,KAIjC7xC,KAAK8xC,mBAAqBpd,EAAAr0B,EAAa0xC,MAIvC/xC,KAAKgyC,gBAAkB,IAAInyC,EAAAQ,EAI3BL,KAAKiyC,iBAAmB,IAAIpyC,EAAAQ,GACvBL,KAAKsnC,aACN,MAAM/B,GAA2B,eAErCvlC,KAAK4nB,gBAAkB0pB,sBA6G3BloC,YAAA,SAAAA,IACIpJ,KAAKsW,QACLtW,KAAK8xC,mBAAmBzoC,cACxBrJ,KAAKgyC,gBAAgB5iC,WACjBpP,KAAKkyC,YACLlyC,KAAKkyC,UAAUC,UACfnyC,KAAKoyC,mBAAqB,SAQlC14B,OAAA,SAAAA,EAAOoB,GAEH,IAAIu3B,EAAWryC,KAAK8qC,UACpB9qC,KAAK8qC,UAAYhwB,EACZ9a,KAAKsnC,aAAayI,SAASsC,EAAUryC,KAAK8qC,YAC3C9qC,KAAKiyC,iBAAiB3wC,KAAKwZ,MAQnCi2B,YAAA,SAAAA,EAAYf,GACRhwC,KAAKorC,aAAa5gC,KAAKwlC,MAO3BgB,aAAA,SAAAA,EAAaf,GACTjwC,KAAK2sC,cAAcniC,KAAKylC,MAO5BqC,eAAA,SAAAA,EAAeC,GAAAA,IAAAA,EAAAA,KACX,GAAIvyC,KAAKwyC,iBACL,MAAMrjC,MAAM,+DAEhBnP,KAAKwyC,iBAAmBD,EACxBvyC,KAAK8xC,mBACD9xC,KAAKwyC,iBAAiBC,aAAa3pC,UAIlChE,SAAAA,GAAAA,OAAU9E,EAAK8qC,UAAYhmC,OAMpCokB,KAAA,SAAAA,IACI,IAAIlpB,KAAK2xC,UAAW3xC,KAAKmF,SAAzB,CAGA,IAAKnF,KAAKwyC,iBACN,MAAMrjC,MAAM,gEAEZnP,KAAKuxC,YACLvxC,KAAK6xC,0BAA4B7xC,KAAKuxC,UAAUmB,eAEpD1yC,KAAK8wC,QAAU9wC,KAAK2yC,gBAAkB3yC,KAAK4yC,eAC3C5yC,KAAK2xC,SAAU,EACf3xC,KAAKyxC,aAAajnC,WAMtB8L,MAAA,SAAAA,IAAA,IAAAu8B,EAAA7yC,KACI,IAAKA,KAAK2xC,QACN,OAEA3xC,KAAKkyC,WAAalyC,KAAKkyC,UAAUY,eACjC9yC,KAAKkyC,UAAUa,SAEf/yC,KAAKgzC,aACLhzC,KAAKgzC,WAAW18B,QAChBtW,KAAKgzC,WAAa,MAElBhzC,KAAKizC,iBAAmBjzC,KAAKizC,gBAAgBC,YAC7ClzC,KAAKizC,gBAAgBF,SAGzB,IAAMI,EAAgB,SAAhBA,IAMEnzC,EAAK2xC,UACL3xC,EAAK2xC,SAAU,EACf3xC,EAAK0xC,aAAalnC,OAClBxK,EAAK6xC,0BAA4B,OAGrC7xC,KAAK6xC,2BAC2C,mBAAzC7xC,KAAK6xC,0BAA0BjkB,OAMtC5tB,KAAK6xC,0BAA0BjkB,QAC/BwlB,WAAWD,IAGXA,OAQRR,cAAA,SAAAA,IAAA,IAAAU,EAAArzC,KAKQA,KAAKgzC,YACLhzC,KAAKgzC,WAAW18B,QAEpBtW,KAAKgzC,WAAahzC,KAAKmxC,QAAQjoB,KAAKynB,GAAsB,CACtD2C,UAAWtzC,KAAKqlB,KAAOrlB,KAAKqlB,KAAKvgB,MAAQ,MACzCyuC,iBAAkBvzC,KAAKqxC,kBACvBtuB,WAAY,0BAEhB/iB,KAAKgzC,WAAWQ,cAAc1qC,UAAU,WAAA,OAGlC9I,EAAKsW,UACXtW,KAAKgzC,WAAWS,kBAAkB59B,WAAa7V,KAC/CA,KAAK0zC,eAOTd,aAAA,SAAAA,IAAA,IAAAe,EAAA3zC,KACSA,KAAKizC,kBACNjzC,KAAKizC,gBAAkB,IAAI/S,EAAAzgC,EAAgBkxC,GAAsB3wC,KAAKqxC,oBAErErxC,KAAKkyC,WACNlyC,KAAK4zC,eAEJ5zC,KAAKkyC,UAAUY,gBAChB9yC,KAAKoyC,mBAAqBpyC,KAAKkyC,UAAU2B,OAAO7zC,KAAKizC,iBACrDjzC,KAAKoyC,mBAAmB0B,SAASj+B,WAAa7V,KAC9CA,KAAK0zC,YAEL1zC,KAAKolB,QAAQgC,SAAStmB,eAAeC,KAAKC,OAAA6+B,EAAAx/B,EAAAW,CAAK,IAAI8H,UAAU,WAIzD9I,EAAKkyC,UAAUjhB,uBAS3B2iB,aAAA,SAAAA,IAAA,IAAAG,EAAA/zC,KAEI,IAAMg0C,EAAgB,IAAI3T,EAAA5gC,EAAc,CACpCw0C,iBAAkBj0C,KAAKk0C,+BACvBC,aAAa,EACbC,cAAe,mCACfd,UAAWtzC,KAAKqlB,KAChBisB,eAAgBtxC,KAAK4nB,kBACrB7E,WAAY,yBAEhB/iB,KAAKkyC,UAAYlyC,KAAKoxC,SAASiD,OAAOL,GACtCh0C,KAAKkyC,UAAUvoB,eAAe1Z,aAAa,OAAQ,UACnDjP,OAAA2+B,EAAAt/B,EAAAW,CAAMhB,KAAKkyC,UAAUoC,gBAAiBt0C,KAAKkyC,UAAUqC,cAAev0C,KAAKkyC,UAAUsC,gBAAgBzzC,KAAKC,OAAA8+B,EAAAz/B,EAAAW,CAIxGyZ,SAAAA,GAAAA,OAEWA,EAAM8P,UAAYwV,EAAA7qB,GACpBlV,EAAKwyC,kBAAoB/3B,EAAMiQ,QAAUjQ,EAAM8P,UAAYwV,EAAAp1B,MAC9D7B,UAIN2R,SAAAA,GACQA,GACAA,EAAMkQ,iBAEV3qB,EAAKsW,aAQb49B,6BAAA,SAAAA,IACI,OAAOl0C,KAAKoxC,SAASqD,WAChBC,oBAAoB10C,KAAKwyC,iBAAiBmC,6BAC1CC,sBAAsB,2BACtBC,wBAAuB,GACvBC,mBAAmB,GACnBC,qBACAC,cAAc,CACf,CACIxuB,QAAS,QACTC,QAAS,SACTC,SAAU,QACVC,SAAU,OAEd,CACIH,QAAS,QACTC,QAAS,MACTC,SAAU,QACVC,SAAU,UAEd,CACIH,QAAS,MACTC,QAAS,SACTC,SAAU,MACVC,SAAU,OAEd,CACIH,QAAS,MACTC,QAAS,MACTC,SAAU,MACVC,SAAU,eAStB4jB,oBAAA,SAAAA,EAAoBC,GAChB,OAAQxqC,KAAKsnC,aAAamD,eAAeD,IAAQxqC,KAAKsnC,aAAaoD,QAAQF,GAAQA,EAAM,QAO7FkJ,UAAA,SAAAA,IAEI,IAAMzuC,EAAQjF,KAAKiF,MACfjF,KAAKoyC,qBACLpyC,KAAKoyC,mBAAmB0B,SAAS7uC,MAAQA,GAEzCjF,KAAKgzC,aACLhzC,KAAKgzC,WAAWS,kBAAkBxuC,MAAQA,yCA3W9C,OAAOjF,KAAKkwC,WAAalwC,KAAKwyC,iBAAmBxyC,KAAKwyC,iBAAiB1tC,MAAQ,sBAMvEA,GACR9E,KAAKkwC,SAAWlwC,KAAKuqC,oBAAoBvqC,KAAKsnC,aAAasD,YAAY9lC,oCAOvE,OAAO9E,KAAKi1C,SACPj1C,KAAKwyC,iBAAmBxyC,KAAKwyC,iBAAiB0C,wBAAqBjmC,mBAMlEnK,GACN9E,KAAKi1C,OAASnwC,oCAOF,OAAO9E,KAAKwxC,yBAKhB1sC,GACR9E,KAAKwxC,SAAWxwC,OAAAo/B,EAAAx1B,EAAA5J,CAAsB8D,sCAOtC,YAA0BmK,IAAnBjP,KAAKm1C,WAA2Bn1C,KAAKwyC,iBACxCxyC,KAAKwyC,iBAAiBrtC,WAAanF,KAAKm1C,0BAMnCrwC,GAET,IAAMytB,EAAWvxB,OAAAo/B,EAAAx1B,EAAA5J,CAAsB8D,GACnCytB,IAAavyB,KAAKm1C,YAClBn1C,KAAKm1C,UAAY5iB,EACjBvyB,KAAKgyC,gBAAgB1wC,KAAKixB,qCAOnB,OAAOvyB,KAAK2xC,wBAKhB7sC,GAASA,EAAQ9E,KAAKkpB,OAASlpB,KAAKsW,4CAK7B,OAAOtW,KAAK4xC,+BAKhB9sC,GAAS9E,KAAK4xC,eAAiB9sC,qCAMzC,OAAO9E,KAAKwyC,kBAAoBxyC,KAAKwyC,iBAAiB/qC,uCAOtD,OAAOzH,KAAKwyC,kBAAoBxyC,KAAKwyC,iBAAiBhrC,0CAMtD,OAAOxH,KAAKwyC,kBAAoBxyC,KAAKwyC,iBAAiBvB,mCAgR9DzR,EAAc30B,eAAiBjL,EAAAkL,GAAyB,CAAEC,KAAMy0B,EAAex0B,UAAW,CAAC,CAAC,mBAAoBtJ,QAAS,SAAAA,EAA+BC,GAAK,OAAO,IAAKA,GAAK69B,GAAe5/B,EAAAqL,GAAyBs1B,EAAAh2B,GAAY3K,EAAAqL,GAAyBo1B,EAAAz1B,GAAUhL,EAAAqL,GAAyBrL,EAAAgzB,GAAShzB,EAAAqL,GAAyBrL,EAAAw1C,IAAmBx1C,EAAAqL,GAAyBslC,IAAiC3wC,EAAAqL,GAAyB+0B,EAAAp1B,EAAa,GAAIhL,EAAAqL,GAAyBg1B,EAAA11B,EAAgB,GAAI3K,EAAAqL,GAAyBq1B,EAAA7gC,EAAU,KAAQ6L,OAAQ,CAAE2jC,UAAW,YAAaG,QAAS,UAAWnqC,MAAO,QAAS6rC,QAAS,UAAW3rC,SAAU,WAAYkwC,OAAQ,SAAUnE,wBAAyB,0BAA2BnuB,WAAY,aAAc+gB,UAAW,aAAer4B,QAAS,CAAE2/B,aAAc,eAAgBuB,cAAe,gBAAiB8E,aAAc,SAAUC,aAAc,UAAYhmC,SAAU,CAAC,iBAAkBG,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAAgCnI,EAAIC,KAAUuI,cAAe,EAAGC,gBAAiB,SAqFhgC,IAAMipC,GAAgC,CAClC3tC,QAAS64B,EAAAt0B,EACTynB,YAAa3yB,OAAApB,EAAA8uC,GAAA1tC,CAAW,WAAA,OAGlBy+B,KACN8V,OAAO,GAMLC,GAA4B,CAC9B7tC,QAAS64B,EAAAxM,EACTL,YAAa3yB,OAAApB,EAAA8uC,GAAA1tC,CAAW,WAAA,OAGlBy+B,KACN8V,OAAO,OAQLE,GAKF,SAAAA,EAAYv0C,EAAQw0C,GAChB11C,KAAKkB,OAASA,EACdlB,KAAK01C,cAAgBA,EACrB11C,KAAK8E,MAAQ9E,KAAKkB,OAAO4D,6BAO3B26B,aAOF,SAAAA,EAAY/a,EAAa4iB,EAAcD,EAAcsO,GAAAA,IAAAA,EAAAA,KA8FjD,GA7FA31C,KAAK0kB,YAAcA,EACnB1kB,KAAKsnC,aAAeA,EACpBtnC,KAAKqnC,aAAeA,EACpBrnC,KAAK21C,WAAaA,EAIlB31C,KAAK41C,WAAa,IAAIh2C,EAAA+B,EAItB3B,KAAKqV,UAAY,IAAIzV,EAAA+B,EAIrB3B,KAAKyyC,aAAe,IAAI7yC,EAAA+B,EAIxB3B,KAAKgyC,gBAAkB,IAAIpyC,EAAA+B,EAC3B3B,KAAKomB,WAAa,aAIlBpmB,KAAK61C,aAAe,aAIpB71C,KAAK81C,mBAAqB,aAI1B91C,KAAK+1C,wBAA0BrhB,EAAAr0B,EAAa0xC,MAC5C/xC,KAAKg2C,oBAAsBthB,EAAAr0B,EAAa0xC,MAIxC/xC,KAAKi2C,gBAAkB,WAAA,OAIZj2C,EAAKk2C,gBACR,KAAO,CAAEC,mBAAsB,CAAEC,KAAQp2C,EAAK0kB,YAAYhX,cAAc5I,SAKhF9E,KAAKq2C,cAIJC,SAAAA,GAEG,IAAMC,EAAev2C,EAAKuqC,oBAAoBvqC,EAAKsnC,aAAasD,YAAY0L,EAAQxxC,QACpF,OAAS9E,EAAKyH,MAAQ8uC,GAClBv2C,EAAKsnC,aAAaqB,YAAY3oC,EAAKyH,IAAK8uC,IAAiB,EACzD,KAAO,CAAEC,iBAAoB,CAAE/uC,IAAOzH,EAAKyH,IAAKgvC,OAAUF,KAKlEv2C,KAAK02C,cAIJJ,SAAAA,GAEG,IAAMC,EAAev2C,EAAKuqC,oBAAoBvqC,EAAKsnC,aAAasD,YAAY0L,EAAQxxC,QACpF,OAAS9E,EAAKwH,MAAQ+uC,GAClBv2C,EAAKsnC,aAAaqB,YAAY3oC,EAAKwH,IAAK+uC,IAAiB,EACzD,KAAO,CAAEI,iBAAoB,CAAEnvC,IAAOxH,EAAKwH,IAAKivC,OAAUF,KAKlEv2C,KAAK42C,iBAIJN,SAAAA,GAEG,IAAMC,EAAev2C,EAAKuqC,oBAAoBvqC,EAAKsnC,aAAasD,YAAY0L,EAAQxxC,QACpF,OAAQ9E,EAAKixC,aAAgBsF,IAAgBv2C,EAAKixC,YAAYsF,GACnD,CAAEM,qBAAuB,GAAhC,MAKR72C,KAAK82C,WAAatW,EAAArK,EAAW4gB,QAAQ,CAAC/2C,KAAKi2C,gBAAiBj2C,KAAKq2C,cAAer2C,KAAK02C,cAAe12C,KAAK42C,mBAIzG52C,KAAKk2C,iBAAkB,GAClBl2C,KAAKsnC,aACN,MAAM/B,GAA2B,eAErC,IAAKvlC,KAAKqnC,aACN,MAAM9B,GAA2B,oBAGrCvlC,KAAKg2C,oBAAsB1O,EAAa0P,cAAcluC,UAAU,WAI5D9I,EAAK8E,MAAQ9E,EAAK8E,4BAgH1BsE,YAAA,SAAAA,IACIpJ,KAAK+1C,wBAAwB1sC,cAC7BrJ,KAAKg2C,oBAAoB3sC,cACzBrJ,KAAKyyC,aAAarjC,WAClBpP,KAAKgyC,gBAAgB5iC,cAOzB6nC,0BAAA,SAAAA,EAA0BhtB,GACtBjqB,KAAK81C,mBAAqB7rB,KAO9BitB,SAAA,SAAAA,EAAStsC,GACL,OAAO5K,KAAK82C,WAAa92C,KAAK82C,WAAWlsC,GAAK,QAOlDusC,6BAAA,SAAAA,IACI,OAAOn3C,KAAK20C,+BAMhBA,0BAAA,SAAAA,IACI,OAAO30C,KAAK21C,WAAa31C,KAAK21C,WAAWhB,4BAA8B30C,KAAK0kB,eAOhFoF,WAAA,SAAAA,EAAWhlB,GACP9E,KAAK8E,MAAQA,KAOjBklB,iBAAA,SAAAA,EAAiBC,GACbjqB,KAAK61C,aAAe5rB,KAOxBC,kBAAA,SAAAA,EAAkBD,GACdjqB,KAAKomB,WAAa6D,KAOtBE,iBAAA,SAAAA,EAAiBC,GACbpqB,KAAKmF,SAAWilB,KAMpBgtB,WAAA,SAAAA,EAAW38B,GAGHza,KAAKq3C,aADc58B,EAAMiQ,QAAUjQ,EAAM8P,UAAYwV,EAAAtgC,IACdO,KAAK0kB,YAAYhX,cAAc4pC,WACtEt3C,KAAKq3C,YAAYnuB,OACjBzO,EAAMkQ,qBAOd4sB,SAAA,SAAAA,EAASzyC,GAEL,IAAIgW,EAAO9a,KAAKsnC,aAAalyB,MAAMtQ,EAAO9E,KAAKqnC,aAAajyB,MAAMC,WAClErV,KAAKk2C,iBAAmBp7B,GAAQ9a,KAAKsnC,aAAaoD,QAAQ5vB,GAC1DA,EAAO9a,KAAKuqC,oBAAoBzvB,GAC3B9a,KAAKsnC,aAAayI,SAASj1B,EAAM9a,KAAK4sB,QAOvC5sB,KAAK81C,sBANL91C,KAAK4sB,OAAS9R,EACd9a,KAAK61C,aAAa/6B,GAClB9a,KAAKyyC,aAAajoC,KAAKsQ,GACvB9a,KAAKqV,UAAU7K,KAAK,IAAIirC,GAAwBz1C,KAAMA,KAAK0kB,YAAYhX,oBAS/EyY,UAAA,SAAAA,IACInmB,KAAK41C,WAAWprC,KAAK,IAAIirC,GAAwBz1C,KAAMA,KAAK0kB,YAAYhX,mBAM5EwnC,iBAAA,SAAAA,IACI,OAAOl1C,KAAK21C,WAAa31C,KAAK21C,WAAW1wC,WAAQgK,KAMrD4c,QAAA,SAAAA,IAEQ7rB,KAAK8E,OACL9E,KAAKw3C,aAAax3C,KAAK8E,OAE3B9E,KAAKomB,gBAQToxB,aAAA,SAAAA,EAAa1yC,GACT9E,KAAK0kB,YAAYhX,cAAc5I,MAC3BA,EAAQ9E,KAAKsnC,aAAappB,OAAOpZ,EAAO9E,KAAKqnC,aAAa/xB,QAAQD,WAAa,MAOvFk1B,oBAAA,SAAAA,EAAoBC,GAChB,OAAQxqC,KAAKsnC,aAAamD,eAAeD,IAAQxqC,KAAKsnC,aAAaoD,QAAQF,GAAQA,EAAM,+CApP3E1lC,GAAAA,IAAAA,EAAAA,KACTA,IAGL9E,KAAKq3C,YAAcvyC,EACnB9E,KAAKq3C,YAAY/E,eAAetyC,MAChCA,KAAK+1C,wBAAwB1sC,cAC7BrJ,KAAK+1C,wBAA0B/1C,KAAKq3C,YAAYpF,iBAAiBnpC,UAIhEgP,SAAAA,GACG9X,EAAK8E,MAAQgT,EACb9X,EAAK61C,aAAa/9B,GAClB9X,EAAKomB,aACLpmB,EAAKqV,UAAU7K,KAAK,IAAIirC,GAAwBz1C,EAAMA,EAAK0kB,YAAYhX,gBACvE1N,EAAK41C,WAAWprC,KAAK,IAAIirC,GAAwBz1C,EAAMA,EAAK0kB,YAAYhX,+DAQxD5I,GACpB9E,KAAKixC,YAAcnsC,EACnB9E,KAAK81C,qDAMK,OAAO91C,KAAK4sB,uBAKhB9nB,GACNA,EAAQ9E,KAAKsnC,aAAasD,YAAY9lC,GACtC9E,KAAKk2C,iBAAmBpxC,GAAS9E,KAAKsnC,aAAaoD,QAAQ5lC,GAC3DA,EAAQ9E,KAAKuqC,oBAAoBzlC,GAEjC,IAAM2yC,EAAUz3C,KAAK8E,MACrB9E,KAAK4sB,OAAS9nB,EACd9E,KAAKw3C,aAAa1yC,GACb9E,KAAKsnC,aAAayI,SAAS0H,EAAS3yC,IACrC9E,KAAKyyC,aAAajoC,KAAK1F,iCAOnB,OAAO9E,KAAK03C,qBAKhB5yC,GACJ9E,KAAK03C,KAAO13C,KAAKuqC,oBAAoBvqC,KAAKsnC,aAAasD,YAAY9lC,IACnE9E,KAAK81C,mDAMG,OAAO91C,KAAK23C,qBAKhB7yC,GACJ9E,KAAK23C,KAAO33C,KAAKuqC,oBAAoBvqC,KAAKsnC,aAAasD,YAAY9lC,IACnE9E,KAAK81C,wDAMQ,QAAS91C,KAAKm1C,0BAKlBrwC,GAET,IAAMytB,EAAWvxB,OAAAo/B,EAAAx1B,EAAA5J,CAAsB8D,GAEjCjE,EAAUb,KAAK0kB,YAAYhX,cAC7B1N,KAAKm1C,YAAc5iB,IACnBvyB,KAAKm1C,UAAY5iB,EACjBvyB,KAAKgyC,gBAAgBxnC,KAAK+nB,IAG1BA,GAAY1xB,EAAQ+2C,MAIpB/2C,EAAQ+2C,8BAqJpBnY,EAAmB5xB,eAAiBjO,EAAAkO,GAAyB,CAAE/C,KAAM00B,EAAoBz0B,UAAW,CAAC,CAAC,QAAS,gBAAiB,KAAMtJ,QAAS,SAAAA,EAAoCC,GAAK,OAAO,IAAKA,GAAK89B,GAAoB7/B,EAAAqL,GAAyBrL,EAAAmO,GAAanO,EAAAqL,GAAyB+0B,EAAAp1B,EAAa,GAAIhL,EAAAqL,GAAyB+0B,EAAAv1B,EAAkB,GAAI7K,EAAAqL,GAAyBw1B,EAAAl2B,EAAc,KAAQY,aAAc,SAAAA,EAAyCvH,EAAIC,EAAKuH,GAAoB,EAALxH,IACldhE,EAAAiT,GAAuB,GACvBjT,EAAA6E,GAAkB,QAAS,SAAqDC,GAAU,OAAOb,EAAI0zC,SAAS7yC,EAAOxD,OAAO4D,SAC5HlF,EAAA6E,GAAkB,SAAU,SAAsDC,GAAU,OAAOb,EAAIsiB,cACvGvmB,EAAA6E,GAAkB,OAAQ,SAAoDC,GAAU,OAAOb,EAAIgoB,YACnGjsB,EAAA6E,GAAkB,UAAW,SAAuDC,GAAU,OAAOb,EAAIuzC,WAAW1yC,KACpH9E,EAAAyL,GAA0Bu5B,KACnB,EAALhhC,IACFhE,EAAAi4C,GAAsB,WAAYh0C,EAAIsB,UACtCvF,EAAA0G,GAAmB,aAAiC,MAAnBzC,EAAIwzC,YAAsB,KAAOxzC,EAAIwzC,YAAYhC,SAAWxxC,EAAIwzC,YAAYj/B,IAA7G,KAAAxY,CAAyH,MAAOiE,EAAI4D,IAAM5D,EAAIyjC,aAAawQ,UAAUj0C,EAAI4D,KAAzK,KAAA7H,CAAsL,MAAOiE,EAAI2D,IAAM3D,EAAIyjC,aAAawQ,UAAUj0C,EAAI2D,KAAO,QAC5O8D,OAAQ,CAAExG,MAAO,QAASizC,cAAe,gBAAiBlB,oBAAqB,sBAAuBpvC,IAAK,MAAOD,IAAK,MAAOrC,SAAU,YAAcsG,QAAS,CAAEmqC,WAAY,aAAcvgC,UAAW,aAAe3J,SAAU,CAAC,sBAAuBC,SAAU,CAAC/L,EAAA8zB,GAA0B,CACzR4hB,GACAE,GACA,CAAE7tC,QAAS+4B,EAAArgC,EAA0BszB,YAAa8L,+BA2ExDuY,wBAENA,EAAwBnqC,eAAiBjO,EAAAkO,GAAyB,CAAE/C,KAAMitC,EAAyBhtC,UAAW,CAAC,CAAC,GAAI,0BAA2B,KAAMtJ,QAAS,SAAAA,EAAyCC,GAAK,OAAO,IAAKA,GAAKq2C,6BAUvNtY,aAMF,SAAAA,EAAYt6B,EAAOkD,EAAoB2vC,GACnCj4C,KAAKoF,MAAQA,EACbpF,KAAKsI,mBAAqBA,EAC1BtI,KAAKkuB,cAAgBwG,EAAAr0B,EAAa0xC,MAElC,IAAMmG,EAAiBC,OAAOF,GAC9Bj4C,KAAKulB,SAAY2yB,GAAqC,IAAnBA,EAAwBA,EAAiB,yBAuBhFjvB,YAAA,SAAAA,EAAYhiB,GACJA,EAAoB4O,YACpB7V,KAAKo4C,wBAMbhvC,YAAA,SAAAA,IACIpJ,KAAKkuB,cAAc7kB,iBAKvBmf,mBAAA,SAAAA,IACIxoB,KAAKo4C,wBAMTC,MAAA,SAAAA,EAAM59B,GACEza,KAAK6V,aAAe7V,KAAKmF,WACzBnF,KAAK6V,WAAWqT,OAChBzO,EAAMC,sBAOd09B,mBAAA,SAAAA,IAAA,IAAAE,EAAAt4C,KAEI,IAAMu4C,EAAqBv4C,KAAK6V,WAAa7V,KAAK6V,WAAWm8B,gBAAkBhxC,OAAA4+B,EAAAv/B,EAAAW,GAEzEw3C,EAAgBx4C,KAAK6V,YAAc7V,KAAK6V,WAAW28B,iBACrDxyC,KAAK6V,WAAW28B,iBAAiBR,gBAAkBhxC,OAAA4+B,EAAAv/B,EAAAW,GAEjDy3C,EAAoBz4C,KAAK6V,WAC3B7U,OAAA2+B,EAAAt/B,EAAAW,CAAMhB,KAAK6V,WAAW47B,aAAczxC,KAAK6V,WAAW67B,cACpD1wC,OAAA4+B,EAAAv/B,EAAAW,GACJhB,KAAKkuB,cAAc7kB,cACnBrJ,KAAKkuB,cAAgBltB,OAAA2+B,EAAAt/B,EAAAW,CAAMhB,KAAKoF,MAAM6B,QAASsxC,EAAoBC,EAAeC,GAAmB3vC,UAAU,WAAA,OAGzG9I,EAAKsI,mBAAmBS,wDA7D9B,YAAuBkG,IAAnBjP,KAAKm1C,WAA2Bn1C,KAAK6V,WAC9B7V,KAAK6V,WAAW1Q,WAElBnF,KAAKm1C,0BAMLrwC,GACT9E,KAAKm1C,UAAYn0C,OAAAo/B,EAAAx1B,EAAA5J,CAAsB8D,0BAsD/C46B,EAAoB70B,eAAiBjL,EAAAkL,GAAyB,CAAEC,KAAM20B,EAAqB10B,UAAW,CAAC,CAAC,0BAA2BtJ,QAAS,SAAAA,EAAqCC,GAAK,OAAO,IAAKA,GAAK+9B,GAAqB9/B,EAAAqL,GAAyBw6B,IAAoB7lC,EAAAqL,GAAyBrL,EAAAsL,GAAoBtL,EAAAkzB,GAAyB,cAAiBC,eAAgB,SAAAA,EAA4CnvB,EAAIC,EAAKmvB,GAG7Z,IAAIrX,EAH8a,EAAL/X,GAC7ahE,EAAAqzB,GAAsBD,EAAUglB,IAAyB,GAClD,EAALp0C,GAEFhE,EAAAic,GAAsBF,EAAK/b,EAAAkc,QAA0BjY,EAAI60C,YAAc/8B,EAAGI,QACzEL,UAAW,SAAAA,EAAmC9X,EAAIC,GAGnD,IAAI8X,EAH+D,EAAL/X,GAC9DhE,EAAAszB,GAAmB2R,IAAM,GAClB,EAALjhC,GAEFhE,EAAAic,GAAsBF,EAAK/b,EAAAkc,QAA0BjY,EAAI80C,QAAUh9B,EAAGI,QACrE5Q,aAAc,SAAAA,EAA0CvH,EAAIC,EAAKuH,GAAoB,EAALxH,IACjFhE,EAAAiT,GAAuB,GACvBjT,EAAA6E,GAAkB,QAAS,SAAsDC,GAAU,OAAOb,EAAI80C,QAAQ/qB,UAC9GhuB,EAAAyL,GAA0By5B,IAC1BllC,EAAAqR,MACO,EAALrN,IACFhE,EAAA0G,GAAmB,YAAY,GAC/B1G,EAAAyzB,GAAmB,+BAAgCxvB,EAAIgS,YAAchS,EAAIgS,WAAWw/B,QACpFz1C,EAAAyzB,GAAmB,aAAcxvB,EAAIgS,YAAuC,WAAzBhS,EAAIgS,WAAW5Q,OAClErF,EAAAyzB,GAAmB,WAAYxvB,EAAIgS,YAAuC,SAAzBhS,EAAIgS,WAAW5Q,OAChErF,EAAA4R,OACClG,OAAQ,CAAEia,SAAU,WAAYpgB,SAAU,WAAY0Q,WAAY,CAAC,MAAO,cAAeyd,cAAe,iBAAmB5nB,SAAU,CAAC,uBAAwBC,SAAU,CAAC/L,EAAAg0B,MAAgCC,mBAAoByR,GAAMz5B,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAAsCnI,EAAIC,GAAgB,EAALD,IACvThE,EAAAk0B,GAAuBuR,IACvBzlC,EAAAkE,GAAsB,EAAG,SAAUihC,GAAMC,IACzCplC,EAAA6E,GAAkB,QAAS,SAA8DC,GAAU,OAAOb,EAAIw0C,MAAM3zC,KACpH9E,EAAAmF,GAAkB,EAAGqgC,GAAyC,EAAG,EAAG,MAAOH,IAC3ErlC,EAAAqiB,GAAoB,GACpBriB,EAAAoE,MACO,EAALJ,IACFhE,EAAAuE,GAAkB,WAAYN,EAA9BsB,SAAAvF,CAA4C,gBAAiBiE,EAAIyvB,eACjE1zB,EAAA0G,GAAmB,aAAczC,EAAIuB,MAArCugC,kBAAA/lC,CAA8D,WAAYiE,EAAIsB,UAAW,EAAQtB,EAAI0hB,UACrG3lB,EAAAwE,GAAgB,GAChBxE,EAAAuE,GAAkB,QAASN,EAAI60C,eAC9B1sC,WAAY,CAAC20B,EAAAp2B,EAAkB+1B,EAAAr0B,GAAcE,OAAQ,CAAC,quBAAsuBC,cAAe,EAAGC,gBAAiB,2BA0Dl0BkzB,wBAENA,EAAoBjzB,YAAc1M,EAAA2M,GAAwB,CAAExB,KAAMw0B,IAClEA,EAAoB/yB,cAAgB5M,EAAA6M,GAAwB,CAAE/K,QAAS,SAAAA,EAAqCC,GAAK,OAAO,IAAKA,GAAK49B,IAA2B7yB,UAAW,CAChK+4B,GACA+K,IACD7jC,QAAS,CAAC,CACL2zB,EAAA11B,EACA+1B,EAAA/1B,EACA21B,EAAA91B,EACA41B,EAAA51B,EACAm2B,EAAAvgC,EACA6/B,EAAA/sB,4ECjiHL,IAAMylC,EAAa,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEtDC,EAAO,CAClBC,KAAM,GACNC,EAAG,GACHjxC,EAAG,GACHo0B,EAAG,GACH8c,UAAW,EACXC,OAAQ,QAGGC,+CAOJC,iBAAA,SAAAA,EAAiBr0C,EAAOs0C,EAAaC,GAC1C,IAAIC,EAAqBx0C,EACzB,IAAMy0C,EAAeH,EAAYl7B,OAC3Bs7B,EAAgCx5C,KAAKy5C,gBAAgBF,GACrDG,EAAwB7sB,MAAM8sB,KAAKH,EAAS55B,QAC5Cg6B,EAA8B55C,KAAK65C,qBAAqBN,EAAMG,GAEpE,GAAIJ,EAAW3zC,OAAS4zC,EAAK5zC,OAAQ,CAEnC,GAAmB,KAAf2zC,IAAiC,IAAZD,EAEvB,OADAr5C,KAAK85C,cAAgB,EACd95C,KAAK+5C,uBAAuBj1C,EAAOs0C,GAG5C,IAA+C,IAA3CQ,EAAkBxvC,QAAQivC,EAAS,GACrCC,EAAat5C,KAAKg6C,aAAaV,EAAYD,EAAS,EAAGD,EAAYa,YACnEj6C,KAAK85C,cAAgBT,EAAS,MACzB,CACLC,EAAat5C,KAAKg6C,aAAaV,EAAYD,EAAS,EAAGE,EAAKF,EAAS,IACrEr5C,KAAK85C,cAAgBT,EAAS,EAC9B,IAAK,IAAIhnC,EAAIrS,KAAK85C,cAAeznC,EAAI,IACc,IAA7CqnC,EAAYtvC,QAAQpK,KAAK85C,eADSznC,IAAxC,CAEIrS,KAAK85C,sBAMN,CACL,IAAMI,EAAOZ,EAAWD,GACxB,IAAIc,EAAcn6C,KAAKo6C,sBAAsBF,EAAMb,EAAQE,GAC3D,IAA2C,IAAvCK,EAAkBxvC,QAAQivC,GAC5BC,EAAat5C,KAAKq6C,cAAcf,EAAYD,EAAQ,IAChDc,GACFb,EAAat5C,KAAKq6C,cAAcf,EAAYD,EAAQa,GACpDl6C,KAAK85C,cAAgBT,EAAS,GAE9Br5C,KAAK85C,cAAgBT,MAElB,CACLC,EAAat5C,KAAKq6C,cAAcf,EAAYD,EAAQ,IACpDr5C,KAAK85C,gBAAkBT,EACvB,IAAK,IAAIhnC,EAAIgnC,EAAQhnC,EAAIknC,EAAK5zC,OAAQ0M,IAAK,CACzC,IAAiD,IAA7CqnC,EAAYtvC,QAAQpK,KAAK85C,eAEtB,CAEL,GADAK,EAAcn6C,KAAKo6C,sBAAsBF,EAAMb,EAAQE,GACtC,CACfD,EAAat5C,KAAKq6C,cAAcf,EAAYD,EAAQa,GACpDl6C,KAAK85C,gBAAkBT,EACvB,MAEA,MARFr5C,KAAK85C,gBAAkBT,IAe/B,OAAOC,KAGFgB,UAAA,SAAAA,EAAUlB,GAAAA,IAAAA,EAAAA,KACf,IAAImB,EAAY,GAChB,IAAMhB,EAAeH,EAAYl7B,OAC3Bs7B,EAAgCx5C,KAAKy5C,gBAAgBF,GAE3D,IAAA,IAAAiB,EAAsBjB,EAAtBkB,EAAA5tB,MAAAC,QAAA0tB,GAAAE,EAAA,EAAAF,EAAAC,EAAAD,EAAAA,EAAAzrC,OAAA4rC,cAAA,CAAA,IAAAC,EAAA,GAAAH,EAAA,CAAA,GAAAC,GAAAF,EAAA70C,OAAA,MAAAi1C,EAAAJ,EAAAE,SAAA,CAAAA,EAAAF,EAAAl5C,OAAA,GAAAo5C,EAAAG,KAAA,MAAAD,EAAAF,EAAA51C,MAAA,IAAWg2C,EAAXF,EACEL,GAAanB,EAAYa,WAO3B,OAJAT,EAASn4C,QAAQ,SAAC05C,EAAaprC,GAC7B4qC,EAAYv6C,EAAKq6C,cAAcE,EAAW5qC,EAAKorC,KAG1CR,KAGFR,uBAAA,SAAAA,EAAuBiB,EAAU5B,GAAAA,IAAAA,EAAAA,KACtC,IAAImB,EAAY,GACZz1C,EAAQ,GACZ,IAAMy0C,EAAeH,EAAYl7B,OAC3Bs7B,EAAgCx5C,KAAKy5C,gBAAgBF,GACrDG,EAAwB7sB,MAAM8sB,KAAKH,EAAS55B,QAC5Cg6B,EAA8B55C,KAAK65C,qBAAqBN,EAAMG,GAC9DuB,EAA0BpuB,MAAM8sB,KAAKH,EAAS0B,UAEpC,MAAZF,IACFl2C,EAAQk2C,EAAS79B,YAGnB,IAAA,IAAAg+B,EAAsB5B,EAAtB6B,EAAAvuB,MAAAC,QAAAquB,GAAAE,EAAA,EAAAF,EAAAC,EAAAD,EAAAA,EAAApsC,OAAA4rC,cAAA,CAAA,IAAAW,EAAA,GAAAF,EAAA,CAAA,GAAAC,GAAAF,EAAAx1C,OAAA,MAAA21C,EAAAH,EAAAE,SAAA,CAAAA,EAAAF,EAAA75C,OAAA,GAAA+5C,EAAAR,KAAA,MAAAS,EAAAD,EAAAv2C,MAAA,IAAWg2C,EAAXQ,EACEf,GAAanB,EAAYa,WAO3B,GAJAT,EAASn4C,QAAQ,SAAC05C,EAAaprC,GAC7B4qC,EAAYv6C,EAAKq6C,cAAcE,EAAW5qC,EAAKorC,MAG5Cj2C,EACH,OAAOy1C,EAGT,IAAMgB,EAA6Bv7C,KAAKw7C,oBAAoB12C,EAAOm2C,GAEnE,IAAK,IAAI5oC,EAAI,EAAGA,EAAIkpC,EAAiB51C,OAAQ0M,IAAK,CAChD,IAAM6nC,EAAOqB,EAAiBlpC,GACVrS,KAAKo6C,sBAAsBF,EAAMN,EAAkBvnC,GAAIknC,IAEvDW,IAASd,EAAYa,aACvCsB,EAAiBlpC,GAAK+mC,EAAYa,YAIlCsB,EAAiB51C,OAASi0C,EAAkBj0C,QAC9C41C,EAAiBE,OAAO7B,EAAkBj0C,QAG5C,IAAI+1C,EAAM,EACV,IAAA,IAAAC,EAA8BJ,EAA9BK,EAAA/uB,MAAAC,QAAA6uB,GAAAE,EAAA,EAAAF,EAAAC,EAAAD,EAAAA,EAAA5sC,OAAA4rC,cAAA,CAAA,IAAAmB,EAAA,GAAAF,EAAA,CAAA,GAAAC,GAAAF,EAAAh2C,OAAA,MAAAm2C,EAAAH,EAAAE,SAAA,CAAAA,EAAAF,EAAAr6C,OAAA,GAAAu6C,EAAAhB,KAAA,MAAAiB,EAAAD,EAAA/2C,MAAA,IAAWi3C,EAAXD,EAEEvB,EAAYv6C,KAAKq6C,cAAcE,EAAWX,EAAkB8B,KAD/CK,GAIf,OAAOxB,KAGFyB,qBAAA,SAAAA,EAAqBl3C,EAAOs0C,GACjC,IAAImB,EAAY,GAChB,IACMf,EAAgCx5C,KAAKy5C,gBADtBL,EAAYl7B,QAE3B+8B,EAA0BpuB,MAAM8sB,KAAKH,EAAS0B,UAEpD,IAAA,IAAAe,EAAkBn3C,EAAlBo3C,EAAArvB,MAAAC,QAAAmvB,GAAAE,EAAA,EAAAF,EAAAC,EAAAD,EAAAA,EAAAltC,OAAA4rC,cAAA,CAAA,IAAAyB,EAAA,GAAAF,EAAA,CAAA,GAAAC,GAAAF,EAAAt2C,OAAA,MAAAy2C,EAAAH,EAAAE,SAAA,CAAAA,EAAAF,EAAA36C,OAAA,GAAA66C,EAAAtB,KAAA,MAAAuB,EAAAD,EAAAr3C,MAAA,IAAWi2C,EAAXqB,GACsC,IAAhCnB,EAAc7wC,QAAQ2wC,IACpBA,IAAQ3B,EAAYa,aACtBM,GAAaQ,GAKnB,OAAOR,KAGF8B,8BAAA,SAAAA,EAA8Bv3C,EAAOs0C,EAAaC,EAAQxiC,GAC/D,IAAIsjC,EACAb,EAAqBx0C,EACzB,IAAMo1C,EAAeZ,EAAWD,GAC1BE,EAAeH,EAAYl7B,OAC3Bs7B,EAAgCx5C,KAAKy5C,gBAAgBF,GACrDG,EAAwB7sB,MAAM8sB,KAAKH,EAAS55B,QAC5Cg6B,EAA8B55C,KAAK65C,qBAAqBN,EAAMG,GAEpE,GAAK15C,KAAK+V,KA8CH,CACL,GAAmB,KAAfujC,IAAiC,IAAZD,EAEvB,OADAr5C,KAAK85C,cAAgB,EACd95C,KAAK+5C,uBAAuBj1C,EAAOs0C,GAGxCp5C,KAAK85C,cAAgB,IACvB95C,KAAK85C,gBACLT,KAGFr5C,KAAK85C,gBADLT,EAEA,IAAK,IAAIhnC,EAAI,EAAGA,EAAIwE,EAAWxE,IAA/B,EAC6C,IAAvCunC,EAAkBxvC,QAAQivC,IAC5BC,EAAat5C,KAAKg6C,aAAaV,EAAYD,EAAQD,EAAYa,YAC/DZ,MAEAC,EAAat5C,KAAKg6C,aAAaV,EAAYD,EAAQE,EAAKF,IACxDA,WA9DJ,GADAr5C,KAAK85C,cAAgBT,EAAS,IAAMA,EAASA,GACU,IAAnDO,EAAkBxvC,QAAQpK,KAAK85C,eAAAA,CAMjC,GAJAR,GADAa,EAAcn6C,KAAKo6C,sBAAsBF,EAAMl6C,KAAK85C,cAAeP,IAE/Dv5C,KAAKq6C,cAAcf,EAAYt5C,KAAK85C,gBAAiBI,GACpDZ,EAAat5C,KAAKq6C,cAAcf,EAAYt5C,KAAK85C,gBAAiBV,EAAYa,cACnFpjC,EACgB,EACd,IAAK,IAAIxE,EAAI,EAAGA,EAAIwE,EAAWxE,IAA/B,CAEEinC,GACyC,IAAvCM,EAAkBxvC,UAFpBivC,GAGMr5C,KAAKg6C,aAAaV,EAAYD,EAAQD,EAAYa,YAClDj6C,KAAKg6C,aAAaV,EAAYD,EAAQE,EAAKF,SAGhD,CACLC,EAAat5C,KAAKq6C,cAAcf,EAAYt5C,KAAK85C,cAAeP,EAAKv5C,KAAK85C,gBAC1E95C,KAAK85C,gBAEL,IAAIwC,GAAW,EACf,KAFAzlC,EAEgB,EAAG,CACjBwiC,EAASr5C,KAAK85C,cACd,IAAK,IAAIznC,EAAI,EAAGA,EAAIwE,EAAWxE,IAA/B,EAC6C,IAAvCunC,EAAkBxvC,QAAQivC,IAC5Bc,EAAcn6C,KAAKo6C,sBAAsBF,EAAMb,EAAQE,MACnC+C,GAClBhD,EAAat5C,KAAKg6C,aAAaV,EAAYD,EAAQa,GACnDb,IACAr5C,KAAK85C,gBACLwC,GAAW,IAEXhD,EAAat5C,KAAKg6C,aAAaV,EAAYD,EAAQD,EAAYa,YAC/DZ,MAGFC,EAAat5C,KAAKg6C,aAAaV,EAAYD,EAAQE,EAAKF,IACpDA,IAAWr5C,KAAK85C,eAClB95C,KAAK85C,gBAEPT,OA4BV,OAAOC,KAGFiD,8BAAA,SAAAA,EAA8Bz3C,EAAOs0C,EAAaC,EAAQmD,EAAe3lC,GAC9E,IAAIyiC,EAAqBx0C,EACzB,IAAMy0C,EAAeH,EAAYl7B,OAC3Bs7B,EAAgCx5C,KAAKy5C,gBAAgBF,GACrDG,EAAwB7sB,MAAM8sB,KAAKH,EAAS55B,QAC5Cg6B,EAA8B55C,KAAK65C,qBAAqBN,EAAMG,GAE9D+C,EAAepD,EAASxiC,EAE9B7W,KAAK85C,cAAgBT,EACrB,IAAA,IAAAqD,EAA2BF,EAA3BG,EAAA9vB,MAAAC,QAAA4vB,GAAAE,EAAA,EAAAF,EAAAC,EAAAD,EAAAA,EAAA3tC,OAAA4rC,cAA0C,CAAA,IAAAkC,EAAA,GAAAF,EAAA,CAAA,GAAAC,GAAAF,EAAA/2C,OAAA,MAAAk3C,EAAAH,EAAAE,SAAA,CAAAA,EAAAF,EAAAp7C,OAAA,GAAAs7C,EAAA/B,KAAA,MAAAgC,EAAAD,EAAA93C,MAAA,IAA/Bg4C,EAA+BD,EACxC,IAAM3C,EAAO4C,EAEb,GAAI98C,KAAK85C,cAAgBP,EAAK5zC,OAC5B,OAAO2zC,EAGT,IAAuD,IAAnDM,EAAkBxvC,QAAQpK,KAAK85C,eACb95C,KAAKo6C,sBAAsBF,EAAMl6C,KAAK85C,cAAeP,KAEvED,EAAat5C,KAAKq6C,cAAcf,EAAYt5C,KAAK85C,gBAAiBI,SAGpE,IAAK,IAAI7nC,EAAIgnC,EAAQhnC,EAAIknC,EAAK5zC,OAAQ0M,IAAK,CACzC,IAAiD,IAA7CqnC,EAAYtvC,QAAQpK,KAAK85C,eAEtB,CACe95C,KAAKo6C,sBAAsBF,EAAMl6C,KAAK85C,cAAeP,KAEvED,EAAat5C,KAAKq6C,cAAcf,EAAYt5C,KAAK85C,gBAAiBI,IAEpE,MANAl6C,KAAK85C,gBAWXjjC,IAGF,GAAIA,EAAY,EACd,IAAK,IAAIxE,EAAIrS,KAAK85C,cAAeznC,EAAIoqC,EAAcpqC,IAAnD,EACmD,IAA7CqnC,EAAYtvC,QAAQpK,KAAK85C,eAC3B95C,KAAK85C,gBAELR,EAAat5C,KAAKq6C,cAAcf,EAAYt5C,KAAK85C,gBAAiBV,EAAYa,YAKpF,OAAOX,KAGDc,sBAAA,SAAAA,EAAsB2C,EAAmBtI,EAAkB8E,GACjE,IAAIyD,EACAtS,EASJ,OAAQ6O,EAAK0D,OAAOxI,IAClB,IAAK,IACH/J,EAAwB,KAAdqS,EACV,MACF,IAAK,IAEHrS,IADAsS,EAAQ,IAAIE,OAAO,cACFC,KAAKJ,GACtB,MACF,IAAK,IAEHrS,GADAsS,EAAQ,IAAIE,OAhBgB,qDAiBZC,KAAKJ,GACrB,MACF,IAAK,IAEHrS,GADAsS,EAAQ,IAAIE,OArBW,8CAsBPC,KAAKJ,GACrB,MACF,IAAK,IAEHrS,GADAsS,EAAQ,IAAIE,OAtBQ,kDAuBJC,KAAKJ,GACrB,MACF,IAAK,IAEHrS,GADAsS,EAAQ,IAAIE,OA3BI,2CA4BAC,KAAKJ,GACrB,MACF,IAAK,IAEHrS,GADAsS,EAAQ,IAAIE,OA7BG,UA8BCC,KAAKJ,GACrB,MACF,IAAK,IAEHrS,GADAsS,EAAQ,IAAIE,OAhCQ,iBAiCJC,KAAKJ,GACrB,MACF,IAAK,IAEHrS,GADAsS,EAAQ,IAAIE,OAnCU,cAoCNC,KAAKJ,GACrB,MACF,QACErS,EAAU,KAId,OAAOA,KAED2P,cAAA,SAAAA,EAAc+C,EAAkBjuB,EAAe+qB,GACrD,QAAiBjrC,IAAbmuC,EACF,OAAOA,EAAS3e,UAAU,EAAGtP,GAAS+qB,EAAOkD,EAAS3e,UAAUtP,EAAQ,MAGpE6qB,aAAA,SAAAA,EAAaoD,EAAkBjuB,EAAe+qB,GACpD,QAAiBjrC,IAAbmuC,EACF,OAAOA,EAAS3e,UAAU,EAAGtP,GAAS+qB,EAAOkD,EAAS3e,UAAUtP,MAG5DsqB,gBAAA,SAAAA,EAAgBF,GACtB,IAAMC,EAAW,IAAI6D,IAErB,IAAK,IAAIhrC,EAAI,EAAGA,EAAIknC,EAAK5zC,OAAQ0M,IAAK,CACpC,IAAM6nC,EAAOX,EAAK0D,OAAO5qC,IACS,IAA9BumC,EAAWxuC,QAAQ8vC,IACrBV,EAASt8B,IAAI7K,EAAG6nC,GAIpB,OAAOV,KAEDK,qBAAA,SAAAA,EAAqBN,EAAcG,GACzC,IAAM4D,EAA+B,IAAIzwB,MAEzC,IAAK,IAAIxa,EAAI,EAAGA,EAAIknC,EAAK5zC,OAAQ0M,IAAjC,EACkC,IAA5BqnC,EAAYtvC,QAAQiI,IACtBirC,EAAmBjzC,KAAKgI,GAI5B,OAAOirC,KAED9B,oBAAA,SAAAA,EAAoB12C,EAAem2C,GACzC,IAAMM,EAA6B,IAAI1uB,MAEvC,IAAA,IAAA0wB,EAAkBz4C,EAAlB04C,EAAA3wB,MAAAC,QAAAywB,GAAAE,EAAA,EAAAF,EAAAC,EAAAD,EAAAA,EAAAxuC,OAAA4rC,cAAA,CAAA,IAAA+C,EAAA,GAAAF,EAAA,CAAA,GAAAC,GAAAF,EAAA53C,OAAA,MAAA+3C,EAAAH,EAAAE,SAAA,CAAAA,EAAAF,EAAAj8C,OAAA,GAAAm8C,EAAA5C,KAAA,MAAA6C,EAAAD,EAAA34C,MAAA,IAAWi2C,EAAX2C,GACsC,IAAhCzC,EAAc7wC,QAAQ2wC,IACxBQ,EAAiBlxC,KAAK0wC,GAI1B,OAAOQ,uCAzXP,OAAOv7C,KAAK85C,8BCCT,SAAS6D,IACd,OAAOC,UAAUC,WAAWzzC,QAAQ,YAAc,EAfpD5K,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAo+C,IAkBA,IAAMC,EAAO,SAAPA,MAMC,IAAAD,EAAA,WAAA,IAAME,EAAN,WAoDL,SAAAA,EAAoB/wC,GAAAA,KAAAA,WAAAA,EA5CHjN,KAAAynB,YAAc,IAAItZ,EAAAxM,EAyB3B3B,KAAAo5C,YAAc,CACpBl7B,OAAQ,GACR+7B,WAAY,IAaNj6C,KAAAi+C,kBAAgCF,EAEhC/9C,KAAAk+C,iBAAqCH,EAG3C/9C,KAAKm+C,WAAa,IAAIjF,EArDnB,IAAAkF,EAAAJ,EAAAr9C,UAAAy9C,EAwDEp1C,SAAA,SAAAA,IACDhJ,KAAKi6C,YAAcj6C,KAAKi6C,WAAWt0C,OAAS,IAC9C3F,KAAKo5C,YAAYa,WAAaj6C,KAAKi6C,WAAaj6C,KAAKi6C,WAAWxb,UAAU,EAAG,IAG/Ez+B,KAAKo5C,YAAYl7B,OAASle,KAAKu5C,KAAOv5C,KAAKu5C,KAAO,aAClDv5C,KAAKo5C,YAAYa,WAAaj6C,KAAKi6C,WAAaj6C,KAAKi6C,WAAa,IAClEj6C,KAAK0N,cAAcuC,aAAa,cAAejQ,KAAK4hB,YAAc5hB,KAAK4hB,YAAc5hB,KAAKo5C,YAAYl7B,SA/DnGkgC,EAmEErzB,UAAA,SAAAA,EAAUtQ,GACf,IAAM9K,EAAM8K,EAAM8P,SAAW9P,EAAM4jC,SAE/BV,KAAU39C,KAAK0a,kBACjB1a,KAAK0a,iBAAkB,GAGrB/K,IAAQkpC,EAAKC,OACf94C,KAAKs+C,UAAW,IAGbt+C,KAAKs+C,UAAY3uC,IAAQkpC,EAAKE,GAAO/4C,KAAKs+C,UAAY3uC,IAAQkpC,EAAK/wC,IACtE2S,EAAMkQ,iBAGR3qB,KAAK2P,IAAMA,EACX3P,KAAK6W,UAAYtP,KAAKoqB,IAAI3xB,KAAKy8C,aAAez8C,KAAKu+C,iBAnFhDH,EAuFEI,QAAA,SAAAA,EAAQ/jC,IACDA,EAAM8P,SAAW9P,EAAM4jC,YAEvBxF,EAAKC,OACf94C,KAAKs+C,UAAW,IA3FfF,EAgGEK,QAAA,SAAAA,EAAQhkC,GACbza,KAAK0+C,OAAQ,EAEb1+C,KAAK2+C,WAAa3+C,KAAK8E,MACvB9E,KAAK4+C,cAAgB5+C,KAAK6+C,qBApGvBT,EAwGEU,eAAA,SAAAA,EAAerkC,GACpB,GAAIkjC,KAAU39C,KAAK0a,gBAEjB,YADA1a,KAAK0a,iBAAkB,GAIzB,GAAI1a,KAAK0+C,MAAO,CACd1+C,KAAK0+C,OAAQ,EAEb,IAAMlC,EAAgBx8C,KAAK8E,MAAM25B,UAAUz+B,KAAK4+C,cAAe5+C,KAAK6+C,qBACpE7+C,KAAK8E,MAAQ9E,KAAKm+C,WAAW5B,8BAC3Bv8C,KAAK2+C,WACL3+C,KAAKo5C,YACLp5C,KAAK4+C,cACLpC,EACAx8C,KAAK6W,WAGP7W,KAAK++C,kBAAkB/+C,KAAKm+C,WAAW9E,YAClC,CACL,IAAM2F,EAAmBh/C,KAAK6+C,oBAE9B7+C,KAAKm+C,WAAWpoC,KAAO/V,KAAK2P,MAAQkpC,EAAKG,WAAah5C,KAAK2P,MAAQkpC,EAAKI,OAExEj5C,KAAK8E,MACH9E,KAAK6W,WAAgC,IAAnB7W,KAAK6W,UACnB7W,KAAKm+C,WAAW9B,8BACdr8C,KAAK8E,MACL9E,KAAKo5C,YACL4F,EAAmB,EACnBh/C,KAAK6W,WAEP7W,KAAKm+C,WAAWhF,iBAAiBn5C,KAAK8E,MAAO9E,KAAKo5C,YAAa4F,EAAmB,GAExFh/C,KAAK++C,kBAAkB/+C,KAAKm+C,WAAW9E,QAGzC,IAAM4F,EAASj/C,KAAKm+C,WAAWnC,qBAAqBh8C,KAAK8E,MAAO9E,KAAKo5C,aAErEp5C,KAAKk/C,UAAYl/C,KAAKm/C,gBAAkBn/C,KAAK8E,MAAQm6C,EACrDj/C,KAAKk+C,iBAAiBl+C,KAAKk/C,WAE3Bl/C,KAAKynB,YAAYjd,KAAK,CAAE40C,SAAUH,EAAQI,eAAgBr/C,KAAK8E,SAlJ5Ds5C,EAsJEkB,QAAA,SAAAA,EAAQx6C,GACT9E,KAAKu/C,kBACH5B,MACF39C,KAAK0a,iBAAkB,GAEzB1a,KAAK8E,MAAQ9E,KAAKu/C,iBAAiBjgC,UAAUxa,IAE7C9E,KAAK8E,MAAQ9E,KAAKm+C,WAAWpE,uBAAuB/5C,KAAK8E,MAAO9E,KAAKo5C,cA7JpEgF,EAkKEoB,OAAA,SAAAA,EAAO16C,GACR9E,KAAKy/C,iBACPz/C,KAAK8E,MAAQ9E,KAAKy/C,iBAAiBngC,UAAUxa,GACpCA,IAAU9E,KAAKm+C,WAAW7D,UAAUt6C,KAAKo5C,eAClDp5C,KAAK8E,MAAQ,KAtKZs5C,EA0KGS,kBAAA,SAAAA,IACN,OAAO7+C,KAAK0N,cAAc6wC,gBA3KvBH,EA8KGW,kBAAA,SAAAA,EAAkBW,EAAeC,GAAcD,GAAdC,SAAcD,EAAAA,CAAdC,EAAcD,EACrD1/C,KAAK0N,cAAckyC,kBAAkBF,EAAOC,IA/KzCvB,EAkLEt0B,WAAA,SAAAA,EAAWhlB,GACZ9E,KAAKi6C,YAAcj6C,KAAKi6C,WAAWt0C,OAAS,IAC9C3F,KAAKo5C,YAAYa,WAAaj6C,KAAKi6C,WAAWxb,UAAU,EAAG,IAG7Dz+B,KAAK8E,MAAQA,EAAQ9E,KAAKm+C,WAAWpE,uBAAuBj1C,EAAO9E,KAAKo5C,aAAe,GACnFp5C,KAAKy/C,mBACPz/C,KAAK8E,MAAQ9E,KAAKy/C,iBAAiBngC,UAAUtf,KAAK8E,QAGpD9E,KAAKk/C,UAAYl/C,KAAKm/C,gBAAkBn/C,KAAK8E,MAAQA,EACrD9E,KAAKk+C,iBAAiBl+C,KAAKk/C,WAE3Bl/C,KAAKynB,YAAYjd,KAAK,CAAE40C,SAAUt6C,EAAOu6C,eAAgBr/C,KAAK8E,SA/L3Ds5C,EAkMEp0B,iBAAA,SAAAA,EAAiBC,GACtBjqB,KAAKk+C,iBAAmBj0B,GAnMrBm0B,EAsMEl0B,kBAAA,SAAAA,EAAkBD,GACvBjqB,KAAKi+C,kBAAoBh0B,GAvMtBhP,EAAA+iC,EAAA,CAAA,CAAAruC,IAAA,QAAA+C,IAAA,SAAAA,IAUH,OAAO1S,KAAK0N,cAAc5I,OAVvBoY,IAAA,SAAAA,EAYa69B,GAChB/6C,KAAK0N,cAAc5I,MAAQi2C,IAbxB,CAAAprC,IAAA,gBAAA+C,IAAA,SAAAA,IAgBH,OAAO1S,KAAKiN,WAAWS,gBAhBpB,CAAAiC,IAAA,iBAAA+C,IAAA,SAAAA,IAoBH,OAAO1S,KAAK0N,cAAc6wC,iBApBvB,CAAA5uC,IAAA,eAAA+C,IAAA,SAAAA,IAwBH,OAAO1S,KAAK0N,cAAc+uC,iBAxBvB,OAAAuB,EAAA,UCgHPA,EAAcnwC,eAAiBM,EAAAL,GAAqB,CAAE/C,KDhHzCizC,EAAahzC,UAAA,CAAA,CAAA,GAAA,UAAA,KAAAtJ,QAAA,SAAAA,EAAAC,GAAA,OAAA,IAAAA,GAAbq8C,GAAa7vC,EAAAlD,GAAAkD,EAAAJ,KAAA5C,aAAA,SAAAA,EAAAvH,EAAAC,EAAAuH,GAAA,EAAAxH,ICiHlBuK,EAAA1J,GAAc,UAAW,SAAkDC,GAAU,OAAOb,EAAIknB,UAAUrmB,KAC1GyJ,EAAA1J,GAAc,QAAS,SAAgDC,GAAU,OAAOb,EAAI26C,QAAQ95C,KACpGyJ,EAAA1J,GAAc,QAAS,SAAgDC,GAAU,OAAOb,EAAI46C,QAAQ/5C,KACpGyJ,EAAA1J,GAAc,QAAS,SAAgDC,GAAU,OAAOb,EAAIi7C,eAAep6C,KAC3GyJ,EAAA1J,GAAc,QAAS,SAAgDC,GAAU,OAAOb,EAAIy7C,QAAQ56C,EAAOxD,OAAO4D,SAClHqJ,EAAA1J,GAAc,OAAQ,SAA+CC,GAAU,OAAOb,EAAI27C,OAAO96C,EAAOxD,OAAO4D,WAC9GwG,OAAQ,CAAEiuC,KAAM,CAAC,UAAW,QAASU,WAAY,aAAckF,gBAAiB,kBAAmBv9B,YAAa,cAAe69B,iBAAkB,mBAAoBF,iBAAkB,mBAAoBL,UAAW,aAAezzC,QAAS,CAAEgc,YAAa,eAAiB9b,SAAU,CAACwC,EAAAulB,GD1HrR,CAAC,CAAE/rB,QAASqN,EAAA9I,EAAmBynB,YAAaqqB,EAAezI,OAAO,UAGxE,wCEzBP/1C,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAmgD,IAAArgD,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAogD,IAAAtgD,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAqgD,IAAAvgD,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAsgD,KAAA,IAAA7/B,EAAA3gB,EAAA,QAAAygD,EAAAzgD,EAAA,QAAA0gD,EAAA1gD,EAAA,QAAA2gD,EAAA3gD,EAAA,QAAAogC,EAAApgC,EAAA,QAAA4gD,EAAA5gD,EAAA,QAAA6gD,EAAA7gD,EAAA,QAAA8gD,EAAA9gD,EAAA,QAAA+gD,EAAA/gD,EAAA,QAAAghD,EAAAhhD,EAAA,QAAAqhB,EAAArhB,EAAA,QAAAihD,EAAAjhD,EAAA,QAAAkhD,EAAAlhD,EAAA,QAAAmhD,EAAAnhD,EAAA,QAAAohD,EAAAphD,EAAA,QAAA0hB,EAAA1hB,EAAA,QAAA2hB,EAAA3hB,EAAA,QAAA4hB,EAAA5hB,EAAA,QAAA6hB,EAAA7hB,EAAA,QAAAqhD,EAAArhD,EAAA,QAAAshD,EAAAthD,EAAA,QAAAuhD,EAAAvhD,EAAA,QAoCA,IAAM8C,EAAM,CAAC,EAAG,iBACVC,EAAM,CAAC,gBAAiB,IACxBC,EAAM,CAAC,YAAa,GAAI,EAAG,kBAAmB,EAAG,oBAAqB,oBACtEC,EAAM,CAAC,KACPC,EAAM,CAAC,WAAY,KAAM,OAAQ,OAAQ,EAAG,iBAAkB,EAAG,UAAW,UAAW,SACvFC,EAAM,CAAC,EAAG,oBAChB,SAASq+C,EAAgCp9C,EAAIC,GAAO,GAAS,EAALD,EAAQ,CAC5D,IAAMq9C,EAAOhB,EAAAz7C,KACby7C,EAAAn8C,GAAsB,EAAG,MAAOpB,GAChCu9C,EAAAx7C,GAAkB,UAAW,SAAgEC,GAA8E,OAApEu7C,EAAAt7C,GAAqBs8C,GAAuBhB,EAAAr7C,KAAuC6d,eAAe/d,KACzMu7C,EAAAx7C,GAAkB,QAAS,SAA8DC,GAA8E,OAApEu7C,EAAAt7C,GAAqBs8C,GAAuBhB,EAAAr7C,KAAuCs8C,OAAO12C,KAAK,WAClMy1C,EAAAx7C,GAAkB,uBAAwB,SAAsFC,GAA8E,OAApEu7C,EAAAt7C,GAAqBs8C,GAAuBhB,EAAAr7C,KAAuCu8C,kBAAkBz8C,KAC/Ou7C,EAAAx7C,GAAkB,sBAAuB,SAAqFC,GAA8E,OAApEu7C,EAAAt7C,GAAqBs8C,GAAuBhB,EAAAr7C,KAAuCw8C,iBAAiB18C,KAC5Ou7C,EAAAn8C,GAAsB,EAAG,MAAOnB,GAChCs9C,EAAAh+B,GAAoB,GACpBg+B,EAAAj8C,KACAi8C,EAAAj8C,KACF,GAAS,EAALJ,EAAQ,CACV,IAAMy9C,EAAUpB,EAAAr7C,KAChBq7C,EAAA97C,GAAkB,UAAWk9C,EAA7BC,WAAArB,CAAiD,iBAAkBoB,EAAQE,uBAE/E,IAAM3+C,EAAM,CAAC,gBAAiB,QACxB4+C,EAAoB,CAStBC,cAAezgD,OAAAmf,EAAAxV,EAAA3J,CAAQ,gBAAiB,CACpCA,OAAAmf,EAAAjU,EAAAlL,CAAM,OAAQA,OAAAmf,EAAAlU,EAAAjL,CAAM,CAChBwiB,QAAS,EACTlE,UAAW,gBAEfte,OAAAmf,EAAAgD,EAAAniB,CAAW,gBAAiBA,OAAAmf,EAAAhN,EAAAnS,CAAM,CAC9BA,OAAAmf,EAAAiD,EAAApiB,CAAM,2CAA4CA,OAAAmf,EAAAsD,EAAAziB,CAAQ,eAAgBA,OAAAmf,EAAAlU,EAAAjL,CAAM,CAC5EwiB,QAAS,MAEbxiB,OAAAmf,EAAAsD,EAAAziB,CAAQ,mCAAoCA,OAAAmf,EAAAlU,EAAAjL,CAAM,CAAEse,UAAW,iBAEnEte,OAAAmf,EAAAgD,EAAAniB,CAAW,YAAaA,OAAAmf,EAAAsD,EAAAziB,CAAQ,oBAAqBA,OAAAmf,EAAAlU,EAAAjL,CAAM,CAAEwiB,QAAS,QAM1Ek+B,YAAa1gD,OAAAmf,EAAAxV,EAAA3J,CAAQ,cAAe,CAGhCA,OAAAmf,EAAAjU,EAAAlL,CAAM,UAAWA,OAAAmf,EAAAlU,EAAAjL,CAAM,CAAEwiB,QAAS,KAClCxiB,OAAAmf,EAAAgD,EAAAniB,CAAW,YAAa,CACpBA,OAAAmf,EAAAlU,EAAAjL,CAAM,CAAEwiB,QAAS,IACjBxiB,OAAAmf,EAAAsD,EAAAziB,CAAQ,0EA0Bd2gD,aASF,SAAAA,EAAYC,EAAWC,EAA2BC,EAASC,EAAW1Q,EAAmBE,GACrFvxC,KAAK4hD,UAAYA,EACjB5hD,KAAK6hD,0BAA4BA,EACjC7hD,KAAK8hD,QAAUA,EACf9hD,KAAK+hD,UAAYA,EACjB/hD,KAAKqxC,kBAAoBA,EACzBrxC,KAAKuxC,UAAYA,EAIjBvxC,KAAKgiD,UAAY,IAAIpiB,EAAAv/B,sBAQzBwzC,OAAA,SAAAA,EAAOrZ,GAAU,GAAVA,SAAU,EAAA,CAAVA,EAAU,GACRx6B,KAAKiiD,UACNjiD,KAAKiiD,QAAU,IAAI/B,EAAA7tC,EAAerS,KAAK4hD,UAAW5hD,KAAKqxC,oBAE3DrxC,KAAK+yC,SACA/yC,KAAKkiD,UACNliD,KAAKkiD,QAAU,IAAIhC,EAAAz8B,EAAgBzjB,KAAKuxC,UAAUvhC,cAAc,OAAQhQ,KAAK6hD,0BAA2B7hD,KAAK8hD,QAAS9hD,KAAK+hD,YAG/H,IAAMlhD,EAAUb,KAAK4hD,UAAU30C,WAAWS,cAIvB7M,EAAmBshD,WAAEC,aAAapiD,KAAKkiD,QAAQG,cAAexhD,GACjFb,KAAKiiD,QAAQpO,OAAO7zC,KAAKkiD,QAAS1nB,GAClCx6B,KAAKgiD,UAAU1gD,UAOnByxC,OAAA,SAAAA,IACQ/yC,KAAKiiD,QAAQ/O,YACblzC,KAAKiiD,QAAQlP,YAMrB3pC,YAAA,SAAAA,IACQpJ,KAAKkiD,SACLliD,KAAKkiD,QAAQ/P,8BAIzBwP,EAAe9zC,eAAiBoyC,EAAAnyC,GAAyB,CAAE/C,KAAM42C,EAAgB32C,UAAW,CAAC,CAAC,cAAe,iBAAkB,KAAMtJ,QAAS,SAAAA,EAAgCC,GAAK,OAAO,IAAKA,GAAKggD,GAAgB1B,EAAAh1C,GAAyBg1C,EAAAqC,IAAcrC,EAAAh1C,GAAyBg1C,EAAAh0C,GAA2Bg0C,EAAAh1C,GAAyBg1C,EAAA/qC,GAAiB+qC,EAAAh1C,GAAyBg1C,EAAA73C,GAAW63C,EAAAh1C,GAAyBg1C,EAAA7K,IAAmB6K,EAAAh1C,GAAyBk1C,EAAA1gD,YAmElc,IAAM8iD,EAAiB,IAAItC,EAAA97B,EAAe,sBAUpCq+B,iBAGN,IAAMC,EAAwBzhD,OAAA6f,EAAAsD,EAAAnjB,CAAmBA,OAAA6f,EAAAzY,EAAApH,CAAcwhD,yBAKzD1C,qBAOF,SAAAA,EAAYp7B,EAAa3U,EAAU2yC,EAAeC,GAAAA,IAAAA,EAE9Cp6C,EAAAA,EAAAA,KAAAA,OAAAA,KACAvI,EAAK0kB,YAAcA,EACnB1kB,EAAK0iD,cAAgBA,EACrB1iD,EAAK2iD,YAAcA,EAInB3iD,EAAK4iD,KAAO,WAIZ5iD,EAAK6iD,SAAW,IAAIjjB,EAAAv/B,EAIpBL,EAAK8iD,cAAe,EAIpB9iD,EAAK+iD,kBAAmB,EACpBL,GAIAA,EAAcM,QAAQhjD,EAAK0kB,aAAa,GAExCi+B,GAAeA,EAAYM,SAC3BN,EAAYM,QAAZN,EAAAA,IAEJ3iD,EAAKuxC,UAAYxhC,EA/B6B4yC,OAAAA,sBAuClD/0B,MAAA,SAAAA,EAAMs1B,EAAoBjjD,GAAAA,GAApBijD,SAAoBjjD,EAAAA,CAApBijD,EAAS,UACPljD,KAAK0iD,cACL1iD,KAAK0iD,cAAcS,SAASnjD,KAAK41B,kBAAmBstB,EAAQjjD,GAG5DD,KAAK41B,kBAAkBhI,MAAM3tB,MAMrCmJ,YAAA,SAAAA,IACQpJ,KAAK0iD,eACL1iD,KAAK0iD,cAAcU,eAAepjD,KAAK0kB,aAEvC1kB,KAAK2iD,aAAe3iD,KAAK2iD,YAAYU,YACrCrjD,KAAK2iD,YAAYU,WAAWrjD,MAEhCA,KAAK6iD,SAASzzC,cAMlBk0C,aAAA,SAAAA,IACI,OAAOtjD,KAAKmF,SAAW,KAAO,OAMlCywB,gBAAA,SAAAA,IACI,OAAO51B,KAAK0kB,YAAYhX,iBAY5B61C,eAAA,SAAAA,EAAe9oC,GACPza,KAAKmF,WACLsV,EAAMkQ,iBACNlQ,EAAMC,sBAYd8oC,kBAAA,SAAAA,IACIxjD,KAAK6iD,SAASvhD,KAAKtB,SAMvByjD,SAAA,SAAAA,IAEI,IAAM5iD,EAAUb,KAAK0kB,YAAYhX,cAE3Bg2C,EAAe1jD,KAAKuxC,UAAYvxC,KAAKuxC,UAAUoS,UAAY,EAEjE,IAAIzsB,EAAS,GACb,GAAIr2B,EAAQ+iD,WAAY,CAEpB,IAAMj+C,EAAS9E,EAAQ+iD,WAAWj+C,OAIlC,IAAK,IAAI0M,EAAI,EAAGA,EAAI1M,EAAQ0M,IAA5B,CACQxR,EAAQ+iD,WAAWvxC,GAAGwxC,WAAaH,IACnCxsB,GAAUr2B,EAAQ+iD,WAAWvxC,GAAGyxC,cAI5C,OAAO5sB,EAAOrd,kBAnII4oC,UAsI1B3C,EAAYj1C,eAAiBo1C,EAAAn1C,GAAyB,CAAEC,KAAM+0C,EAAa90C,UAAW,CAAC,CAAC,GAAI,gBAAiB,KAAMtJ,QAAS,SAAAA,EAA6BC,GAAK,OAAO,IAAKA,GAAKm+C,GAAaG,EAAAh1C,GAAyBg1C,EAAAlyC,GAAakyC,EAAAh1C,GAAyBk1C,EAAA1gD,GAAWwgD,EAAAh1C,GAAyBu1C,EAAArtC,GAAe8sC,EAAAh1C,GAAyBs3C,EAAgB,KAAQp3C,aAAc,SAAAA,EAAkCvH,EAAIC,EAAKuH,GAAoB,EAALxH,IAC/Zq8C,EAAAptC,GAAuB,GACvBotC,EAAAx7C,GAAkB,QAAS,SAA8CC,GAAU,OAAOb,EAAI0/C,eAAe7+C,KAC7Gu7C,EAAAx7C,GAAkB,aAAc,SAAmDC,GAAU,OAAOb,EAAI2/C,sBACxGvD,EAAA50C,GAA0B/I,GAC1B29C,EAAAhvC,MACO,EAALrN,IACFq8C,EAAA35C,GAAmB,OAAQzC,EAA3B++C,KAAA3C,CAAqC,WAAYp8C,EAAjDy/C,eAAArD,CAAqE,gBAAiBp8C,EAAIsB,SAA1FgY,WAAA8iC,CAA+G,WAAYp8C,EAAIsB,UAAY,MAC3I86C,EAAA5sB,GAAmB,4BAA6BxvB,EAAIi/C,cACpD7C,EAAA5sB,GAAmB,gCAAiCxvB,EAAIk/C,kBACxD9C,EAAAzuC,OACClG,OAAQ,CAAEnG,SAAU,WAAYmuB,cAAe,gBAAiBsvB,KAAM,QAAUl3C,SAAU,CAAC,eAAgBC,SAAU,CAACs0C,EAAAr0C,IAAoCs7B,MAAO3kC,EAAKsxB,mBAAoBpxB,EAAKoJ,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAA8BnI,EAAIC,GAAgB,EAALD,IAC3Qq8C,EAAAnsB,KACAmsB,EAAAh+B,GAAoB,GACpBg+B,EAAA/5C,GAAiB,EAAG,MAAO1D,IACpB,EAALoB,IACFq8C,EAAA77C,GAAgB,GAChB67C,EAAA97C,GAAkB,oBAAqBN,EAAIyvB,eAAiBzvB,EAA5DsB,SAAA86C,CAA0E,mBAAoBp8C,EAAI+xB,qBACjG5pB,WAAY,CAAC6U,EAAAsV,GAAmB/pB,cAAe,EAAGC,gBAAiB,SAyD5E,IAAM03C,EAA2B,IAAI9D,EAAA97B,EAAe,2BAA4B,CAC5EviB,WAAY,OACZF,QAMJ,SAAAA,IACI,MAAO,CACHsiD,gBAAgB,EAChBC,UAAW,QACXC,UAAW,QACX9P,cAAe,uCAQjB+P,EAA0B,uBAK1BC,aAMF,SAAAA,EAAY1/B,EAAaU,EAASi/B,GAC9BrkD,KAAK0kB,YAAcA,EACnB1kB,KAAKolB,QAAUA,EACfplB,KAAKqkD,gBAAkBA,EACvBrkD,KAAKskD,WAAatkD,KAAKqkD,gBAAgBJ,UACvCjkD,KAAKukD,WAAavkD,KAAKqkD,gBAAgBH,UAIvClkD,KAAKwkD,uBAAyB,IAAIvE,EAAA7lB,EAIlCp6B,KAAKykD,iBAAmBrE,EAAA//C,EAAa0xC,MAIrC/xC,KAAKshD,WAAa,GAIlBthD,KAAKuhD,qBAAuB,OAI5BvhD,KAAK0kD,eAAiB,IAAI9kB,EAAAv/B,EAI1BL,KAAKo0C,cAAgBp0C,KAAKqkD,gBAAgBjQ,cAC1Cp0C,KAAK2kD,gBAAkB3kD,KAAKqkD,gBAAgBL,eAC5ChkD,KAAK4kD,aAAe5kD,KAAKqkD,gBAAgBlQ,YAIzCn0C,KAAKkhD,OAAS,IAAIjB,EAAAt+C,EAMlB3B,KAAKsW,MAAQtW,KAAKkhD,2BA0GtBl4C,SAAA,SAAAA,IACIhJ,KAAK6kD,wBAKTr8B,mBAAA,SAAAA,IAAA,IAAAs8B,EAAA9kD,KACIA,KAAK+kD,2BACL/kD,KAAKspB,YAAc,IAAIk3B,EAAAtrC,EAAgBlV,KAAKwkD,wBAAwBQ,WAAWx3B,gBAC/ExtB,KAAKykD,iBAAmBzkD,KAAKspB,YAAYqE,OAAO7kB,UAAU,WAAA,OAGpD9I,EAAKkhD,OAAO12C,KAAK,YAK3BpB,YAAA,SAAAA,IACIpJ,KAAKwkD,uBAAuBS,UAC5BjlD,KAAKykD,iBAAiBp7C,cACtBrJ,KAAKkhD,OAAO9xC,cAMhByzC,SAAA,SAAAA,IAII,OADuC7iD,KAAKwkD,uBAA+Bv9C,QACxDlG,KAAKC,OAAA2/C,EAAAtgD,EAAAW,CAAUhB,KAAKwkD,wBAAyBxjD,OAAA4/C,EAAAvgD,EAAAW,CAIhEquB,SAAAA,GAAAA,OAASruB,OAAAq/C,EAAAhgD,GAAA4mB,WAAA,EAASoI,EAAM3kB,IAIvB4N,SAAAA,GAAAA,OAASA,EAAKuqC,kBAYnBI,QAAA,SAAAA,EAAQiC,OASR7B,WAAA,SAAAA,EAAW6B,OAMXziC,eAAA,SAAAA,EAAehI,GAEX,IAAM8P,EAAU9P,EAAM8P,QAEhBE,EAAUzqB,KAAKspB,YACrB,OAAQiB,GACJ,KAAKm2B,EAAAxrC,EACIlU,OAAA0/C,EAAAzrC,EAAAjU,CAAeyZ,KAChBA,EAAMkQ,iBACN3qB,KAAKkhD,OAAO12C,KAAK,YAErB,MACJ,KAAKk2C,EAAAruC,EACGrS,KAAKmlD,YAAiC,QAAnBnlD,KAAKszC,WACxBtzC,KAAKkhD,OAAO12C,KAAK,WAErB,MACJ,KAAKk2C,EAAAx0C,EACGlM,KAAKmlD,YAAiC,QAAnBnlD,KAAKszC,WACxBtzC,KAAKkhD,OAAO12C,KAAK,WAErB,MACJ,KAAKk2C,EAAAvtC,EACL,KAAKutC,EAAAj9B,EACIziB,OAAA0/C,EAAAzrC,EAAAjU,CAAeyZ,KAChB8P,IAAYm2B,EAAAvtC,EAAOsX,EAAQI,qBAAuBJ,EAAQK,oBAC1DrQ,EAAMkQ,kBAEV,MACJ,QACQJ,IAAYm2B,EAAA/1C,GAAY4f,IAAYm2B,EAAAjhD,GACpCgrB,EAAQ26B,eAAe,YAE3B36B,EAAQM,UAAUtQ,OAQ9B4qC,eAAA,SAAAA,EAAenC,GAAS,IAAAoC,EAAAtlD,KAAA,GAATkjD,SAAS,EAAA,CAATA,EAAS,UAEhBljD,KAAKulD,YACLvlD,KAAKolB,QAAQgC,SAAStmB,eACjBC,KAAKC,OAAAkgB,EAAA7gB,EAAAW,CAAK,IACV8H,UAAU,WAAA,OAGT9I,EAAKspB,YAAY87B,eAAelC,GAAQr4B,uBAG9C7qB,KAAKspB,YAAY87B,eAAelC,GAAQr4B,wBAQhD26B,gBAAA,SAAAA,IACIxlD,KAAKspB,YAAY6D,eAAe,MAOpCs4B,aAAA,SAAAA,EAAanrC,GAGT,IAAMorC,EAAAA,mBAAiCvB,EAA0B7pC,GAE3DqrC,EAAkB3kD,OAAO4e,KAAK5f,KAAKshD,YAAYl0B,KAIrDxiB,SAAAA,GAAAA,OAAKA,EAAEg7C,WAAW,qBACbD,GAAmBA,IAAoB3lD,KAAK6lD,qBACzC7lD,KAAK6lD,qBACL7lD,KAAKshD,WAAWthD,KAAK6lD,qBAAsB,GAE/C7lD,KAAKshD,WAAWoE,IAAgB,EAChC1lD,KAAK6lD,mBAAqBH,MAWlCb,mBAAA,SAAAA,EAAmBiB,EAAuBC,GAAY7B,GAAnC4B,SAAmC5B,EAAAA,CAAnC4B,EAAO9lD,KAAKikD,UAAuBC,GAAZ6B,SAAY7B,EAAAA,CAAZ6B,EAAO/lD,KAAKkkD,UAElD,IAAM8B,EAAUhmD,KAAKshD,WACrB0E,EAAQ,mBAA8B,WAATF,EAC7BE,EAAQ,kBAA6B,UAATF,EAC5BE,EAAQ,kBAA6B,UAATD,EAC5BC,EAAQ,kBAA6B,UAATD,KAMhCE,gBAAA,SAAAA,IAEIjmD,KAAKuhD,qBAAuB,WAMhC2E,gBAAA,SAAAA,IAEIlmD,KAAKuhD,qBAAuB,UAOhCH,iBAAA,SAAAA,EAAiB3mC,GACbza,KAAK0kD,eAAepjD,KAAKmZ,GACzBza,KAAKmmD,cAAe,KAMxBhF,kBAAA,SAAAA,EAAkB1mC,GACdza,KAAKmmD,cAAe,EAOE,UAAlB1rC,EAAM+H,SAA4D,IAArCxiB,KAAKspB,YAAYmC,kBAC9ChR,EAAM5Z,QAAQwrB,UAAY,MAWlC04B,yBAAA,SAAAA,IAAA,IAAAqB,EAAApmD,KACIA,KAAKqmD,UAAUp/C,QACVlG,KAAKC,OAAA2/C,EAAAtgD,EAAAW,CAAUhB,KAAKqmD,YACpBv9C,UAIJumB,SAAAA,GACGrvB,EAAKwkD,uBAAuB8B,MAAMj3B,EAAMtV,OAIxCzB,SAAAA,GAAAA,OAAQA,EAAKqqC,cAAgB3iD,KAC7BA,EAAKwkD,uBAAuB+B,4DAzUlB,OAAOvmD,KAAKskD,2BAKhBx/C,GACI,WAAVA,GAAgC,UAAVA,GAhVlC,WACI,MAAMqK,MAAM,kIADhB,GAmVQnP,KAAKskD,WAAax/C,EAClB9E,KAAK6kD,yDAMS,OAAO7kD,KAAKukD,2BAKhBz/C,GACI,UAAVA,GAA+B,UAAVA,GAtVjC,WACI,MAAMqK,MAAM,gIADhB,GAyVQnP,KAAKukD,WAAaz/C,EAClB9E,KAAK6kD,8DAMc,OAAO7kD,KAAK2kD,gCAKhB7/C,GACf9E,KAAK2kD,gBAAkB3jD,OAAAy/C,EAAA71C,EAAA5J,CAAsB8D,yCAM7B,OAAO9E,KAAK4kD,6BAKhB9/C,GACZ9E,KAAK4kD,aAAe5jD,OAAAy/C,EAAA71C,EAAA5J,CAAsB8D,sCAS/BkhD,GAAAA,IAAAA,EAAAA,KAEX,IAAMQ,EAAqBxmD,KAAKymD,oBAC5BD,GAAsBA,EAAmB7gD,QACzC6gD,EAAmBE,MAAM,KAAKrlD,QAI7BslD,SAAAA,GACG3mD,EAAKshD,WAAWqF,IAAa,IAGrC3mD,KAAKymD,oBAAsBT,EACvBA,GAAWA,EAAQrgD,SACnBqgD,EAAQU,MAAM,KAAKrlD,QAIlBslD,SAAAA,GACG3mD,EAAKshD,WAAWqF,IAAa,IAEjC3mD,KAAK0kB,YAAYhX,cAAci5C,UAAY,wCAWjC,OAAO3mD,KAAK+iB,2BAKhBijC,GAAWhmD,KAAK+iB,WAAaijC,yBA6O/C5B,EAAa5oC,UAAYykC,EAAAxkC,GAAoB,CAAEnQ,OAAQ,CAAE8oC,cAAe,gBAAiB6P,UAAW,YAAaC,UAAW,YAAaF,eAAgB,iBAAkB7P,YAAa,cAAepxB,WAAY,CAAC,QAAS,cAAe7S,UAAW,aAAezE,QAAS,CAAEy1C,OAAQ,SAAU5qC,MAAO,SAAWoF,UAAW,SAAAA,EAAU9X,EAAIC,GAGtU,IAAI8X,EAHkV,EAAL/X,GACjVq8C,EAAA/sB,GAAmB+sB,EAAAqC,IAAa,GACzB,EAAL1+C,GAEFq8C,EAAApkC,GAAsBF,EAAKskC,EAAAnkC,QAA0BjY,EAAI+iD,YAAcjrC,EAAGI,QACzEgX,eAAgB,SAAAA,EAAUnvB,EAAIC,EAAKmvB,GAKpC,IAAIrX,EALqD,EAAL/X,IACpDq8C,EAAAhtB,GAAsBD,EAAU8sB,GAAa,GAC7CG,EAAAhtB,GAAsBD,EAAU8sB,GAAa,GAC7CG,EAAAhtB,GAAsBD,EAAU2uB,GAAgB,IACzC,EAAL/9C,IAEFq8C,EAAApkC,GAAsBF,EAAKskC,EAAAnkC,QAA0BjY,EAAIwiD,UAAY1qC,GACrEskC,EAAApkC,GAAsBF,EAAKskC,EAAAnkC,QAA0BjY,EAAIwrB,MAAQ1T,GACjEskC,EAAApkC,GAAsBF,EAAKskC,EAAAnkC,QAA0BjY,EAAI0hD,YAAc5pC,EAAGI,oBA0B5E8qC,iFAAgBzC,wBAgBhBvE,qBAMF,SAAAA,EAAY5yC,EAAY65C,EAAQC,GAAAA,OAC5Bx+C,EAAAA,KAAAA,KAAM0E,EAAY65C,EAAQC,IADEA,eANbF,UAUvBhH,EAASh1C,eAAiBo1C,EAAAn1C,GAAyB,CAAEC,KAAM80C,EAAU70C,UAAW,CAAC,CAAC,aAActJ,QAAS,SAAAA,EAA0BC,GAAK,OAAO,IAAKA,GAAKk+C,GAAUI,EAAAh1C,GAAyBg1C,EAAAlyC,GAAakyC,EAAAh1C,GAAyBg1C,EAAArtB,GAASqtB,EAAAh1C,GAAyB84C,KAA+Br4C,SAAU,CAAC,WAAYC,SAAU,CAACs0C,EAAAvsB,GAA0B,CACnV,CAAE/rB,QAAS46C,EAAgB5uB,YAAakzB,GACxC,CAAEl/C,QAASk/C,EAASlzB,YAAaksB,KACjCI,EAAAr0C,IAAoCioB,mBAAoBpxB,EAAKoJ,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAA2BnI,EAAIC,GAAgB,EAALD,IACzIq8C,EAAAnsB,KACAmsB,EAAAl7C,GAAkB,EAAGi8C,EAAiC,EAAG,EAAG,iBAC3Dh1C,WAAY,CAACm0C,EAAAnsB,GAAiB7nB,OAAQ,CAAC,8wDAA+wDC,cAAe,EAAG2J,KAAM,CAAEke,UAAW,CACx1DutB,EAAkBC,cAClBD,EAAkBE,cACjBr1C,gBAAiB,SAqC9B,IAAM26C,EAA2B,IAAI/G,EAAA97B,EAAe,4BAgB9C8iC,EAA4C,CAC9Ct/C,QAASq/C,EACTp/C,KAAM,CAACk5C,EAAAl2C,GACP7C,WAbJ,SAAAA,EAA0Csc,GACtC,OAAO,WAAA,OAGDA,EAAQC,iBAAiBC,gBAe7B2iC,EAAyB,EAKzBC,EAA8BnmD,OAAA+/C,EAAAt2C,EAAAzJ,CAAgC,CAAEomD,SAAS,yBAMzErH,aAWF,SAAAA,EAAY3O,EAAU9b,EAAU+b,EAAmBC,EAAgBqR,EAAa0E,EAAmBhiC,EAAMq9B,GAAAA,IAAAA,EAAAA,KACrG1iD,KAAKoxC,SAAWA,EAChBpxC,KAAKs1B,SAAWA,EAChBt1B,KAAKqxC,kBAAoBA,EACzBrxC,KAAK2iD,YAAcA,EACnB3iD,KAAKqnD,kBAAoBA,EACzBrnD,KAAKqlB,KAAOA,EACZrlB,KAAK0iD,cAAgBA,EACrB1iD,KAAKsnD,YAAc,KACnBtnD,KAAKunD,WAAY,EACjBvnD,KAAKwnD,4BAA8BpH,EAAA//C,EAAa0xC,MAChD/xC,KAAKynD,mBAAqBrH,EAAA//C,EAAa0xC,MACvC/xC,KAAK0nD,uBAAyBtH,EAAA//C,EAAa0xC,MAK3C/xC,KAAK2nD,kBAAoB,WAAA,OAGnB3nD,EAAK4nD,UAAY,SAGvB5nD,KAAK4nD,UAAY,KAMjB5nD,KAAK6nD,cAAe,EAIpB7nD,KAAK8nD,WAAa,IAAI7H,EAAAt+C,EAOtB3B,KAAK+nD,WAAa/nD,KAAK8nD,WAIvB9nD,KAAKgoD,WAAa,IAAI/H,EAAAt+C,EAOtB3B,KAAKioD,YAAcjoD,KAAKgoD,WACxB1yB,EAAS5nB,cAAcw6C,iBAAiB,aAAcloD,KAAK2nD,kBAAmBR,GAC1EE,IACAA,EAAkBtE,iBAAmB/iD,KAAKmoD,mBAE9CnoD,KAAK4nB,gBAAkB0pB,sBA+C3B9oB,mBAAA,SAAAA,IACIxoB,KAAKooD,aACLpoD,KAAKqoD,kBAKTj/C,YAAA,SAAAA,IACQpJ,KAAKsnD,cACLtnD,KAAKsnD,YAAYnV,UACjBnyC,KAAKsnD,YAAc,MAEvBtnD,KAAKs1B,SAAS5nB,cAAc46C,oBAAoB,aAActoD,KAAK2nD,kBAAmBR,GACtFnnD,KAAK0nD,uBAAuBr+C,cAC5BrJ,KAAKwnD,4BAA4Bn+C,cACjCrJ,KAAKynD,mBAAmBp+C,iBAoB5B8+C,gBAAA,SAAAA,IACI,SAAUnoD,KAAKqnD,oBAAqBrnD,KAAK2iD,gBAM7C4F,WAAA,SAAAA,IACI,OAAOvoD,KAAKunD,UAAYvnD,KAAKwoD,YAAcxoD,KAAKyoD,cAMpDA,SAAA,SAAAA,IAAA,IAAAC,EAAA1oD,KACI,GAAIA,KAAKunD,UACL,OAEJvnD,KAAKooD,aAEL,IAAM1+B,EAAa1pB,KAAK2oD,iBAElB3U,EAAgBtqB,EAAWk/B,YACjC5oD,KAAK6oD,aAAgC7U,EAA+BC,kBACpED,EAAcG,YAAuC,MAAzBn0C,KAAKuO,KAAK4lC,aAAuBn0C,KAAKmoD,kBAC9DnoD,KAAKuO,KAAK4lC,YACdzqB,EAAWmqB,OAAO7zC,KAAK8oD,cACnB9oD,KAAKuO,KAAKg3C,aACVvlD,KAAKuO,KAAKg3C,YAAY1R,OAAO7zC,KAAK+oD,UAEtC/oD,KAAKwnD,4BAA8BxnD,KAAKgpD,sBAAsBlgD,UAAU,WAAA,OAGlE9I,EAAKwoD,cACXxoD,KAAKipD,YACDjpD,KAAKuO,gBAAgBs4C,GACrB7mD,KAAKuO,KAAK03C,qBAOlBuC,UAAA,SAAAA,IACIxoD,KAAKuO,KAAK+H,MAAM9L,UAQpBojB,MAAA,SAAAA,EAAMs1B,EAAoBjjD,GAAAA,GAApBijD,SAAoBjjD,EAAAA,CAApBijD,EAAS,UACPljD,KAAK0iD,cACL1iD,KAAK0iD,cAAcS,SAASnjD,KAAKs1B,SAAU4tB,EAAQjjD,GAGnDD,KAAKs1B,SAAS5nB,cAAckgB,MAAM3tB,MAQ1CipD,aAAA,SAAAA,IAAA,IAAAC,EAAAnpD,KACI,IAAKA,KAAKsnD,cAAgBtnD,KAAKopD,SAC3B,OAGJ,IAAM76C,EAAOvO,KAAKuO,KAClBvO,KAAKwnD,4BAA4Bn+C,cACjCrJ,KAAKsnD,YAAYvU,SACbxkC,aAAgBs4C,GAChBt4C,EAAK23C,kBACD33C,EAAKg3C,YAELh3C,EAAKm2C,eACA3jD,KAAKC,OAAAmgB,EAAA9gB,EAAAW,CAIVyZ,SAAAA,GAAAA,MAA2B,SAAlBA,EAAM+H,UAAsBxhB,OAAAkgB,EAAA7gB,EAAAW,CAAK,GAE1CA,OAAAogB,EAAA/gB,EAAAW,CAAUuN,EAAKg3C,YAAYvD,YACtBl5C,UAAU,CACXxH,KAAM,SAAAA,IAAA,OAGmBiN,EAAiBg3C,YAAExS,UAE5C3jC,SAAU,SAAAA,IAAA,OAGJpP,EAAKqpD,gBAIfrpD,KAAKqpD,eAITrpD,KAAKqpD,aACD96C,EAAKg3C,aACLh3C,EAAKg3C,YAAYxS,aAU7BkW,UAAA,SAAAA,IACIjpD,KAAKuO,KAAK42C,WAAanlD,KAAKmoD,kBAAoBnoD,KAAK2iD,iBAAc1zC,EACnEjP,KAAKuO,KAAK+kC,UAAYtzC,KAAKspD,IAC3BtpD,KAAKupD,oBACLvpD,KAAKwpD,gBAAe,GACpBxpD,KAAKuO,KAAK82C,eAAerlD,KAAK4nD,WAAa,cAO/C2B,kBAAA,SAAAA,IACI,GAAIvpD,KAAKuO,KAAKk3C,aAAc,CAExB,IAAInrC,EAAQ,EAER6qC,EAAanlD,KAAKuO,KAAK42C,WAC3B,KAAOA,GAAP,CACI7qC,IACA6qC,EAAaA,EAAWA,WAE5BnlD,KAAKuO,KAAKk3C,aAAanrC,OAS/B+uC,WAAA,SAAAA,IACIrpD,KAAKwpD,gBAAe,GAIhBxpD,KAAK6nD,eACA7nD,KAAK4nD,UAKA5nD,KAAKmoD,mBACXnoD,KAAK4tB,MAAM5tB,KAAK4nD,WAHhB5nD,KAAK4tB,SAMb5tB,KAAK4nD,UAAY,QAQrB4B,eAAA,SAAAA,EAAeC,GACXzpD,KAAKunD,UAAYkC,EACjBzpD,KAAKunD,UAAYvnD,KAAK8nD,WAAWt9C,OAASxK,KAAKgoD,WAAWx9C,OACtDxK,KAAKmoD,oBACLnoD,KAAKqnD,kBAAkBvE,aAAe2G,MAS9CrB,WAAA,SAAAA,IACSpoD,KAAKuO,MAloClB,WACI,MAAMY,MAAM,0KADhB,MA4oCIw5C,eAAA,SAAAA,IACI,IAAK3oD,KAAKsnD,YAAa,CAEnB,IAAMoC,EAAS1pD,KAAK2pD,oBACpB3pD,KAAK4pD,sBAAyCF,EAAwBzV,kBACtEj0C,KAAKsnD,YAActnD,KAAKoxC,SAASiD,OAAOqV,GAIxC1pD,KAAKsnD,YAAY9S,gBAAgB1rC,YAErC,OAAO9I,KAAKsnD,eAOhBqC,kBAAA,SAAAA,IACI,OAAO,IAAI7I,EAAArhD,EAAc,CACrBw0C,iBAAkBj0C,KAAKoxC,SAASqD,WAC3BC,oBAAoB10C,KAAKs1B,UACzByf,qBACAH,sBAAsB,wCAC3BR,cAAep0C,KAAKuO,KAAK6lC,eAAiB,mCAC1C9C,eAAgBtxC,KAAK4nB,kBACrB0rB,UAAWtzC,KAAKqlB,UAWxBukC,sBAAA,SAAAA,EAAsBnV,GAAAA,IAAAA,EAAAA,KACdz0C,KAAKuO,KAAKs2C,oBACVpQ,EAASoV,gBAAgB/gD,UAIzBsf,SAAAA,GAKuBpoB,EAAKuO,KAAwBs2C,mBAHA,UAAnCz8B,EAAO0hC,eAAepjC,SAAuB,QAAU,SAEpB,QAAnC0B,EAAO0hC,eAAenjC,SAAqB,QAAU,cAY9EkiC,aAAA,SAAAA,EAAa5U,GAAAA,IAAAA,EACgD,WAAxBj0C,KAAKuO,KAAK01C,UAAyB,CAAC,MAAO,SAAW,CAAC,QAAS,OAA5Fz9B,EADIytB,EAAAA,GACK8V,EADL9V,EAAAA,GAAAA,EAEkD,UAAxBj0C,KAAKuO,KAAK21C,UAAwB,CAAC,SAAU,OAAS,CAAC,MAAO,UAA5Fv9B,EAFIstB,EAAAA,GAEM+V,EAFN/V,EAAAA,GAGJxtB,EAA6BE,EAApBsjC,EAA8BD,EACvCtjC,EAA+BF,EAArB0jC,EAA8BH,EAEzCI,EAAU,EACVnqD,KAAKmoD,mBAGL+B,EAAmB1jC,EAAkC,WAAxBxmB,KAAKuO,KAAK01C,UAAyB,QAAU,MAC1E8F,EAAkBrjC,EAAuB,QAAZF,EAAoB,QAAU,MAC3D2jC,EAAuB,WAAbxjC,EAAwBugC,GAA0BA,GAEtDlnD,KAAKuO,KAAKy1C,iBAChBv9B,EAAuB,QAAbE,EAAqB,SAAW,MAC1CsjC,EAAuC,QAArBD,EAA6B,SAAW,OAE9D/V,EAAiBe,cAAc,CAC3B,CAAExuB,QAAAA,EAASC,QAAAA,EAASC,SAAAA,EAAUC,SAAAA,EAAUwjC,QAAAA,GACxC,CAAE3jC,QAASujC,EAAiBtjC,QAAAA,EAASC,SAAUwjC,EAAkBvjC,SAAAA,EAAUwjC,QAAAA,GAC3E,CACI3jC,QAAAA,EACAC,QAASwjC,EACTvjC,SAAAA,EACAC,SAAUqjC,EACVG,SAAUA,GAEd,CACI3jC,QAASujC,EACTtjC,QAASwjC,EACTvjC,SAAUwjC,EACVvjC,SAAUqjC,EACVG,SAAUA,QAStBnB,oBAAA,SAAAA,IAAA,IAAAoB,EAAApqD,KAEI,IAAMqqD,EAA8BrqD,KAAiBsnD,YAAEhT,gBAEjDC,EAAiCv0C,KAAiBsnD,YAAE/S,cAEpD+V,EAActqD,KAAK2iD,YAAc3iD,KAAK2iD,YAAYzB,OAASlgD,OAAAs/C,EAAAjgD,EAAAW,GAE3DupD,EAAQvqD,KAAK2iD,YAAc3iD,KAAK2iD,YAAYE,WAAW9hD,KAAKC,OAAAmgB,EAAA9gB,EAAAW,CAIlEwpD,SAAAA,GAAAA,OAAUA,IAAWxqD,EAAKqnD,oBAAqBrmD,OAAAmgB,EAAA9gB,EAAAW,CAAO,WAAA,OAGhDhB,EAAKunD,aAAevmD,OAAAs/C,EAAAjgD,EAAAW,GAC1B,OAAOA,OAAAq/C,EAAAhgD,EAAAW,CAAMqpD,EAAUC,EAAaC,EAAOhW,MAO/CkW,iBAAA,SAAAA,EAAiBhwC,GACRzZ,OAAAw/C,EAAAt1C,EAAAlK,CAAgCyZ,KAGjCza,KAAK4nD,UAA6B,IAAjBntC,EAAMiwC,OAAe,QAAU,KAI5C1qD,KAAKmoD,mBACL1tC,EAAMkQ,qBASlBlI,eAAA,SAAAA,EAAehI,GAEX,IAAM8P,EAAU9P,EAAM8P,QAClBvqB,KAAKmoD,oBAAuB59B,IAAYm2B,EAAAx0C,GAA4B,QAAblM,KAAKspD,KAC3D/+B,IAAYm2B,EAAAruC,GAA2B,QAAbrS,KAAKspD,MAChCtpD,KAAKyoD,cAQbkC,aAAA,SAAAA,EAAalwC,GACLza,KAAKmoD,mBAEL1tC,EAAMC,kBACN1a,KAAKyoD,YAGLzoD,KAAKuoD,gBAQbF,aAAA,SAAAA,IAAA,IAAAuC,EAAA5qD,KAESA,KAAKmoD,oBAGVnoD,KAAKynD,mBAAqBznD,KAAK2iD,YAAYE,WAItC9hD,KAAKC,OAAAmgB,EAAA9gB,EAAAW,CAIVwpD,SAAAA,GAAAA,OAAUA,IAAWxqD,EAAKqnD,oBAAsBmD,EAAOrlD,WAAYnE,OAAAqgB,EAAAhhB,EAAAW,CAAM,EAAGu/C,EAAAlgD,IACvEyI,UAAU,WAIX9I,EAAK4nD,UAAY,QAIb5nD,EAAKuO,gBAAgBs4C,GAAW7mD,EAAKuO,KAAK43C,aAG1CnmD,EAAKuO,KAAKm2C,eACL3jD,KAAKC,OAAAkgB,EAAA7gB,EAAAW,CAAK,GAAIA,OAAAqgB,EAAAhhB,EAAAW,CAAM,EAAGu/C,EAAAlgD,GAAgBW,OAAAogB,EAAA/gB,EAAAW,CAAUhB,EAAK2iD,YAAYE,aAClE/5C,UAAU,WAAA,OAGT9I,EAAKyoD,aAGXzoD,EAAKyoD,iBASjBK,WAAA,SAAAA,IAOI,OAHK9oD,KAAKiiD,SAAWjiD,KAAKiiD,QAAQ2E,cAAgB5mD,KAAKuO,KAAKq4C,cACxD5mD,KAAKiiD,QAAU,IAAI/B,EAAA7tC,EAAerS,KAAKuO,KAAKq4C,YAAa5mD,KAAKqxC,oBAE3DrxC,KAAKiiD,mEAteqB,OAAOjiD,KAAKuO,qBAKhB6nB,GAC7Bp2B,KAAKuO,KAAO6nB,iCAMH,OAAOp2B,KAAK6qD,sBAKhBt8C,GAAAA,IAAAA,EAAAA,KACDA,IAASvO,KAAK6qD,QAGlB7qD,KAAK6qD,MAAQt8C,EACbvO,KAAK0nD,uBAAuBr+C,cACxBkF,IACAvO,KAAK0nD,uBAAyBn5C,EAAK+H,MAAMxV,eAAegI,UAIxDgiD,SAAAA,GACI9qD,EAAKkpD,eAEW,UAAX4B,GAAiC,QAAXA,IAAqB9qD,EAAK2iD,aACjD3iD,EAAK2iD,YAAYzB,OAAO12C,KAAKsgD,0CA8BzC,OAAO9qD,KAAKunD,wCAOZ,OAAOvnD,KAAKqlB,MAA4B,QAApBrlB,KAAKqlB,KAAKvgB,MAAkB,MAAQ,6BAoahEi7C,EAAelyC,eAAiBoyC,EAAAnyC,GAAyB,CAAE/C,KAAMg1C,EAAgB/0C,UAAW,CAAC,CAAC,GAAI,uBAAwB,IAAK,CAAC,GAAI,oBAAqB,KAAMtJ,QAAS,SAAAA,EAAgCC,GAAK,OAAO,IAAKA,GAAKo+C,GAAgBE,EAAAh1C,GAAyB61C,EAAAl2C,GAAUq1C,EAAAh1C,GAAyBg1C,EAAAlyC,GAAakyC,EAAAh1C,GAAyBg1C,EAAA7K,IAAmB6K,EAAAh1C,GAAyB+7C,GAA2B/G,EAAAh1C,GAAyB47C,EAAS,GAAI5G,EAAAh1C,GAAyB60C,EAAa,IAAKG,EAAAh1C,GAAyB41C,EAAAt2C,EAAgB,GAAI01C,EAAAh1C,GAAyBu1C,EAAArtC,KAAmBhI,aAAc,SAAAA,EAAqCvH,EAAIC,EAAKuH,GAAoB,EAALxH,IACpoBq8C,EAAAptC,GAAuB,GACvBotC,EAAAx7C,GAAkB,YAAa,SAAqDC,GAAU,OAAOb,EAAI4mD,iBAAiB/lD,KAC1Hu7C,EAAAx7C,GAAkB,UAAW,SAAmDC,GAAU,OAAOb,EAAI4e,eAAe/d,KACpHu7C,EAAAx7C,GAAkB,QAAS,SAAiDC,GAAU,OAAOb,EAAI8mD,aAAajmD,KAC9Gu7C,EAAA50C,GAA0BzI,IACnB,EAALgB,GACFq8C,EAAA35C,GAAmB,gBAAiBzC,EAAIulD,UAAY,OACnD99C,OAAQ,CAAEu8C,aAAc,CAAC,6BAA8B,gBAAiBkD,6BAA8B,CAAC,uBAAwB,gCAAiCx8C,KAAM,CAAC,oBAAqB,QAASw6C,SAAU,CAAC,qBAAsB,aAAet9C,QAAS,CAAEq8C,WAAY,aAAcC,WAAY,aAAcC,WAAY,aAAcC,YAAa,eAAiBv8C,SAAU,CAAC,0CA6E1Xs/C,wBAENA,EAAyB1+C,YAAc2zC,EAAA1zC,GAAwB,CAAExB,KAAMigD,IACvEA,EAAyBx+C,cAAgByzC,EAAAxzC,GAAwB,CAAE/K,QAAS,SAAAA,EAA0CC,GAAK,OAAO,IAAKA,GAAKqpD,IAAgCt+C,UAAW,CAACu6C,GAA4Ct6C,QAAS,CAACkU,EAAA3V,4BAaxO80C,wBAENA,EAAc1zC,YAAc2zC,EAAA1zC,GAAwB,CAAExB,KAAMi1C,IAC5DA,EAAcxzC,cAAgByzC,EAAAxzC,GAAwB,CAAE/K,QAAS,SAAAA,EAA+BC,GAAK,OAAO,IAAKA,GAAKq+C,IAAqBtzC,UAAW,CAACu6C,GAA4Ct6C,QAAS,CAAC,CACjMwzC,EAAAv1C,EACAiW,EAAA3V,EACA2V,EAAAuV,EACA0qB,EAAAr2C,EACAugD,GAEJA,+DCpoDO,SAASC,EAAWz0B,EAAeC,GAChD,GAAIvB,UAAUvvB,OAAS,EACrB,MAAM,IAAI+wB,UAAU,kCAAoCxB,UAAUvvB,OAAS,YAG7E,IAAIgxB,EAAW31B,OAAAq2B,EAAAh3B,EAAAW,CAAOw1B,GAClBI,EAAY51B,OAAAq2B,EAAAh3B,EAAAW,CAAOy1B,GACnBe,EAAOb,EAASE,UAAYD,EAAUC,UAE1C,OAAIW,EAAO,GACD,EACCA,EAAO,EACT,EAEAA,0CCpDXh4B,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAwrD,IAOA,IAAIC,EAAiB,KACjBC,EAA6B,KAC7BC,EAAmB,MACnBC,EAAwB,MA4Gb,SAASJ,EAAe9zB,EAAWm0B,EAAelzB,GAC/D,GAAInD,UAAUvvB,OAAS,EACrB,MAAM,IAAI+wB,UAAU,kCAAoCxB,UAAUvvB,OAAS,YAG7E,IAAI1F,EAAUo4B,GAAgB,GAC1BC,EAASr4B,EAAQq4B,QAAU2F,EAAA59B,EAE/B,IAAKi4B,EAAO4yB,eACV,MAAM,IAAIvyB,WAAW,+CAGvB,IAAI6yB,EAAaP,EAAW7zB,EAAWm0B,GAEvC,GAAIptB,MAAMqtB,GACR,MAAM,IAAI7yB,WAAW,sBAGvB,IAGIhC,EACAC,EAJA60B,ECxIS,SAAgBvqD,EAAQwqD,GACrC,GAAc,MAAVxqD,EACF,MAAM,IAAIw1B,UAAU,iEAKtB,IAAK,IAAIrb,KAFTqwC,EAAcA,GAAe,GAE7B,CACMA,EAAYC,eAAetwC,KAC7Bna,EAAOma,GAAYqwC,EAAYrwC,IAInC,OAAOna,EAbM,CCEC,GFsIoBjB,GAClCwrD,EAAgBG,UAAYC,QAAQ5rD,EAAQ2rD,WAC5CH,EAAgBD,WAAaA,EAIzBA,EAAa,GACf70B,EAAW31B,OAAAq2B,EAAAh3B,EAAAW,CAAOuqD,GAClB30B,EAAY51B,OAAAq2B,EAAAh3B,EAAAW,CAAOo2B,KAEnBT,EAAW31B,OAAAq2B,EAAAh3B,EAAAW,CAAOo2B,GAClBR,EAAY51B,OAAAq2B,EAAAh3B,EAAAW,CAAOuqD,IAGrB,IAGIO,EAHAC,EG1HS,SAA6Bv1B,EAAeC,GACzD,GAAIvB,UAAUvvB,OAAS,EACrB,MAAM,IAAI+wB,UAAU,kCAAoCxB,UAAUvvB,OAAS,YAG7E,IAAI6xB,EAAOx2B,OAAAs1B,EAAAj2B,EAAAW,CAAyBw1B,EAAeC,GAAkB,IACrE,OAAOe,EAAO,EAAIjwB,KAAKyC,MAAMwtB,GAAQjwB,KAAKwC,KAAKytB,GANlC,CH0HqBZ,EAAWD,GACzCq1B,GAAmBhrD,OAAAu9B,EAAAl+B,EAAAW,CAAgC41B,GAAa51B,OAAAu9B,EAAAl+B,EAAAW,CAAgC21B,IAAa,IAC7G4C,EAAUhyB,KAAKypB,OAAO+6B,EAAUC,GAAmB,IAGvD,GAAIzyB,EAAU,EACZ,OAAIt5B,EAAQgsD,eACNF,EAAU,EACLzzB,EAAO4yB,eAAe,mBAAoB,EAAGO,GAC3CM,EAAU,GACZzzB,EAAO4yB,eAAe,mBAAoB,GAAIO,GAC5CM,EAAU,GACZzzB,EAAO4yB,eAAe,mBAAoB,GAAIO,GAC5CM,EAAU,GACZzzB,EAAO4yB,eAAe,cAAe,KAAMO,GAE3CnzB,EAAO4yB,eADLa,EAAU,GACU,mBAEA,WAFoB,EAAGN,GAKtC,IAAZlyB,EACKjB,EAAO4yB,eAAe,mBAAoB,EAAGO,GAE7CnzB,EAAO4yB,eAAe,WAAY3xB,EAASkyB,GAIjD,GAAIlyB,EAAU,GACnB,OAAOjB,EAAO4yB,eAAe,WAAY3xB,EAASkyB,GAC7C,GAAIlyB,EAAU,GACnB,OAAOjB,EAAO4yB,eAAe,cAAe,EAAGO,GAC1C,GAAIlyB,EAAU4xB,EAAgB,CACnC,IAAI7xB,EAAQ/xB,KAAKypB,MAAMuI,EAAU,IACjC,OAAOjB,EAAO4yB,eAAe,cAAe5xB,EAAOmyB,GAC9C,GAAIlyB,EAAU6xB,EACnB,OAAO9yB,EAAO4yB,eAAe,QAAS,EAAGO,GACpC,GAAIlyB,EAAU8xB,EAAkB,CACrC,IAAIa,EAAO3kD,KAAKypB,MAAMuI,EAAU4xB,GAChC,OAAO7yB,EAAO4yB,eAAe,QAASgB,EAAMT,GACvC,GAAIlyB,EAAU+xB,EAEnB,OADAQ,EAASvkD,KAAKypB,MAAMuI,EAAU8xB,GACvB/yB,EAAO4yB,eAAe,eAAgBY,EAAQL,GAKvD,IAFAK,EIzKa,SAA4Bt1B,EAAeC,GACxD,GAAIvB,UAAUvvB,OAAS,EACrB,MAAM,IAAI+wB,UAAU,kCAAoCxB,UAAUvvB,OAAS,YAG7E,IAAIgxB,EAAW31B,OAAAq2B,EAAAh3B,EAAAW,CAAOw1B,GAClBI,EAAY51B,OAAAq2B,EAAAh3B,EAAAW,CAAOy1B,GACnBQ,EAAOg0B,EAAWt0B,EAAUC,GAC5Bu1B,EAAa5kD,KAAKoqB,ICPT,SAAoC6E,EAAeC,GAChE,GAAIvB,UAAUvvB,OAAS,EACrB,MAAM,IAAI+wB,UAAU,kCAAoCxB,UAAUvvB,OAAS,YAG7E,IAAIgxB,EAAW31B,OAAAq2B,EAAAh3B,EAAAW,CAAOw1B,GAClBI,EAAY51B,OAAAq2B,EAAAh3B,EAAAW,CAAOy1B,GAGvB,OAAkB,IAFHE,EAASy1B,cAAgBx1B,EAAUw1B,gBAClCz1B,EAASsR,WAAarR,EAAUqR,YARnC,CDOwCtR,EAAUC,IAC/DD,EAAS01B,SAAS11B,EAASsR,WAAahR,EAAOk1B,GAG/C,IACIrzC,EAASme,GAAQk1B,GADIlB,EAAWt0B,EAAUC,MAAgBK,IAG9D,OAAkB,IAAXne,EAAe,EAAIA,EAfb,CJyKe8d,EAAWD,IAE1B,GAAI,CACf,IAAI21B,EAAe/kD,KAAKypB,MAAMuI,EAAU8xB,GACxC,OAAO/yB,EAAO4yB,eAAe,UAAWoB,EAAcb,GAEtD,IAAIc,EAAyBT,EAAS,GAClCU,EAAQjlD,KAAKyC,MAAM8hD,EAAS,IAEhC,OAAIS,EAAyB,EACpBj0B,EAAO4yB,eAAe,cAAesB,EAAOf,GAC1Cc,EAAyB,EAC3Bj0B,EAAO4yB,eAAe,aAAcsB,EAAOf,GAE3CnzB,EAAO4yB,eAAe,eAAgBsB,EAAQ,EAAGf,+EMxMvD,IAAAgB,EAAA,WAAA,IAAMC,EAAN,SAAAA,aCHPA,EAAYpgD,YAAc6B,EAAA5B,GAAoB,CAAExB,KDGnC2hD,ICFbA,EAAYlgD,cAAgB2B,EAAA1B,GAAoB,CAAE/K,QAAS,SAAAA,EAA6BC,GAAK,OAAO,IAAKA,GDE5F+qD,IAAW//C,QAAA,CAJb,CAACyB,EAAAxD,QAIL,qEEKA,ICLA+hD,EAAA,WAAA,IAAMC,EAAN,SAAAA,aCHPA,EAAsBtgD,YAAc6B,EAAA5B,GAAoB,CAAExB,KDG7C6hD,ICFbA,EAAsBpgD,cAAgB2B,EAAA1B,GAAoB,CAAE/K,QAAS,SAAAA,EAAuCC,GAAK,OAAO,IAAKA,GDEhHirD,IAAqBjgD,QAAA,CAJvB,CAACyB,EAAAxD,QAIL,aEAA,IAAAiiD,EAAA,WAAA,IAAMC,EAAN,SAAAA,aCHPA,EAAiBxgD,YAAc6B,EAAA5B,GAAoB,CAAExB,KDGxC+hD,ICFbA,EAAiBtgD,cAAgB2B,EAAA1B,GAAoB,CAAE/K,QAAS,SAAAA,EAAkCC,GAAK,OAAO,IAAKA,GDEtGmrD,IAAgBngD,QAAA,CAJlB,CAACyB,EAAAxD,QAIL,uBEAA,IAAAmiD,EAAA,WAAA,IAAMC,EAAN,SAAAA,aCHPA,EAAmB1gD,YAAc6B,EAAA5B,GAAoB,CAAExB,KDG1CiiD,ICFbA,EAAmBxgD,cAAgB2B,EAAA1B,GAAoB,CAAE/K,QAAS,SAAAA,EAAoCC,GAAK,OAAO,IAAKA,GDE1GqrD,IAAkBrgD,QAAA,CAHpB,CAACyB,EAAAxD,QAGL,uBEAA,IAAAqiD,EAAA,WAAA,IAAMC,EAAN,SAAAA,aCHPA,EAAW5gD,YAAc6B,EAAA5B,GAAoB,CAAExB,KDGlCmiD,ICFbA,EAAW1gD,cAAgB2B,EAAA1B,GAAoB,CAAE/K,QAAS,SAAAA,EAA4BC,GAAK,OAAO,IAAKA,GDE1FurD,IAAUvgD,QAAA,CAHZ,CAACyB,EAAAxD,QAGL,uBELA,ICOAuiD,EAAA,WAAA,IAAMC,EAAN,SAAAA,aCHPA,EAAa9gD,YAAc6B,EAAA5B,GAAoB,CAAExB,KDGpCqiD,ICFbA,EAAa5gD,cAAgB2B,EAAA1B,GAAoB,CAAE/K,QAAS,SAAAA,EAA8BC,GAAK,OAAO,IAAKA,GDE9FyrD,IAAYzgD,QAAA,CAJd,CAACyB,EAAAxD,QAIL,GEDAyiD,EAAA,WAAA,IAAMC,EAAN,SAAAA,aCHPA,EAAehhD,YAAc6B,EAAA5B,GAAoB,CAAExB,KDGtCuiD,ICFbA,EAAe9gD,cAAgB2B,EAAA1B,GAAoB,CAAE/K,QAAS,SAAAA,EAAgCC,GAAK,OAAO,IAAKA,GDElG2rD,IAAc3gD,QAAA,CAJhB,CAACyB,EAAAxD,QAIL,aECA,IAAA2iD,EAAA,WAAA,IAAMC,EAAN,SAAAA,aCJPA,EAAclhD,YAAc6B,EAAA5B,GAAoB,CAAExB,KDIrCyiD,ICHbA,EAAchhD,cAAgB2B,EAAA1B,GAAoB,CAAE/K,QAAS,SAAAA,EAA+BC,GAAK,OAAO,IAAKA,GDGhG6rD,IAAa7gD,QAAA,CAHf,CAACyB,EAAAxD,QAGL,GEXPpL,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA+sD,IAAAjtD,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAitD,IAAAntD,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAmtD,IAAArtD,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAqtD,IAAAvtD,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAutD,IAAAztD,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAiP,EAAAtO,IAAAb,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAytD,IAAA3tD,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA2tD,IAAA7tD,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA6tD,yHCMA,YAAME,aACF,SAAAA,EAAYC,GACR1tD,KAAK0tD,SAAWA,sBAEpBr+C,KAAA,SAAAA,EAAK0E,EAAY+K,GACb,OAAOA,EAAOhW,UAAU,IAAI6kD,EAAqB55C,EAAY/T,KAAK0tD,SAAU5uC,qBAG9E6uC,qBACF,SAAAA,EAAYzuC,EAAawuC,EAAU5uC,GAAAA,IAAAA,EAC/BvW,EAAAA,EAAAA,KAAAA,KAAM2W,IAAN3W,KACAvI,EAAK0tD,SAAWA,EAChB1tD,EAAK8e,OAASA,EACd9e,EAAK4tD,2BAA4B,EAJF9uC,OAAAA,sBAMnC+uC,WAAA,SAAAA,EAAWC,EAAYC,EAAYC,EAAYC,EAAYC,GACvDluD,KAAK4tD,2BAA4B,EACjC5tD,KAAK8e,OAAOhW,UAAU9I,SAE1BmuD,eAAA,SAAAA,EAAeD,GACX,IAAuC,IAAnCluD,KAAK4tD,0BACL,OAAAQ,EAAAztD,UAAayO,SAAbC,KAAArP,SAGRoP,SAAA,SAAAA,IAEI,GADApP,KAAK4tD,2BAA4B,GAC5B5tD,KAAKquD,UAAW,CAIjB,GAHKruD,KAAKsuD,SACNtuD,KAAKuuD,sBAEJvuD,KAAKwuD,qBAAuBxuD,KAAKwuD,oBAAoBtN,OACtD,OAAAkN,EAAAztD,UAAayO,SAAbC,KAAArP,MAEJA,KAAKyuD,yBACLzuD,KAAK0uD,cAAcptD,WAG3BqtD,aAAA,SAAAA,IAAA,IACYD,EAAuC1uD,KAAzC0uD,cAAiBF,EAAwBxuD,KAA1BwuD,oBACjBE,IACAA,EAAcrlD,cACdrJ,KAAK0uD,cAAgB,MAErBF,IACAA,EAAoBnlD,cACpBrJ,KAAKwuD,oBAAsB,MAE/BxuD,KAAKsuD,QAAU,QAEnBG,uBAAA,SAAAA,IAAA,IACYE,EAAiB3uD,KAAnB2uD,aAIN,OAHA3uD,KAAK2uD,aAAe,KAApB3uD,EAAAA,UACMyuD,uBADNzuD,KAAAA,MAEAA,KAAK2uD,aAAeA,EACb3uD,QAEXuuD,mBAAA,SAAAA,IAEI,IAAID,EADJtuD,KAAK0uD,cAAgB,IAAIE,EAAAA,EAEzB,IAAA,IACYlB,EAAa1tD,KAAf0tD,SACNY,EAAUZ,EAAS1tD,KAAK0uD,eAE5B,MAAOjrC,GACH,OAAA2qC,EAAAztD,UAAayO,SAAbC,KAAArP,MAEJA,KAAKsuD,QAAUA,EACftuD,KAAKwuD,oBAAsBxtD,OAAA6tD,EAAAxuD,EAAAW,CAAkBhB,KAAMsuD,cA3DxBQ,EAAAA,qBCHnC,YAAMC,aACF,SAAAA,EAAYC,GACRhvD,KAAKgvD,sBAAwBA,sBAEjC3/C,KAAA,SAAAA,EAAK0E,EAAY+K,GACb,OAAOA,EAAOhW,UAAU,IAAImmD,EAAoBl7C,EAAY/T,KAAKgvD,yCAGnEC,qBACF,SAAAA,EAAY/vC,EAAa8vC,GAAAA,IAAAA,EACrBzmD,EAAAA,EAAAA,KAAAA,KAAM2W,IAAN3W,KACAvI,EAAKgvD,sBAAwBA,EAC7BhvD,EAAKkvD,WAAY,EACjBlvD,EAAKmvD,2BAA6B,GAClCnvD,EAAKmvB,MAAQ,EALQ6/B,OAAAA,sBAOzBnB,WAAA,SAAAA,EAAWC,EAAYC,EAAYC,EAAYC,EAAYC,GACvDluD,KAAKkf,YAAY5d,KAAKwsD,GACtB9tD,KAAKovD,mBAAmBlB,GACxBluD,KAAKqvD,iBAETC,YAAA,SAAAA,EAAY/xC,EAAO2wC,GACfluD,KAAKuvD,OAAOhyC,MAEhB4wC,eAAA,SAAAA,EAAeD,GACX,IAAMppD,EAAQ9E,KAAKovD,mBAAmBlB,GAClCppD,GACA9E,KAAKkf,YAAY5d,KAAKwD,GAE1B9E,KAAKqvD,iBAETlwC,MAAA,SAAAA,EAAMra,GACF,IAAMqqB,EAAQnvB,KAAKmvB,QACnB,IACI,IAAMqgC,EAAgBxvD,KAAKgvD,sBAAsBlqD,EAAOqqB,GACpDqgC,GACAxvD,KAAKyvD,SAASD,EAAe1qD,GAGrC,MAAO4qD,GACH1vD,KAAKkf,YAAY3B,MAAMmyC,OAG/BC,UAAA,SAAAA,IACI3vD,KAAKkvD,WAAY,EACjBlvD,KAAKqvD,cACLrvD,KAAKqJ,iBAET+lD,mBAAA,SAAAA,EAAmBQ,GACfA,EAAavmD,cACb,IAAMwmD,EAAkB7vD,KAAKmvD,2BAA2B/kD,QAAQwlD,GAIhE,OAHyB,IAArBC,GACA7vD,KAAKmvD,2BAA2B1T,OAAOoU,EAAiB,GAErDD,EAAa9B,cAExB2B,SAAA,SAAAA,EAASD,EAAe1qD,GACpB,IAAMgrD,EAAuB9uD,OAAA6tD,EAAAxuD,EAAAW,CAAkBhB,KAAMwvD,EAAe1qD,GAChEgrD,IAAyBA,EAAqB5O,SAC1BlhD,KAAKkf,YACb/O,IAAI2/C,GAChB9vD,KAAKmvD,2BAA2B9kD,KAAKylD,OAG7CT,YAAA,SAAAA,IACQrvD,KAAKkvD,WAAwD,IAA3ClvD,KAAKmvD,2BAA2BxpD,QAClD3F,KAAKkf,YAAY9P,sBA1DK0/C,EAAAA,OCf5BiB,aACF,SAAAA,EAAYC,EAAWC,GACnBjwD,KAAKgwD,UAAYA,EACjBhwD,KAAKiwD,UAAYA,sBAErB5gD,KAAA,SAAAA,EAAK0E,EAAY+K,GACb,OAAOA,EAAOhW,UAAU,IAAIonD,EAAoBn8C,EAAY/T,KAAKgwD,UAAWhwD,KAAKiwD,6BAGnFC,qBACF,SAAAA,EAAYhxC,EAAa8wC,EAAWC,GAAAA,IAAAA,EAChC1nD,EAAAA,EAAAA,KAAAA,KAAM2W,IAAN3W,KACAvI,EAAKgwD,UAAYA,EACjBhwD,EAAKiwD,UAAYA,EACjBjwD,EAAKmvB,MAAQ,EAJmB8gC,OAAAA,sBAMpC9wC,MAAA,SAAAA,EAAMra,GACF,IAAMoa,EAAclf,KAAKkf,YACzB,IAAIpG,EACJ,IACIA,EAAS9Y,KAAKgwD,UAAUlrD,EAAO9E,KAAKmvB,SAExC,MAAOugC,GAEH,YADAxwC,EAAY3B,MAAMmyC,GAGtB1vD,KAAKmwD,eAAerrD,EAAOgU,MAE/Bq3C,eAAA,SAAAA,EAAerrD,EAAOsrD,GAClB,IAAMlxC,EAAclf,KAAKkf,YACrB2sC,QAAQuE,GACRlxC,EAAY5d,KAAKwD,IAGb9E,KAAKiwD,WACL/wC,EAAY5d,KAAKwD,GAErBoa,EAAY9P,uBA5BUihD,EAAAA,uDCZ9BC,EAAyB,gBCD7B9wD,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA6wD,IAQA,IAAMC,EAAgB,CAAE5E,WAAW,GAa5B,IAAA2E,EAAA,WAAA,IAAME,EAAN,WAOL,SAAAA,EAAoBC,GAAAA,KAAAA,IAAAA,EAHZ1wD,KAAA2wD,aAAc,EAIpB3wD,KAAK4wD,MAAQ,IAAIxiD,EAAA7D,EAAUvK,KAAK0wD,KAR7B,IAAAG,EAAAJ,EAAA9vD,UAAAkwD,EAWLznD,YAAA,SAAAA,IACEpJ,KAAK2wD,aAAc,GAZhBE,EAeLvxC,UAAA,SAAAA,EAAUxE,EAA8B7a,GACtC,GAAY,MAAR6a,EACF,MAAM,IAAI3L,MAAMshD,EAAsBK,eAOxC,OAHK9wD,KAAK+wD,gBACR/wD,KAAK+wD,cAAgB/wD,KAAKgxD,QAAQl2C,EAAM9Z,OAAFwd,OAAA,GAAOgyC,EAAkBvwD,KAE1DD,KAAK4wD,MAAMtxC,UAAUtf,KAAK+wD,gBAxB9BF,EA2BGG,QAAA,SAAAA,EAAQl2C,EAA8B7a,GAAAA,IAAAA,EAAAA,KAC5C,IAAIgxD,EAAcjxD,KAAKkxD,QAAQp2C,GAC/B,OAAO9Z,OAAAmwD,EAAA9wD,EAAAW,EAAG,GAAMD,MJ/CO2sD,EIiDV0D,SAAAA,EAAAA,GAAAA,OAAUA,EAAOrwD,KHhD3B,SAAmBiuD,EAAuBqC,GAC7C,OAIQvyC,SAAAA,GAAAA,OAAWA,EAAOC,KAAK,IAAIgwC,EAAkBC,KALlD,CGgD0C,WAAA,OAAMhuD,OAAAwS,EAAAnT,EAAAW,CAASiwD,OJhDpDnyC,SAAAA,GAAAA,OAAWA,EAAOC,KAAK,IAAI0uC,EAAmBC,MEHnD,SAAmBsC,EAAWC,GAAY,GAAZA,SAAY,EAAA,CAAZA,GAAY,EAC7C,OAAQnxC,SAAAA,GAAAA,OAAWA,EAAOC,KAAK,IAAIgxC,EAAkBC,EAAWC,KAD7D,CEoDS3gD,SAAAA,GAAAA,OAAMtP,EAAK2wD,cACrB3vD,OAAA0J,EAAArK,EAAAW,CAAIsO,SAAAA,GAAAA,OAAKtO,OAAAkqD,EAAA7qD,EAAAW,CAAehB,EAAK6a,aAAaC,GAAO,IAAIkD,KAAQ/d,KAC7De,OAAAswD,EAAAjxD,EAAAW,CAAIsO,SAAAA,GAAAA,OAAM2hD,EAAcjxD,EAAKkxD,QAAQp2C,MJpDpC,IAAoB4yC,GIkBpBmD,EAsCGK,QAAA,SAAAA,EAAQp2C,GACd,IAAMy2C,EAAiBhqD,KAAKoqB,IDhCjB,SAA6B6E,EAAeC,GACzD,GAAIvB,UAAUvvB,OAAS,EACrB,MAAM,IAAI+wB,UAAU,kCAAoCxB,UAAUvvB,OAAS,YAG7E,IAAI6xB,EAAOx2B,OAAAs1B,EAAAj2B,EAAAW,CAAyBw1B,EAAeC,GAAkB65B,EACrE,OAAO94B,EAAO,EAAIjwB,KAAKyC,MAAMwtB,GAAQjwB,KAAKwC,KAAKytB,GANlC,CCgCyC,IAAIxZ,KAAQhe,KAAK6a,aAAaC,KAClF,IAAI02C,EAUJ,OATID,EAAiB,EACnBC,EAAyB,EAChBD,GAAkB,GAAKA,EAAiB,EACjDC,EAAyB,GAChBD,GAAkB,GAAKA,EAAiB,GACjDC,EAAyB,GAChBD,GAAkB,KAC3BC,EAAyB,KAEK,IAAzBA,GAlDJX,EAqDGh2C,aAAA,SAAAA,EAAaC,GAEnB,OADiB7F,SAAAA,GAAAA,MAAkB,iBAANA,GAAkBA,aAAa8F,OAA3C9F,CACD6F,GAAQ9Z,OAAAga,EAAA3a,EAAAW,CAAS8Z,GAAQA,GAvDtC,OAAA21C,EAAA,UACWA,EAAAK,cAAgB,gDC6ClCL,EAAsB5wC,UAAY1R,EAAA2R,GAAgB,CAAEC,KAAM,oBAAqBhV,KD9ClE0lD,EAAqB/uD,QAAA,SAAAA,EAAAC,GAAA,OAAA,IAAAA,GAArB8uD,GAAqBtiD,EAAAsjD,OAAAzxC,MAAA,MAA3B,wCESQ,SAASqX,EAAOq6B,GAC7B,GAAIx8B,UAAUvvB,OAAS,EACrB,MAAM,IAAI+wB,UAAU,iCAAmCxB,UAAUvvB,OAAS,YAG5E,IAAIgsD,EAAS3wD,OAAOL,UAAUwc,SAAS9N,KAAKqiD,GAE5C,OAAIA,aAAoB1zC,MAA4B,iBAAb0zC,GAAoC,kBAAXC,EAEvD,IAAI3zC,KAAK0zC,EAAS76B,WACI,iBAAb66B,GAAoC,oBAAXC,EAClC,IAAI3zC,KAAK0zC,IAES,iBAAbA,GAAoC,oBAAXC,GAAoD,oBAAZp/C,UAE3EA,QAAQ+a,KAAK,+IAEb/a,QAAQ+a,MAAK,IAAIne,OAAQyiD,QAGpB,IAAI5zC,KAAK6zC,MAlDpBryD,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA23B,yCCAe,SAASqB,EAAUo5B,GAChC,GAAoB,OAAhBA,IAAwC,IAAhBA,IAAwC,IAAhBA,EAClD,OAAOD,IAGT,IAAI96B,EAASohB,OAAO2Z,GAEpB,OAAI3zB,MAAMpH,GACDA,EAGFA,EAAS,EAAIxvB,KAAKwC,KAAKgtB,GAAUxvB,KAAKyC,MAAM+sB,GAXrDv3B,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAg5B,yDCEO,IAAMq5B,EAAS,CACpB/wD,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CACJse,UAAW,mDACX6Z,OAAQ,MAEVn4B,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CACJse,UAAW,iDACX6Z,OAAQ,KAEVn4B,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CACJse,UAAW,mDACX6Z,OAAQ,MAEVn4B,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CACJse,UAAW,iDACX6Z,OAAQ,KAEVn4B,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CACJse,UAAW,kDACX6Z,OAAQ,MAEVn4B,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,OAAQ6Z,OAAQ,KAGxB84B,EAAQ,CAEnBjxD,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,kCAAmC6Z,OAAQ,OAC9Dn4B,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,gCAAiC6Z,OAAQ,OAC5Dn4B,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,oCAAqC6Z,OAAQ,OAChEn4B,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,oCAAqC6Z,OAAQ,OAChEn4B,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,wCAAyC6Z,OAAQ,OACpEn4B,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,wCAAyC6Z,OAAQ,OACpEn4B,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,wCAAyC6Z,OAAQ,OACpEn4B,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CACJse,UAAW,4CACX6Z,OAAQ,OAEVn4B,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,OAAQ6Z,OAAQ,KAGxB+4B,EAAQ,CACnBlxD,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,2BAA4B6Z,OAAQ,KACvDn4B,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,4BAA6B6Z,OAAQ,KACxDn4B,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,0BAA2B6Z,OAAQ,KACtDn4B,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,2BAA4B6Z,OAAQ,KACvDn4B,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,OAAQ6Z,OAAQ,KAGxBg5B,EAAe,CAC1BnxD,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,uBAAwB6Z,OAAQ,IACnDn4B,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,2BAA4BkE,QAAS,EAAG2V,OAAQ,KAGxDi5B,EAAe,CAC1BpxD,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CACJse,UAAW,qDACX6Z,OAAQ,KAEVn4B,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CACJse,UAAW,sCACX+yC,mBAAoB,eACpBl5B,OAAQ,KAICm5B,EAAmB,CAC9BtxD,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CACJse,UAAW,0BACXkE,QAAS,EACT6uC,mBAAoB,eACpBl5B,OAAQ,IAEVn4B,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CACJse,UAAW,2BACXkE,QAAS,EACT6uC,mBAAoB,eACpBl5B,OAAQ,KAICo5B,EAAW,CACtBvxD,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,qBAAsB6Z,OAAQ,IACjDn4B,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CACJse,UAAW,+CACXkE,QAAS,EACT2V,OAAQ,MAEVn4B,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CACJse,UAAW,8CACXkE,QAAS,EACT2V,OAAQ,KCxFCq5B,EAAgBxxD,OAAAgxD,EAAArnD,EAAA3J,CAAQ,eAAgB,CACnDA,OAAAgxD,EAAA7uC,EAAAniB,CAAW,cAAeA,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,IAAMA,OAAAgxD,EAAA3/C,EAAArR,CAAU+wD,KAClD/wD,OAAAgxD,EAAA7uC,EAAAniB,CAAW,aAAcA,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,IAAMA,OAAAgxD,EAAA3/C,EAAArR,CAAUkxD,KACjDlxD,OAAAgxD,EAAA7uC,EAAAniB,CAAW,aAAcA,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,IAAMA,OAAAgxD,EAAA3/C,EAAArR,CAAUixD,KACjDjxD,OAAAgxD,EAAA7uC,EAAAniB,CAAW,oBAAqBA,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,IAAMA,OAAAgxD,EAAA3/C,EAAArR,CAAUoxD,KACxDpxD,OAAAgxD,EAAA7uC,EAAAniB,CAAW,oBAAqBA,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,IAAMA,OAAAgxD,EAAA3/C,EAAArR,CAAUmxD,KACxDnxD,OAAAgxD,EAAA7uC,EAAAniB,CAAW,wBAAyBA,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,IAAMA,OAAAgxD,EAAA3/C,EAAArR,CAAUsxD,KAC5DtxD,OAAAgxD,EAAA7uC,EAAAniB,CAAW,gBAAiBA,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,IAAMA,OAAAgxD,EAAA3/C,EAAArR,CAAUuxD,OCTzCE,GCAkBzxD,OAAAgxD,EAAArnD,EAAA3J,CAAQ,kBAAmB,CACxDA,OAAAgxD,EAAA7uC,EAAAniB,CAAW,SAAU,CAACA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEmwB,OAAQ,IAAMnwB,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,WAAYA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEmwB,OAAQ,SAChFnwB,OAAAgxD,EAAA7uC,EAAAniB,CAAW,SAAU,CAACA,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,WAAYA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEmwB,OAAQ,SDF/BnwB,OAAAgxD,EAAArnD,EAAA3J,CAAQ,gBAAiB,CACpDA,OAAAgxD,EAAA7uC,EAAAniB,CAAW,SAAU,CACnBA,OAAAgxD,EAAA5uC,EAAApiB,CAAM,SAAU,CAACA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEwiB,QAAS,KAAO,CAAEH,UAAU,IACrDriB,OAAAgxD,EAAA5uC,EAAApiB,CAAM,SAAU,CAACA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEwiB,QAAS,IAAMxiB,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,OAAQA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEwiB,QAAS,MAAQ,CAAEH,UAAU,IAC7FriB,OAAAgxD,EAAA5uC,EAAApiB,CAAM,SAAU,CAACA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEwiB,QAAS,IAAMxiB,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,OAAQA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEwiB,QAAS,MAAQ,CAAEH,UAAU,SEJpFqvC,GFQmB1xD,OAAAgxD,EAAArnD,EAAA3J,CAAQ,mBAAoB,CAC1DA,OAAAgxD,EAAA9lD,EAAAlL,CACE,IACAA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CACJyzC,SAAU,WACVke,YAAa,OACbC,aAAc,OACdC,YAAa,OACbv9C,QAAS,OACTw9C,iBAAkB,SAClBC,KAAM,IACN5hC,OAAQ,UAGZnwB,OAAAgxD,EAAA9lD,EAAAlL,CACE,OACAA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CACJyzC,SAAU,WACVke,YAAa,OACbC,aAAc,OACdC,YAAa,OACbv9C,QAAS,OACTw9C,iBAAkB,SAClBC,KAAM,IACN5hC,OAAQ,UAGZnwB,OAAAgxD,EAAA7uC,EAAAniB,CAAW,YAAa,CACtBA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CACJwiB,QAAS,IAEXxiB,OAAAgxD,EAAAvuC,EAAAziB,CACE,eACAA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CACJwiB,QAAS,SE1CgBxiB,OAAAgxD,EAAArnD,EAAA3J,CAAQ,WAAY,CACnDA,OAAAgxD,EAAA7uC,EAAAniB,CAAW,SAAU,CACnBA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEmwB,OAAQ,IAAK3N,QAAS,IAAKlE,UAAW,kBAC9Cte,OAAAgxD,EAAA9mD,EAAAlK,CAAS,CACPA,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,aAAcA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEmwB,OAAQ,IAAK3N,QAAS,EAAGlE,UAAW,sBAClEte,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,aAAcA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEmwB,OAAQ,IAAK3N,QAAS,EAAGlE,UAAW,0BAGtEte,OAAAgxD,EAAA7uC,EAAAniB,CAAW,SAAU,CACnBA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEmwB,OAAQ,IAAK3N,QAAS,IAAKlE,UAAW,qBAC9Cte,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,mBAAoBA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEmwB,OAAQ,IAAK3N,QAAS,EAAGlE,UAAW,wBCsB/D0zC,GChCkBhyD,OAAAgxD,EAAArnD,EAAA3J,CAAQ,kBAAmB,CACxDA,OAAAgxD,EAAA9lD,EAAAlL,CAAM,UAAWA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,kBACpCte,OAAAgxD,EAAA9lD,EAAAlL,CAAM,UAAWA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,qBACpCte,OAAAgxD,EAAA7uC,EAAAniB,CAAW,SAAU,CAACA,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,gBDHFA,OAAAgxD,EAAArnD,EAAA3J,CAAQ,iBAAkB,CACtDA,OAAAgxD,EAAA7uC,EAAAniB,CAAW,UAAW,CAEpBA,OAAAgxD,EAAA5uC,EAAApiB,CACE,SACAA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CACJyzC,SAAU,QACV1jB,MAAO,OACPzR,UAAW,sBAEb,CAAE+D,UAAU,IAGdriB,OAAAgxD,EAAA5uC,EAAApiB,CACE,SACAA,OAAAgxD,EAAAvuC,EAAAziB,CACE,aACAA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CACJyzC,SAAU,QACV1jB,MAAO,OACPzR,UAAW,sBAGf,CACE+D,UAAU,IAIdriB,OAAAgxD,EAAA5uC,EAAApiB,CAAM,SAAUA,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,aAAcA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEwiB,QAAS,EAAGlE,UAAW,oBAAsB,CAAE+D,UAAU,QAIjEriB,OAAAgxD,EAAArnD,EAAA3J,CAAQ,iBAAkB,CAClEA,OAAAgxD,EAAA7uC,EAAAniB,CAAW,aAAc,CACvBA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEmwB,OAAQ,MAChBnwB,OAAAgxD,EAAA5uC,EAAApiB,CAAM,SAAUA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,qBAAuB,CAAE+D,UAAU,IACtEriB,OAAAgxD,EAAA5uC,EAAApiB,CAAM,iBAAkBA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEyzC,SAAU,WAAYljB,IAAK,EAAGX,KAAM,EAAGE,MAAO,IAAM,CAAEzN,UAAU,IAEhGriB,OAAAgxD,EAAA7+C,EAAAnS,CAAM,CACJA,OAAAgxD,EAAA5uC,EAAApiB,CAAM,SAAU,CAACA,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,oBAAqBA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,wBAA0B,CACzF+D,UAAU,IAGZriB,OAAAgxD,EAAA5uC,EAAApiB,CAAM,SAAUA,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,oBAAqBA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,mBAAqB,CACnF+D,UAAU,QAKhBriB,OAAAgxD,EAAA7uC,EAAAniB,CAAW,aAAc,CACvBA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEmwB,OAAQ,MAChBnwB,OAAAgxD,EAAA5uC,EAAApiB,CAAM,SAAUA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,sBAAwB,CAAE+D,UAAU,IACvEriB,OAAAgxD,EAAA5uC,EAAApiB,CAAM,iBAAkBA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEyzC,SAAU,WAAYljB,IAAK,EAAGX,KAAM,EAAGE,MAAO,IAAM,CAAEzN,UAAU,IAEhGriB,OAAAgxD,EAAA7+C,EAAAnS,CAAM,CACJA,OAAAgxD,EAAA5uC,EAAApiB,CAAM,SAAU,CAACA,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,oBAAqBA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,uBAAyB,CACxF+D,UAAU,IAGZriB,OAAAgxD,EAAA5uC,EAAApiB,CAAM,SAAUA,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,oBAAqBA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,mBAAqB,CACnF+D,UAAU,WE5DL4vC,GCAkBjyD,OAAAgxD,EAAArnD,EAAA3J,CAAQ,kBAAmB,CACxDA,OAAAgxD,EAAA9lD,EAAAlL,CAAM,OAAQA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEwiB,QAAS,EAAGlE,UAAW,mBAC7Cte,OAAAgxD,EAAA9lD,EAAAlL,CAAM,OAAQA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEwiB,QAAS,EAAGlE,UAAW,uBAC7Cte,OAAAgxD,EAAA7uC,EAAAniB,CAAW,eAAgBA,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,mBACnCA,OAAAgxD,EAAA7uC,EAAAniB,CAAW,eAAgBA,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,oBDJHA,OAAAgxD,EAAArnD,EAAA3J,CAAQ,kBAAmB,CAC3DA,OAAAgxD,EAAA9lD,EAAAlL,CAAM,OAAQA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEwiB,QAAS,EAAGlE,UAAW,cAC7Cte,OAAAgxD,EAAA9lD,EAAAlL,CAAM,OAAQA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEwiB,QAAS,EAAGlE,UAAW,cAC7Cte,OAAAgxD,EAAA7uC,EAAAniB,CAAW,eAAgBA,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,mBACnCA,OAAAgxD,EAAA7uC,EAAAniB,CAAW,eAAgBA,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,qCEH9B,IAAAkyD,EAAA,WAAA,IAAMC,EAAN,WACL,SAAAA,KADKA,EAKLC,sBAAA,SAAAA,EAA6BroD,GAC3B,OAAOooD,EAAkBE,qBAAuBtoD,GAN7C,IAAAuoD,EAAAH,EAAAxyD,UAAA2yD,EASLC,yBAAA,SAAAA,EAAyBC,EAAyBC,GAChDN,EAAkBE,mBAChBG,GAAkBC,EAAqB,MAAQD,EAAiB,OAASC,EAAqB,WAAa,QAX1G,OAAAN,EAAA,UAGUA,EAAAE,mBAAyC,WCO1DF,EAAkB5xD,gBAAkB4M,EAAA3M,GAAsB,CAAEC,MDV/C0xD,EAAiBzxD,QAAA,SAAAA,EAAAC,GAAA,OAAA,IAAAA,GAAjBwxD,IAAiBvxD,WADJ,WACnB,GEAA,IAED8xD,EAAmB,CACvB1yD,OAAAgxD,EAAA5uC,EAAApiB,CAAM,aAAcA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEwiB,QAAS,EAAGixB,SAAU,UAAY,CAC5DpxB,UAAU,IAEZriB,OAAAgxD,EAAA5uC,EAAApiB,CAAM,oCAAwCA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEwiB,QAAS,IAAM,CACnEH,UAAU,IAEZriB,OAAAgxD,EAAA9mD,EAAAlK,CAAS,CACPA,OAAAgxD,EAAA5uC,EAAApiB,CACE,aACA,CACEA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,iBAAkBkE,QAAS,IAC9CxiB,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,mBAAoBA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,kBAAmBkE,QAAS,KAC3ExiB,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEyzC,SAAU,WAEpB,CAAEpxB,UAAU,IAEdriB,OAAAgxD,EAAA5uC,EAAApiB,CACE,aACA,CACEA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CACJse,UAAW,kBACXkE,QAAS,EACTixB,SAAU,WAEZzzC,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,mBAAoBA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,iBAAkBkE,QAAS,MAE5E,CAAEH,UAAU,MAGhBriB,OAAAgxD,EAAA5uC,EAAApiB,CACE,oCACAA,OAAAgxD,EAAAh+B,EAAAhzB,CAAQ,IAAK,CACXA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,kBAAmBkE,QAAS,IAC/CxiB,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,mBAAoBA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEse,UAAW,iBAAkBkE,QAAS,OAE5E,CAAEH,UAAU,KAIVswC,EAAa,CAACD,EAAU,GAAIA,EAAU,IACtCE,EAAiB,CAACF,EAAU,GAAIA,EAAU,IAEnCG,EAAmB7yD,OAAAgxD,EAAArnD,EAAA3J,CAAQ,mBAAoB,CAC1DA,OAAAgxD,EAAA7uC,EAAAniB,CAMK,WACL,OAAOkyD,EAAkBE,sBAAsB,QAPdM,GACjC1yD,OAAAgxD,EAAA7uC,EAAAniB,CASK,WACL,OAAOkyD,EAAkBE,sBAAsB,SAhB9B,IAOjBpyD,OAAAgxD,EAAA7uC,EAAAniB,CAYK,WACL,OAAOkyD,EAAkBE,sBAAsB,SAbbO,GAClC3yD,OAAAgxD,EAAA7uC,EAAAniB,CAeK,WACL,OAAOkyD,EAAkBE,sBAAsB,aAhBTQ,qBCjDR5yD,OAAAgxD,EAAArnD,EAAA3J,CAAQ,mBAAoB,CAC1DA,OAAAgxD,EAAA9lD,EAAAlL,CAAM8Q,EAAA2R,EAAaqwC,UAAW9yD,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEyzC,SAAU,WAAY1jB,MAAO,UACnE/vB,OAAAgxD,EAAA9lD,EAAAlL,CAAM8Q,EAAA2R,EAAaswC,eAAgB/yD,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEyzC,SAAU,WAAY1jB,MAAO,WACxE/vB,OAAAgxD,EAAA9lD,EAAAlL,CAAM8Q,EAAA2R,EAAauwC,SAAUhzD,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEyzC,SAAU,WAAY1jB,MAAO,WAClE/vB,OAAAgxD,EAAA9lD,EAAAlL,CACE8Q,EAAA2R,EAAawwC,OACbjzD,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CACJyzC,SAAU,WACV1jB,MAAO,QACPzR,UAAW,4BACX40C,WAAY,YAGhBlzD,OAAAgxD,EAAA9lD,EAAAlL,CACE8Q,EAAA2R,EAAa0wC,WACbnzD,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CACJyzC,SAAU,WACV1jB,MAAO,QACPzR,UAAW,uBACX40C,WAAY,aAGhBlzD,OAAAgxD,EAAA7uC,EAAAniB,CAAc8Q,EAAA2R,EAAauwC,SAA3B,OAA0CliD,EAAA2R,EAAaswC,eAAkB,CACvE/yD,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEyzC,SAAU,aAClBzzC,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,wCAEVA,OAAAgxD,EAAA7uC,EAAAniB,CAAc8Q,EAAA2R,EAAauwC,SAA3B,OAA0CliD,EAAA2R,EAAaqwC,UAAa,CAClE9yD,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEyzC,SAAU,aAClBzzC,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,wCAEVA,OAAAgxD,EAAA7uC,EAAAniB,CAAc8Q,EAAA2R,EAAaswC,eAA3B,OAAgDjiD,EAAA2R,EAAaqwC,UAAa,CACxE9yD,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,wCAEVA,OAAAgxD,EAAA7uC,EAAAniB,CACK8Q,EAAA2R,EAAaqwC,UADlB,OACkChiD,EAAA2R,EAAaswC,eAC7C/yD,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,uCAEVA,OAAAgxD,EAAA7uC,EAAAniB,CAAc8Q,EAAA2R,EAAawwC,OAA3B,OAAwCniD,EAAA2R,EAAa0wC,WAAcnzD,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,uCAC3EA,OAAAgxD,EAAA7uC,EAAAniB,CAAc8Q,EAAA2R,EAAa0wC,WAA3B,OAA4CriD,EAAA2R,EAAawwC,OAAUjzD,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,yCAG5CA,OAAAgxD,EAAArnD,EAAA3J,CAAQ,oBAAqB,CAC5DA,OAAAgxD,EAAA9lD,EAAAlL,CAAM,YAAaA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEmwB,OAAQ,KACnCnwB,OAAAgxD,EAAA9lD,EAAAlL,CAAM,WAAYA,OAAAgxD,EAAA/lD,EAAAjL,CAAM,CAAEmwB,OAAQ,OAClCnwB,OAAAgxD,EAAA7uC,EAAAniB,CAAW,yBAA0B,CAACA,OAAAgxD,EAAAvuC,EAAAziB,CAAQ,0CC/ChDxB,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA8yD,IAAAhzD,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA+yD,IAAAjzD,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAgzD,IAAAlzD,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAszD,IAAAxzD,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAuzD,IAAAzzD,EAAAC,EAAAC,EAAA,IAAA,WAAA,MFGyC,8BEHzCF,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAm0D,yCAAAr0D,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA00D,IAAA50D,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA20D,IAAA70D,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA40D,IAAA,IAAA10D,EAAAJ,EAAA,QAAAi1B,EAAAj1B,EAAA,QAAAuC,EAAAvC,EAAA,QAAA+0D,EAAA/0D,EAAA,QCuBA,IAAM8C,EAAM,CAAC,EAAG,iBACVC,EAAM,CAAC,EAAG,cACVC,EAAM,CAAC,KAOPO,EAAM,CAAC,EAAG,iBACVyxD,EAAgB,IAAI50D,EAAAukB,EAAe,sCAMnCmwC,aAKF,SAAAA,EAAYh/B,EAAUm/B,GAClBz0D,KAAKs1B,SAAWA,EAChBt1B,KAAKy0D,UAAYA,EACjBz0D,KAAK00D,SAAW,EAChB10D,KAAK20D,SAAW,sBA6BpBC,UAAA,SAAAA,EAAUv5C,EAAUvW,GACI9E,KAAKs1B,SAAS5nB,cAAqBkc,MAAEvO,GAAYvW,wCAxBzD,OAAO9E,KAAK00D,yBAKhB5vD,GAAS9E,KAAK00D,SAAWntD,KAAKypB,MAAMhwB,OAAAe,EAAA0I,EAAAzJ,CAAqB8D,sCAKrD,OAAO9E,KAAK20D,yBAKhB7vD,GAAS9E,KAAK20D,SAAWptD,KAAKypB,MAAMhwB,OAAAe,EAAA0I,EAAAzJ,CAAqB8D,2BAYzEwvD,EAAYzpD,eAAiBjL,EAAAkL,GAAyB,CAAEC,KAAMupD,EAAatpD,UAAW,CAAC,CAAC,kBAAmBtJ,QAAS,SAAAA,EAA6BC,GAAK,OAAO,IAAKA,GAAK2yD,GAAa10D,EAAAqL,GAAyBrL,EAAAmO,GAAanO,EAAAqL,GAAyBupD,EAAe,KAAQrpD,aAAc,SAAAA,EAAkCvH,EAAIC,EAAKuH,GAAoB,EAALxH,GAC1UhE,EAAAyL,GAA0B/I,IACzBgJ,OAAQ,CAAEupD,QAAS,UAAWC,QAAS,WAAappD,SAAU,CAAC,eAAgBmoB,mBAAoBrxB,EAAKqJ,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAA8BnI,EAAIC,GAAgB,EAALD,IACpLhE,EAAAk0B,KACAl0B,EAAAkE,GAAsB,EAAG,SAAUvB,GACnC3C,EAAAqiB,GAAoB,GACpBriB,EAAAoE,OACCmI,OAAQ,CAAC,gvCAAivCC,cAAe,EAAGC,gBAAiB,aAoJhyC0oD,aACF,SAAAA,IAII/0D,KAAKg1D,YAAc,EAInBh1D,KAAK4mC,SAAW,sBAyBpBpvB,OAAA,SAAAA,EAAOy9C,EAAYC,GAAAA,IAAAA,EAAAA,KACfl1D,KAAKg1D,YAAc,EACnBh1D,KAAK4mC,SAAW,EAChB5mC,KAAKm1D,QAAU,IAAItoC,MAAMooC,GACzBj1D,KAAKm1D,QAAQC,KAAK,EAAG,EAAGp1D,KAAKm1D,QAAQxvD,QACrC3F,KAAKq1D,UAAYH,EAAMxqD,IAIvB4qD,SAAAA,GAAAA,OAAQt1D,EAAKu1D,WAAWD,QAQ5BC,WAAA,SAAAA,EAAWD,GAGP,IAAME,EAAgBx1D,KAAKy1D,iBAAiBH,EAAKR,SAMjD,OAJA90D,KAAK01D,kBAAkBF,EAAeF,GAGtCt1D,KAAKg1D,YAAcQ,EAAgBF,EAAKR,QACjC,IAAIa,EAAa31D,KAAK4mC,SAAU4uB,MAQ3CC,iBAAA,SAAAA,EAAiBG,GACb,GAAIA,EAAW51D,KAAKm1D,QAAQxvD,OACxB,MAAMwJ,MAAAA,oCAA0CymD,EAA1CzmD,mBAAAA,mBACiBnP,KAAKm1D,QAAQxvD,OAD9BwJ,OAKV,IAAIqmD,GAAiB,EAEjBK,GAAe,EAEnB,EAAA,CAEQ71D,KAAKg1D,YAAcY,EAAW51D,KAAKm1D,QAAQxvD,QAC3C3F,KAAK81D,WACLN,EAAgBx1D,KAAKm1D,QAAQ/qD,QAAQ,EAAGpK,KAAKg1D,aAC7Ca,EAAc71D,KAAK+1D,iBAAiBP,KAKlB,IAFtBA,EAAgBx1D,KAAKm1D,QAAQ/qD,QAAQ,EAAGpK,KAAKg1D,eAQ7Ca,EAAc71D,KAAK+1D,iBAAiBP,GAGpCx1D,KAAKg1D,YAAcQ,EAAgB,IAR/Bx1D,KAAK81D,WACLN,EAAgBx1D,KAAKm1D,QAAQ/qD,QAAQ,EAAGpK,KAAKg1D,aAC7Ca,EAAc71D,KAAK+1D,iBAAiBP,UASlCK,EAAcL,EAAgBI,GAA6B,GAAfC,GAGtD,OAAOtuD,KAAKC,IAAIguD,EAAe,MAOnCM,SAAA,SAAAA,IACI91D,KAAKg1D,YAAc,EACnBh1D,KAAK4mC,WAEL,IAAK,IAAIv0B,EAAI,EAAGA,EAAIrS,KAAKm1D,QAAQxvD,OAAQ0M,IAAzC,CACIrS,KAAKm1D,QAAQ9iD,GAAK9K,KAAKC,IAAI,EAAGxH,KAAKm1D,QAAQ9iD,GAAK,OAUxD0jD,iBAAA,SAAAA,EAAiBP,GACb,IAAK,IAAInjD,EAAImjD,EAAgB,EAAGnjD,EAAIrS,KAAKm1D,QAAQxvD,OAAQ0M,IAAzD,CACI,GAAuB,GAAnBrS,KAAKm1D,QAAQ9iD,GACb,OAAOA,EAIf,OAAOrS,KAAKm1D,QAAQxvD,UASxB+vD,kBAAA,SAAAA,EAAkBhW,EAAO4V,GACrB,IAAK,IAAIjjD,EAAI,EAAGA,EAAIijD,EAAKR,QAASziD,IAAlC,CACIrS,KAAKm1D,QAAQzV,EAAQrtC,GAAKijD,EAAKT,gDAjItB,OAAO70D,KAAK4mC,SAAW,oCAQpC,IAAMovB,EAAazuD,KAAKC,IAALD,MAAAA,KAAYvH,KAAKm1D,SAGpC,OAAOa,EAAa,EAAIh2D,KAAKi2D,SAAWD,EAAa,EAAIh2D,KAAKi2D,6BA8HhEN,EAKF,SAAAA,EAAYjqB,EAAKwqB,GACbl2D,KAAK0rC,IAAMA,EACX1rC,KAAKk2D,IAAMA,GAcnB,IAAMC,EAAsB,oCAOtBC,aACF,SAAAA,IACIp2D,KAAKq2D,MAAQ,EACbr2D,KAAK00D,SAAW,sBAYpBn2C,KAAA,SAAAA,EAAK+3C,EAAYnB,EAASoB,EAAMjjB,GAC5BtzC,KAAKw2D,YAAcC,EAAeH,GAClCt2D,KAAKq2D,MAAQlB,EAAQc,SACrBj2D,KAAK00D,SAAWS,EAAQN,QACxB70D,KAAK02D,MAAQH,EACbv2D,KAAK22D,WAAarjB,KAStBsjB,gBAAA,SAAAA,EAAgBC,EAAaC,GAMzB,MAAA,IAAWD,EAAX,QAA8B72D,KAAKw2D,YAAnC,MAAoDM,EAApD,QAQJC,gBAAA,SAAAA,EAAgBC,EAAU79B,GAGtB,OAAkB,IAAXA,EAAe,IAAM89B,EAAAA,IAASD,EAATC,MAAuBj3D,KAAKw2D,YAA5BS,OAA8C99B,MAQ9E+9B,YAAA,SAAAA,EAAYF,EAAUG,GAClB,MAAA,IAAWH,EAAX,MAAyBG,EAAzB,SAAqCA,EAAO,GAA5C,MAAmDn3D,KAAKw2D,YAAxD,OASJ9mD,SAAA,SAAAA,EAAS4lD,EAAM1uB,EAAUC,GAGrB,IAAIuwB,EAAsB,IAAMp3D,KAAK02D,MAIjCW,GAA8Br3D,KAAK02D,MAAQ,GAAK12D,KAAK02D,MACzD12D,KAAKs3D,aAAahC,EAAMzuB,EAAUuwB,EAAqBC,GACvDr3D,KAAKu3D,aAAajC,EAAM1uB,EAAUwwB,EAAqBC,MAU3DC,aAAA,SAAAA,EAAahC,EAAMzuB,EAAU2wB,EAAcC,GAGvC,IAAIC,EAAgB13D,KAAK42D,gBAAgBY,EAAcC,GAKvDnC,EAAKV,UAD0B,QAApB50D,KAAK22D,WAAuB,QAAU,OAC5B32D,KAAK+2D,gBAAgBW,EAAe7wB,IACzDyuB,EAAKV,UAAU,QAASqC,EAAKj3D,KAAKk3D,YAAYQ,EAAepC,EAAKR,cAMtE6C,cAAA,SAAAA,IACI,OAAU33D,KAAKw2D,YAAf,OAAiCx2D,KAAK00D,SAAtC,WAOJkD,YAAA,SAAAA,EAAYC,GACR,OAAU73D,KAAK00D,SAAf,MAA6B10D,KAAKk3D,YAAYW,EAAY,MAQ9DC,kBAAA,SAAAA,IAAsB,OAAO,sBAO3BC,qBAIF,SAAAA,EAAYC,GAAAA,IAAAA,EACRzvD,EAAAA,EAAAA,KAAAA,OAAAA,KACAvI,EAAKg4D,eAAiBA,EAFdA,OAAAA,sBAWZz5C,KAAA,SAAAA,EAAK+3C,EAAYnB,EAASoB,EAAMjjB,GAG5B,GAFA/qC,EAAAA,UAAMgW,KAANhW,KAAAA,KAAW+tD,EAAYnB,EAASoB,EAAMjjB,GACtCtzC,KAAKg4D,eAAiBvB,EAAez2D,KAAKg4D,iBACrC7B,EAAoBhZ,KAAKn9C,KAAKg4D,gBAC/B,MAAM7oD,MAAAA,kBAAwBnP,KAAKg4D,eAA7B7oD,0BAQdooD,aAAA,SAAAA,EAAajC,EAAM1uB,GACf0uB,EAAKV,UAAU,MAAO50D,KAAK+2D,gBAAgB/2D,KAAKg4D,eAAgBpxB,IAChE0uB,EAAKV,UAAU,SAAUqC,EAAKj3D,KAAKk3D,YAAYl3D,KAAKg4D,eAAgB1C,EAAKT,cAK7EiD,kBAAA,SAAAA,IACI,MAAO,CACH,SAAUb,EAAQj3D,KAAK43D,YAAY53D,KAAKg4D,gBAA9Bf,MAAmDj3D,KAAK23D,qBAO1ErR,MAAA,SAAAA,EAAM9wB,GACFA,EAAKyiC,cAAc,CAAC,SAAU,OAC1BziC,EAAK0iC,QACL1iC,EAAK0iC,OAAO72D,QAIZi0D,SAAAA,GACIA,EAAKV,UAAU,MAAO,MACtBU,EAAKV,UAAU,SAAU,mBApDXwB,OA8DxB+B,qBAIF,SAAAA,EAAYrzD,GAAAA,IAAAA,EACRyD,EAAAA,EAAAA,KAAAA,OAAAA,KACAvI,EAAKo4D,YAAYtzD,GAFTA,OAAAA,sBAWZyyD,aAAA,SAAAA,EAAajC,EAAM1uB,EAAU4wB,EAAcC,GAGvCz3D,KAAKq4D,eAAiBr4D,KAAK42D,gBADAY,EAAex3D,KAAKs4D,eACkBb,GAIjEnC,EAAKV,UAAU,YAAa50D,KAAK+2D,gBAAgB/2D,KAAKq4D,eAAgBzxB,IACtE0uB,EAAKV,UAAU,aAAcqC,EAAKj3D,KAAKk3D,YAAYl3D,KAAKq4D,eAAgB/C,EAAKT,cAKjFiD,kBAAA,SAAAA,IACI,MAAO,CACH,gBAAiBb,EAAQj3D,KAAK43D,YAAY53D,KAAKq4D,gBAA9BpB,MAAmDj3D,KAAK23D,qBAOjFrR,MAAA,SAAAA,EAAM9wB,GACFA,EAAKyiC,cAAc,CAAC,gBAAiB,OACrCziC,EAAK0iC,OAAO72D,QAIZi0D,SAAAA,GACIA,EAAKV,UAAU,YAAa,MAC5BU,EAAKV,UAAU,aAAc,WAQrCwD,YAAA,SAAAA,EAAYtzD,GAER,IAAMyzD,EAAazzD,EAAM4hD,MAAM,KAC/B,GAA0B,IAAtB6R,EAAW5yD,OACX,MAAMwJ,MAAAA,uDAA6DrK,EAA7DqK,KAEVnP,KAAKs4D,eAAiBE,WAAWD,EAAW,IAAMC,WAAWD,EAAW,eA3DlDnC,OAqExBqC,2FAMFlB,aAAA,SAAAA,EAAajC,EAAM1uB,GAGf,IAMIyxB,EAAiBr4D,KAAK42D,gBANC,IAAM52D,KAAK00D,UAGX10D,KAAKq2D,MAAQ,GAAKr2D,KAAKq2D,OAIlDf,EAAKV,UAAU,MAAO50D,KAAK+2D,gBAAgBsB,EAAgBzxB,IAC3D0uB,EAAKV,UAAU,SAAUqC,EAAKj3D,KAAKk3D,YAAYmB,EAAgB/C,EAAKT,cAMxEvO,MAAA,SAAAA,EAAM9wB,GACEA,EAAK0iC,QACL1iC,EAAK0iC,OAAO72D,QAIZi0D,SAAAA,GACIA,EAAKV,UAAU,MAAO,MACtBU,EAAKV,UAAU,SAAU,mBA/BbwB,GAyC5B,SAASa,EAAKyB,GACV,MAAA,QAAeA,EAAf,IAOJ,SAASjC,EAAe3xD,GACpB,OAAOA,EAAMo4B,MAAM,iBAAmBp4B,EAAWA,EAA1CA,KAWX,IAAM6zD,EAAe,2BACftE,aAKF,SAAAA,EAAY/+B,EAAUjQ,GAClBrlB,KAAKs1B,SAAWA,EAChBt1B,KAAKqlB,KAAOA,EAIZrlB,KAAK44D,QAAU,0BA4CnB5vD,SAAA,SAAAA,IACIhJ,KAAK64D,aACL74D,KAAK84D,qBAOTC,sBAAA,SAAAA,IACI/4D,KAAKg5D,kBAOTH,WAAA,SAAAA,IACI,IAAK74D,KAAKu2D,KACN,MAAMpnD,MAAM,uFASpB2pD,gBAAA,SAAAA,IACS94D,KAAKi5D,YACNj5D,KAAKk5D,eAAe,UAS5BA,eAAA,SAAAA,EAAeC,GACPn5D,KAAKo5D,aACLp5D,KAAKo5D,YAAY9S,MAAMtmD,MAGvBA,KAAKo5D,YADLD,IAAcR,EACK,IAAIF,EAElBU,GAAaA,EAAU/uD,QAAQ,MAAQ,EACzB,IAAI+tD,EAAgBgB,GAGpB,IAAIpB,EAAgBoB,MAQ/CH,aAAA,SAAAA,IAAA,IAAAK,EAAAr5D,KACSA,KAAKs5D,mBACNt5D,KAAKs5D,iBAAmB,IAAIvE,GAGhC,IAAMI,EAAUn1D,KAAKs5D,iBAEfpE,EAAQl1D,KAAKk4D,OAAOn+C,OAI1Bu7C,SAAAA,GAAAA,OAASA,EAAKb,WAAaa,EAAKb,YAAcz0D,IAExCszC,EAAYtzC,KAAKqlB,KAAOrlB,KAAKqlB,KAAKvgB,MAAQ,MAChD9E,KAAKs5D,iBAAiB9hD,OAAOxX,KAAKu2D,KAAMrB,GACxCl1D,KAAKo5D,YAAY76C,KAAKve,KAAKs2D,WAAYnB,EAASn1D,KAAKu2D,KAAMjjB,GAC3D4hB,EAAM7zD,QAAQ,SAKbi0D,EAAMnmC,GAEH,IAAMusB,EAAMyZ,EAAQE,UAAUlmC,GAC9BnvB,EAAKo5D,YAAY1pD,SAAS4lD,EAAM5Z,EAAIhQ,IAAKgQ,EAAIwa,OAEjDl2D,KAAKi4D,cAAcj4D,KAAKo5D,YAAYtB,wBAOxCG,cAAA,SAAAA,EAAcruC,GACNA,IACoB5pB,KAAKs1B,SAAS5nB,cAAqBkc,MAAEA,EAAM,IAAMA,EAAM,uCAnItE,OAAO5pB,KAAK02D,sBAKhB5xD,GACL9E,KAAK02D,MAAQnvD,KAAKC,IAAI,EAAGD,KAAKypB,MAAMhwB,OAAAe,EAAA0I,EAAAzJ,CAAqB8D,0CAM1C,OAAO9E,KAAK44D,wBAKhB9zD,GAAS9E,KAAK44D,QAAL54D,IAA2B,MAAT8E,EAAgB,GAAKA,uCAK7C,OAAO9E,KAAKi5D,2BAKhBn0D,GAEV,IAAMytB,EAAAA,IAAuB,MAATztB,EAAgB,GAAKA,GACrCytB,IAAavyB,KAAKi5D,aAClBj5D,KAAKi5D,WAAa1mC,EAClBvyB,KAAKk5D,eAAel5D,KAAKi5D,oCAuGrC5E,EAAYxpD,eAAiBjL,EAAAkL,GAAyB,CAAEC,KAAMspD,EAAarpD,UAAW,CAAC,CAAC,kBAAmBtJ,QAAS,SAAAA,EAA6BC,GAAK,OAAO,IAAKA,GAAK0yD,GAAaz0D,EAAAqL,GAAyBrL,EAAAmO,GAAanO,EAAAqL,GAAyBspD,EAAAhqD,EAAgB,KAAQwoB,eAAgB,SAAAA,EAAoCnvB,EAAIC,EAAKmvB,GAGhU,IAAIrX,EAHiV,EAAL/X,GAChVhE,EAAAqzB,GAAsBD,EAAUshC,GAAa,GACtC,EAAL1wD,GAEFhE,EAAAic,GAAsBF,EAAK/b,EAAAkc,QAA0BjY,EAAIq0D,OAASv8C,IACjExQ,aAAc,SAAAA,EAAkCvH,EAAIC,EAAKuH,GAAoB,EAALxH,GACzEhE,EAAAyL,GAA0BtI,IACzBuI,OAAQ,CAAEirD,KAAM,OAAQD,WAAY,aAAc6C,UAAW,aAAeztD,SAAU,CAAC,eAAgBC,SAAU,CAAC/L,EAAA8zB,GAA0B,CAAC,CACtI/rB,QAAS6sD,EACT7gC,YAAa0gC,MACXxgC,mBAAoBrxB,EAAKqJ,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAA8BnI,EAAIC,GAAgB,EAALD,IAC9GhE,EAAAk0B,KACAl0B,EAAAkE,GAAsB,EAAG,OACzBlE,EAAAqiB,GAAoB,GACpBriB,EAAAoE,OACCmI,OAAQ,CAAC,gvCAAivCC,cAAe,EAAGC,gBAAiB,0BA6ChyC+nD,wBAENA,EAAkB9nD,YAAc1M,EAAA2M,GAAwB,CAAExB,KAAMqpD,IAChEA,EAAkB5nD,cAAgB5M,EAAA6M,GAAwB,CAAE/K,QAAS,SAAAA,EAAmCC,GAAK,OAAO,IAAKA,GAAKyyD,IAAyBznD,QAAS,CAAC,CAAC8nB,EAAAvoB,EAAeuoB,EAAAvpB,GACzKupB,EAAAvoB,EACAuoB,EAAAvpB,+CCp7BR1L,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA65D,IAAA,IAAA35D,EAAAJ,EAAA,QAKO,IAAA+5D,EAAA,WAAA,IAAMA,EAAN,WAIL,SAAAA,EAAoBtsD,GAAAA,KAAAA,WAAAA,EAFbjN,KAAAw5D,gBAAkB,IAAI55D,EAAA+B,EAFxB,IAAA83D,EAAAF,EAAA54D,UAAA84D,EAOEC,QAAA,SAAAA,EAAQj/C,EAAmBi7B,GAC3BA,IAIiB11C,KAAKiN,WAAWS,cAAcisD,SAASjkB,IAE3D11C,KAAKw5D,gBAAgBhvD,KAAKiQ,KAdzB,OAAA8+C,EAAA,UCYPA,EAAsB1rD,eAAiBjO,EAAAkO,GAAqB,CAAE/C,KDZjDwuD,EAAqBvuD,UAAA,CAAA,CAAA,GAAA,kBAAA,KAAAtJ,QAAA,SAAAA,EAAAC,GAAA,OAAA,IAAAA,GAArB43D,GAAqB35D,EAAAqL,GAAArL,EAAAmO,KAAA5C,aAAA,SAAAA,EAAAvH,EAAAC,EAAAuH,GAAA,EAAAxH,GCa1BhE,EAAA6E,GAAc,QAAS,SAAwDC,GAAU,OAAOb,EAAI61D,QAAQh1D,EAAQA,EAAOxD,UAAY,EAAOtB,EAAAg6D,KAC7InuD,QAAS,CAAE+tD,gBAAiB,uBDd9B,wCELPh6D,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAm6D,IAAAr6D,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAo6D,IAAAt6D,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAq6D,IAAA,IAAAC,EAAAx6D,EAAA,QAAAygD,EAAAzgD,EAAA,QAAAy6D,EAAAz6D,EAAA,QAAAmgC,EAAAngC,EAAA,QAAAogC,EAAApgC,EAAA,QAAA06D,EAAA16D,EAAA,QAAA26D,EAAA36D,EAAA,QA2BA,IAAM8C,EAAM,CAAC,kBAAmB,IAC1BC,EAAM,CAAC,EAAG,6BACVC,EAAM,CAAC,OAAQ,SAAU,EAAG,yBAA0B,EAAG,QAAS,QAClEC,EAAM,CAAC,QAAS,wBAAyB,EAAG,QAC5CC,EAAM,CAAC,EAAG,yBACVC,EAAM,CAAC,EAAG,wBACVC,EAAM,CAAC,EAAG,6BACVC,EAAM,CAAC,EAAG,gCACVC,EAAM,CAAC,EAAG,iCACVC,EAAM,CAAC,EAAG,kCAChB,SAASq3D,EAA6Bx2D,EAAIC,GAAO,GAAS,EAALD,EAAQ,CACzD,IAAMy2D,EAAOpa,EAAAz7C,KACby7C,EAAAn8C,GAAsB,EAAG,MAAOpB,GAChCu9C,EAAAx7C,GAAkB,uBAAwB,SAAmFC,GAA8E,OAApEu7C,EAAAt7C,GAAqB01D,GAAuBpa,EAAAr7C,KAAuC01D,4BAA6B,IACvPra,EAAAx7C,GAAkB,sBAAuB,SAAkFC,GAA8E,OAApEu7C,EAAAt7C,GAAqB01D,GAAuBpa,EAAAr7C,KAAuC01D,4BAA6B,IACrPra,EAAA/5C,GAAiB,EAAG,MAAOvD,GAC3Bs9C,EAAAn8C,GAAsB,EAAG,MAAOlB,GAChCq9C,EAAA/5C,GAAiB,EAAG,MAAOrD,GAC3Bo9C,EAAA/5C,GAAiB,EAAG,MAAOpD,GAC3Bm9C,EAAA/5C,GAAiB,EAAG,MAAOnD,GAC3Bk9C,EAAAj8C,KACAi8C,EAAAj8C,KACF,GAAS,EAALJ,EAAQ,CACV,IAAM22D,EAAUta,EAAAr7C,KAChBq7C,EAAA97C,GAAkB,gBAAiBo2D,EAAnCC,qBAAAva,CAAiE,iBAAkBsa,EAAnFC,qBAAAva,CAAiH,iBAAkBsa,EAAQE,2BAC3Ixa,EAAA77C,GAAgB,GAChB67C,EAAA97C,GAAkB,aAAco2D,EAAQE,2BACxCxa,EAAA77C,GAAgB,GAChB67C,EAAA97C,GAAkB,eAAgBo2D,EAAQE,2BAC1Cxa,EAAA77C,GAAgB,GAChB67C,EAAA97C,GAAkB,gBAAiBo2D,EAAQE,4BAE/C,IAAMz3D,EAAO,CAAC,SAmCR03D,iBAGN,IAAMC,EAAoB35D,OAAAi5D,EAAA5xD,EAAArH,CAAiBA,OAAAi5D,EAAA7xD,EAAApH,CAAc05D,yBAInDX,qBACF,SAAAA,IAAA,IAAAa,EACIryD,EAAAA,EAAAA,MAAAA,KAAS2sB,YAAT3sB,KAIAvI,EAAK66D,UAAY,IAAIxd,IAIrBr9C,EAAKkuB,cAAgB,IAAIyR,EAAAt/B,EAKzBL,EAAK0/C,MAAQ,MACb1/C,EAAK22D,WAAa,GAIlB32D,EAAK86D,WAAa,IAAI7a,EAAAt+C,EAnB1B,OAAAi5D,sBAqDAG,SAAA,SAAAA,EAASC,GACL,IAAKA,EAAS5iD,GACV,MAlFDjJ,MAAM,oDAoFT,GAAInP,KAAK66D,UAAUI,IAAID,EAAS5iD,IAC5B,MAnGDjJ,MAAAA,kDAmGuC6rD,EAAS5iD,GAnGhDjJ,MAqGHnP,KAAK66D,UAAU39C,IAAI89C,EAAS5iD,GAAI4iD,MAQpCE,WAAA,SAAAA,EAAWF,GACPh7D,KAAK66D,UAAL76D,UAAsBg7D,EAAS5iD,OAOnC9N,KAAA,SAAAA,EAAK0wD,GACGh7D,KAAKwqD,QAAUwQ,EAAS5iD,IACxBpY,KAAKwqD,OAASwQ,EAAS5iD,GACvBpY,KAAKszC,UAAY0nB,EAAStb,MAAQsb,EAAStb,MAAQ1/C,KAAK0/C,OAGxD1/C,KAAKszC,UAAYtzC,KAAKm7D,qBAAqBH,GAE/Ch7D,KAAK86D,WAAWtwD,KAAK,CAAEggD,OAAQxqD,KAAKwqD,OAAQlX,UAAWtzC,KAAKszC,eAOhE6nB,qBAAA,SAAAA,EAAqBH,GACjB,IAAKA,EACD,MAAO,GAMX,IAAII,EAkEZ,SAA+B1b,EAAO2b,GAElC,IAAIC,EAAY,CAAC,MAAO,QAOxB,MANa,QAAT5b,GACA4b,EAAU5oC,UAET2oC,GACDC,EAAUjxD,KAAK,IAEZixD,EATX,CAlEuDN,EAAStb,OAAS1/C,KAAK0/C,MAFxB,MAAzBsb,EAASK,aAAuBL,EAASK,aAAer7D,KAAKq7D,cAK9EE,EAAqBH,EAAmBhxD,QAAQpK,KAAKszC,WAAa,EAItE,OAHIioB,GAAsBH,EAAmBz1D,SACzC41D,EAAqB,GAElBH,EAAmBG,MAK9BvyD,SAAA,SAAAA,IACIhJ,KAAKmJ,sBAKT8f,YAAA,SAAAA,IACIjpB,KAAKkuB,cAAc5sB,UAKvB8H,YAAA,SAAAA,IACIpJ,KAAKkuB,cAAc9e,mDAnGL,OAAOpP,KAAK22D,2BAKhBrjB,GACV,GAAItyC,OAAAi/C,EAAA5yB,GAAArsB,IAAesyC,GAA2B,QAAdA,GAAqC,SAAdA,EACnD,MApDZ,SAAsCA,GAClC,OAAOnkC,MAASmkC,EAATnkC,qDADX,CAoD+CmkC,GAEvCtzC,KAAK22D,WAAarjB,yCAOD,OAAOtzC,KAAKw7D,8BAKhBplC,GAAKp2B,KAAKw7D,cAAgBx6D,OAAAg5D,EAAApvD,EAAA5J,CAAsBo1B,iBA/C/CukC,UAgItBZ,EAAQlsD,eAAiBoyC,EAAAnyC,GAAyB,CAAE/C,KAAMgvD,EAAS/uD,UAAW,CAAC,CAAC,GAAI,UAAW,KAAMtJ,QAAS,SAAAA,EAAyBC,GAAK,OAAO85D,EAAqB95D,GAAKo4D,IAAazuD,OAAQ,CAAEnG,SAAU,CAAC,kBAAmB,YAAau6C,MAAO,CAAC,eAAgB,SAAUpM,UAAW,CAAC,mBAAoB,aAAc+nB,aAAc,CAAC,sBAAuB,gBAAiB7Q,OAAQ,CAAC,gBAAiB,WAAa/+C,QAAS,CAAEqvD,WAAY,iBAAmBpvD,SAAU,CAAC,WAAYC,SAAU,CAACs0C,EAAAr0C,GAAmCq0C,EAAArsB,aAC5gB,IAAM6nC,EAAuBxb,EAAAroC,GAA6BmiD,GAsDpD2B,EAA4BzB,EAAA1vD,EAAmBoxD,SAAW,IAC5D1B,EAAA55D,EAAgBu7D,eAMdC,EAAoB,CAItBC,UAAW96D,OAAAk5D,EAAAvvD,EAAA3J,CAAQ,YAAa,CAC5BA,OAAAk5D,EAAAhuD,EAAAlL,CAAM,kBAAmBA,OAAAk5D,EAAAjuD,EAAAjL,CAAM,CAAEse,UAAW,qBAE5Cte,OAAAk5D,EAAAhuD,EAAAlL,CAAM,oBAAqBA,OAAAk5D,EAAAjuD,EAAAjL,CAAM,CAAEse,UAAW,sBAC9Cte,OAAAk5D,EAAA/2C,EAAAniB,CAAW,6BAA8BA,OAAAk5D,EAAAz2C,EAAAziB,CAAQ06D,MAKrDK,YAAa/6D,OAAAk5D,EAAAvvD,EAAA3J,CAAQ,cAAe,CAChCA,OAAAk5D,EAAAhuD,EAAAlL,CAAM,kBAAmBA,OAAAk5D,EAAAjuD,EAAAjL,CAAM,CAAEse,UAAW,oBAC5Cte,OAAAk5D,EAAAhuD,EAAAlL,CAAM,oBAAqBA,OAAAk5D,EAAAjuD,EAAAjL,CAAM,CAAEse,UAAW,mBAC9Cte,OAAAk5D,EAAA/2C,EAAAniB,CAAW,6BAA8BA,OAAAk5D,EAAAz2C,EAAAziB,CAAQ06D,MAKrDM,aAAch7D,OAAAk5D,EAAAvvD,EAAA3J,CAAQ,eAAgB,CAClCA,OAAAk5D,EAAAhuD,EAAAlL,CAAM,kBAAmBA,OAAAk5D,EAAAjuD,EAAAjL,CAAM,CAAEse,UAAW,mBAC5Cte,OAAAk5D,EAAAhuD,EAAAlL,CAAM,oBAAqBA,OAAAk5D,EAAAjuD,EAAAjL,CAAM,CAAEse,UAAW,oBAC9Cte,OAAAk5D,EAAA/2C,EAAAniB,CAAW,6BAA8BA,OAAAk5D,EAAAz2C,EAAAziB,CAAQ06D,MAKrDO,aAAcj7D,OAAAk5D,EAAAvvD,EAAA3J,CAAQ,eAAgB,CAClCA,OAAAk5D,EAAAhuD,EAAAlL,CAAM,wCAAyCA,OAAAk5D,EAAAjuD,EAAAjL,CAAM,CAAEwiB,QAAS,KAChExiB,OAAAk5D,EAAAhuD,EAAAlL,CAAM,kCAAmCA,OAAAk5D,EAAAjuD,EAAAjL,CAAM,CAAEwiB,QAAS,OAC1DxiB,OAAAk5D,EAAAhuD,EAAAlL,CAAM,4EAA6EA,OAAAk5D,EAAAjuD,EAAAjL,CAAM,CAAEwiB,QAAS,KAEpGxiB,OAAAk5D,EAAA/2C,EAAAniB,CAAW,yDAA0DA,OAAAk5D,EAAAz2C,EAAAziB,CAAQ,QAC7EA,OAAAk5D,EAAA/2C,EAAAniB,CAAW,UAAWA,OAAAk5D,EAAAz2C,EAAAziB,CAAQ06D,MASlCQ,cAAel7D,OAAAk5D,EAAAvvD,EAAA3J,CAAQ,gBAAiB,CAEpCA,OAAAk5D,EAAA/2C,EAAAniB,CAAW,yCAA0CA,OAAAk5D,EAAAz2C,EAAAziB,CAAQ06D,EAA2B16D,OAAAk5D,EAAA7nD,EAAArR,CAAU,CAC9FA,OAAAk5D,EAAAjuD,EAAAjL,CAAM,CAAEse,UAAW,qBACnBte,OAAAk5D,EAAAjuD,EAAAjL,CAAM,CAAEse,UAAW,sBAGvBte,OAAAk5D,EAAA/2C,EAAAniB,CAAW,yCAA0CA,OAAAk5D,EAAAz2C,EAAAziB,CAAQ06D,EAA2B16D,OAAAk5D,EAAA7nD,EAAArR,CAAU,CAC9FA,OAAAk5D,EAAAjuD,EAAAjL,CAAM,CAAEse,UAAW,kBACnBte,OAAAk5D,EAAAjuD,EAAAjL,CAAM,CAAEse,UAAW,wBAGvBte,OAAAk5D,EAAA/2C,EAAAniB,CAAW,uCAAwCA,OAAAk5D,EAAAz2C,EAAAziB,CAAQ06D,EAA2B16D,OAAAk5D,EAAA7nD,EAAArR,CAAU,CAC5FA,OAAAk5D,EAAAjuD,EAAAjL,CAAM,CAAEse,UAAW,oBACnBte,OAAAk5D,EAAAjuD,EAAAjL,CAAM,CAAEse,UAAW,sBAGvBte,OAAAk5D,EAAA/2C,EAAAniB,CAAW,uCAAwCA,OAAAk5D,EAAAz2C,EAAAziB,CAAQ06D,EAA2B16D,OAAAk5D,EAAA7nD,EAAArR,CAAU,CAC5FA,OAAAk5D,EAAAjuD,EAAAjL,CAAM,CAAEse,UAAW,kBACnBte,OAAAk5D,EAAAjuD,EAAAjL,CAAM,CAAEse,UAAW,yBAEvBte,OAAAk5D,EAAAhuD,EAAAlL,CAAM,yEAA0EA,OAAAk5D,EAAAjuD,EAAAjL,CAAM,CAAEse,UAAW,mBACnGte,OAAAk5D,EAAAhuD,EAAAlL,CAAM,qCAAsCA,OAAAk5D,EAAAjuD,EAAAjL,CAAM,CAAEse,UAAW,sBAC/Dte,OAAAk5D,EAAAhuD,EAAAlL,CAAM,kCAAmCA,OAAAk5D,EAAAjuD,EAAAjL,CAAM,CAAEse,UAAW,uBAKhE68C,cAAen7D,OAAAk5D,EAAAvvD,EAAA3J,CAAQ,gBAAiB,CACpCA,OAAAk5D,EAAA/2C,EAAAniB,CAAW,UAAW,CAClBA,OAAAk5D,EAAA92C,EAAApiB,CAAM,KAAMA,OAAAk5D,EAAAzvD,EAAAzJ,GAAgB,CAAEqiB,UAAU,8BAa9C+4C,EACF,SAAAA,IAKIp8D,KAAKiH,QAAU,IAAI04B,EAAAt/B,EAInBL,KAAKq8D,gBAIJjkD,SAAAA,GAAAA,MAAAA,sBACgCA,WAIzCgkD,EAAkB76D,gBAAkB0+C,EAAAz+C,GAA0B,CAAEC,MAAO26D,EAAmB16D,QAAS,SAAAA,EAAmCC,GAAK,OAAO,IAAKA,GAAKy6D,IAAyBx6D,WAAY,SAK9Kw6D,EAAkB76D,gBAAkBP,OAAAi/C,EAAAz+C,GAAAR,CAAmB,CAAEU,QAAS,SAAAA,IAAuC,OAAO,IAAI06D,GAAwB36D,MAAO26D,EAAmBx6D,WAAY,cAarM,IAAM06D,EAAgC,CAElC30D,QAASy0D,EACTx0D,KAAM,CAAC,CAAC,IAAIq4C,EAAAp4C,EAAY,IAAIo4C,EAAAn4C,EAAYs0D,IACxCr0D,WAXJ,SAAAA,EAA+CC,GAC3C,OAAOA,GAAc,IAAIo0D,QAqBvBG,iBAGN,IAAMC,EAA0Bx7D,OAAAi5D,EAAA7xD,EAAApH,CAAcu7D,wBAUxCzC,qBAOF,SAAAA,EAAY10D,EAAO6oC,EAAmBwuB,EAAOC,GAAAA,IAAAA,EA0BzC,GArBAn0D,EAAAA,EAAAA,KAAAA,OAAAA,KACAvI,EAAKoF,MAAQA,EACbpF,EAAKy8D,MAAQA,EACbz8D,EAAK08D,WAAaA,EAKlB18D,EAAK28D,oBAAqB,EAI1B38D,EAAK48D,gBAAkB,GAIvB58D,EAAKs6D,4BAA6B,EAIlCt6D,EAAKk8D,cAAgB,SAChBO,EACD,MAzZDttD,MAAM,oFA2ZTnP,EAAK68D,sBAAwB77D,OAAA4+B,EAAAv/B,EAAAW,CAAMy7D,EAAM3B,WAAY2B,EAAMvuC,cAAe9oB,EAAM6B,SAC3E6B,UAAU,WAIP9I,EAAK88D,aACL98D,EAAK+8D,yBAGJ/8D,EAAK88D,aAAe98D,EAAKg9D,YAA0C,WAA5Bh9D,EAAKg9D,WAAWx6C,UACxDxiB,EAAKs6D,4BAA6B,EAClCt6D,EAAKi9D,6BAA6B,CAAEC,UAAW,SAAU16C,QAASxiB,EAAK48D,mBAE3E3uB,EAAkBllC,iBA1CmB2zD,OAAAA,EAAAA,uBA0D7C1zD,SAAA,SAAAA,KACShJ,KAAKoY,IAAMpY,KAAK08D,aACjB18D,KAAKoY,GAAKpY,KAAK08D,WAAW38C,MAG9B/f,KAAK+8D,wBACL/8D,KAAKi9D,6BAA6B,CAAEz6C,QAASxiB,KAAK88D,YAAc,SAAW98D,KAAK48D,kBAChF58D,KAAKy8D,MAAM1B,SAAS/6D,SAKxBoJ,YAAA,SAAAA,IACIpJ,KAAKy8D,MAAMvB,WAAWl7D,MACtBA,KAAK68D,sBAAsBxzD,iBAQ/B8zD,yBAAA,SAAAA,EAAyBviD,GAEjB5a,KAAKo9D,eAAiBxiD,IAG1B5a,KAAK28D,mBAAqB/hD,EACrB5a,KAAK88D,cACN98D,KAAK+8D,wBAED/8D,KAAKi9D,6BADLj9D,KAAK28D,mBAC6B,CAAEO,UAAWl9D,KAAK48D,gBAAiBp6C,QAAS,QAG5C,CAAE06C,UAAW,OAAQ16C,QAASxiB,KAAK48D,uBAWjFK,6BAAA,SAAAA,EAA6BI,GACzBr9D,KAAKg9D,WAAaK,EAGdr9D,KAAKs6D,6BACLt6D,KAAKg9D,WAAa,CAAEx6C,QAAS66C,EAAU76C,aAO/CmoC,aAAA,SAAAA,IACI,GAAI3qD,KAAKo9D,cACL,OAEJp9D,KAAKy8D,MAAMnyD,KAAKtK,MAEgB,SAA5BA,KAAKg9D,WAAWx6C,SAAkD,WAA5BxiB,KAAKg9D,WAAWx6C,UACtDxiB,KAAKs6D,4BAA6B,GAKtC,IAAM+C,EAAYr9D,KAAK88D,YACnB,CAAEI,UAAWl9D,KAAK48D,gBAAiBp6C,QAAS,UAC5C,CAAE06C,UAAW,SAAU16C,QAASxiB,KAAK48D,iBACzC58D,KAAKi9D,6BAA6BI,GAClCr9D,KAAK28D,oBAAqB,KAM9BG,UAAA,SAAAA,IACI,OAAO98D,KAAKy8D,MAAMjS,QAAUxqD,KAAKoY,KACH,QAAzBpY,KAAKy8D,MAAMnpB,WAAgD,SAAzBtzC,KAAKy8D,MAAMnpB,cAMtDmnB,wBAAA,SAAAA,IACI,MAAA,IAAUz6D,KAAK88D,YAAc,UAAY,IAAK98D,KAAK48D,mBAMvDpC,mBAAA,SAAAA,IAEI,IAAM0C,EAAYl9D,KAAKg9D,WAAWE,UAClC,OAAQA,EAAeA,EAAfA,OAAiC,IAAMl9D,KAAKg9D,WAAWx6C,WAanEu6C,sBAAA,SAAAA,IACI/8D,KAAK48D,gBAAkB58D,KAAK88D,YACxB98D,KAAKy8D,MAAMnpB,UACVtzC,KAAK0/C,OAAS1/C,KAAKy8D,MAAM/c,SAKlC0d,YAAA,SAAAA,IACI,OAAOp9D,KAAKy8D,MAAMt3D,UAAYnF,KAAKmF,YASvCm4D,sBAAA,SAAAA,IACI,OAAKt9D,KAAK88D,YAGqB,OAAxB98D,KAAKy8D,MAAMnpB,UAAqB,YAAc,aAF1C,QAQfiqB,aAAA,SAAAA,IACI,OAAQv9D,KAAKo9D,eAAiBp9D,KAAK88D,uDApJlB,OAAO98D,KAAKw7D,8BAKhBplC,GAAKp2B,KAAKw7D,cAAgBx6D,OAAAg5D,EAAApvD,EAAA5J,CAAsBo1B,iBA7DzComC,UA+M5B1C,EAAcjvD,eAAiBo1C,EAAAn1C,GAAyB,CAAEC,KAAM+uD,EAAe9uD,UAAW,CAAC,CAAC,GAAI,kBAAmB,KAAMtJ,QAAS,SAAAA,EAA+BC,GAAK,OAAO,IAAKA,GAAKm4D,GAAe7Z,EAAAh1C,GAAyBmxD,GAAoBnc,EAAAh1C,GAAyBg1C,EAAA/0C,GAAoB+0C,EAAAh1C,GAAyB8uD,EAAS,GAAI9Z,EAAAh1C,GAAyB,6BAA8B,KAAQE,aAAc,SAAAA,EAAoCvH,EAAIC,EAAKuH,GAAoB,EAALxH,IACvcq8C,EAAAptC,GAAuB,GACvBotC,EAAAx7C,GAAkB,QAAS,SAAgDC,GAAU,OAAOb,EAAI8mD,iBAChG1K,EAAAx7C,GAAkB,aAAc,SAAqDC,GAAU,OAAOb,EAAIs5D,0BAAyB,KACnIld,EAAAx7C,GAAkB,YAAa,SAAoDC,GAAU,OAAOb,EAAIs5D,0BAAyB,KACjIld,EAAAx7C,GAAkB,aAAc,SAAqDC,GAAU,OAAOb,EAAIs5D,0BAAyB,KACnIld,EAAAhvC,MACO,EAALrN,IACFq8C,EAAA35C,GAAmB,YAAazC,EAAIy5D,yBACpCrd,EAAA5sB,GAAmB,2BAA4BxvB,EAAIu5D,eACnDnd,EAAAzuC,OACClG,OAAQ,CAAEnG,SAAU,WAAY+2D,cAAe,gBAAiBb,aAAc,eAAgBjjD,GAAI,CAAC,kBAAmB,MAAOsnC,MAAO,SAAWh0C,SAAU,CAAC,iBAAkBC,SAAU,CAACs0C,EAAAr0C,IAAoCs7B,MAAO5kC,EAAKuxB,mBAAoB7wB,EAAM6I,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAAgCnI,EAAIC,GAAgB,EAALD,IAC/Uq8C,EAAAnsB,KACAmsB,EAAAn8C,GAAsB,EAAG,MAAOvB,GAChC09C,EAAAhvC,KACAgvC,EAAAn8C,GAAsB,EAAG,SAAUtB,GACnCy9C,EAAAx7C,GAAkB,QAAS,SAAwDC,GAAU,OAAOb,EAAIs5D,0BAAyB,KACjIld,EAAAx7C,GAAkB,OAAQ,SAAuDC,GAAU,OAAOb,EAAIs5D,0BAAyB,KAC/Hld,EAAAh+B,GAAoB,GACpBg+B,EAAAj8C,KACAi8C,EAAAl7C,GAAkB,EAAGq1D,EAA8B,EAAG,EAAG,MAAO33D,GAChEw9C,EAAAj8C,MACO,EAALJ,IACFq8C,EAAA5sB,GAAmB,yBAA0BxvB,EAAIi5D,aACjD7c,EAAA5sB,GAAmB,kCAAwD,UAArBxvB,EAAIq4D,eAC1Djc,EAAAzuC,KACAyuC,EAAA77C,GAAgB,GAChB67C,EAAA35C,GAAmB,WAAYzC,EAAIu5D,eAAnC,KAAAnd,CAA0D,aAAcp8C,EAAIuB,MAAMi3D,gBAAgBx4D,EAAIuU,KACtG6nC,EAAA77C,GAAgB,GAChB67C,EAAA97C,GAAkB,OAAQN,EAAI05D,kBAC7BvxD,WAAY,CAACmuD,EAAAluD,GAAcE,OAAQ,CAAC,+oDAAgpDC,cAAe,EAAG2J,KAAM,CAAEke,UAAW,CACttD4nC,EAAkBC,UAClBD,EAAkBE,YAClBF,EAAkBG,aAClBH,EAAkBI,aAClBJ,EAAkBK,cAClBL,EAAkBM,gBACjB9vD,gBAAiB,0BA8DxBwtD,wBAENA,EAAcvtD,YAAc2zC,EAAA1zC,GAAwB,CAAExB,KAAM8uD,IAC5DA,EAAcrtD,cAAgByzC,EAAAxzC,GAAwB,CAAE/K,QAAS,SAAAA,EAA+BC,GAAK,OAAO,IAAKA,GAAKk4D,IAAqBntD,UAAW,CAAC4vD,GAAgC3vD,QAAS,CAAC,CAACwtD,EAAAvvD,kDChvBlMpL,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA0d,IAAA,IAAAyB,EAAArf,EAAA,QACO,SAAS4d,EAAMogD,GAAQ,GAARA,SAAQ,EAAA,CAARA,GAAQ,EAC1B,OAAQ1+C,SAAAA,GAAAA,OAAWA,EAAOC,KAAK,IAAI0+C,EAAcD,EAAO1+C,SAEtD2+C,aACF,SAAAA,EAAYD,EAAO1+C,GACf9e,KAAKw9D,MAAQA,EACbx9D,KAAK8e,OAASA,sBAElBzP,KAAA,SAAAA,EAAK0E,EAAY+K,GACb,OAAOA,EAAOhW,UAAU,IAAI40D,EAAgB3pD,EAAY/T,KAAKw9D,MAAOx9D,KAAK8e,0BAG3E4+C,qBACF,SAAAA,EAAYx+C,EAAas+C,EAAO1+C,GAAAA,IAAAA,EAC5BvW,EAAAA,EAAAA,KAAAA,KAAM2W,IAAN3W,KACAvI,EAAKw9D,MAAQA,EACbx9D,EAAK8e,OAASA,EAHcA,OAAAA,sBAKhCvB,MAAA,SAAAA,EAAMmyC,GACF,IAAK1vD,KAAKquD,UAAW,CAAA,IACTvvC,EAAkB9e,KAApB8e,OAAU0+C,EAAUx9D,KAAZw9D,MACd,GAAc,IAAVA,EACA,OAAAG,EAAAh9D,UAAa4c,MAAblO,KAAArP,KAAmB0vD,GAEd8N,GAAS,IACdx9D,KAAKw9D,MAAQA,EAAQ,GAEzB1+C,EAAOhW,UAAU9I,KAAKyuD,sCAfJ5vC,EAAAxe,wJCR9B,SAASqS,EAAI7R,GACX,OAAOuoB,iBAAiBvoB,GAG1B,SAASqc,EAAIrc,EAAS2pC,GACpB,IAAK,IAAI76B,KAAO66B,EAAK,CACnB,IAAIuQ,EAAMvQ,EAAI76B,GACK,iBAARorC,IACTA,GAAY,MAEdl6C,EAAQ+oB,MAAMja,GAAOorC,EAEvB,OAAOl6C,EAGT,SAAS+8D,EAAIjX,GACX,IAAIiX,EAAM7tD,SAASC,cAAc,OAEjC,OADA4tD,EAAIjX,UAAYA,EACTiX,EAGT,IAAIC,EACiB,oBAAZC,UACNA,QAAQn9D,UAAUo9D,SACjBD,QAAQn9D,UAAUq9D,uBAClBF,QAAQn9D,UAAUs9D,oBAClBH,QAAQn9D,UAAUu9D,mBAEtB,SAASH,EAAQl9D,EAASs9D,GACxB,IAAKN,EACH,MAAM,IAAI1uD,MAAM,wCAGlB,OAAO0uD,EAAUxuD,KAAKxO,EAASs9D,GAGjC,SAASC,EAAOv9D,GACVA,EAAQu9D,OACVv9D,EAAQu9D,SAEJv9D,EAAQshD,YACVthD,EAAQshD,WAAW1xC,YAAY5P,GAKrC,SAASw9D,EAAcx9D,EAASy9D,GAC9B,OAAOzxC,MAAMlsB,UAAUoZ,OAAO1K,KAAKxO,EAAQ09D,SAAU,SAAUC,GAAS,OAAOT,EAAQS,EAAOF,KAIhG,IAAIG,EAAM,CACRC,KAAM,KACN79D,QAAS,CACP89D,MAAO,SAAAA,EAAUvjD,GAAK,MAAQ,aAAeA,GAC7CwjD,KAAM,SAAAA,EAAUxjD,GAAK,MAAQ,YAAcA,GAC3CyjD,UAAW,sBAEb5qD,MAAO,CACL2Z,MAAO,YACPkxC,SAAU,eACVtU,OAAQ,SAAAA,EAAUpvC,GAAK,MAAQ,cAAgBA,GAC/C2jD,UAAW,SAAAA,EAAU3jD,GAAK,MAAQ,iBAAmBA,KAOrD4jD,EAAwB,CAAE5jD,EAAG,KAAM4T,EAAG,MAE1C,SAASiwC,EAAkB5sD,EAAG+I,GAC5B,IAAIlL,EAAYmC,EAAExR,QAAQqP,UACtBy2C,EAAY8X,EAAIxqD,MAAM8qD,UAAU3jD,GAEhClL,EAAUypD,SAAShT,GACrBuY,aAAaF,EAAsB5jD,IAEnClL,EAAUC,IAAIw2C,GAIlB,SAASwY,EAAqB9sD,EAAG+I,GAC/B4jD,EAAsB5jD,GAAKg4B,WACzB,WAAc,OAAO/gC,EAAE+sD,SAAW/sD,EAAExR,QAAQqP,UAAUkuD,OAAOK,EAAIxqD,MAAM8qD,UAAU3jD,KACjF/I,EAAEgtD,SAASC,oBASf,IAAIC,EAAe,SAAfA,EAAqC1+D,GACvCb,KAAKa,QAAUA,EACfb,KAAKw/D,SAAW,IAGdC,EAAqB,CAAE9sC,QAAS,CAAE+sC,cAAc,IAEpDH,EAAa5+D,UAAUF,KAAO,SAAek/D,EAAWn/D,QACd,IAA7BR,KAAKw/D,SAASG,KACvB3/D,KAAKw/D,SAASG,GAAa,IAE7B3/D,KAAKw/D,SAASG,GAAWt1D,KAAK7J,GAC9BR,KAAKa,QAAQqnD,iBAAiByX,EAAWn/D,GAAS,IAGpD++D,EAAa5+D,UAAUi/D,OAAS,SAAiBD,EAAWz+D,GACxD,IAAI2+D,EAAS7/D,KAEfA,KAAKw/D,SAASG,GAAa3/D,KAAKw/D,SAASG,GAAW5lD,OAAO,SAAUvZ,GACnE,SAAIU,GAAUV,IAAYU,KAG1B2+D,EAAOh/D,QAAQynD,oBAAoBqX,EAAWn/D,GAAS,IAChD,MAIX++D,EAAa5+D,UAAUm/D,UAAY,WAGjC,IAAK,IAAI//C,KAFM/f,KAESw/D,SAAxB,CAFex/D,KAGN4/D,OAAO7/C,KAIlB0/C,EAAmB9sC,QAAQjgB,IAAM,WAC7B,IAAImtD,EAAS7/D,KAEf,OAAOgB,OAAO4e,KAAK5f,KAAKw/D,UAAUtmD,MAChC,SAAUvJ,GAAO,OAAuC,IAAhCkwD,EAAOL,SAAS7vD,GAAKhK,UAIjD3E,OAAO++D,iBAAkBR,EAAa5+D,UAAW8+D,GAEjD,IAAIO,EAAe,SAAfA,IACFhgE,KAAKigE,cAAgB,IAwCvB,SAASC,EAAYngD,GACnB,GAAkC,mBAAvBogD,OAAOC,YAChB,OAAO,IAAIA,YAAYrgD,GAEvB,IAAIsgD,EAAMtwD,SAASmwD,YAAY,eAE/B,OADAG,EAAIC,gBAAgBvgD,GAAM,GAAO,OAAO9Q,GACjCoxD,EA3CXL,EAAar/D,UAAU4/D,aAAe,SAAuB1/D,GAC3D,IAAI2/D,EAAKxgE,KAAKigE,cAAclmD,OAAO,SAAUymD,GAAM,OAAOA,EAAG3/D,UAAYA,IAAY,GAKrF,OAJK2/D,IACHA,EAAK,IAAIjB,EAAa1+D,GACtBb,KAAKigE,cAAc51D,KAAKm2D,IAEnBA,GAGTR,EAAar/D,UAAUF,KAAO,SAAeI,EAAS8+D,EAAWn/D,GAC/DR,KAAKugE,aAAa1/D,GAASJ,KAAKk/D,EAAWn/D,IAG7Cw/D,EAAar/D,UAAUi/D,OAAS,SAAiB/+D,EAAS8+D,EAAWn/D,GACnE,IAAIggE,EAAKxgE,KAAKugE,aAAa1/D,GAC3B2/D,EAAGZ,OAAOD,EAAWn/D,GAEjBggE,EAAG7tC,SAEL3yB,KAAKigE,cAAcxkB,OAAOz7C,KAAKigE,cAAc71D,QAAQo2D,GAAK,IAI9DR,EAAar/D,UAAUm/D,UAAY,WACjC9/D,KAAKigE,cAAc5+D,QAAQ,SAAUoiB,GAAK,OAAOA,EAAEq8C,cACnD9/D,KAAKigE,cAAgB,IAGvBD,EAAar/D,UAAU8/D,KAAO,SAAe5/D,EAAS8+D,EAAWn/D,GAC/D,IAAIggE,EAAKxgE,KAAKugE,aAAa1/D,GACvB6/D,EAAc,SAAdA,EAAwBL,GAC1BG,EAAGZ,OAAOD,EAAWe,GACrBlgE,EAAQ6/D,IAEVG,EAAG//D,KAAKk/D,EAAWe,IAarB,IAAIC,EAAoB,SAApBA,EACFtuD,EACAuuD,EACAppC,EACAqpC,EACAC,GAKA,IAAIC,EACJ,QAJ2B,IAAtBF,IAA+BA,GAAoB,QAC3B,IAAxBC,IAAiCA,GAAsB,GAG/C,QAATF,EACFG,EAAS,CACP,gBACA,kBACA,YACA,IACA,KACA,YACG,CAAA,GAAa,SAATH,EAST,MAAM,IAAIzxD,MAAM,oCARhB4xD,EAAS,CACP,eACA,iBACA,aACA,IACA,OACA,UAQN,SACE1uD,EACAmlB,EACAwpC,EACAH,EACAC,GAEA,IAAIG,EAVyBF,EAUL,GACpBG,EAXyBH,EAWH,GACtB10C,EAZyB00C,EAYT,GAChB/xC,EAbyB+xC,EAajB,GACRI,EAdyBJ,EAchB,GACTK,EAfyBL,EAed,QACY,IAAtBF,IAA+BA,GAAoB,QAC3B,IAAxBC,IAAiCA,GAAsB,GAE5D,IAAIjgE,EAAUwR,EAAExR,QAGhBwR,EAAEgvD,MAAMryC,GAAK,KAGTnuB,EAAQwrB,GAAa,IACvBha,EAAEgvD,MAAMryC,GAAK,SAIXnuB,EAAQwrB,GAAaha,EAAE4uD,GAAiB5uD,EAAE6uD,GAAmB,IAC/D7uD,EAAEgvD,MAAMryC,GAAK,OAGXwI,IACF32B,EAAQygE,cAAcpB,EAAa,aAAelxC,IAE9CwI,EAAO,EACT32B,EAAQygE,cAAcpB,EAAa,aAAeiB,IACzC3pC,EAAO,GAChB32B,EAAQygE,cAAcpB,EAAa,aAAekB,IAGhDP,GA/KR,SAAoCxuD,EAAG+I,GACrC6jD,EAAkB5sD,EAAG+I,GACrB+jD,EAAqB9sD,EAAG+I,GAF1B,CAgLiC/I,EAAG2c,IAI9B3c,EAAEgvD,MAAMryC,KAAOwI,GAAQspC,IACzBjgE,EAAQygE,cAAcpB,EAAa,MAAQlxC,EAAI,UAAa3c,EAAEgvD,MAAMryC,KA9CxE,CAHsB3c,EAAGmlB,EAAMupC,EAAQF,EAAmBC,IAqD1D,SAASS,EAAMnmD,GACb,OAAOyM,SAASzM,EAAG,KAAO,EAuB5B,IAAIomD,EAAM,CACRC,SACsB,oBAAb1xD,UACP,qBAAsBA,SAAS2xD,gBAAgB93C,MACjD+3C,cACoB,oBAAXxB,SACN,iBAAkBA,QAChBA,OAAOyB,eAAiB7xD,oBAAoBowD,OAAOyB,eACxDC,kBACuB,oBAAdjkB,WAA6BA,UAAUkkB,iBAChDC,SACuB,oBAAdnkB,WACP,UAAUT,KAAKS,WAAaA,UAAUokB,YAGtCC,EAAiB,SAAjBA,EAA0B5vD,GAC5B,IAAIxR,EAAUwR,EAAExR,QACZqhE,EAAmB36D,KAAKyC,MAAMnJ,EAAQwrB,WAE1Cha,EAAE8vD,eAAiBthE,EAAQuhE,YAC3B/vD,EAAE6uD,gBAAkBrgE,EAAQwhE,aAC5BhwD,EAAEiwD,aAAezhE,EAAQ0hE,YACzBlwD,EAAE4uD,cAAgBpgE,EAAQ2hE,aAErB3hE,EAAQ84D,SAAStnD,EAAEowD,kBAEtBpE,EAAcx9D,EAAS49D,EAAI59D,QAAQ+9D,KAAK,MAAMv9D,QAAQ,SAAUqhE,GAAM,OAAOtE,EAAOsE,KAEpF7hE,EAAQyP,YAAY+B,EAAEowD,iBAEnB5hE,EAAQ84D,SAAStnD,EAAEswD,kBAEtBtE,EAAcx9D,EAAS49D,EAAI59D,QAAQ+9D,KAAK,MAAMv9D,QAAQ,SAAUqhE,GAAM,OAAOtE,EAAOsE,KAEpF7hE,EAAQyP,YAAY+B,EAAEswD,kBAIrBtwD,EAAEgtD,SAAS7qD,iBACZnC,EAAE8vD,eAAiB9vD,EAAEgtD,SAASuD,oBAAsBvwD,EAAEiwD,cAEtDjwD,EAAEwwD,kBAAmB,EACrBxwD,EAAEywD,WAAazwD,EAAE8vD,eAAiB9vD,EAAE0wD,iBACpC1wD,EAAE2wD,WAAa3wD,EAAE8vD,eAAiB9vD,EAAEywD,WACpCzwD,EAAE4wD,gBAAkBC,EAClB7wD,EACAkvD,EAAMlvD,EAAEywD,WAAazwD,EAAE8vD,eAAiB9vD,EAAEiwD,eAE5CjwD,EAAE8wD,eAAiB5B,GAChBlvD,EAAE+wD,yBAA2BviE,EAAQwiE,aACnChxD,EAAEywD,WAAazwD,EAAE4wD,kBACjB5wD,EAAEiwD,aAAejwD,EAAE8vD,kBAGxB9vD,EAAEwwD,kBAAmB,GAIpBxwD,EAAEgtD,SAASiE,iBACZjxD,EAAE6uD,gBAAkB7uD,EAAEgtD,SAASkE,oBAAsBlxD,EAAE4uD,eAEvD5uD,EAAEmxD,kBAAmB,EACrBnxD,EAAEoxD,YAAcpxD,EAAE6uD,gBAAkB7uD,EAAEqxD,kBACtCrxD,EAAEsxD,WAAatxD,EAAE6uD,gBAAkB7uD,EAAEoxD,YACrCpxD,EAAEuxD,iBAAmBV,EACnB7wD,EACAkvD,EAAMlvD,EAAEoxD,YAAcpxD,EAAE6uD,gBAAkB7uD,EAAE4uD,gBAE9C5uD,EAAEwxD,cAAgBtC,EAChBW,GACG7vD,EAAEoxD,YAAcpxD,EAAEuxD,mBAClBvxD,EAAE4uD,cAAgB5uD,EAAE6uD,mBAGzB7uD,EAAEmxD,kBAAmB,EAGnBnxD,EAAE8wD,gBAAkB9wD,EAAEywD,WAAazwD,EAAE4wD,kBACvC5wD,EAAE8wD,eAAiB9wD,EAAEywD,WAAazwD,EAAE4wD,iBAElC5wD,EAAEwxD,eAAiBxxD,EAAEoxD,YAAcpxD,EAAEuxD,mBACvCvxD,EAAEwxD,cAAgBxxD,EAAEoxD,YAAcpxD,EAAEuxD,kBAiCxC,SAAmB/iE,EAASwR,GAC1B,IAAIyxD,EAAc,CAAE/yC,MAAO1e,EAAEywD,YACzBZ,EAAmB36D,KAAKyC,MAAMnJ,EAAQwrB,WAGxCy3C,EAAYlzC,KADVve,EAAEme,MAEFne,EAAE+wD,yBACFviE,EAAQwiE,WACRhxD,EAAE8vD,eACF9vD,EAAEiwD,aAEezhE,EAAQwiE,WAEzBhxD,EAAE0xD,wBACJD,EAAYryC,OAASpf,EAAE2xD,iBAAmB9B,EAE1C4B,EAAYvyC,IAAMlf,EAAE4xD,cAAgB/B,EAEtChlD,EAAI7K,EAAEowD,eAAgBqB,GAEtB,IAAII,EAAc,CAAE3yC,IAAK2wC,EAAkB/wC,OAAQ9e,EAAEoxD,aACjDpxD,EAAE8xD,uBAEFD,EAAYpzC,MADVze,EAAEme,MAEFne,EAAEiwD,cACDjwD,EAAE+wD,yBAA2BviE,EAAQwiE,YACtChxD,EAAE+xD,gBACF/xD,EAAEgyD,qBAEgBhyD,EAAE+xD,gBAAkBvjE,EAAQwiE,WAIhDa,EAAYtzC,KADVve,EAAEme,MAEFne,EAAE+wD,yBACFviE,EAAQwiE,WACW,EAAnBhxD,EAAE8vD,eACF9vD,EAAEiwD,aACFjwD,EAAEiyD,eACFjyD,EAAEgyD,qBAEehyD,EAAEiyD,eAAiBzjE,EAAQwiE,WAGlDnmD,EAAI7K,EAAEswD,eAAgBuB,GAEtBhnD,EAAI7K,EAAEkyD,WAAY,CAChB3zC,KAAMve,EAAE8wD,eACRpyC,MAAO1e,EAAE4wD,gBAAkB5wD,EAAEmyD,mBAE/BtnD,EAAI7K,EAAEoyD,WAAY,CAChBlzC,IAAKlf,EAAEwxD,cACP1yC,OAAQ9e,EAAEuxD,iBAAmBvxD,EAAEqyD,mBApDnC,CA9BY7jE,EAASwR,GAEfA,EAAEwwD,iBACJhiE,EAAQqP,UAAUC,IAAIsuD,EAAIxqD,MAAMu2C,OAAO,OAEvC3pD,EAAQqP,UAAUkuD,OAAOK,EAAIxqD,MAAMu2C,OAAO,MAC1Cn4C,EAAE4wD,gBAAkB,EACpB5wD,EAAE8wD,eAAiB,EACnBtiE,EAAQwiE,WAAa,GAEnBhxD,EAAEmxD,iBACJ3iE,EAAQqP,UAAUC,IAAIsuD,EAAIxqD,MAAMu2C,OAAO,OAEvC3pD,EAAQqP,UAAUkuD,OAAOK,EAAIxqD,MAAMu2C,OAAO,MAC1Cn4C,EAAEuxD,iBAAmB,EACrBvxD,EAAEwxD,cAAgB,EAClBhjE,EAAQwrB,UAAY,IAIxB,SAAS62C,EAAa7wD,EAAGsyD,GAOvB,OANItyD,EAAEgtD,SAASuF,qBACbD,EAAYp9D,KAAKC,IAAIm9D,EAAWtyD,EAAEgtD,SAASuF,qBAEzCvyD,EAAEgtD,SAASwF,qBACbF,EAAYp9D,KAAKE,IAAIk9D,EAAWtyD,EAAEgtD,SAASwF,qBAEtCF,EAgHT,SAASG,EACPzyD,EACA2uD,GAEA,IAAIE,EAAkBF,EAAI,GACtBC,EAAgBD,EAAI,GACpB+D,EAAQ/D,EAAI,GACZyC,EAAczC,EAAI,GAElB4C,EAAmB5C,EAAI,GACvB30C,EAAY20C,EAAI,GAChBhyC,EAAIgyC,EAAI,GACR2B,EAAiB3B,EAAI,GAErBngE,EAAUwR,EAAExR,QAEZmkE,EAAoB,KACpBC,EAAqB,KACrBC,EAAW,KAEf,SAASC,EAAiB1hD,GACxB5iB,EAAQwrB,GACN24C,EAAoBE,GAAYzhD,EAAEshD,GAASE,GAC7ChG,EAAkB5sD,EAAG2c,GACrBizC,EAAe5vD,GAEfoR,EAAE/I,kBACF+I,EAAEkH,iBAGJ,SAASy6C,IACPjG,EAAqB9sD,EAAG2c,GACxB3c,EAAEswD,GAAgBzyD,UAAUkuD,OAAOK,EAAIxqD,MAAM6qD,UAC7CzsD,EAAEoI,MAAMmlD,OAAOvtD,EAAEgzD,cAAe,YAAaF,GAG/C9yD,EAAEoI,MAAMha,KAAK4R,EA5BI2uD,EAAI,IA4BO,YAAa,SAAUv9C,GACjDuhD,EAAoBnkE,EAAQwrB,GAC5B44C,EAAqBxhD,EAAEshD,GACvBG,GACG7yD,EAAE4uD,GAAiB5uD,EAAE6uD,KACrB7uD,EAAEoxD,GAAepxD,EAAEuxD,IAEtBvxD,EAAEoI,MAAMha,KAAK4R,EAAEgzD,cAAe,YAAaF,GAC3C9yD,EAAEoI,MAAMgmD,KAAKpuD,EAAEgzD,cAAe,UAAWD,GAEzC/yD,EAAEswD,GAAgBzyD,UAAUC,IAAIsuD,EAAIxqD,MAAM6qD,UAE1Cr7C,EAAE/I,kBACF+I,EAAEkH,mBAIN,IA4gBI60C,EAAW,CACb8F,aAvnBc,SAAAC,EAASlzD,GACvBA,EAAEoI,MAAMha,KAAK4R,EAAEoyD,WAAY,YAAa,SAAUhhD,GAAK,OAAOA,EAAE/I,oBAChErI,EAAEoI,MAAMha,KAAK4R,EAAEswD,eAAgB,YAAa,SAAUl/C,GACpD,IAAI+hD,EACF/hD,EAAEshD,MACF5E,OAAOsF,YACPpzD,EAAEswD,eAAep6C,wBAAwBgJ,IAG3Clf,EAAExR,QAAQwrB,YAFMm5C,EAAcnzD,EAAEwxD,cAAgB,GAAK,GAElBxxD,EAAE6uD,gBACrCe,EAAe5vD,GAEfoR,EAAE/I,oBAGJrI,EAAEoI,MAAMha,KAAK4R,EAAEkyD,WAAY,YAAa,SAAU9gD,GAAK,OAAOA,EAAE/I,oBAChErI,EAAEoI,MAAMha,KAAK4R,EAAEowD,eAAgB,YAAa,SAAUh/C,GACpD,IAAIiiD,EACFjiD,EAAEkiD,MACFxF,OAAOyF,YACPvzD,EAAEowD,eAAel6C,wBAAwBqI,KAG3Cve,EAAExR,QAAQwiE,aAFMqC,EAAerzD,EAAE8wD,eAAiB,GAAK,GAEnB9wD,EAAE8vD,eACtCF,EAAe5vD,GAEfoR,EAAE/I,qBA8lBJmrD,aA1lBc,SAAAC,EAASzzD,GACvByyD,EAAuBzyD,EAAG,CACxB,iBACA,eACA,QACA,aACA,aACA,kBACA,aACA,IACA,mBACFyyD,EAAuBzyD,EAAG,CACxB,kBACA,gBACA,QACA,cACA,aACA,mBACA,YACA,IACA,oBAukBF0zD,SA/gBa,SAAAA,EAAS1zD,GACtB,IAAIxR,EAAUwR,EAAExR,QAkChBwR,EAAEoI,MAAMha,KAAK4R,EAAEgzD,cAAe,UAAW,SAAU5hD,GACjD,KACGA,EAAEuiD,oBAAsBviD,EAAEuiD,sBAC3BviD,EAAEwiD,oBAnCoClI,EAAQl9D,EAAS,WACfk9D,EAAQ1rD,EAAEkyD,WAAY,WAAaxG,EAAQ1rD,EAAEoyD,WAAY,WAuCnG,CAIA,IAvVgB/B,EAuVZhwB,EAAgB3iC,SAAS2iC,cACzB3iC,SAAS2iC,cACTrgC,EAAEgzD,cAAc3yB,cACpB,GAAIA,EAAe,CACjB,GAA8B,WAA1BA,EAAcwzB,QAChBxzB,EAAgBA,EAAcyzB,gBAAgBzzB,mBAG9C,KAAOA,EAAc0zB,YAArB,CACE1zB,EAAgBA,EAAc0zB,WAAW1zB,cAG7C,GAjWFqrB,EAFgB2E,EAmWChwB,EAjWL,4BACZqrB,EAAQ2E,EAAI,6BACZ3E,EAAQ2E,EAAI,+BACZ3E,EAAQ2E,EAAI,4BA+VR,OAIJ,IAAI2D,EAAS,EACTC,EAAS,EAEb,OAAQ7iD,EAAE8iD,OACR,KAAK,GAEDF,EADE5iD,EAAE+iD,SACMn0D,EAAEiwD,aACH7+C,EAAEiH,QACDrY,EAAE8vD,gBAEF,GAEZ,MACF,KAAK,GAEDmE,EADE7iD,EAAE+iD,QACKn0D,EAAE4uD,cACFx9C,EAAEiH,OACFrY,EAAE6uD,gBAEF,GAEX,MACF,KAAK,GAEDmF,EADE5iD,EAAE+iD,QACKn0D,EAAEiwD,aACF7+C,EAAEiH,OACFrY,EAAE8vD,eAEF,GAEX,MACF,KAAK,GAEDmE,EADE7iD,EAAE+iD,SACMn0D,EAAE4uD,cACHx9C,EAAEiH,QACDrY,EAAE6uD,iBAEF,GAEZ,MACF,KAAK,GAEDoF,EADE7iD,EAAEiI,SACKrZ,EAAE6uD,iBAED7uD,EAAE6uD,gBAEd,MACF,KAAK,GACHoF,EAASj0D,EAAE6uD,gBACX,MACF,KAAK,GACHoF,GAAUj0D,EAAE6uD,gBACZ,MACF,KAAK,GACHoF,EAASj0D,EAAE4uD,cACX,MACF,KAAK,GACHqF,GAAUj0D,EAAE4uD,cACZ,MACF,QACE,OAGA5uD,EAAEgtD,SAAS7qD,iBAA8B,IAAX6xD,GAG9Bh0D,EAAEgtD,SAASiE,iBAA8B,IAAXgD,IAIlCzlE,EAAQwrB,WAAai6C,EACrBzlE,EAAQwiE,YAAcgD,EACtBpE,EAAe5vD,GAlIjB,SAA8Bg0D,EAAQC,GACpC,IAAIj6C,EAAY9kB,KAAKyC,MAAMnJ,EAAQwrB,WACnC,GAAe,IAAXg6C,EAAc,CAChB,IAAKh0D,EAAEmxD,iBACL,OAAO,EAET,GACiB,IAAdn3C,GAAmBi6C,EAAS,GAC5Bj6C,GAAaha,EAAE4uD,cAAgB5uD,EAAE6uD,iBAAmBoF,EAAS,EAE9D,OAAQj0D,EAAEgtD,SAAS5qD,iBAIvB,IAAI4uD,EAAaxiE,EAAQwiE,WACzB,GAAe,IAAXiD,EAAc,CAChB,IAAKj0D,EAAEwwD,iBACL,OAAO,EAET,GACkB,IAAfQ,GAAoBgD,EAAS,GAC7BhD,GAAchxD,EAAEiwD,aAAejwD,EAAE8vD,gBAAkBkE,EAAS,EAE7D,OAAQh0D,EAAEgtD,SAAS5qD,iBAGvB,OAAO,EA1BT,CAoI2B4xD,EAAQC,IAC/B7iD,EAAEkH,sBAqYN87C,MAhYU,SAAAA,EAASp0D,GACnB,IAAIxR,EAAUwR,EAAExR,QAsGhB,SAAS6lE,EAAkBjjD,GACzB,IAAIu9C,EAhFN,SAA2Bv9C,GACzB,IAAI4iD,EAAS5iD,EAAE4iD,OACXC,GAAU,EAAI7iD,EAAE6iD,OAoBpB,YAlBsB,IAAXD,QAA4C,IAAXC,IAE1CD,GAAU,EAAI5iD,EAAEkjD,YAAc,EAC9BL,EAAS7iD,EAAEmjD,YAAc,GAGvBnjD,EAAEojD,WAA6B,IAAhBpjD,EAAEojD,YAEnBR,GAAU,GACVC,GAAU,IAGRD,GAAWA,GAAUC,GAAWA,IAElCD,EAAS,EACTC,EAAS7iD,EAAEqjD,YAGTrjD,EAAEiI,SAEG,EAAE46C,GAASD,GAEb,CAACA,EAAQC,GA1BlB,CAgF8B7iD,GACxB4iD,EAASrF,EAAI,GACbsF,EAAStF,EAAI,GAEjB,IAvDF,SAAiC9/D,EAAQmlE,EAAQC,GAE/C,IAAK9E,EAAIC,UAAY5gE,EAAQ6P,cAAc,gBACzC,OAAO,EAGT,IAAK7P,EAAQ84D,SAASz4D,GACpB,OAAO,EAKT,IAFA,IAAIm4C,EAASn4C,EAENm4C,GAAUA,IAAWx4C,GAAS,CACnC,GAAIw4C,EAAOnpC,UAAUypD,SAAS8E,EAAI59D,QAAQg+D,WACxC,OAAO,EAGT,IAAIj1C,EAAQlX,EAAI2mC,GAMhB,GALe,CAACzvB,EAAMm9C,SAAUn9C,EAAMo9C,UAAWp9C,EAAMq9C,WAAWt4C,KAChE,IAIWuO,MAAM,iBAAkB,CACnC,IAAIgqC,EAAe7tB,EAAOmpB,aAAenpB,EAAOgpB,aAChD,GAAI6E,EAAe,KAEQ,IAArB7tB,EAAOhtB,WAAmBi6C,EAAS,GACnCjtB,EAAOhtB,YAAc66C,GAAgBZ,EAAS,GAEhD,OAAO,EAGX,IAAIa,EAAgB9tB,EAAOkpB,YAAclpB,EAAO+oB,YAChD,GAAI+E,EAAgB,KAEQ,IAAtB9tB,EAAOgqB,YAAoBgD,EAAS,GACpChtB,EAAOgqB,aAAe8D,GAAiBd,EAAS,GAElD,OAAO,EAKbhtB,EAASA,EAAO8I,WAGlB,OAAO,EA/CT,CAuD8B1+B,EAAEviB,OAAQmlE,EAAQC,GAA9C,CAIA,IAAIc,GAAgB,EACf/0D,EAAEgtD,SAASgI,iBAKLh1D,EAAEmxD,mBAAqBnxD,EAAEwwD,kBAG9ByD,EACFzlE,EAAQwrB,WAAai6C,EAASj0D,EAAEgtD,SAASiI,WAEzCzmE,EAAQwrB,WAAag6C,EAASh0D,EAAEgtD,SAASiI,WAE3CF,GAAgB,GACP/0D,EAAEwwD,mBAAqBxwD,EAAEmxD,mBAG9B6C,EACFxlE,EAAQwiE,YAAcgD,EAASh0D,EAAEgtD,SAASiI,WAE1CzmE,EAAQwiE,YAAciD,EAASj0D,EAAEgtD,SAASiI,WAE5CF,GAAgB,IAnBhBvmE,EAAQwrB,WAAai6C,EAASj0D,EAAEgtD,SAASiI,WACzCzmE,EAAQwiE,YAAcgD,EAASh0D,EAAEgtD,SAASiI,YAqB5CrF,EAAe5vD,IAEf+0D,EAAgBA,GAzIlB,SAA8Bf,EAAQC,GACpC,IAAIpE,EAAmB36D,KAAKyC,MAAMnJ,EAAQwrB,WACtCk7C,EAA8B,IAAtB1mE,EAAQwrB,UAChBm7C,EACFtF,EAAmBrhE,EAAQ4mE,eAAiB5mE,EAAQ2hE,aAClDkF,EAAgC,IAAvB7mE,EAAQwiE,WACjBsE,EACF9mE,EAAQwiE,WAAaxiE,EAAQ0rB,cAAgB1rB,EAAQ0hE,YAWvD,QANIh7D,KAAKoqB,IAAI20C,GAAU/+D,KAAKoqB,IAAI00C,GAClBkB,GAASC,EAETE,GAAUC,KAGJt1D,EAAEgtD,SAAS5qD,iBAlBjC,CAyIwD4xD,EAAQC,MACxC7iD,EAAE2H,UACtB3H,EAAE/I,kBACF+I,EAAEkH,wBAIwB,IAAnBw1C,OAAOyH,QAChBv1D,EAAEoI,MAAMha,KAAKI,EAAS,QAAS6lE,QACS,IAAxBvG,OAAO0H,cACvBx1D,EAAEoI,MAAMha,KAAKI,EAAS,aAAc6lE,IA2OtCoB,MAvOU,SAAAA,EAASz1D,GACnB,GAAKmvD,EAAIG,eAAkBH,EAAIK,kBAA/B,CAIA,IAAIhhE,EAAUwR,EAAExR,QAuCZknE,EAAc,GACdC,EAAY,EACZC,EAAQ,GACRC,EAAa,KAmJb1G,EAAIG,eACNtvD,EAAEoI,MAAMha,KAAKI,EAAS,aAAcsnE,GACpC91D,EAAEoI,MAAMha,KAAKI,EAAS,YAAaunE,GACnC/1D,EAAEoI,MAAMha,KAAKI,EAAS,WAAYwnE,IACzB7G,EAAIK,oBACT1B,OAAOmI,cACTj2D,EAAEoI,MAAMha,KAAKI,EAAS,cAAesnE,GACrC91D,EAAEoI,MAAMha,KAAKI,EAAS,cAAeunE,GACrC/1D,EAAEoI,MAAMha,KAAKI,EAAS,YAAawnE,IAC1BlI,OAAOoI,iBAChBl2D,EAAEoI,MAAMha,KAAKI,EAAS,gBAAiBsnE,GACvC91D,EAAEoI,MAAMha,KAAKI,EAAS,gBAAiBunE,GACvC/1D,EAAEoI,MAAMha,KAAKI,EAAS,cAAewnE,KAzKzC,SAASG,EAAeC,EAAaC,GACnC7nE,EAAQwrB,WAAaq8C,EACrB7nE,EAAQwiE,YAAcoF,EAEtBxG,EAAe5vD,GAQjB,SAASs2D,EAASllD,GAChB,OAAIA,EAAEmlD,cACGnlD,EAAEmlD,cAAc,GAGhBnlD,EAIX,SAASolD,EAAaplD,GACpB,QAAIA,EAAEqlD,aAAiC,QAAlBrlD,EAAEqlD,aAAuC,IAAdrlD,EAAEslD,WAG9CtlD,EAAEmlD,eAA4C,IAA3BnlD,EAAEmlD,cAAcjjE,WAIrC8d,EAAEqlD,aACgB,UAAlBrlD,EAAEqlD,aACFrlD,EAAEqlD,cAAgBrlD,EAAEulD,uBAOxB,SAASb,EAAW1kD,GAClB,GAAKolD,EAAaplD,GAAlB,CAIA,IAAIqkD,EAAQa,EAASllD,GAErBskD,EAAYpC,MAAQmC,EAAMnC,MAC1BoC,EAAYhD,MAAQ+C,EAAM/C,MAE1BiD,GAAY,IAAIhqD,MAAO6Y,UAEJ,OAAfqxC,GACFe,cAAcf,IAiDlB,SAASE,EAAU3kD,GACjB,GAAIolD,EAAaplD,GAAI,CACnB,IAAIqkD,EAAQa,EAASllD,GAEjBylD,EAAgB,CAAEvD,MAAOmC,EAAMnC,MAAOZ,MAAO+C,EAAM/C,OAEnD0D,EAAcS,EAAcvD,MAAQoC,EAAYpC,MAChD+C,EAAcQ,EAAcnE,MAAQgD,EAAYhD,MAEpD,GAtDJ,SAAiC7jE,EAAQmlE,EAAQC,GAC/C,IAAKzlE,EAAQ84D,SAASz4D,GACpB,OAAO,EAKT,IAFA,IAAIm4C,EAASn4C,EAENm4C,GAAUA,IAAWx4C,GAAS,CACnC,GAAIw4C,EAAOnpC,UAAUypD,SAAS8E,EAAI59D,QAAQg+D,WACxC,OAAO,EAGT,IAAIj1C,EAAQlX,EAAI2mC,GAMhB,GALe,CAACzvB,EAAMm9C,SAAUn9C,EAAMo9C,UAAWp9C,EAAMq9C,WAAWt4C,KAChE,IAIWuO,MAAM,iBAAkB,CACnC,IAAIgqC,EAAe7tB,EAAOmpB,aAAenpB,EAAOgpB,aAChD,GAAI6E,EAAe,KAEQ,IAArB7tB,EAAOhtB,WAAmBi6C,EAAS,GACnCjtB,EAAOhtB,YAAc66C,GAAgBZ,EAAS,GAEhD,OAAO,EAGX,IAAIa,EAAgB9tB,EAAOgqB,WAAahqB,EAAO+oB,YAC/C,GAAI+E,EAAgB,KAEQ,IAAtB9tB,EAAOgqB,YAAoBgD,EAAS,GACpChtB,EAAOgqB,aAAe8D,GAAiBd,EAAS,GAElD,OAAO,EAKbhtB,EAASA,EAAO8I,WAGlB,OAAO,EA1CT,CAsDgC1+B,EAAEviB,OAAQunE,EAAaC,GACjD,OAGFF,EAAeC,EAAaC,GAC5BX,EAAcmB,EAEd,IAAIC,GAAc,IAAInrD,MAAO6Y,UAEzBuyC,EAAUD,EAAcnB,EACxBoB,EAAU,IACZnB,EAAM7sD,EAAIqtD,EAAcW,EACxBnB,EAAMj5C,EAAI05C,EAAcU,EACxBpB,EAAYmB,GAxJlB,SAAuB9C,EAAQC,GAC7B,IAAIj6C,EAAY9kB,KAAKyC,MAAMnJ,EAAQwrB,WAC/Bg3C,EAAaxiE,EAAQwiE,WACrBgG,EAAa9hE,KAAKoqB,IAAI00C,GACtBiD,EAAa/hE,KAAKoqB,IAAI20C,GAE1B,GAAIgD,EAAaD,EAAAA,CAGf,GACG/C,EAAS,GAAKj6C,IAAcha,EAAE4uD,cAAgB5uD,EAAE6uD,iBAChDoF,EAAS,GAAmB,IAAdj6C,EAGf,OAA0B,IAAnB8zC,OAAOoJ,SAAiBjD,EAAS,GAAK9E,EAAIO,cAE9C,GAAIsH,EAAaC,IAInBjD,EAAS,GAAKhD,IAAehxD,EAAEiwD,aAAejwD,EAAE8vD,gBAChDkE,EAAS,GAAoB,IAAfhD,GAEf,OAAO,EAIX,OAAO,EA3BT,CA2JsBoF,EAAaC,IAC7BjlD,EAAEkH,kBAIR,SAAS09C,IACHh2D,EAAEgtD,SAASmK,cACbP,cAAcf,GACdA,EAAauB,YAAY,WACnBp3D,EAAEq3D,cACJT,cAAcf,GAIXD,EAAM7sD,GAAM6sD,EAAMj5C,EAKnBznB,KAAKoqB,IAAIs2C,EAAM7sD,GAAK,KAAQ7T,KAAKoqB,IAAIs2C,EAAMj5C,GAAK,IAClDi6C,cAAcf,IAIhBM,EAAyB,GAAVP,EAAM7sD,EAAkB,GAAV6sD,EAAMj5C,GAEnCi5C,EAAM7sD,GAAK,GACX6sD,EAAMj5C,GAAK,IAZTi6C,cAAcf,IAaf,QA4CLyB,EAAmB,SAAnBA,EAA6C9oE,EAAS+oE,GACxD,IAAI/J,EAAS7/D,KAOb,QANsB,IAAjB4pE,IAA0BA,EAAe,IAEvB,iBAAZ/oE,IACTA,EAAUkP,SAASW,cAAc7P,KAG9BA,IAAYA,EAAQw0B,SACvB,MAAM,IAAIlmB,MAAM,0DAQlB,IAAK,IAAIQ,KALT3P,KAAKa,QAAUA,EAEfA,EAAQqP,UAAUC,IAAIsuD,EAAIC,MAE1B1+D,KAAKq/D,SAvCoC,CACzCG,SAAU,CAAC,aAAc,aAAc,WAAY,QAAS,SAC5DqF,mBAAoB,KACpBD,mBAAoB,KACpBtF,mBAAoB,IACpBsD,oBAAqB,EACrBW,oBAAqB,EACrB/uD,iBAAiB,EACjB8uD,iBAAiB,EACjBkG,aAAa,EACbnC,kBAAkB,EAClB5yD,kBAAkB,EAClB6yD,WAAY,GA4BIsC,EAAhB,CACE/J,EAAOR,SAAS1vD,GAAOi6D,EAAaj6D,GAGtC3P,KAAKmiE,eAAiB,KACtBniE,KAAKkhE,gBAAkB,KACvBlhE,KAAKsiE,aAAe,KACpBtiE,KAAKihE,cAAgB,KAErB,IAMMnoD,EADA+wD,EALFj8C,EAAQ,SAARA,IAAsB,OAAO/sB,EAAQqP,UAAUC,IAAIsuD,EAAIxqD,MAAM2Z,QAC7DgqB,EAAO,SAAPA,IAAqB,OAAO/2C,EAAQqP,UAAUkuD,OAAOK,EAAIxqD,MAAM2Z,QAEnE5tB,KAAKwwB,MAAmC,QAA3B9d,EAAI7R,GAASyyC,UAC1BtzC,KAAK8pE,kBACCD,EAAqBhpE,EAAQwiE,WAEjCxiE,EAAQwiE,YAAc,EACtBvqD,EAASjY,EAAQwiE,WAAa,EAC9BxiE,EAAQwiE,WAAawG,EACd/wD,GAET9Y,KAAKojE,yBAA2BpjE,KAAK8pE,iBACjCjpE,EAAQ0hE,YAAc1hE,EAAQuhE,YAC9B,EACJpiE,KAAKya,MAAQ,IAAIulD,EACjBhgE,KAAKqlE,cAAgBxkE,EAAQwkE,eAAiBt1D,SAE9C/P,KAAKyiE,eAAiB7E,EAAIa,EAAI59D,QAAQ+9D,KAAK,MAC3C/9D,EAAQyP,YAAYtQ,KAAKyiE,gBACzBziE,KAAKukE,WAAa3G,EAAIa,EAAI59D,QAAQ89D,MAAM,MACxC3+D,KAAKyiE,eAAenyD,YAAYtQ,KAAKukE,YACrCvkE,KAAKukE,WAAWt0D,aAAa,WAAY,GACzCjQ,KAAKya,MAAMha,KAAKT,KAAKukE,WAAY,QAAS32C,GAC1C5tB,KAAKya,MAAMha,KAAKT,KAAKukE,WAAY,OAAQ3sB,GACzC53C,KAAK6iE,iBAAmB,KACxB7iE,KAAKijE,gBAAkB,KACvBjjE,KAAKmjE,eAAiB,KACtB,IAAI4G,EAAar3D,EAAI1S,KAAKyiE,gBAC1BziE,KAAKgkE,iBAAmBn8C,SAASkiD,EAAWt4C,OAAQ,IAChD0M,MAAMn+B,KAAKgkE,mBACbhkE,KAAK+jE,yBAA0B,EAC/B/jE,KAAKikE,cAAgB1C,EAAMwI,EAAWx4C,MAEtCvxB,KAAK+jE,yBAA0B,EAEjC/jE,KAAKwkE,iBACHjD,EAAMwI,EAAWC,iBAAmBzI,EAAMwI,EAAWE,kBAEvD/sD,EAAIld,KAAKyiE,eAAgB,CAAEntD,QAAS,UACpCtV,KAAK+iE,iBACHxB,EAAMwI,EAAWG,YAAc3I,EAAMwI,EAAWI,aAClDjtD,EAAIld,KAAKyiE,eAAgB,CAAEntD,QAAS,KACpCtV,KAAK8iE,WAAa,KAClB9iE,KAAKgjE,WAAa,KAElBhjE,KAAK2iE,eAAiB/E,EAAIa,EAAI59D,QAAQ+9D,KAAK,MAC3C/9D,EAAQyP,YAAYtQ,KAAK2iE,gBACzB3iE,KAAKykE,WAAa7G,EAAIa,EAAI59D,QAAQ89D,MAAM,MACxC3+D,KAAK2iE,eAAeryD,YAAYtQ,KAAKykE,YACrCzkE,KAAKykE,WAAWx0D,aAAa,WAAY,GACzCjQ,KAAKya,MAAMha,KAAKT,KAAKykE,WAAY,QAAS72C,GAC1C5tB,KAAKya,MAAMha,KAAKT,KAAKykE,WAAY,OAAQ7sB,GACzC53C,KAAKwjE,iBAAmB,KACxBxjE,KAAK4jE,iBAAmB,KACxB5jE,KAAK6jE,cAAgB,KACrB,IAAIuG,EAAa13D,EAAI1S,KAAK2iE,gBAC1B3iE,KAAKokE,gBAAkBv8C,SAASuiD,EAAWt5C,MAAO,IAC9CqN,MAAMn+B,KAAKokE,kBACbpkE,KAAKmkE,wBAAyB,EAC9BnkE,KAAKskE,eAAiB/C,EAAM6I,EAAWx5C,OAEvC5wB,KAAKmkE,wBAAyB,EAEhCnkE,KAAKqkE,qBAAuBrkE,KAAKwwB,MA74BnC,SAAoB3vB,GAClB,IAAIsL,EAASuG,EAAI7R,GACjB,OACE0gE,EAAMp1D,EAAO4kB,OACbwwC,EAAMp1D,EAAOk+D,aACb9I,EAAMp1D,EAAOm+D,cACb/I,EAAMp1D,EAAO69D,iBACbzI,EAAMp1D,EAAO89D,kBAPjB,CA64BsDjqE,KAAKykE,YAAc,KACvEzkE,KAAK0kE,iBACHnD,EAAM6I,EAAWG,gBAAkBhJ,EAAM6I,EAAWI,mBACtDttD,EAAIld,KAAK2iE,eAAgB,CAAErtD,QAAS,UACpCtV,KAAK0jE,kBACHnC,EAAM6I,EAAWK,WAAalJ,EAAM6I,EAAWM,cACjDxtD,EAAIld,KAAK2iE,eAAgB,CAAErtD,QAAS,KACpCtV,KAAKyjE,YAAc,KACnBzjE,KAAK2jE,WAAa,KAElB3jE,KAAKqhE,MAAQ,CACXjmD,EACEva,EAAQwiE,YAAc,EAClB,QACAxiE,EAAQwiE,YAAcrjE,KAAKsiE,aAAetiE,KAAKmiE,eAC7C,MACA,KACRnzC,EACEnuB,EAAQwrB,WAAa,EACjB,QACAxrB,EAAQwrB,WAAarsB,KAAKihE,cAAgBjhE,KAAKkhE,gBAC7C,MACA,MAGVlhE,KAAKo/D,SAAU,EAEfp/D,KAAKq/D,SAASG,SAASn+D,QAAQ,SAAUspE,GAAe,OAAOnL,EAASmL,GAAa9K,KAErF7/D,KAAK4qE,cAAgBrjE,KAAKyC,MAAMnJ,EAAQwrB,WACxCrsB,KAAK6qE,eAAiBhqE,EAAQwiE,WAC9BrjE,KAAKya,MAAMha,KAAKT,KAAKa,QAAS,SAAU,SAAU4iB,GAAK,OAAOo8C,EAAOiL,SAASrnD,KAC9Ew+C,EAAejiE,OAGjB2pE,EAAiBhpE,UAAU6W,OAAS,WAC7BxX,KAAKo/D,UAKVp/D,KAAKojE,yBAA2BpjE,KAAK8pE,iBACjC9pE,KAAKa,QAAQ0hE,YAAcviE,KAAKa,QAAQuhE,YACxC,EAGJllD,EAAIld,KAAKyiE,eAAgB,CAAEntD,QAAS,UACpC4H,EAAIld,KAAK2iE,eAAgB,CAAErtD,QAAS,UACpCtV,KAAK+iE,iBACHxB,EAAM7uD,EAAI1S,KAAKyiE,gBAAgByH,YAC/B3I,EAAM7uD,EAAI1S,KAAKyiE,gBAAgB0H,aACjCnqE,KAAK0jE,kBACHnC,EAAM7uD,EAAI1S,KAAK2iE,gBAAgB8H,WAC/BlJ,EAAM7uD,EAAI1S,KAAK2iE,gBAAgB+H,cAGjCxtD,EAAIld,KAAKyiE,eAAgB,CAAEntD,QAAS,SACpC4H,EAAIld,KAAK2iE,eAAgB,CAAErtD,QAAS,SAEpC2sD,EAAejiE,MAEf2gE,EAAkB3gE,KAAM,MAAO,GAAG,GAAO,GACzC2gE,EAAkB3gE,KAAM,OAAQ,GAAG,GAAO,GAE1Ckd,EAAIld,KAAKyiE,eAAgB,CAAEntD,QAAS,KACpC4H,EAAIld,KAAK2iE,eAAgB,CAAErtD,QAAS,OAGtCq0D,EAAiBhpE,UAAUmqE,SAAW,SAAmBrnD,GAClDzjB,KAAKo/D,UAIV6C,EAAejiE,MACf2gE,EAAkB3gE,KAAM,MAAOA,KAAKa,QAAQwrB,UAAYrsB,KAAK4qE,eAC7DjK,EACE3gE,KACA,OACAA,KAAKa,QAAQwiE,WAAarjE,KAAK6qE,gBAGjC7qE,KAAK4qE,cAAgBrjE,KAAKyC,MAAMhK,KAAKa,QAAQwrB,WAC7CrsB,KAAK6qE,eAAiB7qE,KAAKa,QAAQwiE,aAGrCsG,EAAiBhpE,UAAUskD,QAAU,WAC9BjlD,KAAKo/D,UAIVp/D,KAAKya,MAAMqlD,YACX1B,EAAOp+D,KAAKukE,YACZnG,EAAOp+D,KAAKykE,YACZrG,EAAOp+D,KAAKyiE,gBACZrE,EAAOp+D,KAAK2iE,gBACZ3iE,KAAK+qE,kBAGL/qE,KAAKa,QAAU,KACfb,KAAKukE,WAAa,KAClBvkE,KAAKykE,WAAa,KAClBzkE,KAAKyiE,eAAiB,KACtBziE,KAAK2iE,eAAiB,KAEtB3iE,KAAKo/D,SAAU,IAGjBuK,EAAiBhpE,UAAUoqE,gBAAkB,WAC3C/qE,KAAKa,QAAQ8lD,UAAY3mD,KAAKa,QAAQ8lD,UACnCD,MAAM,KACN3sC,OAAO,SAAUgG,GAAQ,OAAQA,EAAKmd,MAAM,mBAC5CvO,KAAK,MAGK,IAAAq8C,EAAArB,EC5xCXsB,EAAU,WACV,GAAmB,oBAAR5tB,IACP,OAAOA,IASX,SAAS6tB,EAASC,EAAKx7D,GACnB,IAAImJ,GAAU,EAQd,OAPAqyD,EAAI7/C,KAAK,SAAUrqB,EAAOkuB,GACtB,OAAIluB,EAAM,KAAO0O,IACbmJ,EAASqW,GACF,KAIRrW,EAEX,OAAsB,WAClB,SAASsyD,IACLprE,KAAKqrE,YAAc,GAuEvB,OArEArqE,OAAOsqE,eAAeF,EAAQzqE,UAAW,OAAQ,CAI7C+R,IAAK,SAAAA,IACD,OAAO1S,KAAKqrE,YAAY1lE,QAE5B4lE,YAAY,EACZ7L,cAAc,IAMlB0L,EAAQzqE,UAAU+R,IAAM,SAAU/C,GAC9B,IAAIwf,EAAQ+7C,EAASlrE,KAAKqrE,YAAa17D,GACnC1O,EAAQjB,KAAKqrE,YAAYl8C,GAC7B,OAAOluB,GAASA,EAAM,IAO1BmqE,EAAQzqE,UAAUuc,IAAM,SAAUvN,EAAK7K,GACnC,IAAIqqB,EAAQ+7C,EAASlrE,KAAKqrE,YAAa17D,IAClCwf,EACDnvB,KAAKqrE,YAAYl8C,GAAO,GAAKrqB,EAG7B9E,KAAKqrE,YAAYhhE,KAAK,CAACsF,EAAK7K,KAOpCsmE,EAAQzqE,UAARyqE,UAA2B,SAAUz7D,GACjC,IAAIvO,EAAUpB,KAAKqrE,YACfl8C,EAAQ+7C,EAAS9pE,EAASuO,IACzBwf,GACD/tB,EAAQq6C,OAAOtsB,EAAO,IAO9Bi8C,EAAQzqE,UAAUs6D,IAAM,SAAUtrD,GAC9B,SAAUu7D,EAASlrE,KAAKqrE,YAAa17D,IAKzCy7D,EAAQzqE,UAAU8Y,MAAQ,WACtBzZ,KAAKqrE,YAAY5vB,OAAO,IAO5B2vB,EAAQzqE,UAAUU,QAAU,SAAUmqE,EAAU3nE,QAChC,IAARA,IAAkBA,EAAM,MAC5B,IAAK,IAAI4nE,EAAK,EAAGC,EAAK1rE,KAAKqrE,YAAaI,EAAKC,EAAG/lE,OAAQ8lE,IAAM,CAC1D,IAAIxqE,EAAQyqE,EAAGD,GACfD,EAASn8D,KAAKxL,EAAK5C,EAAM,GAAIA,EAAM,MAGpCmqE,EAzEW,GAtBZ,GAsGVO,EAA8B,oBAAXxL,QAA8C,oBAAbpwD,UAA4BowD,OAAOpwD,WAAaA,SAGpG67D,EACsB,oBAAXC,QAA0BA,OAAOtkE,OAASA,KAC1CskE,OAES,oBAATC,MAAwBA,KAAKvkE,OAASA,KACtCukE,KAEW,oBAAX3L,QAA0BA,OAAO54D,OAASA,KAC1C44D,OAGJ4L,SAAAA,cAAAA,GASPC,EACqC,mBAA1BC,sBAIAA,sBAAsBxrE,KAAKmrE,GAE/B,SAAUJ,GAAY,OAAOp4B,WAAW,WAAc,OAAOo4B,EAASxtD,KAAKkuD,QAAW,IAAO,KAIpGC,EAAkB,EAiElBC,EAAgB,GAGhBC,EAAiB,CAAC,MAAO,QAAS,SAAU,OAAQ,QAAS,SAAU,OAAQ,UAE/EC,EAAwD,oBAArBC,iBAInCC,EAA0C,WAM1C,SAASA,IAMLxsE,KAAKysE,YAAa,EAMlBzsE,KAAK0sE,sBAAuB,EAM5B1sE,KAAK2sE,mBAAqB,KAM1B3sE,KAAK4sE,WAAa,GAClB5sE,KAAK6sE,iBAAmB7sE,KAAK6sE,iBAAiBpsE,KAAKT,MACnDA,KAAK8sE,QAjGb,SAAmBtB,EAAUuB,GACzB,IAAIC,GAAc,EAAOC,GAAe,EAAOC,EAAe,EAO9D,SAASC,IACDH,IACAA,GAAc,EACdxB,KAEAyB,GACAG,IAUR,SAASC,IACLrB,EAAwBmB,GAO5B,SAASC,IACL,IAAIE,EAAYtvD,KAAKkuD,MACrB,GAAIc,EAAa,CAEb,GAAIM,EAAYJ,EAAef,EAC3B,OAMJc,GAAe,OAGfD,GAAc,EACdC,GAAe,EACf75B,WAAWi6B,EAAiBN,GAEhCG,EAAeI,EAEnB,OAAOF,EApDX,CAiGgCptE,KAAK8sE,QAAQrsE,KAAKT,MAAOosE,GAgKrD,OAxJAI,EAAyB7rE,UAAU4sE,YAAc,SAAUjtE,IACjDN,KAAK4sE,WAAWxiE,QAAQ9J,IAC1BN,KAAK4sE,WAAWviE,KAAK/J,GAGpBN,KAAKysE,YACNzsE,KAAKwtE,YASbhB,EAAyB7rE,UAAU8sE,eAAiB,SAAUntE,GAC1D,IAAIotE,EAAY1tE,KAAK4sE,WACjBz9C,EAAQu+C,EAAUtjE,QAAQ9J,IAEzB6uB,GACDu+C,EAAUjyB,OAAOtsB,EAAO,IAGvBu+C,EAAU/nE,QAAU3F,KAAKysE,YAC1BzsE,KAAK2tE,eASbnB,EAAyB7rE,UAAUmsE,QAAU,WACnB9sE,KAAK4tE,oBAIvB5tE,KAAK8sE,WAWbN,EAAyB7rE,UAAUitE,iBAAmB,WAElD,IAAIC,EAAkB7tE,KAAK4sE,WAAW7yD,OAAO,SAAUzZ,GACnD,OAAOA,EAASwtE,eAAgBxtE,EAASytE,cAQ7C,OADAF,EAAgBxsE,QAAQ,SAAUf,GAAY,OAAOA,EAAS0tE,oBACvDH,EAAgBloE,OAAS,GAQpC6mE,EAAyB7rE,UAAU6sE,SAAW,WAGrC7B,IAAa3rE,KAAKysE,aAMvB18D,SAASm4C,iBAAiB,gBAAiBloD,KAAK6sE,kBAChD1M,OAAOjY,iBAAiB,SAAUloD,KAAK8sE,SACnCR,GACAtsE,KAAK2sE,mBAAqB,IAAIJ,iBAAiBvsE,KAAK8sE,SACpD9sE,KAAK2sE,mBAAmB/rE,QAAQmP,SAAU,CACtCk+D,YAAY,EACZC,WAAW,EACXC,eAAe,EACfC,SAAS,MAIbr+D,SAASm4C,iBAAiB,qBAAsBloD,KAAK8sE,SACrD9sE,KAAK0sE,sBAAuB,GAEhC1sE,KAAKysE,YAAa,IAQtBD,EAAyB7rE,UAAUgtE,YAAc,WAGxChC,GAAc3rE,KAAKysE,aAGxB18D,SAASu4C,oBAAoB,gBAAiBtoD,KAAK6sE,kBACnD1M,OAAO7X,oBAAoB,SAAUtoD,KAAK8sE,SACtC9sE,KAAK2sE,oBACL3sE,KAAK2sE,mBAAmB0B,aAExBruE,KAAK0sE,sBACL38D,SAASu4C,oBAAoB,qBAAsBtoD,KAAK8sE,SAE5D9sE,KAAK2sE,mBAAqB,KAC1B3sE,KAAK0sE,sBAAuB,EAC5B1sE,KAAKysE,YAAa,IAStBD,EAAyB7rE,UAAUksE,iBAAmB,SAAUnB,GAC5D,IAAI4C,EAAK5C,EAAG6C,aAAcA,OAAsB,IAAPD,EAAgB,GAAKA,EAEvCjC,EAAe/gD,KAAK,SAAU3b,GACjD,SAAU4+D,EAAankE,QAAQuF,MAG/B3P,KAAK8sE,WAQbN,EAAyBgC,YAAc,WAInC,OAHKxuE,KAAKyuE,YACNzuE,KAAKyuE,UAAY,IAAIjC,GAElBxsE,KAAKyuE,WAOhBjC,EAAyBiC,UAAY,KAC9BjC,EAhMmC,GA0M1CkC,EAAqB,SAArBA,EAAgCxtE,EAAQytE,GACxC,IAAK,IAAIlD,EAAK,EAAGC,EAAK1qE,OAAO4e,KAAK+uD,GAAQlD,EAAKC,EAAG/lE,OAAQ8lE,IAAM,CAC5D,IAAI97D,EAAM+7D,EAAGD,GACbzqE,OAAOsqE,eAAepqE,EAAQyO,EAAK,CAC/B7K,MAAO6pE,EAAMh/D,GACb47D,YAAY,EACZqD,UAAU,EACVlP,cAAc,IAGtB,OAAOx+D,GASP2tE,EAAc,SAAdA,EAAyB3tE,GAOzB,OAHkBA,GAAUA,EAAOmkE,eAAiBnkE,EAAOmkE,cAAcyJ,aAGnDlD,GAItBmD,EAAYC,EAAe,EAAG,EAAG,EAAG,GAOxC,SAASC,EAAQnqE,GACb,OAAO0zD,WAAW1zD,IAAU,EAShC,SAASoqE,EAAe/iE,GAEpB,IADA,IAAIkpD,EAAY,GACPoW,EAAK,EAAGA,EAAKv2C,UAAUvvB,OAAQ8lE,IAAxC,CACIpW,EAAUoW,EAAK,GAAKv2C,UAAUu2C,GAElC,OAAOpW,EAAU51C,OAAO,SAAU0vD,EAAM16B,GAEpC,OAAO06B,EAAOF,EADF9iE,EAAO,UAAYsoC,EAAW,YAE3C,GA0GP,IAAI26B,EAGkC,oBAAvBC,mBACA,SAAUnuE,GAAU,OAAOA,aAAkB2tE,EAAY3tE,GAAQmuE,oBAKrE,SAAUnuE,GAAU,OAAQA,aAAkB2tE,EAAY3tE,GAAQouE,YAC3C,mBAAnBpuE,EAAOquE,SA0DtB,SAASP,EAAe5zD,EAAG4T,EAAG+B,EAAOI,GACjC,MAAO,CAAE/V,EAAGA,EAAG4T,EAAGA,EAAG+B,MAAOA,EAAOI,OAAQA,GAO/C,IAAIq+C,EAAmC,WAMnC,SAASA,EAAkBtuE,GAMvBlB,KAAKyvE,eAAiB,EAMtBzvE,KAAK0vE,gBAAkB,EAMvB1vE,KAAK2vE,aAAeX,EAAe,EAAG,EAAG,EAAG,GAC5ChvE,KAAKkB,OAASA,EA0BlB,OAlBAsuE,EAAkB7uE,UAAUivE,SAAW,WACnC,IAnFgB1uE,EAmFZ2uE,GAnFY3uE,EAmFUlB,KAAKkB,OAlF9ByqE,EAGDyD,EAAqBluE,GAhH7B,SAA2BA,GACvB,IAAI4uE,EAAO5uE,EAAOquE,UAClB,OAAOP,EAAe,EAAG,EAAGc,EAAK/+C,MAAO++C,EAAK3+C,QAFjD,CAiHiCjwB,GAvGjC,SAAmCA,GAG/B,IAAIkhE,EAAclhE,EAAOkhE,YAAaC,EAAenhE,EAAOmhE,aAS5D,IAAKD,IAAgBC,EACjB,OAAO0M,EAEX,IAAI5iE,EAAS0iE,EAAY3tE,GAAQkoB,iBAAiBloB,GAC9C6uE,EA3CR,SAAqB5jE,GAGjB,IAFA,IACI4jE,EAAW,GACNtE,EAAK,EAAGuE,EAFD,CAAC,MAAO,QAAS,SAAU,QAEDvE,EAAKuE,EAAYrqE,OAAQ8lE,IAAM,CACrE,IAAIh3B,EAAWu7B,EAAYvE,GAE3BsE,EAASt7B,GAAYw6B,EADT9iE,EAAO,WAAasoC,IAGpC,OAAOs7B,EARX,CA2C+B5jE,GACvB8jE,EAAWF,EAASn/C,KAAOm/C,EAASj/C,MACpCo/C,EAAUH,EAASx+C,IAAMw+C,EAASt+C,OAKlCV,EAAQk+C,EAAQ9iE,EAAO4kB,OAAQI,EAAS89C,EAAQ9iE,EAAOglB,QAqB3D,GAlByB,eAArBhlB,EAAOgkE,YAOH5oE,KAAKypB,MAAMD,EAAQk/C,KAAc7N,IACjCrxC,GAASm+C,EAAe/iE,EAAQ,OAAQ,SAAW8jE,GAEnD1oE,KAAKypB,MAAMG,EAAS++C,KAAa7N,IACjClxC,GAAU+9C,EAAe/iE,EAAQ,MAAO,UAAY+jE,KAoDhE,SAA2BhvE,GACvB,OAAOA,IAAW2tE,EAAY3tE,GAAQ6O,SAAS2xD,gBADnD,CA7C2BxgE,GAAS,CAK5B,IAAIkvE,EAAgB7oE,KAAKypB,MAAMD,EAAQk/C,GAAY7N,EAC/CiO,EAAiB9oE,KAAKypB,MAAMG,EAAS++C,GAAW7N,EAMpB,IAA5B96D,KAAKoqB,IAAIy+C,KACTr/C,GAASq/C,GAEoB,IAA7B7oE,KAAKoqB,IAAI0+C,KACTl/C,GAAUk/C,GAGlB,OAAOrB,EAAee,EAASn/C,KAAMm/C,EAASx+C,IAAKR,EAAOI,GA/D9D,CAyGqCjwB,GALtB6tE,GAmFP,OADA/uE,KAAK2vE,aAAeE,EACZA,EAAK9+C,QAAU/wB,KAAKyvE,gBACxBI,EAAK1+C,SAAWnxB,KAAK0vE,iBAQ7BF,EAAkB7uE,UAAU2vE,cAAgB,WACxC,IAAIT,EAAO7vE,KAAK2vE,aAGhB,OAFA3vE,KAAKyvE,eAAiBI,EAAK9+C,MAC3B/wB,KAAK0vE,gBAAkBG,EAAK1+C,OACrB0+C,GAEJL,EAnD4B,GAsDnCe,GAOA,SAPAA,EAO6BrvE,EAAQsvE,GACjC,IA/FoB9E,EACpBtwD,EAAU4T,EAAU+B,EAAkBI,EAEtCs/C,EACAZ,EA2FIa,GA9FJt1D,GADoBswD,EA+FiB8E,GA9F9Bp1D,EAAG4T,EAAI08C,EAAG18C,EAAG+B,EAAQ26C,EAAG36C,MAAOI,EAASu6C,EAAGv6C,OAElDs/C,EAAoC,oBAApBE,gBAAkCA,gBAAkB3vE,OACpE6uE,EAAO7uE,OAAOqzC,OAAOo8B,EAAO9vE,WAEhC+tE,EAAmBmB,EAAM,CACrBz0D,EAAGA,EAAG4T,EAAGA,EAAG+B,MAAOA,EAAOI,OAAQA,EAClCI,IAAKvC,EACL8B,MAAO1V,EAAI2V,EACXU,OAAQN,EAASnC,EACjB4B,KAAMxV,IAEHy0D,GAyFHnB,EAAmB1uE,KAAM,CAAEkB,OAAQA,EAAQwvE,YAAaA,KAK5DE,GAAmC,WAWnC,SAASA,EAAkBpF,EAAUqF,EAAYC,GAc7C,GAPA9wE,KAAK+wE,oBAAsB,GAM3B/wE,KAAKgxE,cAAgB,IAAI/F,EACD,mBAAbO,EACP,MAAM,IAAI90C,UAAU,2DAExB12B,KAAKixE,UAAYzF,EACjBxrE,KAAKkxE,YAAcL,EACnB7wE,KAAKmxE,aAAeL,EAoHxB,OA5GAF,EAAkBjwE,UAAUC,QAAU,SAAUM,GAC5C,IAAKg0B,UAAUvvB,OACX,MAAM,IAAI+wB,UAAU,4CAGxB,GAAuB,oBAAZonC,SAA6BA,mBAAmB98D,OAA3D,CAGA,KAAME,aAAkB2tE,EAAY3tE,GAAQ48D,SACxC,MAAM,IAAIpnC,UAAU,yCAExB,IAAI06C,EAAepxE,KAAKgxE,cAEpBI,EAAanW,IAAI/5D,KAGrBkwE,EAAal0D,IAAIhc,EAAQ,IAAIsuE,EAAkBtuE,IAC/ClB,KAAKkxE,YAAY3D,YAAYvtE,MAE7BA,KAAKkxE,YAAYpE,aAQrB8D,EAAkBjwE,UAAUQ,UAAY,SAAUD,GAC9C,IAAKg0B,UAAUvvB,OACX,MAAM,IAAI+wB,UAAU,4CAGxB,GAAuB,oBAAZonC,SAA6BA,mBAAmB98D,OAA3D,CAGA,KAAME,aAAkB2tE,EAAY3tE,GAAQ48D,SACxC,MAAM,IAAIpnC,UAAU,yCAExB,IAAI06C,EAAepxE,KAAKgxE,cAEnBI,EAAanW,IAAI/5D,KAGtBkwE,EAAAA,UAAoBlwE,GACfkwE,EAAajC,MACdnvE,KAAKkxE,YAAYzD,eAAeztE,SAQxC4wE,EAAkBjwE,UAAU0tE,WAAa,WACrCruE,KAAKqxE,cACLrxE,KAAKgxE,cAAcv3D,QACnBzZ,KAAKkxE,YAAYzD,eAAeztE,OAQpC4wE,EAAkBjwE,UAAUmtE,aAAe,WACvC,IAAIwD,EAAQtxE,KACZA,KAAKqxE,cACLrxE,KAAKgxE,cAAc3vE,QAAQ,SAAUkwE,GAC7BA,EAAY3B,YACZ0B,EAAMP,oBAAoB1mE,KAAKknE,MAU3CX,EAAkBjwE,UAAUqtE,gBAAkB,WAE1C,GAAKhuE,KAAK+tE,YAAV,CAGA,IAAIlqE,EAAM7D,KAAKmxE,aAEX/vE,EAAUpB,KAAK+wE,oBAAoBrmE,IAAI,SAAU6mE,GACjD,OAAO,IAAIhB,GAAoBgB,EAAYrwE,OAAQqwE,EAAYjB,mBAEnEtwE,KAAKixE,UAAU5hE,KAAKxL,EAAKzC,EAASyC,GAClC7D,KAAKqxE,gBAOTT,EAAkBjwE,UAAU0wE,YAAc,WACtCrxE,KAAK+wE,oBAAoBt1B,OAAO,IAOpCm1B,EAAkBjwE,UAAUotE,UAAY,WACpC,OAAO/tE,KAAK+wE,oBAAoBprE,OAAS,GAEtCirE,EAlJ4B,GAwJnClD,GAA+B,oBAAZ8D,QAA0B,IAAIA,QAAY,IAAIvG,EAKjEwG,GAOA,SAASA,EAAejG,GACpB,KAAMxrE,gBAAgByxE,GAClB,MAAM,IAAI/6C,UAAU,sCAExB,IAAKxB,UAAUvvB,OACX,MAAM,IAAI+wB,UAAU,4CAExB,IAAIm6C,EAAarE,EAAyBgC,cACtCluE,EAAW,IAAIswE,GAAkBpF,EAAUqF,EAAY7wE,MAC3D0tE,GAAUxwD,IAAIld,KAAMM,IAK5B,CACI,UACA,YACA,cACFe,QAAQ,SAAUqwE,GAChBD,GAAe9wE,UAAU+wE,GAAU,WAC/B,IAAIhG,EACJ,OAAQA,EAAKgC,GAAUh7D,IAAI1S,OAAO0xE,GAAQzqD,MAAMykD,EAAIx2C,cAI5D,IAQey8C,QAN4B,IAA5B/F,EAAS6F,eACT7F,EAAS6F,eAEbA,GC55BXjyE,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAkyE,KAAApyE,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAmyE,KAAAryE,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAoyE,KAeA,IAAMxvE,GAAM,CAAC,EAAG,WAAY,SAAU,EAAG,mBAAoB,YACvDC,GAAM,CAAC,EAAG,cACVC,GAAM,CAAC,QAAS,aAAc,EAAG,YAAa,aAAc,cAAe,eAAgB,EAAG,QAC9FC,GAAM,CAAC,EAAG,cACVC,GAAM,CAAC,EAAG,oBACVC,GAAM,CAAC,EAAG,qBACVC,GAAM,CAAC,EAAG,sBACVC,GAAM,CAAC,EAAG,uBAChB,SAASkvE,GAAyCnuE,EAAIC,GAgBpD,GAhBoE,EAALD,IAC7DuK,EAAArK,GAAsB,EAAG,MAAOrB,IAChC0L,EAAA8C,KACA9C,EAAArK,GAAsB,EAAG,MAAOpB,IAChCyL,EAAA8C,KACA9C,EAAAnK,KACAmK,EAAArK,GAAsB,EAAG,MAAOnB,IAChCwL,EAAA8C,KACA9C,EAAAnK,KACAmK,EAAArK,GAAsB,EAAG,MAAOlB,IAChCuL,EAAA8C,KACA9C,EAAAnK,KACAmK,EAAArK,GAAsB,EAAG,MAAOjB,IAChCsL,EAAA8C,KACA9C,EAAAnK,KACAmK,EAAAnK,MACO,EAALJ,EAAQ,CACV,IAAMouE,EAAU7jE,EAAAvJ,KAChBuJ,EAAAklB,GAAmB,YAAa2+C,EAAQC,OAAO1gD,KAC/CpjB,EAAAklB,GAAmB,aAAc2+C,EAAQC,OAAOrhD,MAChDziB,EAAAklB,GAAmB,cAAe2+C,EAAQC,OAAOnhD,OACjD3iB,EAAAklB,GAAmB,eAAgB2+C,EAAQC,OAAOxgD,QAClDtjB,EAAAqD,KACArD,EAAA/J,GAAgB,GAChB+J,EAAAklB,GAAmB,oBAAqB2+C,EAAQE,YAAcF,EAAQG,aACtEhkE,EAAAqD,KACArD,EAAA/J,GAAgB,GAChB+J,EAAAklB,GAAmB,oBAAqB2+C,EAAQI,YAAcJ,EAAQG,aACtEhkE,EAAAqD,KACArD,EAAA/J,GAAgB,GAChB+J,EAAAklB,GAAmB,oBAAqB2+C,EAAQI,YAAcJ,EAAQG,aACtEhkE,EAAAqD,KACArD,EAAA/J,GAAgB,GAChB+J,EAAAklB,GAAmB,oBAAqB2+C,EAAQE,YAAcF,EAAQG,aACtEhkE,EAAAqD,MAEJ,IAAM1O,GAAM,CAAC,KACb,IAAI8uE,GAA2B,IAAIzjE,EAAAgW,EAAe,4BAC9CkuD,GAA0B,WAO1B,OANA,SAAkBj3D,EAAG4T,EAAGvhB,EAAG0F,GACvBnT,KAAKob,EAAIA,EACTpb,KAAKgvB,EAAIA,EACThvB,KAAKyN,EAAIA,EACTzN,KAAKmT,EAAIA,GALa,GAS1Bm/D,GAA0B,WAK1B,OAJA,SAAkBl3D,EAAG4T,GACjBhvB,KAAKob,EAAIA,EACTpb,KAAKgvB,EAAIA,GAHa,GAQ1BujD,GAAyB,CACzB,YACA,YACA,aACA,eACA,eACA,gBACA,cACA,gBACA,cACA,iBAEAC,GAAwC,WACxC,SAASA,EAAuB9oB,QACb,IAAXA,IAAqBA,EAAS,IAClC1pD,KAAKwe,OAAOkrC,GAgBhB,OAVA8oB,EAAuB7xE,UAAU6d,OAIjC,SAAUkrC,GAEN,IAAK,IAAI/5C,UADM,IAAX+5C,IAAqBA,EAAS,IAClBA,EAAhB,CACI1pD,KAAK2P,GAA4B+5C,EAAO/5C,KAGzC6iE,EAnBiC,GA0BxCC,GAA2C,WAC3C,SAASC,EAA0BC,EAAMC,EAAS3lE,EAAYE,EAAY0lE,GACtE7yE,KAAK2yE,KAAOA,EACZ3yE,KAAK4yE,QAAUA,EACf5yE,KAAKiN,WAAaA,EAClBjN,KAAKmN,WAAaA,EAClBnN,KAAK6yE,SAAWA,EAChB7yE,KAAK8zC,SAAW,KAChB9zC,KAAK8yE,GAAK,KACV9yE,KAAK+yE,QAAU,KACf/yE,KAAKi0B,UAAY,KACjBj0B,KAAKgzE,WAAa,KAClBhzE,KAAKizE,UAAY,IAAIrkB,EAAAA,EACrB5uD,KAAKmF,UAAW,EAChBnF,KAAKkzE,UAAY,IAAI/kE,EAAAxM,EACrB3B,KAAKmzE,UAAY,IAAIhlE,EAAAxM,EACrB3B,KAAKozE,WAAa,IAAIjlE,EAAAxM,EACtB3B,KAAKqzE,aAAe,IAAIllE,EAAAxM,EACxB3B,KAAKszE,aAAe,IAAInlE,EAAAxM,EACxB3B,KAAKuzE,cAAgB,IAAIplE,EAAAxM,EACzB3B,KAAKwzE,YAAc,IAAIrlE,EAAAxM,EACvB3B,KAAKyzE,cAAgB,IAAItlE,EAAAxM,EACzB3B,KAAK0zE,YAAc,IAAIvlE,EAAAxM,EACvB3B,KAAK2zE,cAAgB,IAAIxlE,EAAAxM,EAgf7B,OA3eA+wE,EAA0B/xE,UAAUqI,SAGpC,WACI,IAAIsoE,EAAQtxE,KACZ,IAAKA,KAAKmF,UAAYnE,OAAAoN,EAAAX,EAAAzM,CAAkBhB,KAAKmN,YAAa,CAEtD,IAAIymE,EAAW,IAAIpB,GAAuBxyE,KAAK6yE,UAC/Ce,EAASp1D,OAAOxe,KAAK0pD,QACrB1pD,KAAK2yE,KAAK1rC,kBAAkB,WAIxBqqC,EAAMx9B,SAAW,IAAIk3B,EAAiBsG,EAAMrkE,WAAWS,cAAekmE,KAErE5zE,KAAKgzE,aACNhzE,KAAKgzE,WAAahzE,KAAK4yE,QAAQxlD,KAAKptB,KAAK0pD,QAAU,IAAIrV,SACvDr0C,KAAKgzE,WAAWx7C,KAAKx3B,KAAK0pD,QAAU,KAExC1pD,KAAK2yE,KAAK1rC,kBAAkB,WAIxBqqC,EAAMwB,GAAK,IAAInB,GAAe,WAI1BL,EAAM95D,WAEN85D,EAAMrkE,WAAWS,cAAc6wD,SAAS,IACxC+S,EAAMwB,GAAGlyE,QAAQ0wE,EAAMrkE,WAAWS,cAAc6wD,SAAS,IAE7D+S,EAAMwB,GAAGlyE,QAAQ0wE,EAAMrkE,WAAWS,iBAEtC1N,KAAK2yE,KAAK1rC,kBAAkB,WAIxBsrC,GAAuBlxE,QAAQ,SAIrBs+D,GAEN,IAAIkU,EAAYlU,EAAUriC,QAAQ,WAAY,SAIpC1yB,GAAK,MAAO,IAAMA,EAAEkP,gBAC9B9Y,OAAA8yE,EAAAzzE,EAAAW,CAAUswE,EAAMrkE,WAAWS,cAAemmE,GACrC9yE,KAAKC,OAAA+yE,EAAA1zE,EAAAW,CAAU,IAAKA,OAAAgzE,EAAA3zE,EAAAW,CAAUswE,EAAM2B,YACpCnqE,UAAU,SAIL2R,GACN62D,EAAM3R,GAAWn1D,KAAKiQ,WAS1Ci4D,EAA0B/xE,UAAUyI,YAGpC,WACI,IAAIkoE,EAAQtxE,KACRgB,OAAAoN,EAAAX,EAAAzM,CAAkBhB,KAAKmN,cACvBnN,KAAKizE,UAAU3xE,OACftB,KAAKizE,UAAU7jE,WACXpP,KAAK8yE,IACL9yE,KAAK8yE,GAAGzE,aAERruE,KAAK+yE,SAA6B,oBAAX5S,QACvBA,OAAOjB,aAAal/D,KAAK+yE,SAE7B/yE,KAAK2yE,KAAK1rC,kBAAkB,WAIpBqqC,EAAMx9B,UACNw9B,EAAMx9B,SAASmR,YAGvBjlD,KAAK8zC,SAAW,OAMxB4+B,EAA0B/xE,UAAUooB,UAGpC,YACS/oB,KAAKmF,UAAYnF,KAAKgzE,YAAchyE,OAAAoN,EAAAX,EAAAzM,CAAkBhB,KAAKmN,aAE9CnN,KAAKgzE,WAAWx7C,KAAKx3B,KAAK0pD,QAAU,MAE9C1pD,KAAKoJ,cACLpJ,KAAKgJ,aAQjB0pE,EAA0B/xE,UAAUsoB,YAIpC,SAAUhiB,GACFA,EAAkB9B,WAAM8B,EAAkB9B,SAAE8uE,iBAAmBjzE,OAAAoN,EAAAX,EAAAzM,CAAkBhB,KAAKmN,aAClFlG,EAAkB9B,SAAE4nB,eAAiB9lB,EAAkB9B,SAAE+uE,iBAChB,IAArCjtE,EAAkB9B,SAAE4nB,aACpB/sB,KAAKoJ,eAEqC,IAArCnC,EAAkB9B,SAAE4nB,cACzB/sB,KAAKgJ,aAQrB0pE,EAA0B/xE,UAAUwzE,GAGpC,WACI,OAAOn0E,KAAK8zC,UAKhB4+B,EAA0B/xE,UAAU6W,OAGpC,WACI,IAAI85D,EAAQtxE,KACU,oBAAXmgE,SACHngE,KAAK+yE,SACL5S,OAAOjB,aAAal/D,KAAK+yE,SAE7B/yE,KAAK+yE,QAAU5S,OAAO/sB,WAAW,WAI7B,IAAKk+B,EAAMnsE,UAAYmsE,EAAM0B,WACzB,IACI1B,EAAMqB,KAAK1rC,kBAAkB,WAIrBqqC,EAAMx9B,UACNw9B,EAAMx9B,SAASt8B,WAI3B,MAAO+F,MAIX,KAOZm1D,EAA0B/xE,UAAUyzE,SAIpC,SAAUC,GAEN,YADe,IAAXA,IAAqBA,EAAS,UAC3B,IAAIhC,GAASryE,KAAKiN,WAAWS,cAAc2mE,EAAS,QAASr0E,KAAKiN,WAAWS,cAAc2mE,EAAS,OAAQr0E,KAAKiN,WAAWS,cAAc2mE,EAAS,SAAUr0E,KAAKiN,WAAWS,cAAc2mE,EAAS,YAM/M3B,EAA0B/xE,UAAU8zC,SAIpC,SAAU6/B,GAEN,YADiB,IAAbA,IAAuBA,GAAW,IACjCA,GAAYt0E,KAAK8zC,SACX,IAAIw+B,GAAStyE,KAAK8zC,SAASutB,MAAMjmD,GAAK,EAAGpb,KAAK8zC,SAASutB,MAAMryC,GAAK,GAGlE,IAAIsjD,GAAStyE,KAAKiN,WAAWS,cAAc21D,WAAYrjE,KAAKiN,WAAWS,cAAc2e,YAOpGqmD,EAA0B/xE,UAAU4zE,WAIpC,SAAUjhC,QACY,IAAdA,IAAwBA,EAAY,OAExC,IAAIzyC,EAAUb,KAAKiN,WAAWS,cAC9B,MAAkB,QAAd4lC,EACOzyC,EAAQqP,UAAUypD,SAAS,iBAC9B94D,EAAQqP,UAAUypD,SAAS,gBAEZ,SAAdrmB,EACEzyC,EAAQqP,UAAUypD,SAAS,iBAC9B94D,EAAQqP,UAAUypD,SAAS,gBAGxB94D,EAAQqP,UAAUypD,SAAS,cAAgBrmB,IAS1Do/B,EAA0B/xE,UAAU6zE,SAMpC,SAAUp5D,EAAG4T,EAAGi5C,GACPjoE,KAAKmF,WACG,MAAL6pB,GAAsB,MAATi5C,EACbjoE,KAAKy0E,iBAAiB,YAAar5D,EAAG6sD,IAG7B,MAAL7sD,GACApb,KAAKy0E,iBAAiB,aAAcr5D,EAAG6sD,GAElC,MAALj5C,GACAhvB,KAAKy0E,iBAAiB,YAAazlD,EAAGi5C,MAUtDyK,EAA0B/xE,UAAU+zE,UAKpC,SAAUt5D,EAAG6sD,GACTjoE,KAAKy0E,iBAAiB,aAAcr5D,EAAG6sD,IAO3CyK,EAA0B/xE,UAAUg0E,UAKpC,SAAU3lD,EAAGi5C,GACTjoE,KAAKy0E,iBAAiB,YAAazlD,EAAGi5C,IAO1CyK,EAA0B/xE,UAAUi0E,YAKpC,SAAUz7C,EAAQ8uC,GACdjoE,KAAKy0E,iBAAiB,YAAct7C,GAAU,EAAI8uC,IAOtDyK,EAA0B/xE,UAAUk0E,aAKpC,SAAU17C,EAAQ8uC,GACdjoE,KAAKy0E,iBAAiB,aAAet7C,GAAU,EAAI8uC,IAOvDyK,EAA0B/xE,UAAUm0E,cAKpC,SAAU37C,EAAQ8uC,GAIdjoE,KAAKy0E,iBAAiB,aAFXz0E,KAAKiN,WAAWS,cAAc60D,YACrCviE,KAAKiN,WAAWS,cAAc00D,aACUjpC,GAAU,GAAI8uC,IAO9DyK,EAA0B/xE,UAAUo0E,eAKpC,SAAU57C,EAAQ8uC,GAIdjoE,KAAKy0E,iBAAiB,YAFZz0E,KAAKiN,WAAWS,cAAc80D,aACpCxiE,KAAKiN,WAAWS,cAAc20D,cACQlpC,GAAU,GAAI8uC,IAQ5DyK,EAA0B/xE,UAAUq0E,gBAMpC,SAAUC,EAAI97C,EAAQ8uC,GAElB,IAAIpnE,EAAUb,KAAKiN,WAAWS,cAAcgD,cAAcukE,GAC1D,GAAIp0E,EAAS,CAET,IAAIq0E,EAAar0E,EAAQ0nB,wBAErB4sD,EAAcn1E,KAAKiN,WAAWS,cAAc6a,wBAC5CvoB,KAAKiN,WAAWS,cAAcwC,UAAUypD,SAAS,iBAKjD35D,KAAKy0E,iBAAiB,aADPS,EAAWtkD,KAAOukD,EAAYvkD,KAF5B5wB,KAAKiN,WAAWS,cAA0B21D,YAGXlqC,GAAU,GAAI8uC,GAE9DjoE,KAAKiN,WAAWS,cAAcwC,UAAUypD,SAAS,iBAKjD35D,KAAKy0E,iBAAiB,YADPS,EAAW3jD,IAAM4jD,EAAY5jD,IAF3BvxB,KAAKiN,WAAWS,cAAyB2e,WAGX8M,GAAU,GAAI8uC,KAWzEyK,EAA0B/xE,UAAU8zE,iBAOpC,SAAUvzE,EAAQ4D,EAAOmjE,GACrB,IAAIqJ,EAAQtxE,KAKZ,GAJIA,KAAKi0B,YACLksC,OAAOiV,qBAAqBp1E,KAAKi0B,WACjCj0B,KAAKi0B,UAAY,MAEhBg0C,GAA2B,oBAAX9H,OAAAA,CAGhB,GAAIr7D,IAAU9E,KAAKiN,WAAWS,cAAcxM,GAAS,CAEtD,IAAIm0E,EAAa,EAEbC,EAAgB,EAEhBC,EAAiBC,YAAYtJ,MAE7BuJ,EAAaz1E,KAAKiN,WAAWS,cAAcxM,GAE3Cw0E,GAAkBD,EAAa3wE,GAAS,EAExC6wE,EAAS,SAATA,EAIMC,GACNN,GAAiB/tE,KAAKsuE,IAAM5N,GAAS2N,EAAeL,IACpDF,EAAa9tE,KAAKypB,MAAMlsB,EAAQ4wE,EAAiBA,EAAiBnuE,KAAKuuE,IAAIR,IAEvEhE,EAAMrkE,WAAWS,cAAcxM,KAAYu0E,IACvCH,GAAiB/tE,KAAKsuE,GACtBvE,EAAMmD,iBAAiBvzE,EAAQ4D,EAAO,IAGtCwsE,EAAMrkE,WAAWS,cAAcxM,GAAUm0E,EAEzCI,EAAanE,EAAMrkE,WAAWS,cAAcxM,GAC5Cq0E,EAAiBK,EACjBtE,EAAMr9C,UAAYksC,OAAO8L,sBAAsB0J,MAI3DxV,OAAO8L,sBAAsB0J,SAnC7B31E,KAAKiN,WAAWS,cAAcxM,GAAU4D,GA4DpD4tE,EAA0B7kE,eAAiBM,EAAAL,GAAyB,CAAE/C,KAAM2nE,EAA2B1nE,UAAW,CAAC,CAAC,GAAI,mBAAoB,KAAMtJ,QAAS,SAAAA,EAA2CC,GAAK,OAAO,IAAKA,GAAK+wE,GAA2BvkE,EAAAlD,GAAyBkD,EAAAykB,GAASzkB,EAAAlD,GAAyBkD,EAAA6W,GAAkB7W,EAAAlD,GAAyBkD,EAAAJ,GAAaI,EAAAlD,GAAyBkD,EAAAH,GAAcG,EAAAlD,GAAyB2mE,GAA0B,KAAQtmE,OAAQ,CAAEnG,SAAU,WAAYukD,OAAQ,CAAC,mBAAoB,WAAaj+C,QAAS,CAAEynE,UAAW,YAAaC,UAAW,YAAaC,WAAY,aAAcC,aAAc,eAAgBC,aAAc,eAAgBC,cAAe,gBAAiBC,YAAa,cAAeC,cAAe,gBAAiBC,YAAa,cAAeC,cAAe,iBAAmBjoE,SAAU,CAAC,uBAAwBC,SAAU,CAACwC,EAAAylB,QAyCp2B8+C,EAvgBoC,GA8gB3Cb,GAA2C,WAC3C,SAASkE,EAA0BpD,EAAMqD,EAAO7oE,GAC5CnN,KAAK2yE,KAAOA,EACZ3yE,KAAKg2E,MAAQA,EACbh2E,KAAKmN,WAAaA,EAClBnN,KAAKiyE,OAAS,GACdjyE,KAAKoyE,YAAa,EAClBpyE,KAAKkyE,YAAa,EAClBlyE,KAAKmyE,aAAc,EACnBnyE,KAAKi2E,gBAAkB,EACvBj2E,KAAKk2E,gBAAkB,EACvBl2E,KAAKm2E,iBAAmB,EACxBn2E,KAAKo2E,iBAAmB,EACxBp2E,KAAKq2E,iBAAkB,EACvBr2E,KAAKs2E,iBAAkB,EACvBt2E,KAAKu2E,mBAAoB,EACzBv2E,KAAKw2E,mBAAoB,EACzBx2E,KAAKy2E,aAAe,KACpBz2E,KAAKizE,UAAY,IAAIrkB,EAAAA,EACrB5uD,KAAK02E,YAAc,IAAI9nB,EAAAA,EACvB5uD,KAAKmF,UAAW,EAChBnF,KAAK22E,YAAa,EAClB32E,KAAK42E,iBAAkB,EACvB52E,KAAK62E,kBAAmB,EACxB72E,KAAKkzE,UAAY,IAAI/kE,EAAAxM,EACrB3B,KAAKmzE,UAAY,IAAIhlE,EAAAxM,EACrB3B,KAAKozE,WAAa,IAAIjlE,EAAAxM,EACtB3B,KAAKqzE,aAAe,IAAIllE,EAAAxM,EACxB3B,KAAKszE,aAAe,IAAInlE,EAAAxM,EACxB3B,KAAKuzE,cAAgB,IAAIplE,EAAAxM,EACzB3B,KAAKwzE,YAAc,IAAIrlE,EAAAxM,EACvB3B,KAAKyzE,cAAgB,IAAItlE,EAAAxM,EACzB3B,KAAK0zE,YAAc,IAAIvlE,EAAAxM,EACvB3B,KAAK2zE,cAAgB,IAAIxlE,EAAAxM,EA8U7B,OAzUAo0E,EAA0Bp1E,UAAUqI,SAGpC,WACI,IAAIsoE,EAAQtxE,KACRgB,OAAAoN,EAAAX,EAAAzM,CAAkBhB,KAAKmN,cACvBnN,KAAK02E,YACA31E,KAAKC,OAAAgzE,EAAA3zE,EAAAW,CAAUhB,KAAKizE,WAAYjyE,OAAA81E,EAAAz2E,EAAAW,CAAqB,SAKhDX,EAAGkK,GAAK,OAAQlK,IAAMkK,IAAM+mE,EAAMmF,gBACvC3tE,UAAU,SAILmL,GACFq9D,EAAMmF,cAAkC,oBAAXtW,SAC7BA,OAAOjB,aAAaoS,EAAMmF,cAC1BnF,EAAMmF,aAAe,MAEX,MAAVxiE,GAA2B,MAAVA,GACjBq9D,EAAMa,aAAc,EACN,MAAVl+D,GACAq9D,EAAMc,YAAa,EACnBd,EAAMW,OAAOrhD,MAAO,EACpB0gD,EAAMW,OAAOnhD,OAAQ,EACjBwgD,EAAMsF,iBAAmBtF,EAAM+E,kBAC/B/E,EAAMiF,mBAAoB,IAGf,MAAVtiE,IACLq9D,EAAMY,YAAa,EACnBZ,EAAMW,OAAO1gD,KAAM,EACnB+/C,EAAMW,OAAOxgD,QAAS,EAClB6/C,EAAMsF,iBAAmBtF,EAAMgF,kBAC/BhF,EAAMkF,mBAAoB,MAKpB,SAAVviE,GAA8B,UAAVA,GACpBq9D,EAAMW,OAAOrhD,MAAO,EACpB0gD,EAAMW,OAAOnhD,OAAQ,EACrBwgD,EAAMW,OAAOh+D,IAAS,EAClBq9D,EAAMsF,iBAAmBtF,EAAM+E,kBAC/B/E,EAAMc,YAAa,IAGR,QAAVn+D,GAA6B,WAAVA,IACxBq9D,EAAMW,OAAO1gD,KAAM,EACnB+/C,EAAMW,OAAOxgD,QAAS,EACtB6/C,EAAMW,OAAOh+D,IAAS,EAClBq9D,EAAMsF,iBAAmBtF,EAAMgF,kBAC/BhF,EAAMY,YAAa,IAGvBZ,EAAMsF,iBAAqC,oBAAXzW,SAChCmR,EAAMmF,aAAetW,OAAO/sB,WAAW,WAInCk+B,EAAMc,YAAa,EACnBd,EAAMY,YAAa,EACnBZ,EAAMmF,aAAe,KACjBnF,EAAMa,cAAgBb,EAAMW,OAAOrhD,MAAQ0gD,EAAMW,OAAOnhD,SACxDwgD,EAAMiF,mBAAoB,GAE1BjF,EAAMa,cAAgBb,EAAMW,OAAO1gD,KAAO+/C,EAAMW,OAAOxgD,UACvD6/C,EAAMkF,mBAAoB,GAE9BlF,EAAM0E,MAAMjtE,gBACZ,OAGZuoE,EAAM0E,MAAMjtE,eACZuoE,EAAM0E,MAAM9pD,kBAEhBlsB,KAAK2yE,KAAK1rC,kBAAkB,WAIxB,GAAIqqC,EAAMyF,aAAc,CAEpB,IAAIl2E,EAAUywE,EAAMyF,aAAa9pE,WAAWS,cAC5C1M,OAAA8yE,EAAAzzE,EAAAW,CAAUH,EAAS,SACdE,KAAKC,OAAAgzE,EAAA3zE,EAAAW,CAAUswE,EAAM2B,YACrBnqE,UAAU,SAIL2R,IACD62D,EAAMnsE,UAAYmsE,EAAMsF,iBAKzBtF,EAAM0F,iBAAiBv8D,EAHJA,EAAM4rD,OAEN5rD,EAAM6rD,UAIjCtlE,OAAA8yE,EAAAzzE,EAAAW,CAAUH,EAAS,aACdE,KAAKC,OAAAgzE,EAAA3zE,EAAAW,CAAUswE,EAAM2B,YACrBnqE,UAAU,SAIL2R,GACN,IAAK62D,EAAMnsE,UAAYmsE,EAAMsF,gBAAiB,CAE1C,IAAIX,EAAkBx7D,EAAMw8D,QAAQ,GAAGC,QAEnChB,EAAkBz7D,EAAMw8D,QAAQ,GAAGE,QAKvC7F,EAAM0F,iBAAiBv8D,EAHJw7D,EAAkB3E,EAAM2E,gBAExBC,EAAkB5E,EAAM4E,iBAE3C5E,EAAM2E,gBAAkBA,EACxB3E,EAAM4E,gBAAkBA,KAGhCl1E,OAAAo2E,EAAA/2E,EAAAW,CAAMA,OAAA8yE,EAAAzzE,EAAAW,CAAUH,EAAS,eACpBE,KAAKC,OAAA4d,EAAAve,EAAAW,CAAM,MAAOA,OAAA8yE,EAAAzzE,EAAAW,CAAUH,EAAS,eACrCE,KAAKC,OAAA4d,EAAAve,EAAAW,CAAM,MAAOA,OAAA8yE,EAAAzzE,EAAAW,CAAUH,EAAS,kBACrCE,KAAKC,OAAA4d,EAAAve,EAAAW,CAAM,UAAWA,OAAA8yE,EAAAzzE,EAAAW,CAAUH,EAAS,kBACzCE,KAAKC,OAAA4d,EAAAve,EAAAW,CAAM,WAAYA,OAAA8yE,EAAAzzE,EAAAW,CAAUH,EAAS,oBAC1CE,KAAKC,OAAA4d,EAAAve,EAAAW,CAAM,SAAUA,OAAA8yE,EAAAzzE,EAAAW,CAAUH,EAAS,oBACxCE,KAAKC,OAAA4d,EAAAve,EAAAW,CAAM,SACXD,KAAKC,OAAAgzE,EAAA3zE,EAAAW,CAAUswE,EAAM2B,YACrBnqE,UAAU,SAILmL,GACDq9D,EAAMnsE,WAAamsE,EAAMsF,kBAAmBtF,EAAMuF,kBACnDvF,EAAMoF,YAAYp1E,KAAK2S,QAKvCksD,OAAO/sB,WAAW,WAIdm/B,GAAuBlxE,QAAQ,SAIrBs+D,GACF2R,EAAMyF,eACNzF,EAAMyF,aAAapX,GAAa2R,EAAM3R,OAG9C,KAMZoW,EAA0Bp1E,UAAUyI,YAGpC,WACQpI,OAAAoN,EAAAX,EAAAzM,CAAkBhB,KAAKmN,cACvBnN,KAAKizE,UAAU3xE,OACftB,KAAKizE,UAAU5pE,cACXrJ,KAAKy2E,cAAkC,oBAAXtW,QAC5BA,OAAOjB,aAAal/D,KAAKy2E,gBAOrCV,EAA0Bp1E,UAAUooB,UAGpC,WACI,GAAI/nB,OAAAoN,EAAAX,EAAAzM,CAAkBhB,KAAKmN,cAClBnN,KAAKmF,UAAYnF,KAAK42E,iBAAmB52E,KAAK+2E,aAAc,CAE7D,IAAIl2E,EAAUb,KAAK+2E,aAAa9pE,WAAWS,cAC3C1N,KAAKq2E,gBAAkBx1E,EAAQqP,UAAUypD,SAAS,gBAClD35D,KAAKs2E,gBAAkBz1E,EAAQqP,UAAUypD,SAAS,kBAW9Doc,EAA0Bp1E,UAAUq2E,iBAOpC,SAAUv8D,EAAO4rD,EAAQC,GACrBtmE,KAAKmyE,aAAc,EAEnB,IAAIgE,EAAoB9P,EAAS,GAAM,EAAI,EAEvC+P,EAAoB9P,EAAS,GAAM,EAAI,GACtCtmE,KAAKq2E,iBAAmBr2E,KAAKs2E,iBAC7Bt2E,KAAKq2E,mBAAqBr2E,KAAKu2E,mBAC3Bv2E,KAAKm2E,mBAAqBA,IAC9Bn2E,KAAKs2E,mBAAqBt2E,KAAKw2E,mBAC3Bx2E,KAAKo2E,mBAAqBA,MAC/B37D,EAAMkQ,iBACNlQ,EAAMC,mBAEJ2rD,IACFrmE,KAAKm2E,iBAAmBA,GAEtB7P,IACFtmE,KAAKo2E,iBAAmBA,GAE5Bp2E,KAAK02E,YAAYp1E,KAAK,eACtBtB,KAAKg2E,MAAM9pD,iBA0BnB6pD,EAA0BlrE,eAAiBsD,EAAArD,GAAyB,CAAEC,KAAMgrE,EAA2B/qE,UAAW,CAAC,CAAC,sBAAuBtJ,QAAS,SAAAA,EAA2CC,GAAK,OAAO,IAAKA,GAAKo0E,GAA2B5nE,EAAAlD,GAAyBkD,EAAAykB,GAASzkB,EAAAlD,GAAyBkD,EAAAjD,GAAoBiD,EAAAlD,GAAyBkD,EAAAH,KAAkB0N,UAAW,SAAAA,EAAyC9X,EAAIC,GAG1Z,IAAI8X,EAHsa,EAAL/X,GACrauK,EAAAyN,GAAyB62D,IAA2B,GAC7C,EAAL7uE,GAEFuK,EAAA0N,GAAsBF,EAAKxN,EAAA2N,QAA0BjY,EAAIkzE,aAAep7D,EAAGI,QAC1E5Q,aAAc,SAAAA,EAAgDvH,EAAIC,EAAKuH,GAAoB,EAALxH,IACvFuK,EAAA0E,GAAuB,GACvB1E,EAAA8C,MACO,EAALrN,IACFuK,EAAAklB,GAAmB,iBAAkBxvB,EAAI+yE,iBACzCzoE,EAAAklB,GAAmB,iBAAkBxvB,EAAIgzE,kBACzC1oE,EAAAqD,OACClG,OAAQ,CAAEnG,SAAU,WAAYwxE,WAAY,aAAcC,gBAAiB,kBAAmBC,iBAAkB,mBAAoBntB,OAAQ,UAAYj+C,QAAS,CAAEynE,UAAW,YAAaC,UAAW,YAAaC,WAAY,aAAcC,aAAc,eAAgBC,aAAc,eAAgBC,cAAe,gBAAiBC,YAAa,cAAeC,cAAe,gBAAiBC,YAAa,cAAeC,cAAe,iBAAmBjoE,SAAU,CAAC,uBAAwBmoB,mBAAoB/wB,GAAK+I,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAA4CnI,EAAIC,GAAgB,EAALD,IACzlBuK,EAAA2lB,KACA3lB,EAAArK,GAAsB,EAAG,MAAOxB,IAChC6L,EAAA8C,KACA9C,EAAArK,GAAsB,EAAG,MAAOvB,IAChC4L,EAAA8T,GAAoB,GACpB9T,EAAAnK,KACAmK,EAAApJ,GAAkB,EAAGgtE,GAA0C,EAAG,EAAG,MAAOvvE,IAC5E2L,EAAAnK,MACO,EAALJ,IACFuK,EAAAklB,GAAmB,KAAMxvB,EAAI8yE,YAC7BxoE,EAAAqD,KACArD,EAAAhK,GAAkB,mBAAoBN,EAAtC6lD,OAAAv7C,CAAkD,WAAYtK,EAAIsB,UAClEgJ,EAAA/J,GAAgB,GAChB+J,EAAAhK,GAAkB,OAAQN,EAAIgzE,oBAC7B7qE,WAAY,CAACymE,GAA2BrkE,EAAAnC,GAAcE,OAAQ,CAAC,0lNAA2lN,8pFAA+pFC,cAAe,IAqDt0S2pE,EA/WoC,GAsX3CjE,GAAwC,WACxC,SAASuF,KAiBT,OAfJA,EAAuB/qE,YAAc6B,EAAA5B,GAAwB,CAAExB,KAAMssE,IACrEA,EAAuB7qE,cAAgB2B,EAAA1B,GAAwB,CAAE/K,QAAS,SAAAA,EAAwCC,GAAK,OAAO,IAAKA,GAAK01E,IAA8B1qE,QAAS,CAAC,CAACyB,EAAAxD,GACzKwD,EAAAxD,KAaGysE,EAlBiC,wCCx/B5C,IAAIC,EAAuB,CACzBC,iBAAkB,CAChBC,IAAK,qBACLC,MAAO,+BAETC,SAAU,CACRF,IAAK,WACLC,MAAO,qBAETE,YAAa,gBACbC,iBAAkB,CAChBJ,IAAK,qBACLC,MAAO,+BAETI,SAAU,CACRL,IAAK,WACLC,MAAO,qBAETK,YAAa,CACXN,IAAK,eACLC,MAAO,yBAETM,OAAQ,CACNP,IAAK,SACLC,MAAO,mBAETO,MAAO,CACLR,IAAK,QACLC,MAAO,kBAETQ,aAAc,CACZT,IAAK,gBACLC,MAAO,0BAETS,QAAS,CACPV,IAAK,UACLC,MAAO,oBAETU,YAAa,CACXX,IAAK,eACLC,MAAO,yBAETW,OAAQ,CACNZ,IAAK,SACLC,MAAO,mBAETY,WAAY,CACVb,IAAK,cACLC,MAAO,wBAETa,aAAc,CACZd,IAAK,gBACLC,MAAO,2BCpDI,SAASc,EAAkBC,GACxC,OAAO,SAAUngD,GACf,IAAIp4B,EAAUo4B,GAAgB,GAC1BtH,EAAQ9wB,EAAQ8wB,MAAQhW,OAAO9a,EAAQ8wB,OAASynD,EAAKC,aAEzD,OADaD,EAAKE,QAAQ3nD,IAAUynD,EAAKE,QAAQF,EAAKC,eCH1D,ICDIE,EAAuB,CACzBC,SAAU,qBACVC,UAAW,mBACXlxC,MAAO,eACPmxC,SAAU,kBACVC,SAAU,cACVtB,MAAO,KCNM,SAASuB,EAAgBR,GACtC,OAAO,SAAUS,EAAY5gD,GAC3B,IAEI6gD,EAFAj5E,EAAUo4B,GAAgB,GAI9B,GAAgB,gBAHFp4B,EAAQu6B,QAAUzf,OAAO9a,EAAQu6B,SAAW,eAG1Bg+C,EAAKW,iBAAkB,CACrD,IAAIV,EAAeD,EAAKY,wBAA0BZ,EAAKC,aACnD1nD,EAAQ9wB,EAAQ8wB,MAAQhW,OAAO9a,EAAQ8wB,OAAS0nD,EACpDS,EAAcV,EAAKW,iBAAiBpoD,IAAUynD,EAAKW,iBAAiBV,OAC/D,CACL,IAAIY,EAAgBb,EAAKC,aAErBa,EAASr5E,EAAQ8wB,MAAQhW,OAAO9a,EAAQ8wB,OAASynD,EAAKC,aAE1DS,EAAcV,EAAKt9B,OAAOo+B,IAAWd,EAAKt9B,OAAOm+B,GAInD,OAAOH,EADKV,EAAKe,iBAAmBf,EAAKe,iBAAiBN,GAAcA,IClB7D,SAASO,EAAoBhB,GAC1C,OAAO,SAAUiB,EAAaphD,GAC5B,IAAIqhD,EAAS3+D,OAAO0+D,GAChBx5E,EAAUo4B,GAAgB,GAC1B4E,EAAcy8C,EAAOx8C,MAAMs7C,EAAKmB,cAEpC,IAAK18C,EACH,OAAO,KAGT,IAAI28C,EAAgB38C,EAAY,GAC5B48C,EAAcH,EAAOx8C,MAAMs7C,EAAKsB,cAEpC,IAAKD,EACH,OAAO,KAGT,IAAI/0E,EAAQ0zE,EAAKuB,cAAgBvB,EAAKuB,cAAcF,EAAY,IAAMA,EAAY,GAElF,MAAO,CACL/0E,MAFFA,EAAQ7E,EAAQ85E,cAAgB95E,EAAQ85E,cAAcj1E,GAASA,EAG7Dk1E,KAAMN,EAAOvvE,MAAMyvE,EAAcj0E,UCrBxB,SAASs0E,EAAazB,GACnC,OAAO,SAAUiB,EAAaphD,GAC5B,IAAIqhD,EAAS3+D,OAAO0+D,GAChBx5E,EAAUo4B,GAAgB,GAC1BtH,EAAQ9wB,EAAQ8wB,MAEhBkM,EAAcy8C,EAAOx8C,MADNnM,GAASynD,EAAK0B,cAAcnpD,IAAUynD,EAAK0B,cAAc1B,EAAK2B,oBAGjF,IAAKl9C,EACH,OAAO,KAGT,IAEIn4B,EAFA80E,EAAgB38C,EAAY,GAC5Bm9C,EAAgBrpD,GAASynD,EAAK4B,cAAcrpD,IAAUynD,EAAK4B,cAAc5B,EAAK6B,mBAelF,OAXEv1E,EADoD,mBAAlD9D,OAAOL,UAAUwc,SAAS9N,KAAK+qE,GACzBA,EAAcE,UAAU,SAAU59C,GACxC,OAAOA,EAAQygB,KAAKu8B,KAiB5B,SAAiBa,EAAQvqB,GACvB,IAAK,IAAIrgD,KAAO4qE,EAAhB,CACE,GAAIA,EAAO5uB,eAAeh8C,IAAkB4qE,EAAO5qE,GAfhCwtC,KAAKu8B,GAgBtB,OAAO/pE,GAHb,CAdsByqE,GAKlBt1E,EAAQ0zE,EAAKuB,cAAgBvB,EAAKuB,cAAcj1E,GAASA,EAElD,CACLA,MAFFA,EAAQ7E,EAAQ85E,cAAgB95E,EAAQ85E,cAAcj1E,GAASA,EAG7Dk1E,KAAMN,EAAOvvE,MAAMyvE,EAAcj0E,UCFxBjG,EAAAW,EAbF,CACX6qD,ePuCa,SAAAA,EAAwBzpD,EAAO+7D,EAAOv9D,GAEnD,IAAI6Y,EAUJ,OAXA7Y,EAAUA,GAAW,GAInB6Y,EADyC,iBAAhCw+D,EAAqB71E,GACrB61E,EAAqB71E,GACX,IAAV+7D,EACA8Z,EAAqB71E,GAAO+1E,IAE5BF,EAAqB71E,GAAOg2E,MAAMn6C,QAAQ,YAAakgC,GAG9Dv9D,EAAQ2rD,UACN3rD,EAAQurD,WAAa,EAChB,MAAQ1yC,EAERA,EAAS,OAIbA,GO1DP6jB,WLEe,CACf7hB,KAAMy9D,EAAkB,CACtBG,QApBc,CAChB8B,KAAM,mBACN5wC,KAAM,aACN6wC,OAAQ,WACRC,MAAO,cAiBLjC,aAAc,SAEhB57C,KAAM07C,EAAkB,CACtBG,QAlBc,CAChB8B,KAAM,iBACN5wC,KAAM,cACN6wC,OAAQ,YACRC,MAAO,UAeLjC,aAAc,SAEhBp7C,SAAUk7C,EAAkB,CAC1BG,QAhBkB,CACpB8B,KAAM,yBACN5wC,KAAM,yBACN6wC,OAAQ,qBACRC,MAAO,sBAaLjC,aAAc,UKZhBkC,eJVa,SAAAA,EAAwBl5E,EAAOm5E,EAAOC,EAAWC,GAC9D,OAAOnC,EAAqBl3E,IIU5Bo4B,SCqGa,CACbG,cA9BF,SAAAA,EAAuB83B,EAAaipB,GAClC,IAAIhkD,EAASohB,OAAO2Z,GAUhBkpB,EAASjkD,EAAS,IAEtB,GAAIikD,EAAS,IAAMA,EAAS,GAC1B,OAAQA,EAAS,IACf,KAAK,EACH,OAAOjkD,EAAS,KAElB,KAAK,EACH,OAAOA,EAAS,KAElB,KAAK,EACH,OAAOA,EAAS,KAItB,OAAOA,EAAS,MAKhB+C,IAAKk/C,EAAgB,CACnB99B,OA1HY,CACdzY,OAAQ,CAAC,IAAK,KACdw4C,YAAa,CAAC,KAAM,MACpBC,KAAM,CAAC,gBAAiB,gBAwHtBzC,aAAc,SAEhBn+C,QAAS0+C,EAAgB,CACvB99B,OAzHgB,CAClBzY,OAAQ,CAAC,IAAK,IAAK,IAAK,KACxBw4C,YAAa,CAAC,KAAM,KAAM,KAAM,MAChCC,KAAM,CAAC,cAAe,cAAe,cAAe,gBAuHlDzC,aAAc,OACdc,iBAAkB,SAAAA,EAAUj/C,GAC1B,OAAO6d,OAAO7d,GAAW,KAG7BG,MAAOu+C,EAAgB,CACrB99B,OAvHc,CAChBzY,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAChEw4C,YAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3FC,KAAM,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,aAqHnHzC,aAAc,SAEhBnhD,IAAK0hD,EAAgB,CACnB99B,OAtHY,CACdzY,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACvCi4C,MAAO,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC5CO,YAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACxDC,KAAM,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,aAmHvEzC,aAAc,SAEhBj9C,UAAWw9C,EAAgB,CACzB99B,OApHkB,CACpBzY,OAAQ,CACN04C,GAAI,IACJC,GAAI,IACJC,SAAU,KACVC,KAAM,IACNC,QAAS,UACTC,UAAW,YACXC,QAAS,UACTC,MAAO,SAETT,YAAa,CACXE,GAAI,KACJC,GAAI,KACJC,SAAU,WACVC,KAAM,OACNC,QAAS,UACTC,UAAW,YACXC,QAAS,UACTC,MAAO,SAETR,KAAM,CACJC,GAAI,OACJC,GAAI,OACJC,SAAU,WACVC,KAAM,OACNC,QAAS,UACTC,UAAW,YACXC,QAAS,UACTC,MAAO,UAwFPjD,aAAc,OACdU,iBAtF4B,CAC9B12C,OAAQ,CACN04C,GAAI,IACJC,GAAI,IACJC,SAAU,KACVC,KAAM,IACNC,QAAS,iBACTC,UAAW,mBACXC,QAAS,iBACTC,MAAO,YAETT,YAAa,CACXE,GAAI,KACJC,GAAI,KACJC,SAAU,WACVC,KAAM,OACNC,QAAS,iBACTC,UAAW,mBACXC,QAAS,iBACTC,MAAO,YAETR,KAAM,CACJC,GAAI,OACJC,GAAI,OACJC,SAAU,WACVC,KAAM,OACNC,QAAS,iBACTC,UAAW,mBACXC,QAAS,iBACTC,MAAO,aA0DPtC,uBAAwB,UD7H1Bl8C,MEmCU,CACVlD,cAAew/C,EAAoB,CACjCG,aAvD4B,wBAwD5BG,aAvD4B,OAwD5BC,cAAe,SAAAA,EAAUj1E,GACvB,OAAO+iB,SAAS/iB,EAAO,OAG3Bg1B,IAAKmgD,EAAa,CAChBC,cA5DmB,CACrBz3C,OAAQ,UACRw4C,YAAa,6DACbC,KAAM,8DA0DJf,kBAAmB,OACnBC,cAzDmB,CACrBuB,IAAK,CAAC,MAAO,YAyDXtB,kBAAmB,QAErB//C,QAAS2/C,EAAa,CACpBC,cA1DuB,CACzBz3C,OAAQ,WACRw4C,YAAa,YACbC,KAAM,kCAwDJf,kBAAmB,OACnBC,cAvDuB,CACzBuB,IAAK,CAAC,KAAM,KAAM,KAAM,OAuDtBtB,kBAAmB,MACnBN,cAAe,SAAAA,EAAU5qD,GACvB,OAAOA,EAAQ,KAGnBsL,MAAOw/C,EAAa,CAClBC,cA3DqB,CACvBz3C,OAAQ,eACRw4C,YAAa,sDACbC,KAAM,6FAyDJf,kBAAmB,OACnBC,cAxDqB,CACvB33C,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtFk5C,IAAK,CAAC,OAAQ,MAAO,QAAS,OAAQ,QAAS,QAAS,QAAS,OAAQ,MAAO,MAAO,MAAO,QAuD5FtB,kBAAmB,QAErB/iD,IAAK2iD,EAAa,CAChBC,cAxDmB,CACrBz3C,OAAQ,YACRi4C,MAAO,2BACPO,YAAa,kCACbC,KAAM,gEAqDJf,kBAAmB,OACnBC,cApDmB,CACrB33C,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACnDk5C,IAAK,CAAC,OAAQ,MAAO,OAAQ,MAAO,OAAQ,MAAO,SAmDjDtB,kBAAmB,QAErB7+C,UAAWy+C,EAAa,CACtBC,cApDyB,CAC3Bz3C,OAAQ,6DACRk5C,IAAK,kFAmDHxB,kBAAmB,MACnBC,cAlDyB,CAC3BuB,IAAK,CACHR,GAAI,MACJC,GAAI,MACJC,SAAU,OACVC,KAAM,OACNC,QAAS,WACTC,UAAW,aACXC,QAAS,WACTC,MAAO,WA0CPrB,kBAAmB,SFzErBp6E,QAAS,CACPu4B,aAAc,EAGdM,sBAAuB,iLGZ3B,IAAMx2B,EAAM,CAAC,OAAQ,eAAgB,EAAG,mBAElCE,EAAM,CAAC,OAAQ,WAAY,EAAG,YAC9BC,EAAM,CAAC,OAAQ,MAAO,EAAG,kBACzBC,EAAM,CAAC,gBAAiB,IAExBE,EAAM,CAAC,OAAQ,MAAO,EAAG,WACzBC,EAAM,CAAC,EAAG,aACVC,EAAM,CAAC,kBAAmB,IAC1BC,EAAM,CAAC,YAAa,IACpBC,EAAO,CAAC,kBAAmB,IAC3BC,EAAO,CAAC,CAAC,CAAC,aACVC,EAAO,CAAC,WAkDd,SAAS04E,EAAoBC,GACzB,OAAA,SAAAC,GAAAC,EAAAC,EAAAF,GAII,SAAAE,IAAexD,IAAAA,EAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,CAAAA,EAAAA,GAAAA,UAAAA,GACXjwE,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAASiwE,KAATjwE,KACAvI,EAAKi8E,SAAU,EAIfj8E,EAAKk8E,mBAAoB,EANd1D,OAAAA,EAJnB,IAAA2D,EAAAH,EAAAr7E,UAAAw7E,EA+BIC,iBAAA,SAAAA,IAEI,IAAMA,EAAmBp8E,KAAKk8E,kBAE9B,OADAl8E,KAAKk8E,mBAAoB,EAClBE,GAnCfD,EAyCIE,mBAAA,SAAAA,IACIr8E,KAAKk8E,mBAAoB,GA1CjCjhE,EAAA+gE,EAAA,CAAA,CAAArsE,IAAA,SAAA+C,IAAA,SAAAA,IAgBmB,OAAO1S,KAAKi8E,SAhB/B/+D,IAAA,SAAAA,EAqBekZ,GAEP,IAAMkmD,EAAYt8E,KAAKi8E,QACvBj8E,KAAKi8E,QAAUj7E,OAAAu7E,EAAA3xE,EAAA5J,CAAsBo1B,GACrCp2B,KAAKk8E,kBAAoBI,IAAct8E,KAAKi8E,YAzBpD,OAAAD,EAAA,CAAqBH,wBAuDnBW,EAIF,SAAAA,EAAiCzwE,GAC7B/L,KAAK+L,SAAWA,UAGxBywE,EAAW3uE,eAAiBM,EAAAL,GAAyB,CAAE/C,KAAMyxE,EAAYxxE,UAAW,CAAC,CAAC,GAAI,aAAc,KAAMtJ,QAAS,SAAAA,EAA4BC,GAAK,OAAO,IAAKA,GAAK66E,GAAYruE,EAAAlD,GAAyBkD,EAAAm0C,8BAaxMm6B,EAIF,SAAAA,EAAiC1wE,GAC7B/L,KAAK+L,SAAWA,UAGxB0wE,EAAiB5uE,eAAiBM,EAAAL,GAAyB,CAAE/C,KAAM0xE,EAAkBzxE,UAAW,CAAC,CAAC,GAAI,mBAAoB,KAAMtJ,QAAS,SAAAA,EAAkCC,GAAK,OAAO,IAAKA,GAAK86E,GAAkBtuE,EAAAlD,GAAyBkD,EAAAm0C,8BAatOo6B,EAIF,SAAAA,EAAiC3wE,GAC7B/L,KAAK+L,SAAWA,UAGxB2wE,EAAiB7uE,eAAiBM,EAAAL,GAAyB,CAAE/C,KAAM2xE,EAAkB1xE,UAAW,CAAC,CAAC,GAAI,mBAAoB,KAAMtJ,QAAS,SAAAA,EAAkCC,GAAK,OAAO,IAAKA,GAAK+6E,GAAkBvuE,EAAAlD,GAAyBkD,EAAAm0C,iBAatOq6B,iBAGN,IAAMC,EAAoBhB,EAAoBe,wBAKxCE,qBACF,SAAAA,IAAA,IAAAC,EACIv0E,EAAAA,EAAAA,MAAAA,KAAS2sB,YAAT3sB,KACAvI,EAAK+8E,YAAa,EAFtB,OAAAD,oCASI,OAAO98E,KAAKg9E,sBAMPj9D,GAGAA,IAGL/f,KAAKg9E,MAAQj9D,EACb/f,KAAKi9E,qBAAuBl9D,EAAKud,QAAQ,gBAAiB,0CAS1D,OAAOt9B,KAAK+8E,2BAMF3mD,GAEV,IAAMkmD,EAAYt8E,KAAK+8E,WACvB/8E,KAAK+8E,WAAa/7E,OAAAu7E,EAAA3xE,EAAA5J,CAAsBo1B,GACxCp2B,KAAKk8E,kBAAoBI,IAAct8E,KAAK+8E,yBA1CzBH,UA6C3BC,EAAahvE,eAAiBM,EAAAL,GAAyB,CAAE/C,KAAM8xE,EAAc7xE,UAAW,CAAC,CAAC,GAAI,eAAgB,KAAMtJ,QAAS,SAAAA,EAA8BC,GAAK,OAAOu7E,EAA0Bv7E,GAAKk7E,IAAkB9pD,eAAgB,SAAAA,EAAqCnvB,EAAIC,EAAKmvB,GAK9Q,IAAIrX,EAL+R,EAAL/X,IAC9RuK,EAAA8kB,GAAsBD,EAAUmqD,GAAY,GAC5ChvE,EAAA8kB,GAAsBD,EAAUoqD,GAAkB,GAClDjvE,EAAA8kB,GAAsBD,EAAUqqD,GAAkB,IAC3C,EAALz5E,IAEFuK,EAAA0N,GAAsBF,EAAKxN,EAAA2N,QAA0BjY,EAAI4iC,KAAO9qB,EAAGI,OACnE5N,EAAA0N,GAAsBF,EAAKxN,EAAA2N,QAA0BjY,EAAIy5E,WAAa3hE,EAAGI,OACzE5N,EAAA0N,GAAsBF,EAAKxN,EAAA2N,QAA0BjY,EAAI05E,WAAa5hE,EAAGI,SACxEzQ,OAAQ,CAAEkyE,OAAQ,SAAUz9D,KAAM,CAAC,eAAgB,QAAS09D,UAAW,aAAe9xE,SAAU,CAACwC,EAAAulB,GAA0B,CAAC,CAAE/rB,QAAS,6BAA8BgsB,YAAakpD,KAAkB1uE,EAAAvC,WAC7M,IAAMsxE,EAA4B/uE,EAAAyJ,GAA6B8lE,OAkCzDC,EAKF,SAAAA,EAAYC,EAAW3wE,GAGnBA,EAAWS,cAAcwC,UAAUC,IAAnClD,cADsC2wE,EAAUX,4CAOlDY,qBAKF,SAAAA,EAAYD,EAAW3wE,GAAAA,OACnB1E,EAAAA,KAAAA,KAAMq1E,EAAW3wE,IADEA,eALC0wE,UAS5BE,EAAchwE,eAAiBM,EAAAL,GAAyB,CAAE/C,KAAM8yE,EAAe7yE,UAAW,CAAC,CAAC,mBAAoB,CAAC,KAAM,kBAAmB,KAAMtJ,QAAS,SAAAA,EAA+BC,GAAK,OAAO,IAAKA,GAAKk8E,GAAe1vE,EAAAlD,GAAyByyE,GAAevvE,EAAAlD,GAAyBkD,EAAAJ,KAAiB5C,aAAc,SAAAA,EAAoCvH,EAAIC,EAAKuH,GAAoB,EAALxH,GACjXuK,EAAA9C,GAA0B/I,IACzBqJ,SAAU,CAACwC,EAAAvC,4BAiDdkyE,qBAKF,SAAAA,EAAYF,EAAW3wE,GAAAA,OACnB1E,EAAAA,KAAAA,KAAMq1E,EAAW3wE,IADEA,eALL0wE,UAStBG,EAAQjwE,eAAiBM,EAAAL,GAAyB,CAAE/C,KAAM+yE,EAAS9yE,UAAW,CAAC,CAAC,YAAa,CAAC,KAAM,WAAY,KAAMtJ,QAAS,SAAAA,EAAyBC,GAAK,OAAO,IAAKA,GAAKm8E,GAAS3vE,EAAAlD,GAAyByyE,GAAevvE,EAAAlD,GAAyBkD,EAAAJ,KAAiB5C,aAAc,SAAAA,EAA8BvH,EAAIC,EAAKuH,GAAoB,EAALxH,GACrUuK,EAAA9C,GAA0B7I,IACzBmJ,SAAU,CAACwC,EAAAvC,eAgCdmyE,aAKF,SAAAA,EAAYhyE,EAAUiyE,GAClBh+E,KAAK+L,SAAWA,EAChB/L,KAAKg+E,SAAWA,sBAMpB/0D,YAAA,SAAAA,EAAYhiB,GAGR,IAAKjH,KAAKi+E,eAAgB,CAEtB,IAAM9iE,EAAWlU,EAAiBkU,SAAKlU,EAAiBkU,QAAE4R,cAAiB,GAC3E/sB,KAAKi+E,eAAiBj+E,KAAKg+E,SAAS5wD,KAAKjS,GAASk5B,SAClDr0C,KAAKi+E,eAAezmD,KAAKrc,OAQjC+iE,eAAA,SAAAA,IACI,OAAOl+E,KAAKi+E,eAAezmD,KAAKx3B,KAAKmb,YAOzCgjE,oBAAA,SAAAA,EAAoB3jE,GAChB,OAAIxa,gBAAgBo+E,EACT5jE,EAAO8iE,WAAWvxE,SAEzB/L,gBAAgBq+E,EACT7jE,EAAO+iE,WAAWxxE,SAGlByO,EAAOisB,KAAK16B,0BAQzBuyE,iFAA4BP,GAGlC,IAAMQ,EAAuB3C,EAAoB0C,wBAK3CE,qBAKF,SAAAA,EAAYzyE,EAAUiyE,GAAAA,OAClBz1E,EAAAA,KAAAA,KAAMwD,EAAUiyE,IADEA,yBAStB/0D,YAAA,SAAAA,EAAYhiB,GACRsB,EAAAA,UAAM0gB,YAAN1gB,KAAAA,KAAkBtB,cAfIs3E,UAkB9BC,EAAgB3wE,eAAiBM,EAAAL,GAAyB,CAAE/C,KAAMyzE,EAAiBxzE,UAAW,CAAC,CAAC,GAAI,kBAAmB,KAAMtJ,QAAS,SAAAA,EAAiCC,GAAK,OAAO,IAAKA,GAAK68E,GAAiBrwE,EAAAlD,GAAyBkD,EAAAm0C,IAAcn0C,EAAAlD,GAAyBkD,EAAA9F,KAAsBiD,OAAQ,CAAE6P,QAAS,CAAC,kBAAmB,WAAYqiE,OAAQ,CAAC,wBAAyB,WAAa7xE,SAAU,CAACwC,EAAAvC,GAAmCuC,EAAAylB,iBAiB9a6qD,iFAA4BV,GAGlC,IAAMW,EAAuB9C,EAAoB6C,wBAK3CE,qBAKF,SAAAA,EAAY5yE,EAAUiyE,GAAAA,OAClBz1E,EAAAA,KAAAA,KAAMwD,EAAUiyE,IADEA,yBAStB/0D,YAAA,SAAAA,EAAYhiB,GACRsB,EAAAA,UAAM0gB,YAAN1gB,KAAAA,KAAkBtB,cAfIy3E,UAkB9BC,EAAgB9wE,eAAiBM,EAAAL,GAAyB,CAAE/C,KAAM4zE,EAAiB3zE,UAAW,CAAC,CAAC,GAAI,kBAAmB,KAAMtJ,QAAS,SAAAA,EAAiCC,GAAK,OAAO,IAAKA,GAAKg9E,GAAiBxwE,EAAAlD,GAAyBkD,EAAAm0C,IAAcn0C,EAAAlD,GAAyBkD,EAAA9F,KAAsBiD,OAAQ,CAAE6P,QAAS,CAAC,kBAAmB,WAAYqiE,OAAQ,CAAC,wBAAyB,WAAa7xE,SAAU,CAACwC,EAAAvC,GAAmCuC,EAAAylB,8BAmB9agrD,qBAOF,SAAAA,EAAY7yE,EAAUiyE,GAAAA,OAClBz1E,EAAAA,KAAAA,KAAMwD,EAAUiyE,IADEA,eAPFD,UAWxBa,EAAU/wE,eAAiBM,EAAAL,GAAyB,CAAE/C,KAAM6zE,EAAW5zE,UAAW,CAAC,CAAC,GAAI,YAAa,KAAMtJ,QAAS,SAAAA,EAA2BC,GAAK,OAAO,IAAKA,GAAKi9E,GAAWzwE,EAAAlD,GAAyBkD,EAAAm0C,IAAcn0C,EAAAlD,GAAyBkD,EAAA9F,KAAsBiD,OAAQ,CAAE6P,QAAS,CAAC,mBAAoB,WAAY0jE,KAAM,CAAC,gBAAiB,SAAWlzE,SAAU,CAACwC,EAAAvC,4BAiBlWkzE,aAIF,SAAAA,EAAYC,GACR/+E,KAAK++E,eAAiBA,EACtBD,EAAcE,qBAAuBh/E,yBAKzCoJ,YAAA,SAAAA,IAGQ01E,EAAcE,uBAAyBh/E,OACvC8+E,EAAcE,qBAAuB,0BAIjDF,EAAcjxE,eAAiBM,EAAAL,GAAyB,CAAE/C,KAAM+zE,EAAe9zE,UAAW,CAAC,CAAC,GAAI,gBAAiB,KAAMtJ,QAAS,SAAAA,EAA+BC,GAAK,OAAO,IAAKA,GAAKm9E,GAAe3wE,EAAAlD,GAAyBkD,EAAAinC,QAY7N0pC,EAAcE,qBAAuB,2BAQ/BC,wBAENA,EAAap0E,eAAiBsD,EAAArD,GAAyB,CAAEC,KAAMk0E,EAAcj0E,UAAW,CAAC,CAAC,kBAAmB,CAAC,KAAM,iBAAkB,KAAMtJ,QAAS,SAAAA,EAA8BC,GAAK,OAAO,IAAKA,GAAKs9E,IAAoB9zE,aAAc,SAAAA,EAAmCvH,EAAIC,EAAKuH,GAAoB,EAALxH,GAC9RuK,EAAA9C,GAA0B5I,IACzBoJ,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAA+BnI,EAAIC,GAAgB,EAALD,GAC7EuK,EAAA+wE,GAA0B,EAAGx8E,IAC5BsJ,WAAY,CAACmzE,GAAgB/yE,cAAe,0BA0C/CgzE,wBAENA,EAAOv0E,eAAiBsD,EAAArD,GAAyB,CAAEC,KAAMq0E,EAAQp0E,UAAW,CAAC,CAAC,WAAY,CAAC,KAAM,UAAW,KAAMtJ,QAAS,SAAAA,EAAwBC,GAAK,OAAO,IAAKA,GAAKy9E,IAAcj0E,aAAc,SAAAA,EAA6BvH,EAAIC,EAAKuH,GAAoB,EAALxH,GAClPuK,EAAA9C,GAA0BzI,IACzBiJ,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAAyBnI,EAAIC,GAAgB,EAALD,GACvEuK,EAAA+wE,GAA0B,EAAGx8E,IAC5BsJ,WAAY,CAACmzE,GAAgB/yE,cAAe,SA0BrD,IAAMizE,EAAoB,CAAC,MAAO,SAAU,OAAQ,aAK9CC,aAUF,SAAAA,EAAYC,EAAoBC,EAAelsC,EAAWmsC,GAAa,GAAbA,SAAa,EAAA,CAAbA,GAAa,EACnEz/E,KAAKu/E,mBAAqBA,EAC1Bv/E,KAAKw/E,cAAgBA,EACrBx/E,KAAKszC,UAAYA,EACjBtzC,KAAKy/E,WAAaA,sBAStBC,uBAAA,SAAAA,EAAuB/4C,EAAMg5C,GACzB,IAAA,IAAAC,EAAkBj5C,EAAlBk5C,EAAAhzD,MAAAC,QAAA8yD,GAAAE,EAAA,EAAAF,EAAAC,EAAAD,EAAAA,EAAA7wE,OAAA4rC,cAAA,CAAA,IAAAolC,EAAA,GAAAF,EAAA,CAAA,GAAAC,GAAAF,EAAAj6E,OAAA,MAAAo6E,EAAAH,EAAAE,SAAA,CAAAA,EAAAF,EAAAt+E,OAAA,GAAAw+E,EAAAjlC,KAAA,MAAAklC,EAAAD,EAAAh7E,MAAA,IAAW4mC,EAAXq0C,EAGI,GAAIr0C,EAAImY,WAAanY,EAAIs0C,aAAzB,CAGAhgF,KAAKigF,mBAAmBv0C,EAAKi0C,GAC7B,IAAK,IAAIttE,EAAI,EAAGA,EAAIq5B,EAAI6yB,SAAS54D,OAAQ0M,IAAzC,CAGIrS,KAAKigF,mBAD2Bv0C,EAAI6yB,SAASlsD,GACfstE,SAc1CO,oBAAA,SAAAA,EAAoBv5C,EAAMw5C,EAAmBC,GAEzC,IAAMC,EAAmBF,EAAkB70D,KAI3CrX,SAAAA,GAAAA,OAASA,KAAWmsE,EAAgB90D,KAIpCrX,SAAAA,GAAAA,OAASA,IACT,IAAK0yB,EAAKhhC,SAAW06E,IAAqBrgF,KAAKy/E,WAC3C,OAGJ,IAAMa,EAAW35C,EAAK,GAEhB45C,EAAWD,EAAS/hB,SAAS54D,OAE7B66E,EAAaxgF,KAAKygF,eAAeH,GAEjCI,EAAiB1gF,KAAK2gF,+BAA+BH,EAAYL,GAEjES,EAAe5gF,KAAK6gF,6BAA6BL,EAAYJ,GAE7D5vD,EAA2B,QAAnBxwB,KAAKszC,UACnB,IAAA,IAAAwtC,EAAkBn6C,EAAlBo6C,EAAAl0D,MAAAC,QAAAg0D,GAAAE,EAAA,EAAAF,EAAAC,EAAAD,EAAAA,EAAA/xE,OAAA4rC,cAAA,CAAA,IAAAsmC,EAAA,GAAAF,EAAA,CAAA,GAAAC,GAAAF,EAAAn7E,OAAA,MAAAs7E,EAAAH,EAAAE,SAAA,CAAAA,EAAAF,EAAAx/E,OAAA,GAAA0/E,EAAAnmC,KAAA,MAAAomC,EAAAD,EAAAl8E,MAAA,IAAW4mC,EAAXu1C,EACI,IAAK,IAAI5uE,EAAI,EAAGA,EAAIkuE,EAAUluE,IAAK,CAE/B,IAAMo0B,EAA0BiF,EAAI6yB,SAASlsD,GACzC8tE,EAAkB9tE,IAClBrS,KAAKkhF,gBAAgBz6C,EAAMjW,EAAQ,QAAU,OAAQkwD,EAAeruE,IAEpE+tE,EAAgB/tE,IAChBrS,KAAKkhF,gBAAgBz6C,EAAMjW,EAAQ,OAAS,QAASowD,EAAavuE,SAiBlF8uE,UAAA,SAAAA,EAAUC,EAAaC,EAAc5sC,GAEjC,IAAKz0C,KAAKy/E,WACN,OAKJ,IAAM94C,EAAoB,WAAb8N,EAAwB2sC,EAAY1uD,UAAY0uD,EAE7D,IAAIE,EAAe,EACnB,IAAK,IAAI16C,EAAW,EAAGA,EAAWD,EAAKhhC,OAAQihC,IAAY,CACvD,IAAKy6C,EAAaz6C,GACd,SAGJ,IAAM8E,EAAM/E,EAAKC,GACjB,GAAI5mC,KAAKu/E,mBACL,IAAK,IAAIn8D,EAAI,EAAGA,EAAIsoB,EAAI6yB,SAAS54D,OAAQyd,IAAzC,CAGIpjB,KAAKkhF,gBAD2Bx1C,EAAI6yB,SAASn7C,GAClBqxB,EAAU6sC,QAMzCthF,KAAKkhF,gBAAgBx1C,EAAK+I,EAAU6sC,GAExC,GAAI16C,IAAaD,EAAKhhC,OAAS,EAE3B,OAEJ27E,GAAgB51C,EAAInjB,wBAAwB4I,WAYpDowD,4BAAA,SAAAA,EAA4BC,EAAcH,GACtC,IAAKrhF,KAAKu/E,mBACN,OAGJ,IAAMkC,EAA2BD,EAAa9wE,cAAc,SACxD2wE,EAAa/1D,KAIjBrX,SAAAA,GAAAA,OAAUA,IACNjU,KAAKigF,mBAAmBwB,EAAO,CAAC,WAGhCzhF,KAAKkhF,gBAAgBO,EAAO,SAAU,MAW9CxB,mBAAA,SAAAA,EAAmBp/E,EAAS8+E,GACxB,IAAA,IAAA+B,EAAkB/B,EAAlBgC,EAAA90D,MAAAC,QAAA40D,GAAAE,EAAA,EAAAF,EAAAC,EAAAD,EAAAA,EAAA3yE,OAAA4rC,cAAA,CAAA,IAAAknC,EAAA,GAAAF,EAAA,CAAA,GAAAC,GAAAF,EAAA/7E,OAAA,MAAAk8E,EAAAH,EAAAE,SAAA,CAAAA,EAAAF,EAAApgF,OAAA,GAAAsgF,EAAA/mC,KAAA,MAAAgnC,EAAAD,EAAA98E,MAAA,IAAWwkD,EAAXu4B,EACIhhF,EAAQ+oB,MAAM0/B,GAAO,GAEzBzoD,EAAQ+oB,MAAMk4D,OAAS9hF,KAAK+hF,qBAAqBlhF,GAI5Bw+E,EAAkB/zD,KAIvCg+B,SAAAA,GAAAA,QAASzoD,EAAQ+oB,MAAM0/B,OAEnBzoD,EAAQ+oB,MAAM6qB,SAAW,GACzB5zC,EAAQqP,UAAUkuD,OAAOp+D,KAAKw/E,mBAYtC0B,gBAAA,SAAAA,EAAgBrgF,EAASyoD,EAAK04B,GAC1BnhF,EAAQqP,UAAUC,IAAInQ,KAAKw/E,eAC3B3+E,EAAQ+oB,MAAM0/B,GAAU04B,EAAxBnhF,KACAA,EAAQ+oB,MAAMq4D,SAAW,+CACzBphF,EAAQ+oB,MAAMk4D,OAAS9hF,KAAK+hF,qBAAqBlhF,MAerDkhF,qBAAA,SAAAA,EAAqBlhF,GAEjB,IAAMqhF,EAAmB,CACrB3wD,IAAK,IACLE,OAAQ,GACRb,KAAM,EACNE,MAAO,GAGX,IAAIgxD,EAAS,EACb,IAAA,IAAAK,EAAA,EAAAC,EAAkB/C,EAAlB8C,EAAAC,EAAAz8E,OAAAw8E,IAAA,CAAK,IAAM74B,EAAAA,EAAAA,GACHzoD,EAAQ+oB,MAAM0/B,KACdw4B,GAAUI,EAAiB54B,IAGnC,OAAOw4B,EAAAA,GAAYA,EAAW,MAOlCrB,eAAA,SAAAA,EAAe/0C,GAEX,IAAM80C,EAAa,GAEb6B,EAAgB32C,EAAI6yB,SAC1B,IAAK,IAAIlsD,EAAI,EAAGA,EAAIgwE,EAAc18E,OAAQ0M,IAA1C,CAGImuE,EAAWn2E,KADmBg4E,EAAchwE,GACvBkW,wBAAwBwI,OAEjD,OAAOyvD,KAUXG,+BAAA,SAAAA,EAA+B2B,EAAQjB,GAEnC,IAAMhsB,EAAY,GAElB,IAAIktB,EAAe,EACnB,IAAK,IAAIlwE,EAAI,EAAGA,EAAIiwE,EAAO38E,OAAQ0M,IAAnC,CACQgvE,EAAahvE,KACbgjD,EAAUhjD,GAAKkwE,EACfA,GAAgBD,EAAOjwE,IAG/B,OAAOgjD,KAUXwrB,6BAAA,SAAAA,EAA6ByB,EAAQjB,GAEjC,IAAMhsB,EAAY,GAElB,IAAIktB,EAAe,EACnB,IAAK,IAAIlwE,EAAIiwE,EAAO38E,OAAQ0M,EAAI,EAAGA,IAAnC,CACQgvE,EAAahvE,KACbgjD,EAAUhjD,GAAKkwE,EACfA,GAAgBD,EAAOjwE,IAG/B,OAAOgjD,eAef,SAASmtB,EAA2BpqE,GAChC,OAAOjJ,MAAAA,kCAAwCiJ,EAAxCjJ,2BAuELszE,EAKF,SAAAA,EAAYC,EAAez1E,GACvBjN,KAAK0iF,cAAgBA,EACrB1iF,KAAKiN,WAAaA,UAG1Bw1E,EAAc50E,eAAiBM,EAAAL,GAAyB,CAAE/C,KAAM03E,EAAez3E,UAAW,CAAC,CAAC,GAAI,YAAa,KAAMtJ,QAAS,SAAAA,EAA+BC,GAAK,OAAO,IAAKA,GAAK8gF,GAAet0E,EAAAlD,GAAyBkD,EAAAinC,IAAmBjnC,EAAAlD,GAAyBkD,EAAAJ,8BAc/P40E,EAKF,SAAAA,EAAYD,EAAez1E,GACvBjN,KAAK0iF,cAAgBA,EACrB1iF,KAAKiN,WAAaA,UAG1B01E,EAAgB90E,eAAiBM,EAAAL,GAAyB,CAAE/C,KAAM43E,EAAiB33E,UAAW,CAAC,CAAC,GAAI,kBAAmB,KAAMtJ,QAAS,SAAAA,EAAiCC,GAAK,OAAO,IAAKA,GAAKghF,GAAiBx0E,EAAAlD,GAAyBkD,EAAAinC,IAAmBjnC,EAAAlD,GAAyBkD,EAAAJ,8BAc7Q60E,EAKF,SAAAA,EAAYF,EAAez1E,GACvBjN,KAAK0iF,cAAgBA,EACrB1iF,KAAKiN,WAAaA,UAG1B21E,EAAgB/0E,eAAiBM,EAAAL,GAAyB,CAAE/C,KAAM63E,EAAiB53E,UAAW,CAAC,CAAC,GAAI,kBAAmB,KAAMtJ,QAAS,SAAAA,EAAiCC,GAAK,OAAO,IAAKA,GAAKihF,GAAiBz0E,EAAAlD,GAAyBkD,EAAAinC,IAAmBjnC,EAAAlD,GAAyBkD,EAAAJ,8BAgC7Q80E,aAUF,SAAAA,EAAY7E,EAAU11E,EAAoBoc,EAAak+B,EAAMv9B,EAAMksB,EAAWuxC,GAC1E9iF,KAAKg+E,SAAWA,EAChBh+E,KAAKsI,mBAAqBA,EAC1BtI,KAAK0kB,YAAcA,EACnB1kB,KAAKqlB,KAAOA,EACZrlB,KAAK8iF,UAAYA,EAIjB9iF,KAAK+iF,WAAa,IAAIn0B,EAAAA,EAMtB5uD,KAAKgjF,kBAAoB,IAAI3lC,IAM7Br9C,KAAKijF,kBAAoB,IAAIC,IAM7BljF,KAAKmjF,eAAiB,IAAID,IAM1BljF,KAAKojF,qBAAuB,IAAIF,IAMhCljF,KAAKqjF,qBAAuB,IAAIH,IAKhCljF,KAAKsjF,sBAAuB,EAK5BtjF,KAAKujF,sBAAuB,EAc5BvjF,KAAKwjF,qBAAuB,IAAInmC,IAKhCr9C,KAAKyjF,eAAiB,mBACtBzjF,KAAK0jF,wBAAyB,EAS9B1jF,KAAK2jF,WAAa,IAAIpnE,EAAAA,EAAgB,CAAEmjC,MAAO,EAAGC,IAAKxH,OAAOyrC,YACzDhhC,GACD5iD,KAAK0kB,YAAYhX,cAAcuC,aAAa,OAAQ,QAExDjQ,KAAKuxC,UAAYA,EACjBvxC,KAAKu/E,mBAAiE,UAA5Cv/E,KAAK0kB,YAAYhX,cAAc2nB,6BAiF7DrsB,SAAA,SAAAA,IAAA,IAAA66E,EAAA7jF,KACIA,KAAK8jF,qBACD9jF,KAAKu/E,oBACLv/E,KAAK+jF,4BAKT/jF,KAAKgkF,YAAchkF,KAAKg+E,SAAS5wD,KAAK,IAAIinB,OAAO,SAKhDo3B,EAAIwY,GAL4C,OAMtCjkF,EAAKkkF,QAAUlkF,EAAKkkF,QAAQD,EAAQE,UAAWF,EAAQluE,MAAQkuE,OAM9ElrB,sBAAA,SAAAA,IAKI,GAHA/4D,KAAKokF,gBACLpkF,KAAKqkF,oBAEArkF,KAAKskF,eAAe3+E,SAAW3F,KAAKukF,eAAe5+E,SAAW3F,KAAKwkF,SAAS7+E,OAC7E,MAtUDwJ,MAAM,uGAyUTnP,KAAKykF,wBAEDzkF,KAAKsjF,uBACLtjF,KAAK0kF,yBACL1kF,KAAKsjF,sBAAuB,GAG5BtjF,KAAKujF,uBACLvjF,KAAK2kF,yBACL3kF,KAAKujF,sBAAuB,GAI5BvjF,KAAK2W,YAAc3W,KAAKwkF,SAAS7+E,OAAS,IAAM3F,KAAK4kF,2BACrD5kF,KAAK6kF,wBAET7kF,KAAK8kF,wBAKT17E,YAAA,SAAAA,IACIpJ,KAAK+kF,WAAWrC,cAAcjpE,QAC9BzZ,KAAKglF,iBAAiBtC,cAAcjpE,QACpCzZ,KAAKilF,iBAAiBvC,cAAcjpE,QACpCzZ,KAAKwjF,qBAAqB/pE,QAC1BzZ,KAAK+iF,WAAWzhF,OAChBtB,KAAK+iF,WAAW3zE,WACZpO,OAAA8V,EAAA2M,EAAAziB,CAAahB,KAAK2W,aAClB3W,KAAK2W,WAAW03D,WAAWruE,SAcnCklF,WAAA,SAAAA,IAAA,IAAAC,EAAAnlF,KACIA,KAAKolF,YAAcplF,KAAKqlF,oBAExB,IAAMp+E,EAAUjH,KAAKgkF,YAAYxsD,KAAKx3B,KAAKolF,aAC3C,IAAKn+E,EACD,OAGJ,IAAMy7E,EAAgB1iF,KAAK+kF,WAAWrC,cACtCz7E,EAAQq+E,iBAAiB,SAMxBC,EAAQC,EAAWC,GAChB,GAA4B,MAAxBF,EAAOG,cACP1lF,EAAK2lF,WAAWJ,EAAOjtE,KAAMmtE,QAE5B,GAAoB,MAAhBA,EACL/C,EAActkB,OAAOonB,OAEpB,CAED,IAAM/1C,EAA0BizC,EAAchwE,IAAI8yE,GAClD9C,EAAckD,KAAKn2C,EAA2Bg2C,MAItDzlF,KAAK6lF,yBAGL5+E,EAAQ6+E,sBAIPP,SAAAA,GAEsC7C,EAAchwE,IAAuB6yE,EAAoBE,cACpFjrD,QAAQt2B,UAAYqhF,EAAOjtE,KAAKvC,OAE5C/V,KAAK+lF,8BAYTC,gBAAA,SAAAA,EAAgBC,GACZjmF,KAAKojF,qBAAuB,IAAIF,IAAI,CAAC+C,IACrCjmF,KAAKsjF,sBAAuB,KAYhC4C,gBAAA,SAAAA,EAAgBC,GACZnmF,KAAKqjF,qBAAuB,IAAIH,IAAI,CAACiD,IACrCnmF,KAAKujF,sBAAuB,KAOhC6C,aAAA,SAAAA,EAAaxI,GACT59E,KAAKijF,kBAAkB9yE,IAAIytE,MAO/ByI,gBAAA,SAAAA,EAAgBzI,GACZ59E,KAAKijF,kBAALjjF,UAA8B49E,MAOlC0I,UAAA,SAAAA,EAAUC,GACNvmF,KAAKmjF,eAAehzE,IAAIo2E,MAO5BC,aAAA,SAAAA,EAAaD,GACTvmF,KAAKmjF,eAALnjF,UAA2BumF,MAO/BE,gBAAA,SAAAA,EAAgBR,GACZjmF,KAAKojF,qBAAqBjzE,IAAI81E,GAC9BjmF,KAAKsjF,sBAAuB,KAOhCoD,mBAAA,SAAAA,EAAmBT,GACfjmF,KAAKojF,qBAALpjF,UAAiCimF,GACjCjmF,KAAKsjF,sBAAuB,KAOhCqD,gBAAA,SAAAA,EAAgBR,GACZnmF,KAAKqjF,qBAAqBlzE,IAAIg2E,GAC9BnmF,KAAKujF,sBAAuB,KAOhCqD,mBAAA,SAAAA,EAAmBT,GACfnmF,KAAKqjF,qBAALrjF,UAAiCmmF,GACjCnmF,KAAKujF,sBAAuB,KAUhCsD,4BAAA,SAAAA,IAEI,IAAMC,EAAa9mF,KAAK+mF,iBAAiB/mF,KAAKglF,kBAOxCgC,EALkChnF,KAAK0kB,YAA0BhX,cAK5CgD,cAAc,SACrCs2E,IACAA,EAAMp9D,MAAMtU,QAAUwxE,EAAWnhF,OAAS,GAAK,QAGnD,IAAM07E,EAAerhF,KAAKskF,eAAe55E,IAIzCu8E,SAAAA,GAAAA,OAAOA,EAAIzJ,SACXx9E,KAAKknF,cAAcxH,uBAAuBoH,EAAY,CAAC,QACvD9mF,KAAKknF,cAAc/F,UAAU2F,EAAYzF,EAAc,OAEvDrhF,KAAKskF,eAAejjF,QAIpB4lF,SAAAA,GAAAA,OAAOA,EAAI5K,0BAUf8K,4BAAA,SAAAA,IAEI,IAAMC,EAAapnF,KAAK+mF,iBAAiB/mF,KAAKilF,kBAOxCxD,EALkCzhF,KAAK0kB,YAA0BhX,cAK5CgD,cAAc,SACrC+wE,IACAA,EAAM73D,MAAMtU,QAAU8xE,EAAWzhF,OAAS,GAAK,QAGnD,IAAM07E,EAAerhF,KAAKukF,eAAe75E,IAIzCu8E,SAAAA,GAAAA,OAAOA,EAAIzJ,SACXx9E,KAAKknF,cAAcxH,uBAAuB0H,EAAY,CAAC,WACvDpnF,KAAKknF,cAAc/F,UAAUiG,EAAY/F,EAAc,UACvDrhF,KAAKknF,cAAc3F,4BAA4BvhF,KAAK0kB,YAAYhX,cAAe2zE,GAE/ErhF,KAAKukF,eAAeljF,QAIpB4lF,SAAAA,GAAAA,OAAOA,EAAI5K,0BAUf0J,yBAAA,SAAAA,IAAA,IAAAsB,EAAArnF,KAEI,IAAM8mF,EAAa9mF,KAAK+mF,iBAAiB/mF,KAAKglF,kBAExCsC,EAAWtnF,KAAK+mF,iBAAiB/mF,KAAK+kF,YAEtCqC,EAAapnF,KAAK+mF,iBAAiB/mF,KAAKilF,kBAG9CjlF,KAAKknF,cAAcxH,uBAAnB1/E,GAAAA,OAA8C8mF,EAAeQ,EAAaF,GAAa,CAAC,OAAQ,UAEhGN,EAAWzlF,QAAQ,SAKlBkmF,EAAWl1E,GACRrS,EAAKwnF,uBAAuB,CAACD,GAAYvnF,EAAKskF,eAAejyE,MAGjErS,KAAKwkF,SAASnjF,QAIdklF,SAAAA,GAGI,IAAM5/C,EAAO,GACb,IAAK,IAAIt0B,EAAI,EAAGA,EAAIi1E,EAAS3hF,OAAQ0M,IAArC,CACQrS,EAAKolF,YAAY/yE,GAAGk0E,SAAWA,GAC/B5/C,EAAKt8B,KAAKi9E,EAASj1E,IAG3BrS,EAAKwnF,uBAAuB7gD,EAAM4/C,KAGtCa,EAAW/lF,QAAQ,SAKlBomF,EAAWp1E,GACRrS,EAAKwnF,uBAAuB,CAACC,GAAYznF,EAAKukF,eAAelyE,MAGjEwa,MAAM8sB,KAAK35C,KAAKgjF,kBAAkB9nC,UAAU75C,QAI5C4lF,SAAAA,GAAAA,OAAOA,EAAI5K,0BASfgJ,kBAAA,SAAAA,IAEI,IAAMH,EAAa,GAIbwC,EAAuB1nF,KAAKwjF,qBAClCxjF,KAAKwjF,qBAAuB,IAAInmC,IAGhC,IAAK,IAAIhrC,EAAI,EAAGA,EAAIrS,KAAK2nF,MAAMhiF,OAAQ0M,IAAK,CAExC,IAAI0D,EAAO/V,KAAK2nF,MAAMt1E,GAEtB,IAAMu1E,EAAoB5nF,KAAK6nF,sBAAsB9xE,EAAM1D,EAAGq1E,EAAqBh1E,IAAIqD,IAClF/V,KAAKwjF,qBAAqBvoB,IAAIllD,IAC/B/V,KAAKwjF,qBAAqBtmE,IAAInH,EAAM,IAAIy7D,SAE5C,IAAK,IAAIpuD,EAAI,EAAGA,EAAIwkE,EAAkBjiF,OAAQyd,IAAK,CAE/C,IAAI0kE,EAAYF,EAAkBxkE,GAElC,IAAM2kE,EAA2B/nF,KAAKwjF,qBAAqB9wE,IAAIo1E,EAAU/xE,MACrEgyE,EAAM9sB,IAAI6sB,EAAUvB,QACDwB,EAAMr1E,IAAIo1E,EAAUvB,QAAUl8E,KAAKy9E,GAGtDC,EAAM7qE,IAAI4qE,EAAUvB,OAAQ,CAACuB,IAEjC5C,EAAW76E,KAAKy9E,IAGxB,OAAO5C,KAYX2C,sBAAA,SAAAA,EAAsB9xE,EAAMouE,EAAW4D,GAGnC,OADgB/nF,KAAKgoF,YAAYjyE,EAAMouE,GACxBz5E,IAIf67E,SAAAA,GAEI,IAAM0B,EAAoBF,GAASA,EAAM9sB,IAAIsrB,GAA8BwB,EAAMr1E,IAAI6zE,GAAY,GACjG,GAAI0B,EAAiBtiF,OAAQ,CAEzB,IAAMs+E,EAA6BgE,EAAiBjwE,QAEpD,OADAisE,EAAQE,UAAYA,EACbF,EAGP,MAAO,CAAEluE,KAAAA,EAAMwwE,OAAAA,EAAQpC,UAAAA,QASnCE,iBAAA,SAAAA,IAAA,IAAA6D,EAAAloF,KACIA,KAAKgjF,kBAAkBvpE,QAEJ0uE,GAAqBnoF,KAAKooF,mBAAoBpoF,KAAKijF,mBAC3D5hF,QAIXu8E,SAAAA,GACI,GAAI59E,EAAKgjF,kBAAkB/nB,IAAI2iB,EAAU79D,MACrC,MArvBhB,SAA0CA,GACtC,OAAO5Q,MAAAA,+CAovB4CyuE,EAAU79D,KApvBtD5Q,MADX,GAuvBYnP,EAAKgjF,kBAAkB9lE,IAAI0gE,EAAU79D,KAAM69D,QAQnDwG,cAAA,SAAAA,IACIpkF,KAAKskF,eACD6D,GAAqBnoF,KAAKqoF,sBAAuBroF,KAAKojF,sBAC1DpjF,KAAKukF,eACD4D,GAAqBnoF,KAAKsoF,sBAAuBtoF,KAAKqjF,sBAC1DrjF,KAAKwkF,SAAW2D,GAAqBnoF,KAAKuoF,gBAAiBvoF,KAAKmjF,gBAGhE,IAAMqF,EAAiBxoF,KAAKwkF,SAASzqE,OAIrCktE,SAAAA,GAAAA,OAAQA,EAAIpI,OACZ,IAAK7+E,KAAKyoF,uBAAyBD,EAAe7iF,OAAS,EACvD,MApwBDwJ,MAAM,wEAswBTnP,KAAK0oF,eAAiBF,EAAe,MASzC/D,sBAAA,SAAAA,IAEI,IAAMkE,EAAqB,SAArBA,EAKLC,EAAK3B,GALqB,OAKb2B,KAAS3B,EAAI/I,kBAEvBl+E,KAAKwkF,SAAS/kE,OAAOkpE,GAAoB,IACzC3oF,KAAK6oF,uBAGL7oF,KAAKskF,eAAe7kE,OAAOkpE,GAAoB,IAC/C3oF,KAAK0kF,yBAEL1kF,KAAKukF,eAAe9kE,OAAOkpE,GAAoB,IAC/C3oF,KAAK2kF,4BAWbmE,kBAAA,SAAAA,EAAkBnyE,GACd3W,KAAK2nF,MAAQ,GACT3mF,OAAA8V,EAAA2M,EAAAziB,CAAahB,KAAK2W,aAClB3W,KAAK2W,WAAW03D,WAAWruE,MAG3BA,KAAK4kF,4BACL5kF,KAAK4kF,0BAA0Bv7E,cAC/BrJ,KAAK4kF,0BAA4B,MAEhCjuE,IACG3W,KAAKgkF,aACLhkF,KAAKgkF,YAAYxsD,KAAK,IAE1Bx3B,KAAK+kF,WAAWrC,cAAcjpE,SAElCzZ,KAAK+oF,YAAcpyE,KAOvBkuE,sBAAA,SAAAA,IAAA,IAAAmE,EAAAhpF,KAEI,IAAKA,KAAK2W,WACN,OAGJ,IAAIsyE,EAUJ,GATIjoF,OAAA8V,EAAA2M,EAAAziB,CAAahB,KAAK2W,YAClBsyE,EAAajpF,KAAK2W,WAAWuyE,QAAQlpF,MAEhCA,KAAK2W,sBAAsBwyE,EAAAA,EAChCF,EAAajpF,KAAK2W,WAEbkW,MAAMC,QAAQ9sB,KAAK2W,cACxBsyE,EAAajoF,OAAAmwD,EAAA9wD,EAAAW,CAAGhB,KAAK2W,kBAEN1H,IAAfg6E,EACA,MAxzBD95E,MAAM,0EA0zBTnP,KAAK4kF,0BAA4BqE,EAAWloF,KAAKC,OAAAgzE,EAAA3zE,EAAAW,CAAUhB,KAAK+iF,aAAaj6E,UAI7EiN,SAAAA,GACI/V,EAAK2nF,MAAQ5xE,GAAQ,GACrB/V,EAAKklF,kBASbR,uBAAA,SAAAA,IAAA,IAAA0E,EAAAppF,KAEQA,KAAKglF,iBAAiBtC,cAAc/8E,OAAS,GAC7C3F,KAAKglF,iBAAiBtC,cAAcjpE,QAExCzZ,KAAKskF,eAAejjF,QAAQ,SAK3B4lF,EAAK50E,GALsB,OAKhBrS,EAAKqpF,WAAWrpF,EAAKglF,iBAAkBiC,EAAK50E,KACxDrS,KAAK6mF,8BACL7mF,KAAK+lF,8BAQTpB,uBAAA,SAAAA,IAAA,IAAA2E,EAAAtpF,KAEQA,KAAKilF,iBAAiBvC,cAAc/8E,OAAS,GAC7C3F,KAAKilF,iBAAiBvC,cAAcjpE,QAExCzZ,KAAKukF,eAAeljF,QAAQ,SAK3B4lF,EAAK50E,GALsB,OAKhBrS,EAAKqpF,WAAWrpF,EAAKilF,iBAAkBgC,EAAK50E,KACxDrS,KAAKmnF,8BACLnnF,KAAK+lF,8BASTyB,uBAAA,SAAAA,EAAuB7gD,EAAM4/C,GAAAA,IAAAA,EAAAA,KAEzB,IAAMgD,EAAa18D,MAAM8sB,KAAK4sC,EAAOprE,SAAW,IAAIzQ,IAIpD8+E,SAAAA,GAEI,IAAM5L,EAAY59E,EAAKgjF,kBAAkBtwE,IAAI82E,GAC7C,IAAK5L,EACD,MAAM4E,EAA2BgH,GAErC,OAAO5L,IAGLuC,EAAoBoJ,EAAW7+E,IAIrCkzE,SAAAA,GAAAA,OAAaA,EAAUJ,SAEjB4C,EAAkBmJ,EAAW7+E,IAInCkzE,SAAAA,GAAAA,OAAaA,EAAUH,YACvBz9E,KAAKknF,cAAchH,oBAAoBv5C,EAAMw5C,EAAmBC,MAOpE2G,iBAAA,SAAAA,EAAiB0C,GAEb,IAAMC,EAAe,GACrB,IAAK,IAAIr3E,EAAI,EAAGA,EAAIo3E,EAAU/G,cAAc/8E,OAAQ0M,IAAK,CAErD,IAAMs3E,EAAiDF,EAAU/G,cAAchwE,IAAIL,GACnFq3E,EAAar/E,KAAKs/E,EAAQC,UAAU,IAExC,OAAOF,KAWX1B,YAAA,SAAAA,EAAYjyE,EAAMouE,GACd,GAA4B,GAAxBnkF,KAAKwkF,SAAS7+E,OACd,MAAO,CAAC3F,KAAKwkF,SAAS,IAG1B,IAAIqF,EAAU,GACd,GAAI7pF,KAAKyoF,sBACLoB,EAAU7pF,KAAKwkF,SAASzqE,OAIxBktE,SAAAA,GAAAA,OAAQA,EAAIpI,MAAQoI,EAAIpI,KAAKsF,EAAWpuE,SAEvC,CAED,IAAIwwE,EAASvmF,KAAKwkF,SAASp3D,KAI3B65D,SAAAA,GAAAA,OAAOA,EAAIpI,MAAQoI,EAAIpI,KAAKsF,EAAWpuE,MAAW/V,KAAK0oF,eACnDnC,GACAsD,EAAQx/E,KAAKk8E,GAGrB,IAAKsD,EAAQlkF,OACT,MAl9BZ,SAA4CoQ,GACxC,OAAO5G,MAAM,oDAAA,sBACaiP,KAAKC,UAAUtI,KAF7C,CAk9BqDA,GAE7C,OAAO8zE,KAUXlE,WAAA,SAAAA,EAAWmC,EAAWgC,GAKlB9pF,KAAKqpF,WAAWrpF,KAAK+kF,WAHN+C,EAAUvB,OAGgBuD,EADzB,CAAE5lF,UAAW4jF,EAAU/xE,UAc3CszE,WAAA,SAAAA,EAAWjvE,EAAQmsE,EAAQp3D,EAAOqL,GAAU,GAAVA,SAAU,EAAA,CAAVA,EAAU,GAExCpgB,EAAOsoE,cAAcqH,mBAAmBxD,EAAOx6E,SAAUyuB,EAASrL,GAClE,IAAA,IAAA66D,EAAyBhqF,KAAKiqF,kBAAkB1D,GAAhD2D,EAAAr9D,MAAAC,QAAAk9D,GAAAG,EAAA,EAAAH,EAAAE,EAAAF,EAAAA,EAAAj7E,OAAA4rC,cAAA,CAAA,IAAAyvC,EAAA,GAAAF,EAAA,CAAA,GAAAC,GAAAH,EAAArkF,OAAA,MAAAykF,EAAAJ,EAAAG,SAAA,CAAAA,EAAAH,EAAA1oF,OAAA,GAAA6oF,EAAAtvC,KAAA,MAAAuvC,EAAAD,EAAArlF,MAAA,IAASulF,EAATD,EACQjL,EAAcH,sBACdG,EAAcH,qBAAqBD,eAAegL,mBAAmBM,EAAc7vD,GAG3Fx6B,KAAKsI,mBAAmBS,kBAQ5B88E,uBAAA,SAAAA,IAEI,IAAMnD,EAAgB1iF,KAAK+kF,WAAWrC,cACtC,IAAK,IAAIoH,EAAc,EAAGtsB,EAAQklB,EAAc/8E,OAAQmkF,EAActsB,EAAOssB,IAAe,CAExF,IAEMtvD,EAF6BkoD,EAAchwE,IAAIo3E,GAEFtvD,QACnDA,EAAQgjC,MAAQA,EAChBhjC,EAAQze,MAAwB,IAAhB+tE,EAChBtvD,EAAQ8vD,KAAOR,IAAgBtsB,EAAQ,EACvChjC,EAAQ+vD,KAAOT,EAAc,GAAM,EACnCtvD,EAAQgwD,KAAOhwD,EAAQ+vD,KACnBvqF,KAAKyoF,uBACLjuD,EAAQ2pD,UAAYnkF,KAAKolF,YAAY0E,GAAa3F,UAClD3pD,EAAQsvD,YAAcA,GAGtBtvD,EAAQrL,MAAQnvB,KAAKolF,YAAY0E,GAAa3F,cAU1D8F,kBAAA,SAAAA,EAAkB1D,GAAAA,IAAAA,EAAAA,KACd,OAAKA,GAAWA,EAAOprE,QAGhB0R,MAAM8sB,KAAK4sC,EAAOprE,QAIzBsvE,SAAAA,GAEI,IAAMjwE,EAASxa,EAAKgjF,kBAAkBtwE,IAAI+3E,GAC1C,IAAKjwE,EACD,MAAMgoE,EAA2BiI,GAErC,OAAOlE,EAAOpI,oBAAoB3jE,KAZ3B,MAoBfupE,0BAAA,SAAAA,IAEI,IAAM2G,EAAmB1qF,KAAKuxC,UAAUo5C,yBAElCC,EAAW,CACb,CAAEC,IAAK,QAASzwE,OAAQpa,KAAKglF,kBAC7B,CAAE6F,IAAK,QAASzwE,OAAQpa,KAAK+kF,YAC7B,CAAE8F,IAAK,QAASzwE,OAAQpa,KAAKilF,mBAEjC,IAAA,IAAA6F,EAAA,EAAAC,EAAsBH,EAAtBE,EAAAC,EAAAplF,OAAAmlF,IAAgC,CAA3B,IAAME,EAAAA,EAAAA,GAEP,IAAMnqF,EAAUb,KAAKuxC,UAAUvhC,cAAcg7E,EAAQH,KACrDhqF,EAAQoP,aAAa,OAAQ,YAC7BpP,EAAQyP,YAAY06E,EAAQ5wE,OAAOnN,WAAWS,eAC9Cg9E,EAAiBp6E,YAAYzP,GAGjCb,KAAK0kB,YAAYhX,cAAc4C,YAAYo6E,MAS/C7B,qBAAA,SAAAA,IACI7oF,KAAKgkF,YAAYxsD,KAAK,IACtBx3B,KAAK+kF,WAAWrC,cAAcjpE,QAC9BzZ,KAAKklF,aACLllF,KAAK+lF,8BASTjB,mBAAA,SAAAA,IAEI,IAAMmG,EAAqB,SAArBA,EAKLrC,EAAKnpF,GALqB,OAMhBmpF,GAAOnpF,EAAE28E,oBAKhBp8E,KAAKskF,eAAe7kE,OAAOwrE,GAAoB,IAC/CjrF,KAAK6mF,8BAEL7mF,KAAKukF,eAAe9kE,OAAOwrE,GAAoB,IAC/CjrF,KAAKmnF,8BAELt6D,MAAM8sB,KAAK35C,KAAKgjF,kBAAkB9nC,UAAUz7B,OAAOwrE,GAAoB,IACvEjrF,KAAK+lF,8BAUbjC,mBAAA,SAAAA,IAAA,IAAAoH,EAAAlrF,KAGIA,KAAKknF,cAAgB,IAAI5H,EAAat/E,KAAKu/E,mBAAoBv/E,KAAKyjF,eADlDzjF,KAAKqlB,KAAOrlB,KAAKqlB,KAAKvgB,MAAQ,MAC+C9E,KAAK8iF,UAAUnX,YAC7G3rE,KAAKqlB,KAAOrlB,KAAKqlB,KAAK+C,OAASpnB,OAAAmwD,EAAA9wD,EAAAW,IAC3BD,KAAKC,OAAAgzE,EAAA3zE,EAAAW,CAAUhB,KAAK+iF,aACpBj6E,UAILhE,SAAAA,GACI9E,EAAKknF,cAAc5zC,UAAYxuC,EAC/B9E,EAAK+lF,mEAp5BT,OAAO/lF,KAAKmrF,2BAMJlhE,GACJjpB,OAAAmN,EAAAkf,GAAArsB,IAAqB,MAANipB,GAA4B,mBAAPA,GAAqB1X,SACtCA,QAAa+a,MAChC/a,QAAQ+a,KAAR/a,4CAAyD6L,KAAKC,UAAU4L,GAAxE1X,KAEJvS,KAAKmrF,WAAalhE,uCAwBlB,OAAOjqB,KAAK+oF,4BAMDpyE,GACP3W,KAAK+oF,cAAgBpyE,GACrB3W,KAAK8oF,kBAAkBnyE,mDAW3B,OAAO3W,KAAK0jF,uCAMUttD,GACtBp2B,KAAK0jF,uBAAyB1iF,OAAAu7E,EAAA3xE,EAAA5J,CAAsBo1B,GAGhDp2B,KAAK+kF,YAAc/kF,KAAK+kF,WAAWrC,cAAc/8E,QACjD3F,KAAK6oF,8CAu1BjBhG,EAASh4E,eAAiBsD,EAAArD,GAAyB,CAAEC,KAAM83E,EAAU73E,UAAW,CAAC,CAAC,aAAc,CAAC,QAAS,YAAa,KAAMtJ,QAAS,SAAAA,EAA0BC,GAAK,OAAO,IAAKA,GAAKkhF,GAAU10E,EAAAlD,GAAyBkD,EAAA9F,GAAkB8F,EAAAlD,GAAyBkD,EAAAjD,GAAoBiD,EAAAlD,GAAyBkD,EAAAJ,GAAaI,EAAA2kB,GAAyB,QAAS3kB,EAAAlD,GAAyBmgF,EAAA7gF,EAAgB,GAAI4D,EAAAlD,GAAyBmD,EAAA3O,GAAW0O,EAAAlD,GAAyBogF,EAAAhrF,KAAe0yB,eAAgB,SAAAA,EAAiCnvB,EAAIC,EAAKmvB,GAM3gB,IAAIrX,EAN4hB,EAAL/X,IAC3hBuK,EAAA8kB,GAAsBD,EAAU0qD,GAAc,GAC9CvvE,EAAA8kB,GAAsBD,EAAUs4D,GAAW,GAC3Cn9E,EAAA8kB,GAAsBD,EAAUorD,GAAiB,GACjDjwE,EAAA8kB,GAAsBD,EAAUqrD,GAAiB,IAC1C,EAALz6E,IAEFuK,EAAA0N,GAAsBF,EAAKxN,EAAA2N,QAA0BjY,EAAIukF,mBAAqBzsE,GAC9ExN,EAAA0N,GAAsBF,EAAKxN,EAAA2N,QAA0BjY,EAAI0kF,gBAAkB5sE,GAC3ExN,EAAA0N,GAAsBF,EAAKxN,EAAA2N,QAA0BjY,EAAIwkF,sBAAwB1sE,GACjFxN,EAAA0N,GAAsBF,EAAKxN,EAAA2N,QAA0BjY,EAAIykF,sBAAwB3sE,KAChFD,UAAW,SAAAA,EAAwB9X,EAAIC,GAKxC,IAAI8X,EALoD,EAAL/X,IACnDuK,EAAAyN,GAAyB2vE,GAAe,GACxCp9E,EAAAyN,GAAyB4vE,IAAiB,GAC1Cr9E,EAAAyN,GAAyB6vE,IAAiB,IACnC,EAAL7nF,IAEFuK,EAAA0N,GAAsBF,EAAKxN,EAAA2N,QAA0BjY,EAAIkhF,WAAappE,EAAGI,OACzE5N,EAAA0N,GAAsBF,EAAKxN,EAAA2N,QAA0BjY,EAAImhF,iBAAmBrpE,EAAGI,OAC/E5N,EAAA0N,GAAsBF,EAAKxN,EAAA2N,QAA0BjY,EAAIohF,iBAAmBtpE,EAAGI,SAC9E5Q,aAAc,SAAAA,EAA+BvH,EAAIC,EAAKuH,GAAoB,EAALxH,GACtEuK,EAAA9C,GAA0BxI,IACzByI,OAAQ,CAAE44E,QAAS,UAAWvtE,WAAY,aAAc8xE,sBAAuB,yBAA2B/8E,SAAU,CAAC,YAAamoB,mBAAoB3wB,EAAM2I,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAA2BnI,EAAIC,GAAgB,EAALD,IACrOuK,EAAA2lB,GAAuB7wB,GACvBkL,EAAA8T,GAAoB,GACpB9T,EAAA+wE,GAA0B,EAAGp8E,GAC7BqL,EAAA+wE,GAA0B,EAAGn8E,GAC7BoL,EAAA+wE,GAA0B,EAAGl8E,KAC5BgJ,WAAY,CAACw/E,GACdD,EACAE,IAAkBr/E,cAAe,SAiFzC,SAAS+7E,GAAqBuD,EAAWxuE,GACrC,OAAOwuE,EAAUn9D,UAAUhT,OAAOsR,MAAM8sB,KAAKz8B,0BAgO3CyuE,wBAENA,EAAer/E,YAAc6B,EAAA5B,GAAwB,CAAExB,KAAM4gF,IAC7DA,EAAen/E,cAAgB2B,EAAA1B,GAAwB,CAAE/K,QAAS,SAAAA,EAAgCC,GAAK,OAAO,IAAKA,GAAKgqF,IAAsBh/E,QAAS,CAAC,CAACyB,EAAAxD,gFCh+EzJpL,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAksF,KAAApsF,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAmsF,KAAArsF,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAosF,KAAAtsF,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAqsF,KAAAvsF,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAssF,KAAAxsF,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAusF,KAAAzsF,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAwsF,KAAA1sF,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAysF,KAAA3sF,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA0sF,KAAA5sF,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA2sF,KAAA7sF,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA4sF,KAAA9sF,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA6sF,KA0BA,IAAMC,GAAM,CAAC,EAAG,aACVC,GAAM,CAAC,kBAAmB,IAC1BC,GAAM,CAAC,YAAa,IACpBC,GAAM,CAAC,kBAAmB,IAC1BC,GAAM,CAAC,CAAC,CAAC,aACTC,GAAM,CAAC,WACPC,GAAM,CAAC,OAAQ,eAAgB,EAAG,mBAElCC,GAAM,CAAC,OAAQ,WAAY,EAAG,YAC9BC,GAAM,CAAC,OAAQ,MAAO,EAAG,kBACzBC,GAAO,CAAC,gBAAiB,IAEzBC,GAAO,CAAC,OAAQ,MAAO,EAAG,iCA+B1BC,qBACF,SAAAA,IAAA,IAAAC,EACI7kF,EAAAA,EAAAA,MAAAA,KAAS2sB,YAAT3sB,KAIAvI,EAAKyjF,eAAiB,mBAL1B,OAAA2J,YADmBC,WASvBF,EAAStiF,eAAiBsD,EAAArD,GAAyB,CAAEC,KAAMoiF,EAAUniF,UAAW,CAAC,CAAC,aAAc,CAAC,QAAS,YAAa,KAAMtJ,QAAS,SAAAA,EAA0BC,GAAK,OAAO2rF,GAAsB3rF,GAAKwrF,IAAchiF,aAAc,SAAAA,EAA+BvH,EAAIC,EAAKuH,GAAoB,EAALxH,GAClRuK,EAAA9C,GAA0BmhF,KACzB9gF,SAAU,CAAC,YAAaC,SAAU,CAACwC,EAAAulB,GAA0B,CAAC,CAAE/rB,QAAS0lF,GAAU15D,YAAaw5D,KAAch/E,EAAAvC,IAAoCioB,mBAAoBg5D,GAAKhhF,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAA2BnI,EAAIC,GAAgB,EAALD,IACpPuK,EAAA2lB,GAAuB84D,IACvBz+E,EAAA8T,GAAoB,GACpB9T,EAAA+wE,GAA0B,EAAGuN,IAC7Bt+E,EAAA+wE,GAA0B,EAAGwN,IAC7Bv+E,EAAA+wE,GAA0B,EAAGyN,MAC5B3gF,WAAY,CAACw/E,GAAwBD,EAAsBE,IAAyBt/E,OAAQ,CAAC,+wDAAgxDC,cAAe,SACr4D,IAAMkhF,GAAwBn/E,EAAAyJ,GAA6Bs0E,0BA0BrDqB,iFAAmBpQ,UAEzBoQ,EAAW1/E,eAAiBM,EAAAL,GAAyB,CAAE/C,KAAMwiF,EAAYviF,UAAW,CAAC,CAAC,GAAI,aAAc,KAAMtJ,QAAS,SAAAA,EAA4BC,GAAK,OAAO6rF,GAAwB7rF,GAAK4rF,IAAgB5hF,SAAU,CAACwC,EAAAulB,GAA0B,CAAC,CAAE/rB,QAASw1E,EAAYxpD,YAAa45D,KAAgBp/E,EAAAvC,WACtS,IAAM4hF,GAA0Br/E,EAAAyJ,GAA6Bi0E,0BAYvD4B,iFAAyBrQ,UAE/BqQ,EAAiB5/E,eAAiBM,EAAAL,GAAyB,CAAE/C,KAAM0iF,EAAkBziF,UAAW,CAAC,CAAC,GAAI,mBAAoB,KAAMtJ,QAAS,SAAAA,EAAkCC,GAAK,OAAO+rF,GAA8B/rF,GAAK8rF,IAAsB9hF,SAAU,CAACwC,EAAAulB,GAA0B,CAAC,CAAE/rB,QAASy1E,EAAkBzpD,YAAa85D,KAAsBt/E,EAAAvC,WACtV,IAAM8hF,GAAgCv/E,EAAAyJ,GAA6Bk0E,0BA2B7D6B,iFAAqBjQ,UAE3BiQ,EAAa9/E,eAAiBM,EAAAL,GAAyB,CAAE/C,KAAM4iF,EAAc3iF,UAAW,CAAC,CAAC,GAAI,eAAgB,KAAMtJ,QAAS,SAAAA,EAA8BC,GAAK,OAAOisF,GAA0BjsF,GAAKgsF,IAAkBriF,OAAQ,CAAEyU,KAAM,CAAC,eAAgB,QAASy9D,OAAQ,SAAUC,UAAW,aAAe9xE,SAAU,CAACwC,EAAAulB,GAA0B,CACvU,CAAE/rB,QAAS+1E,EAAc/pD,YAAag6D,GACtC,CAAEhmF,QAAS,6BAA8BgsB,YAAag6D,KACtDx/E,EAAAvC,WACZ,IAAMgiF,GAA4Bz/E,EAAAyJ,GAA6Bm0E,0BA0BzD8B,qBAKF,SAAAA,EAAYjQ,EAAW3wE,GAAAA,IAAAA,EACnB1E,EAAAA,EAAAA,KAAAA,KAAMq1E,EAAW3wE,IAAjB1E,KACA0E,EAAWS,cAAcwC,UAAUC,IAAnClD,cAAqD2wE,EAAUX,sBAF5ChwE,OAAAA,YALC6gF,UAU5BD,EAAchgF,eAAiBM,EAAAL,GAAyB,CAAE/C,KAAM8iF,EAAe7iF,UAAW,CAAC,CAAC,mBAAoB,CAAC,KAAM,kBAAmB,KAAMtJ,QAAS,SAAAA,EAA+BC,GAAK,OAAO,IAAKA,GAAKksF,GAAe1/E,EAAAlD,GAAyByyE,GAAevvE,EAAAlD,GAAyBkD,EAAAJ,KAAiB5C,aAAc,SAAAA,EAAoCvH,EAAIC,EAAKuH,GAAoB,EAALxH,GACjXuK,EAAA9C,GAA0ByhF,KACzBnhF,SAAU,CAACwC,EAAAvC,6BAkDdmiF,qBAKF,SAAAA,EAAYnQ,EAAW3wE,GAAAA,IAAAA,EACnB1E,EAAAA,EAAAA,KAAAA,KAAMq1E,EAAW3wE,IAAjB1E,KACA0E,EAAWS,cAAcwC,UAAUC,IAAnClD,cAAqD2wE,EAAUX,sBAF5ChwE,OAAAA,YALL+gF,UAUtBD,EAAQlgF,eAAiBM,EAAAL,GAAyB,CAAE/C,KAAMgjF,EAAS/iF,UAAW,CAAC,CAAC,YAAa,CAAC,KAAM,WAAY,KAAMtJ,QAAS,SAAAA,EAAyBC,GAAK,OAAO,IAAKA,GAAKosF,GAAS5/E,EAAAlD,GAAyByyE,GAAevvE,EAAAlD,GAAyBkD,EAAAJ,KAAiB5C,aAAc,SAAAA,EAA8BvH,EAAIC,EAAKuH,GAAoB,EAALxH,GACrUuK,EAAA9C,GAA0B0hF,KACzBphF,SAAU,CAACwC,EAAAvC,6BAyBdqiF,iFAAwB7P,UAE9B6P,EAAgBpgF,eAAiBM,EAAAL,GAAyB,CAAE/C,KAAMkjF,EAAiBjjF,UAAW,CAAC,CAAC,GAAI,kBAAmB,KAAMtJ,QAAS,SAAAA,EAAiCC,GAAK,OAAOusF,GAA6BvsF,GAAKssF,IAAqB3iF,OAAQ,CAAE6P,QAAS,CAAC,kBAAmB,WAAYqiE,OAAQ,CAAC,wBAAyB,WAAa7xE,SAAU,CAACwC,EAAAulB,GAA0B,CAAC,CAAE/rB,QAASy2E,EAAiBzqD,YAAas6D,KAAqB9/E,EAAAvC,WAChb,IAAMsiF,GAA+B//E,EAAAyJ,GAA6Bu0E,0BA+B5DgC,iFAAkB7C,UAExB6C,EAAUtgF,eAAiBM,EAAAL,GAAyB,CAAE/C,KAAMojF,EAAWnjF,UAAW,CAAC,CAAC,GAAI,YAAa,KAAMtJ,QAAS,SAAAA,EAA2BC,GAAK,OAAOysF,GAAuBzsF,GAAKwsF,IAAe7iF,OAAQ,CAAE6P,QAAS,CAAC,mBAAoB,WAAY0jE,KAAM,CAAC,gBAAiB,SAAWlzE,SAAU,CAACwC,EAAAulB,GAA0B,CAAC,CAAE/rB,QAAS2jF,EAAW33D,YAAaw6D,KAAehgF,EAAAvC,WACrX,IAAMwiF,GAAyBjgF,EAAAyJ,GAA6Bw0E,0BAYtDiC,iFAAqBC,UAE3BD,EAAaxjF,eAAiBsD,EAAArD,GAAyB,CAAEC,KAAMsjF,EAAcrjF,UAAW,CAAC,CAAC,kBAAmB,CAAC,KAAM,iBAAkB,KAAMtJ,QAAS,SAAAA,EAA8BC,GAAK,OAAO4sF,GAA0B5sF,GAAK0sF,IAAkBljF,aAAc,SAAAA,EAAmCvH,EAAIC,EAAKuH,GAAoB,EAALxH,GACjTuK,EAAA9C,GAA0B2hF,KACzBthF,SAAU,CAAC,gBAAiBC,SAAU,CAACwC,EAAAulB,GAA0B,CAAC,CAAE/rB,QAAS2mF,EAAc36D,YAAa06D,KAAkBlgF,EAAAvC,IAAoCC,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAA+BnI,EAAIC,GAAgB,EAALD,GAC3OuK,EAAA+wE,GAA0B,EAAG+N,KAC5BjhF,WAAY,CAACmzE,GAAuB/yE,cAAe,SAC5D,IAAMmiF,GAA4BpgF,EAAAyJ,GAA6By0E,0BA+CzDmC,iFAAeC,UAErBD,EAAO3jF,eAAiBsD,EAAArD,GAAyB,CAAEC,KAAMyjF,EAAQxjF,UAAW,CAAC,CAAC,WAAY,CAAC,KAAM,UAAW,KAAMtJ,QAAS,SAAAA,EAAwBC,GAAK,OAAO+sF,GAAoB/sF,GAAK6sF,IAAYrjF,aAAc,SAAAA,EAA6BvH,EAAIC,EAAKuH,GAAoB,EAALxH,GAC/PuK,EAAA9C,GAA0B6hF,KACzBxhF,SAAU,CAAC,UAAWC,SAAU,CAACwC,EAAAulB,GAA0B,CAAC,CAAE/rB,QAAS8mF,EAAQ96D,YAAa66D,KAAYrgF,EAAAvC,IAAoCC,OAAQ,EAAGC,KAAM,EAAGC,SAAU,SAAAA,EAAyBnI,EAAIC,GAAgB,EAALD,GACnNuK,EAAA+wE,GAA0B,EAAG+N,KAC5BjhF,WAAY,CAACmzE,GAAuB/yE,cAAe,SAC5D,IAAMsiF,GAAsBvgF,EAAAyJ,GAA6B00E,0BA+FnDqC,wBAENA,EAAeriF,YAAc6B,EAAA5B,GAAwB,CAAExB,KAAM4jF,IAC7DA,EAAeniF,cAAgB2B,EAAA1B,GAAwB,CAAE/K,QAAS,SAAAA,EAAgCC,GAAK,OAAO,IAAKA,GAAKgtF,IAAsBhiF,QAAS,CAAC,CAC5IiiF,GACAxgF,EAAAxD,EACAgL,GAAA1K,WAuDZ,IAAM2jF,GAAmB,qBAUnBtC,sBAIF,SAAAA,EAAYuC,GAAc,IAAAC,EAAA,GAAdD,SAAc,EAAA,CAAdA,EAAc,GACtBvmF,EAAAA,EAAAA,KAAAA,OAAAA,KAIAvI,EAAKgvF,YAAc,IAAIzyE,EAAAA,EAAgB,IAIvCvc,EAAKivF,QAAU,IAAI1yE,EAAAA,EAAgB,IAInCvc,EAAKkvF,qBAAuB,IAAItgC,EAAAA,EAKhC5uD,EAAKmvF,2BAA6BC,GAAAA,EAAar9C,MAU/C/xC,EAAKqvF,oBAAsB,SAK1Bt5E,EAAMu5E,GAEH,IAAMxqF,EAAQiR,EAA4Bu5E,GAC1C,GAAItuF,OAAAu7E,EAAAl8E,EAAAW,CAAe8D,GAAQ,CAEvB,IAAMyqF,EAAcp3C,OAAOrzC,GAG3B,OAAOyqF,EAAcV,GAAmBU,EAAczqF,EAE1D,OAAOA,GAWX9E,EAAKwvF,SAAW,SAKfz5E,EAAMzL,GAEH,IAAMkgD,EAASlgD,EAAKkgD,OAEdlX,EAAYhpC,EAAKgpC,UACvB,OAAKkX,GAAuB,IAAblX,EAGRv9B,EAAKzL,KAAK,SAKhBjK,EAAGkK,GAEA,IAAIklF,EAASzvF,EAAKqvF,oBAAoBhvF,EAAGmqD,GAErCklC,EAAS1vF,EAAKqvF,oBAAoB9kF,EAAGigD,GAMrCmlC,EAAmB,EAgBvB,OAfc,MAAVF,GAA4B,MAAVC,EAEdD,EAASC,EACTC,EAAmB,EAEdF,EAASC,IACdC,GAAoB,GAGT,MAAVF,EACLE,EAAmB,EAEJ,MAAVD,IACLC,GAAoB,GAEjBA,GAAiC,OAAbr8C,EAAqB,GAAK,KAjC9Cv9B,GA8Cf/V,EAAKyX,gBAAkB,SAKtB1B,EAAMgE,GAGH,IAAM61E,EAAU5uF,OAAO4e,KAAK7J,GAAM0J,OAAO,SAKxCowE,EAAalgF,GAL2B,OAY9BkgF,EAAc95E,EAA4BpG,GAAO,UACxD,IAAImK,cAGFg2E,EAAoB/1E,EAAOF,OAAOC,cACxC,OAA8C,GAAvC81E,EAAQxlF,QAAQ0lF,IAE3B9vF,EAAK2nF,MAAQ,IAAIprE,EAAAA,EAAgBuyE,GACjC9uF,EAAK+vF,4BA3IiB,OAAAhB,sBA0M1BgB,0BAAA,SAAAA,IAAA,IAAAC,EAAAhwF,KAQI,IAAM86D,EAAa96D,KAAKy8D,MACDz7D,OAAAo2E,GAAnB/2E,EAAmBW,CAAMhB,KAAKy8D,MAAM3B,WAAY96D,KAAKy8D,MAAMwzB,aAC3DjvF,OAAAmwD,EAAA9wD,EAAAW,CAAG,MAEDkvF,EAAalwF,KAAKmwF,WACDnvF,OAAAo2E,GAAnB/2E,EAAmBW,CAAMhB,KAAKmwF,WAAW9oF,KAAMrH,KAAKkvF,qBAAsBlvF,KAAKmwF,WAAWF,aAC1FjvF,OAAAmwD,EAAA9wD,EAAAW,CAAG,MAEDioF,EAAajpF,KAAK2nF,MAGlB1uE,EAAejY,OAAAovF,GAAA/vF,EAAAW,CAAcioF,EAAYjpF,KAAKivF,SAC/CluF,KAAKC,OAAA0J,GAAArK,EAAAW,CAAI,SAAAqvF,GAAA,IAIZt6E,EAJYs6E,EAAA,GAAA,OAIFrwF,EAAKswF,YAAYv6E,MAGvBw6E,EAAcvvF,OAAAovF,GAAA/vF,EAAAW,CAAciY,EAAc6hD,GAC3C/5D,KAAKC,OAAA0J,GAAArK,EAAAW,CAAI,SAAAwvF,GAAA,IAIZz6E,EAJYy6E,EAAA,GAAA,OAIFxwF,EAAKywF,WAAW16E,MAGtB26E,EAAgB1vF,OAAAovF,GAAA/vF,EAAAW,CAAcuvF,EAAaL,GAC5CnvF,KAAKC,OAAA0J,GAAArK,EAAAW,CAAI,SAAA2vF,GAAA,IAIZ56E,EAJY46E,EAAA,GAAA,OAIF3wF,EAAK4wF,UAAU76E,MAE3B/V,KAAKmvF,2BAA2B9lF,cAChCrJ,KAAKmvF,2BAA6BuB,EAAc5nF,UAIhDiN,SAAAA,GAAAA,OAAQ/V,EAAKgvF,YAAY1tF,KAAKyU,QASlCu6E,YAAA,SAAAA,EAAYv6E,GAAAA,IAAAA,EAAAA,KAaR,OATA/V,KAAKiZ,aACAjZ,KAAK+Z,OAAgBhE,EAAKgE,OAI3BywB,SAAAA,GAAAA,OAAOxqC,EAAKyX,gBAAgB+yB,EAAKxqC,EAAK+Z,UAJvBhE,EAKf/V,KAAKkY,WACLlY,KAAK6wF,iBAAiB7wF,KAAKiZ,aAAatT,QAErC3F,KAAKiZ,gBAShBw3E,WAAA,SAAAA,EAAW16E,GAEP,OAAK/V,KAAKsK,KAGHtK,KAAKwvF,SAASz5E,EAAK5L,QAASnK,KAAKsK,MAF7ByL,KAUf66E,UAAA,SAAAA,EAAU76E,GACN,IAAK/V,KAAKkY,UACN,OAAOnC,EAGX,IAAMzO,EAAatH,KAAKkY,UAAUzO,UAAYzJ,KAAKkY,UAAUhT,SAC7D,OAAO6Q,EAAK5L,MAAM7C,EAAYA,EAAatH,KAAKkY,UAAUhT,aAS9D2rF,iBAAA,SAAAA,EAAiBC,GAAAA,IAAAA,EAAAA,KACbrkE,QAAQC,UAAUC,KAAK,WAKnB,IAAMzU,EAAYlY,EAAKkY,UACvB,GAAKA,IAGLA,EAAUvS,OAASmrF,EAEf54E,EAAUzO,UAAY,GAAG,CAEzB,IAAMsnF,EAAgBxpF,KAAKwC,KAAKmO,EAAUvS,OAASuS,EAAUhT,UAAY,GAAK,EAExE8rF,EAAezpF,KAAKE,IAAIyQ,EAAUzO,UAAWsnF,GAC/CC,IAAiB94E,EAAUzO,YAC3ByO,EAAUzO,UAAYunF,EAGtBhxF,EAAKkvF,qBAAqB5tF,cAU1C4nF,QAAA,SAAAA,IAAY,OAAOlpF,KAAKgvF,eAMxB3gB,WAAA,SAAAA,wCAxMa,OAAOruE,KAAK2nF,MAAM7iF,sBAKtBiR,GAAQ/V,KAAK2nF,MAAMrmF,KAAKyU,oCAMlB,OAAO/V,KAAKivF,QAAQnqF,sBAKxBiV,GAAU/Z,KAAKivF,QAAQ3tF,KAAKyY,kCAM1B,OAAO/Z,KAAKy8D,sBAKhBnyD,GACLtK,KAAKy8D,MAAQnyD,EACbtK,KAAK+vF,gEAaS,OAAO/vF,KAAKmwF,2BAKhBj4E,GACVlY,KAAKmwF,WAAaj4E,EAClBlY,KAAK+vF,0CAtMoBj5E,EAAAvM,wCCrjBjC/K,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAuxF,IAAA,IAAArxF,EAAAJ,EAAA,YAEa0xF,EAAb,SAAAA,IACElxF,KAAAkE,UAAiB,KACjBlE,KAAAmxF,MAAa,MAMR,IAAAF,EAAA,WAAA,IAAMA,EAAN,WAQL,SAAAA,EAAoBG,EAA+BxqC,GAA/BwqC,KAAAA,IAAAA,EAA+BxqC,KAAAA,YAAAA,EAP3C5mD,KAAAw6B,QAAU,IAAI02D,EADjB,IAAAG,EAAAJ,EAAAtwF,UAAA0wF,EAULroF,SAAA,SAAAA,IACEhJ,KAAKoxF,IAAIrH,mBAAmB/pF,KAAK4mD,YAAa5mD,KAAKw6B,UAXhDvf,EAAAg2E,EAAA,CAAA,CAAAthF,IAAA,QAAAuN,IAAA,SAAAA,EAIKpY,GACR9E,KAAKw6B,QAAQt2B,UAAYlE,KAAKw6B,QAAQ22D,MAAQrsF,MAL3C,OAAAmsF,EAAA,UCWPA,EAAepjF,eAAiBjO,EAAAkO,GAAqB,CAAE/C,KDX1CkmF,EAAcjmF,UAAA,CAAA,CAAA,GAAA,QAAA,KAAAtJ,QAAA,SAAAA,EAAAC,GAAA,OAAA,IAAAA,GAAdsvF,GAAcrxF,EAAAqL,GAAArL,EAAAw1C,IAAAx1C,EAAAqL,GAAArL,EAAA0iD,MAAAh3C,OAAA,CAAA6lF,MAAA,aAApB,wCEVP3xF,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAA6+B,IAAA,IAAI+xB,EAAyB,IAad,SAAS/xB,EAAgCnH,GACtD,IAAItc,EAAO,IAAIkD,KAAKoZ,EAAUP,WAC1By6D,EAAqBx2E,EAAKwhB,oBAC9BxhB,EAAKy2E,WAAW,EAAG,GACnB,IAAIC,EAAmC12E,EAAK+b,UAAYy5B,EACxD,OAAOghC,EAAqBhhC,EAAyBkhC,wCClBvDhyF,EAAAC,EAAAC,EAAA,IAAA,WAAA,OAAAsb,IAAA,IAAAy2E,EAAAjyF,EAAA,QAAAkyF,EAAAlyF,EAAA,QAEImyF,EAAuB,KACvBrhC,EAAyB,IACzBshC,EAA4B,EAC5BC,EAAW,CACbC,kBAAmB,OACnBC,kBAAmB,QACnBC,SAAU,cAERC,EAAY,gEACZC,EAAY,4EACZC,EAAgB,gCA2DL,SAASn3E,EAAS02C,EAAUr5B,GACzC,GAAInD,UAAUvvB,OAAS,EACrB,MAAM,IAAI+wB,UAAU,iCAAmCxB,UAAUvvB,OAAS,YAG5E,IAAI1F,EAAUo4B,GAAgB,GAC1B+5D,EAA+C,MAA5BnyF,EAAQmyF,iBAA2BR,EAA4B5wF,OAAAywF,EAAApxF,EAAAW,CAAUf,EAAQmyF,kBAExG,GAAyB,IAArBA,GAA+C,IAArBA,GAA+C,IAArBA,EACtD,MAAM,IAAIz5D,WAAW,sCAGvB,GAA0B,iBAAb+4B,GAAsE,oBAA7C1wD,OAAOL,UAAUwc,SAAS9N,KAAKqiD,GACnE,OAAO,IAAI1zC,KAAK6zC,KAGlB,IACI/2C,EADAu3E,EA+CN,SAAyBC,GACvB,IAEIC,EAFAF,EAAc,GACdG,EAAQF,EAAW5rC,MAAMmrC,EAASC,mBAgBtC,GAbI,IAAI30C,KAAKq1C,EAAM,KACjBH,EAAYv3E,KAAO,KACnBy3E,EAAaC,EAAM,KAEnBH,EAAYv3E,KAAO03E,EAAM,GACzBD,EAAaC,EAAM,GAEfX,EAASE,kBAAkB50C,KAAKk1C,EAAYv3E,QAC9Cu3E,EAAYv3E,KAAOw3E,EAAW5rC,MAAMmrC,EAASE,mBAAmB,GAChEQ,EAAaD,EAAWG,OAAOJ,EAAYv3E,KAAKnV,OAAQ2sF,EAAW3sF,UAInE4sF,EAAY,CACd,IAAI9wF,EAAQowF,EAASG,SAASU,KAAKH,GAE/B9wF,GACF4wF,EAAYx1D,KAAO01D,EAAWj1D,QAAQ77B,EAAM,GAAI,IAChD4wF,EAAYL,SAAWvwF,EAAM,IAE7B4wF,EAAYx1D,KAAO01D,EAIvB,OAAOF,EA7BT,CA/CoC3gC,GAGlC,GAAI2gC,EAAYv3E,KAAM,CACpB,IAAI63E,EA2ER,SAAmBL,EAAYF,GAC7B,IAAIp1C,EAAQ,IAAIE,OAAO,wBAA0B,EAAIk1C,GAAoB,uBAAyB,EAAIA,GAAoB,QACtHQ,EAAWN,EAAWp1D,MAAM8f,GAEhC,IAAK41C,EAAU,MAAO,CACpB/6D,KAAM,MAER,IAAIA,EAAO+6D,EAAS,IAAM/qE,SAAS+qE,EAAS,IACxCC,EAAUD,EAAS,IAAM/qE,SAAS+qE,EAAS,IAC/C,MAAO,CACL/6D,KAAiB,MAAXg7D,EAAkBh7D,EAAiB,IAAVg7D,EAC/BC,eAAgBR,EAAWnoF,OAAOyoF,EAAS,IAAMA,EAAS,IAAIjtF,SAXlE,CA3EoC0sF,EAAYv3E,KAAMs3E,GAClDt3E,EAyFJ,SAAmBw3E,EAAYz6D,GAE7B,GAAa,OAATA,EAAe,OAAO,KAC1B,IAAI+6D,EA5FeD,EAAgBG,eA4FT51D,MAAM+0D,GAEhC,IAAKW,EAAU,OAAO,KACtB,IAAIG,IAAeH,EAAS,GACxB73D,EAAYi4D,EAAcJ,EAAS,IACnCn4D,EAAQu4D,EAAcJ,EAAS,IAAM,EACrCt7D,EAAM07D,EAAcJ,EAAS,IAC7Bl4D,EAAOs4D,EAAcJ,EAAS,IAC9Bz3D,EAAY63D,EAAcJ,EAAS,IAAM,EAE7C,GAAIG,EACF,OAgFJ,SAA0BE,EAAOv4D,EAAMpD,GACrC,OAAOoD,GAAQ,GAAKA,GAAQ,IAjFQS,GAiFK,GAjFLA,GAiFiB,EADvD,CAhF0BtD,EAAM6C,GAuDhC,SAA0Bw4D,EAAax4D,EAAMpD,GAC3C,IAAIxc,EAAO,IAAIkD,KAAK,GACpBlD,EAAKkd,eAAek7D,EAAa,EAAG,GACpC,IACI17D,EAAoB,GAAZkD,EAAO,GAASpD,EAAM,GADTxc,EAAKyc,aAAe,GAG7C,OADAzc,EAAK2c,WAAW3c,EAAK4c,aAAeF,GAC7B1c,EANT,CAnD4B+c,EAAM6C,EAAMS,GAH3B,IAAInd,KAAK6zC,KAKlB,IAAI/2C,EAAO,IAAIkD,KAAK,GAEpB,OAgEJ,SAAsB6Z,EAAM4C,EAAO3f,GACjC,OAAO2f,GAAS,GAAKA,GAAS,IAjEGnD,GAiEW,GAjEXA,IAiEyB67D,EAAa14D,KAAW24D,EAAgBv7D,GAAQ,GAAK,KADjH,CAhEsBA,EAAM4C,IAoE5B,SAA+B5C,EAAMkD,GACnC,OAAOA,GAAa,GAAKA,IAAcq4D,EAAgBv7D,GAAQ,IAAM,KADvE,CApEkEA,EAAMkD,IAIpEjgB,EAAKkd,eAAeH,EAAM4C,EAAOlzB,KAAKC,IAAIuzB,EAAWzD,IAC9Cxc,GAJE,IAAIkD,KAAK6zC,KAvBtB,CAzFqB8gC,EAAgCA,EAAgB96D,MAGnE,GAAIsG,MAAMrjB,KAAUA,EAClB,OAAO,IAAIkD,KAAK6zC,KAGlB,IAEI14B,EAFA6B,EAAYlgB,EAAK+b,UACjBgG,EAAO,EAGX,GAAIw1D,EAAYx1D,OACdA,EAgHJ,SAAmB01D,GACjB,IAAIK,EAjHeP,EAAYx1D,KAiHLK,MAAMg1D,GAChC,IAAKU,EAAU,OAAO,KAEtB,IAAIt5D,EAAQ+5D,EAAcT,EAAS,IAC/Br5D,EAAU85D,EAAcT,EAAS,IACjC7mC,EAAUsnC,EAAcT,EAAS,IAErC,OAuDF,SAAsBt5D,EAAOC,EAASwyB,GACpC,OAAc,KAAVzyB,EACiB,IAAZC,GAA6B,IAAZwyB,EAGnBA,GAAW,GAAKA,EAAU,IAAMxyB,GAAW,GAAKA,EAAU,IAAMD,GAAS,GAAKA,EAAQ,GAL/F,CAvDoBA,EAAOC,EAASwyB,GAI3BzyB,EAAQq4D,EAAuBp4D,EAAU+2B,EAAmC,IAAVvE,EAHhE8F,IATX,GA9GQ1zB,MAAMtB,IAAkB,OAATA,GACjB,OAAO,IAAI7e,KAAK6zC,KAIpB,GAAIwgC,EAAYL,SAAAA,CAGd,GAFA74D,EA2HJ,SAAuBm6D,GACrB,GAAuB,MAAnBA,EAAwB,OAAO,EACnC,IAAIV,EAAWU,EAAep2D,MAAMi1D,GACpC,IAAKS,EAAU,OAAO,EACtB,IAAI37D,EAAuB,MAAhB27D,EAAS,IAAc,EAAI,EAClCt5D,EAAQzR,SAAS+qE,EAAS,IAC1Br5D,EAAUq5D,EAAS,IAAM/qE,SAAS+qE,EAAS,KAAO,EAEtD,OA4CF,SAA0BW,EAAQh6D,GAChC,OAAOA,GAAW,GAAKA,GAAW,GADpC,CA5CwBD,EAAOC,GAItBtC,GAAQqC,EAAQq4D,EAAuBp4D,EAAU+2B,GAH/CuB,IATX,CA3H2BwgC,EAAYL,UAE/B7zD,MAAMhF,GACR,OAAO,IAAInb,KAAK6zC,SAEb,CACL,IAAI2hC,EAAWx4D,EAAY6B,EACvB42D,EAAe,IAAIz1E,KAAKw1E,GAC5Br6D,EAASn4B,OAAA0wF,EAAArxF,EAAAW,CAAgCyyF,GAEzC,IAAIC,EAAsB,IAAI11E,KAAKw1E,GACnCE,EAAoBC,QAAQF,EAAalrD,UAAY,GACrD,IAAIqrD,EAAa5yF,OAAA0wF,EAAArxF,EAAAW,CAAgC0yF,GAAuBv6D,EAEpEy6D,EAAa,IACfz6D,GAAUy6D,GAId,OAAO,IAAI51E,KAAKgd,EAAY6B,EAAO1D,GAiFrC,SAAS65D,EAAcluF,GACrB,OAAOA,EAAQ+iB,SAAS/iB,GAAS,EAkBnC,SAASuuF,EAAcvuF,GACrB,OAAOA,GAAS0zD,WAAW1zD,EAAMw4B,QAAQ,IAAK,OAAS,EA6BzD,IAAI61D,EAAe,CAAC,GAAI,KAAM,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAElE,SAASC,EAAgBv7D,GACvB,OAAOA,EAAO,KAAQ,GAAKA,EAAO,GAAM,GAAKA,EAAO","file":"1-es5.eb02407a82bb801df398.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { finalize, filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ViewportService {\n  private readonly options: IntersectionObserverInit = {\n    rootMargin: '0px 0px 0px 0px',\n    threshold: [0.5],\n  };\n  private observer: IntersectionObserver;\n  private callback$: Subject<IntersectionObserverEntry> = new Subject();\n\n  constructor() {\n    this.observer = new IntersectionObserver(this.handler.bind(this), this.options);\n  }\n\n  observe(element: Element): Observable<IntersectionObserverEntry> {\n    this.observer.observe(element);\n\n    return this.callback$.asObservable().pipe(\n      filter((entry: IntersectionObserverEntry) => entry.target === element),\n      finalize(() => this.observer.unobserve(element)),\n    );\n  }\n\n  private handler(entries: Array<IntersectionObserverEntry>): void {\n    entries.forEach(entry => this.callback$.next(entry));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { finalize, filter } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport class ViewportService {\n    constructor() {\n        this.options = {\n            rootMargin: '0px 0px 0px 0px',\n            threshold: [0.5],\n        };\n        this.callback$ = new Subject();\n        this.observer = new IntersectionObserver(this.handler.bind(this), this.options);\n    }\n    observe(element) {\n        this.observer.observe(element);\n        return this.callback$.asObservable().pipe(filter((entry) => entry.target === element), finalize(() => this.observer.unobserve(element)));\n    }\n    handler(entries) {\n        entries.forEach(entry => this.callback$.next(entry));\n    }\n}\nViewportService.ngInjectableDef = i0.ɵɵdefineInjectable({ token: ViewportService, factory: function ViewportService_Factory(t) { return new (t || ViewportService)(); }, providedIn: 'root' });\n/*@__PURE__*/ i0.ɵsetClassMetadata(ViewportService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root',\n            }]\n    }], function () { return []; }, null);\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable, Optional, SkipSelf, NgModule, ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation, ɵɵdefineInjectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinInitialized, mixinDisabled } from '@angular/material/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/material/tooltip';\nimport * as ɵngcc4 from '@angular/material/form-field';\nimport * as ɵngcc5 from '@angular/material/select';\nimport * as ɵngcc6 from '@angular/material/core';\n\nconst _c0 = [1, \"mat-paginator\"];\nconst _c1 = [1, \"mat-paginator-outer-container\"];\nconst _c2 = [1, \"mat-paginator-container\"];\nconst _c3 = [\"class\", \"mat-paginator-page-size\", 4, \"ngIf\"];\nconst _c4 = [1, \"mat-paginator-range-actions\"];\nconst _c5 = [1, \"mat-paginator-range-label\"];\nconst _c6 = [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"];\nconst _c7 = [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-previous\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"];\nconst _c8 = [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", 1, \"mat-paginator-icon\"];\nconst _c9 = [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"];\nconst _c10 = [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-next\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"];\nconst _c11 = [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"];\nconst _c12 = [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"];\nconst _c13 = [1, \"mat-paginator-page-size\"];\nconst _c14 = [1, \"mat-paginator-page-size-label\"];\nconst _c15 = [\"class\", \"mat-paginator-page-size-select\", 3, \"color\", 4, \"ngIf\"];\nconst _c16 = [4, \"ngIf\"];\nconst _c17 = [1, \"mat-paginator-page-size-select\", 3, \"color\"];\nconst _c18 = [3, \"value\", \"disabled\", \"aria-label\", \"selectionChange\"];\nconst _c19 = [3, \"value\", 4, \"ngFor\", \"ngForOf\"];\nconst _c20 = [3, \"value\"];\nfunction MatPaginator_div_2_mat_form_field_3_mat_option_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-option\", _c20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pageSizeOption_r89 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", pageSizeOption_r89);\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵtextInterpolate(pageSizeOption_r89);\n} }\nfunction MatPaginator_div_2_mat_form_field_3_Template(rf, ctx) { if (rf & 1) {\n    const _r91 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-form-field\", _c17);\n    ɵngcc0.ɵɵelementStart(1, \"mat-select\", _c18);\n    ɵngcc0.ɵɵlistener(\"selectionChange\", function MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r91); const ctx_r90 = ɵngcc0.ɵɵnextContext(2); return ctx_r90._changePageSize($event.value); });\n    ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_mat_form_field_3_mat_option_2_Template, 2, 2, \"mat-option\", _c19);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r86 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"color\", ctx_r86.color);\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r86.pageSize)(\"disabled\", ctx_r86.disabled)(\"aria-label\", ctx_r86._intl.itemsPerPageLabel);\n    ɵngcc0.ɵɵselect(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r86._displayedPageSizeOptions);\n} }\nfunction MatPaginator_div_2_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r87 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r87.pageSize);\n} }\nfunction MatPaginator_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", _c13);\n    ɵngcc0.ɵɵelementStart(1, \"div\", _c14);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, MatPaginator_div_2_mat_form_field_3_Template, 3, 5, \"mat-form-field\", _c15);\n    ɵngcc0.ɵɵtemplate(4, MatPaginator_div_2_div_4_Template, 2, 1, \"div\", _c16);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r83 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵselect(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r83._intl.itemsPerPageLabel);\n    ɵngcc0.ɵɵselect(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r83._displayedPageSizeOptions.length > 1);\n    ɵngcc0.ɵɵselect(4);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r83._displayedPageSizeOptions.length <= 1);\n} }\nconst _c21 = [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"];\nconst _c22 = [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"];\nfunction MatPaginator_button_6_Template(rf, ctx) { if (rf & 1) {\n    const _r93 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", _c21);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_6_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r93); const ctx_r92 = ɵngcc0.ɵɵnextContext(); return ctx_r92.firstPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", _c8);\n    ɵngcc0.ɵɵelement(2, \"path\", _c22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r84 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r84._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r84._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r84._previousButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r84._intl.firstPageLabel);\n} }\nconst _c23 = [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"];\nconst _c24 = [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"];\nfunction MatPaginator_button_13_Template(rf, ctx) { if (rf & 1) {\n    const _r95 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵnamespaceHTML();\n    ɵngcc0.ɵɵelementStart(0, \"button\", _c23);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_13_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r95); const ctx_r94 = ɵngcc0.ɵɵnextContext(); return ctx_r94.lastPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", _c8);\n    ɵngcc0.ɵɵelement(2, \"path\", _c24);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r85 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r85._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r85._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r85._nextButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r85._intl.lastPageLabel);\n} }\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * A label for the page size selector.\n         */\n        this.itemsPerPageLabel = 'Items per page:';\n        /**\n         * A label for the button that increments the current page.\n         */\n        this.nextPageLabel = 'Next page';\n        /**\n         * A label for the button that decrements the current page.\n         */\n        this.previousPageLabel = 'Previous page';\n        /**\n         * A label for the button that moves to the first page.\n         */\n        this.firstPageLabel = 'First page';\n        /**\n         * A label for the button that moves to the last page.\n         */\n        this.lastPageLabel = 'Last page';\n        /**\n         * A label for the range of items within the current page and the length of the whole list.\n         */\n        this.getRangeLabel = (/**\n         * @param {?} page\n         * @param {?} pageSize\n         * @param {?} length\n         * @return {?}\n         */\n        (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            /** @type {?} */\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            /** @type {?} */\n            const endIndex = startIndex < length ?\n                Math.min(startIndex + pageSize, length) :\n                startIndex + pageSize;\n            return `${startIndex + 1} - ${endIndex} of ${length}`;\n        });\n    }\n}\nMatPaginatorIntl.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: MatPaginatorIntl, factory: function MatPaginatorIntl_Factory(t) { return new (t || MatPaginatorIntl)(); }, providedIn: 'root' });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatPaginatorIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, { constructor: [], changes: [], itemsPerPageLabel: [], nextPageLabel: [], previousPageLabel: [], firstPageLabel: [], lastPageLabel: [], getRangeLabel: [] });\n/** @nocollapse */ MatPaginatorIntl.ngInjectableDef = ɵɵdefineInjectable({ factory: function MatPaginatorIntl_Factory() { return new MatPaginatorIntl(); }, token: MatPaginatorIntl, providedIn: \"root\" });\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The default page size if there is no page size and there are no provided page size options.\n * @type {?}\n */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\n// Boilerplate for applying mixins to MatPaginator.\n/**\n * \\@docs-private\n */\nclass MatPaginatorBase {\n}\n/** @type {?} */\nconst _MatPaginatorBase = mixinDisabled(mixinInitialized(MatPaginatorBase));\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    /**\n     * @param {?} _intl\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_intl, _changeDetectorRef) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /**\n         * Event emitted when the paginator changes the page size or page index.\n         */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n    /**\n     * The zero-based page index of the displayed list of items. Defaulted to 0.\n     * @return {?}\n     */\n    get pageIndex() { return this._pageIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The length of the total number of items that are being paginated. Defaulted to 0.\n     * @return {?}\n     */\n    get length() { return this._length; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Number of items to display on a page. By default set to 50.\n     * @return {?}\n     */\n    get pageSize() { return this._pageSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /**\n     * The set of provided page size options to display to the user.\n     * @return {?}\n     */\n    get pageSizeOptions() { return this._pageSizeOptions; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map((/**\n         * @param {?} p\n         * @return {?}\n         */\n        p => coerceNumberProperty(p)));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /**\n     * Whether to hide the page size selection UI from the user.\n     * @return {?}\n     */\n    get hidePageSize() { return this._hidePageSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to show the first/last buttons UI to the user.\n     * @return {?}\n     */\n    get showFirstLastButtons() { return this._showFirstLastButtons; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /**\n     * Advances to the next page if it exists.\n     * @return {?}\n     */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex++;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move back to the previous page if it exists.\n     * @return {?}\n     */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex--;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move to the first page if not already there.\n     * @return {?}\n     */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move to the last page if not already there.\n     * @return {?}\n     */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Whether there is a previous page.\n     * @return {?}\n     */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /**\n     * Whether there is a next page.\n     * @return {?}\n     */\n    hasNextPage() {\n        /** @type {?} */\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /**\n     * Calculate the number of pages\n     * @return {?}\n     */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     * @param {?} pageSize\n     * @return {?}\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        /** @type {?} */\n        const startIndex = this.pageIndex * this.pageSize;\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Checks whether the buttons for going forwards should be disabled.\n     * @return {?}\n     */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /**\n     * Checks whether the buttons for going backwards should be disabled.\n     * @return {?}\n     */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     * @private\n     * @return {?}\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize = this.pageSizeOptions.length != 0 ?\n                this.pageSizeOptions[0] :\n                DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => a - b));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Emits an event notifying that a change of the paginator's properties has been triggered.\n     * @private\n     * @param {?} previousPageIndex\n     * @return {?}\n     */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length\n        });\n    }\n}\nMatPaginator.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatPaginator, selectors: [[\"mat-paginator\"]], factory: function MatPaginator_Factory(t) { return new (t || MatPaginator)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef)); }, hostBindings: function MatPaginator_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c0);\n    } }, inputs: { disabled: \"disabled\", pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\", color: \"color\" }, outputs: { page: \"page\" }, exportAs: [\"matPaginator\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], consts: 14, vars: 14, template: function MatPaginator_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", _c1);\n        ɵngcc0.ɵɵelementStart(1, \"div\", _c2);\n        ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_Template, 5, 3, \"div\", _c3);\n        ɵngcc0.ɵɵelementStart(3, \"div\", _c4);\n        ɵngcc0.ɵɵelementStart(4, \"div\", _c5);\n        ɵngcc0.ɵɵtext(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, MatPaginator_button_6_Template, 3, 5, \"button\", _c6);\n        ɵngcc0.ɵɵelementStart(7, \"button\", _c7);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener($event) { return ctx.previousPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(8, \"svg\", _c8);\n        ɵngcc0.ɵɵelement(9, \"path\", _c9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelementStart(10, \"button\", _c10);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener($event) { return ctx.nextPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(11, \"svg\", _c8);\n        ɵngcc0.ɵɵelement(12, \"path\", _c11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(13, MatPaginator_button_13_Template, 3, 5, \"button\", _c12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵselect(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hidePageSize);\n        ɵngcc0.ɵɵselect(5);\n        ɵngcc0.ɵɵtextInterpolate(ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length));\n        ɵngcc0.ɵɵselect(6);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n        ɵngcc0.ɵɵselect(7);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._previousButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n        ɵngcc0.ɵɵselect(10);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._nextButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n        ɵngcc0.ɵɵselect(13);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton, ɵngcc3.MatTooltip, ɵngcc4.MatFormField, ɵngcc5.MatSelect, ɵngcc1.NgForOf, ɵngcc6.MatOption], styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatPaginator, [{\n        type: Component,\n        args: [{ selector: 'mat-paginator',\n                exportAs: 'matPaginator',\n                template: \"<div class=\\\"mat-paginator-outer-container\\\"><div class=\\\"mat-paginator-container\\\"><div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\"><div class=\\\"mat-paginator-page-size-label\\\">{{_intl.itemsPerPageLabel}}</div><mat-form-field *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\" [color]=\\\"color\\\" class=\\\"mat-paginator-page-size-select\\\"><mat-select [value]=\\\"pageSize\\\" [disabled]=\\\"disabled\\\" [aria-label]=\\\"_intl.itemsPerPageLabel\\\" (selectionChange)=\\\"_changePageSize($event.value)\\\"><mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">{{pageSizeOption}}</mat-option></mat-select></mat-form-field><div *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div></div><div class=\\\"mat-paginator-range-actions\\\"><div class=\\\"mat-paginator-range-label\\\">{{_intl.getRangeLabel(pageIndex, pageSize, length)}}</div><button mat-icon-button type=\\\"button\\\" class=\\\"mat-paginator-navigation-first\\\" (click)=\\\"firstPage()\\\" [attr.aria-label]=\\\"_intl.firstPageLabel\\\" [matTooltip]=\\\"_intl.firstPageLabel\\\" [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\" [matTooltipPosition]=\\\"'above'\\\" [disabled]=\\\"_previousButtonsDisabled()\\\" *ngIf=\\\"showFirstLastButtons\\\"><svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\"><path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/></svg></button> <button mat-icon-button type=\\\"button\\\" class=\\\"mat-paginator-navigation-previous\\\" (click)=\\\"previousPage()\\\" [attr.aria-label]=\\\"_intl.previousPageLabel\\\" [matTooltip]=\\\"_intl.previousPageLabel\\\" [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\" [matTooltipPosition]=\\\"'above'\\\" [disabled]=\\\"_previousButtonsDisabled()\\\"><svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\"><path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/></svg></button> <button mat-icon-button type=\\\"button\\\" class=\\\"mat-paginator-navigation-next\\\" (click)=\\\"nextPage()\\\" [attr.aria-label]=\\\"_intl.nextPageLabel\\\" [matTooltip]=\\\"_intl.nextPageLabel\\\" [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\" [matTooltipPosition]=\\\"'above'\\\" [disabled]=\\\"_nextButtonsDisabled()\\\"><svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\"><path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/></svg></button> <button mat-icon-button type=\\\"button\\\" class=\\\"mat-paginator-navigation-last\\\" (click)=\\\"lastPage()\\\" [attr.aria-label]=\\\"_intl.lastPageLabel\\\" [matTooltip]=\\\"_intl.lastPageLabel\\\" [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\" [matTooltipPosition]=\\\"'above'\\\" [disabled]=\\\"_nextButtonsDisabled()\\\" *ngIf=\\\"showFirstLastButtons\\\"><svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\"><path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/></svg></button></div></div></div>\",\n                styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\"],\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-paginator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: MatPaginatorIntl }, { type: ChangeDetectorRef }]; }, { constructor: [], _intl: [], _changeDetectorRef: [], _pageIndex: [], _length: [], _pageSizeOptions: [], _hidePageSize: [], _showFirstLastButtons: [], page: [{\n            type: Output\n        }], _intlChanges: [], pageIndex: [{\n            type: Input\n        }], pageIndex: [], length: [{\n            type: Input\n        }], length: [], pageSize: [{\n            type: Input\n        }], pageSize: [], _pageSize: [], pageSizeOptions: [{\n            type: Input\n        }], pageSizeOptions: [], hidePageSize: [{\n            type: Input\n        }], hidePageSize: [], showFirstLastButtons: [{\n            type: Input\n        }], showFirstLastButtons: [], ngOnInit: [], _initialized: [], ngOnDestroy: [], nextPage: [], previousPage: [], firstPage: [], lastPage: [], hasPreviousPage: [], hasNextPage: [], getNumberOfPages: [], _changePageSize: [], _nextButtonsDisabled: [], _previousButtonsDisabled: [], _updateDisplayedPageSizeOptions: [], _displayedPageSizeOptions: [], _emitPageEvent: [], color: [{\n            type: Input\n        }] });\n/** @nocollapse */\nMatPaginator.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef }\n];\nMatPaginator.propDecorators = {\n    color: [{ type: Input }],\n    pageIndex: [{ type: Input }],\n    length: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    pageSizeOptions: [{ type: Input }],\n    hidePageSize: [{ type: Input }],\n    showFirstLastButtons: [{ type: Input }],\n    page: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatPaginatorModule {\n}\nMatPaginatorModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: MatPaginatorModule });\nMatPaginatorModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function MatPaginatorModule_Factory(t) { return new (t || MatPaginatorModule)(); }, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatSelectModule,\n            MatTooltipModule,\n        ]] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(MatPaginatorModule, { declarations: function () { return [MatPaginator]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatTooltipModule]; }, exports: function () { return [MatPaginator]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatPaginatorModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatSelectModule,\n                    MatTooltipModule,\n                ],\n                exports: [MatPaginator],\n                declarations: [MatPaginator],\n                providers: [MAT_PAGINATOR_INTL_PROVIDER]\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatPaginatorModule, PageEvent, MatPaginator, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginatorIntl, MAT_PAGINATOR_INTL_PROVIDER };\n\n//# sourceMappingURL=paginator.js.map","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { untilDestroy } from '../../operators/untilDestroy';\nimport { ViewportService } from './viewport.service';\nimport { filter, take } from 'rxjs/operators';\n\n@Directive({\n  selector: '[inViewport]',\n})\nexport class InViewportDirective implements OnInit, OnDestroy {\n  @Input() public preRender = true;\n  @Input() public oneTime = false;\n  @Output() readonly inViewport = new EventEmitter<Partial<IntersectionObserverEntry>>();\n\n  constructor(\n    private readonly elementRef: ElementRef,\n    private viewportService: ViewportService,\n    @Inject(PLATFORM_ID) private platformId: object,\n  ) {}\n\n  public ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.oneTime) {\n        this.viewportService\n          .observe(this.elementRef.nativeElement)\n          .pipe(\n            untilDestroy(this),\n            filter(entry => entry.intersectionRatio >= 0.5),\n            take(1),\n          )\n          .subscribe((entry: IntersectionObserverEntry) => {\n            this.inViewport.emit(entry);\n          });\n      } else {\n        this.viewportService\n          .observe(this.elementRef.nativeElement)\n          .pipe(untilDestroy(this))\n          .subscribe((entry: IntersectionObserverEntry) => {\n            this.inViewport.emit(entry);\n          });\n      }\n    } else {\n      if (this.preRender) {\n        this.inViewport.emit({ isIntersecting: true, intersectionRatio: 1 });\n      }\n    }\n  }\n\n  ngOnDestroy() {}\n}\n","import { Directive, ElementRef, EventEmitter, Inject, Input, Output, PLATFORM_ID, } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { untilDestroy } from '../../operators/untilDestroy';\nimport { ViewportService } from './viewport.service';\nimport { filter, take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./viewport.service\";\nexport class InViewportDirective {\n    constructor(elementRef, viewportService, platformId) {\n        this.elementRef = elementRef;\n        this.viewportService = viewportService;\n        this.platformId = platformId;\n        this.preRender = true;\n        this.oneTime = false;\n        this.inViewport = new EventEmitter();\n    }\n    ngOnInit() {\n        if (isPlatformBrowser(this.platformId)) {\n            if (this.oneTime) {\n                this.viewportService\n                    .observe(this.elementRef.nativeElement)\n                    .pipe(untilDestroy(this), filter(entry => entry.intersectionRatio >= 0.5), take(1))\n                    .subscribe((entry) => {\n                    this.inViewport.emit(entry);\n                });\n            }\n            else {\n                this.viewportService\n                    .observe(this.elementRef.nativeElement)\n                    .pipe(untilDestroy(this))\n                    .subscribe((entry) => {\n                    this.inViewport.emit(entry);\n                });\n            }\n        }\n        else {\n            if (this.preRender) {\n                this.inViewport.emit({ isIntersecting: true, intersectionRatio: 1 });\n            }\n        }\n    }\n    ngOnDestroy() { }\n}\nInViewportDirective.ngDirectiveDef = i0.ɵɵdefineDirective({ type: InViewportDirective, selectors: [[\"\", \"inViewport\", \"\"]], factory: function InViewportDirective_Factory(t) { return new (t || InViewportDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ViewportService), i0.ɵɵdirectiveInject(PLATFORM_ID)); }, inputs: { preRender: \"preRender\", oneTime: \"oneTime\" }, outputs: { inViewport: \"inViewport\" } });\n/*@__PURE__*/ i0.ɵsetClassMetadata(InViewportDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[inViewport]',\n            }]\n    }], function () { return [{ type: i0.ElementRef }, { type: i1.ViewportService }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, { preRender: [{\n            type: Input\n        }], oneTime: [{\n            type: Input\n        }], inViewport: [{\n            type: Output\n        }] });\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ThemePickerComponent } from './theme-picker.component';\nimport { ThemePickerServiceModule } from './theme-picker-service.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatGridListModule,\n    MatTooltipModule,\n    ThemePickerServiceModule,\n  ],\n  exports: [ThemePickerComponent],\n  declarations: [ThemePickerComponent],\n})\nexport class ThemePickerModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ThemePickerComponent } from './theme-picker.component';\nimport { ThemePickerServiceModule } from './theme-picker-service.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport * as i0 from \"@angular/core\";\nexport class ThemePickerModule {\n}\nThemePickerModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: ThemePickerModule });\nThemePickerModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function ThemePickerModule_Factory(t) { return new (t || ThemePickerModule)(); }, imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatIconModule,\n            MatMenuModule,\n            MatGridListModule,\n            MatTooltipModule,\n            ThemePickerServiceModule,\n        ]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(ThemePickerModule, { declarations: [ThemePickerComponent], imports: [CommonModule,\n        MatButtonModule,\n        MatIconModule,\n        MatMenuModule,\n        MatGridListModule,\n        MatTooltipModule,\n        ThemePickerServiceModule], exports: [ThemePickerComponent] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(ThemePickerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatIconModule,\n                    MatMenuModule,\n                    MatGridListModule,\n                    MatTooltipModule,\n                    ThemePickerServiceModule,\n                ],\n                exports: [ThemePickerComponent],\n                declarations: [ThemePickerComponent],\n            }]\n    }], null, null);\n","export * from './lib/theme-picker.module';\n","import { MonoTypeOperatorFunction, Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n// create a symbol identify the observable I add to\n// the component so it doesn't conflict with anything.\n// I need this so I'm able to add the desired behaviour to the component.\nexport const destroy$ = Symbol('destroy$');\n\n/**\n * An operator that takes until destroy it takes a components this a parameter\n * returns a pipeable RxJS operator.\n */\nexport const untilDestroy = <T>(component: any): MonoTypeOperatorFunction<T> => {\n  if (component[destroy$] === undefined) {\n    // only hookup each component once.\n    addDestroyObservableToComponent(component);\n  }\n\n  // pipe in the takeUntil destroy$ and return the source unaltered\n  return takeUntil<T>(component[destroy$]);\n};\n\n/**\n * @internal\n */\nexport function addDestroyObservableToComponent(component: any) {\n  component[destroy$] = new Observable<void>(observer => {\n    // keep track of the original destroy function,\n    // the user might do something in there\n    const orignalDestroy = component.ngOnDestroy;\n    if (orignalDestroy == null) {\n      // Angular does not support dynamic added destroy methods\n      // so make sure there is one.\n      throw new Error('untilDestroy operator needs the component to have an ngOnDestroy method');\n    }\n    // replace the ngOndestroy\n    component.ngOnDestroy = () => {\n      // fire off the destroy observable\n      observer.next();\n      // complete the observable\n      observer.complete();\n      // and at last, call the original destroy\n      orignalDestroy.call(component);\n    };\n    // return cleanup function.\n    return (_: any) => (component[destroy$] = undefined);\n  });\n}\n","import { Injectable } from '@angular/core';\nimport { ThemePickerServiceModule } from './theme-picker-service.module';\n\n/**\n * Class for managing stylesheets. Stylesheets are loaded into named slots so that they can be\n * removed or changed later.\n */\n@Injectable({ providedIn: ThemePickerServiceModule })\nexport class StyleManagerService {\n  /**\n   * Set the stylesheet with the specified key.\n   */\n  setStyle(key: string, href: string) {\n    getLinkElementForKey(key).setAttribute('href', href);\n  }\n\n  /**\n   * Remove the stylesheet with the specified key.\n   */\n  removeStyle(key: string) {\n    const existingLinkElement = getExistingLinkElementByKey(key);\n    if (existingLinkElement) {\n      document.head.removeChild(existingLinkElement);\n    }\n  }\n}\n\nfunction getLinkElementForKey(key: string) {\n  return getExistingLinkElementByKey(key) || createLinkElementWithKey(key);\n}\n\nfunction getExistingLinkElementByKey(key: string) {\n  return document.head.querySelector(`link[rel=\"stylesheet\"].${getClassNameForKey(key)}`);\n}\n\nfunction createLinkElementWithKey(key: string) {\n  const linkEl = document.createElement('link');\n  linkEl.setAttribute('rel', 'stylesheet');\n  linkEl.classList.add(getClassNameForKey(key));\n  document.head.appendChild(linkEl);\n  return linkEl;\n}\n\nfunction getClassNameForKey(key: string) {\n  return `style-manager-${key}`;\n}\n","import { Injectable } from '@angular/core';\nimport { ThemePickerServiceModule } from './theme-picker-service.module';\nimport * as i0 from \"@angular/core\";\n/**\n * Class for managing stylesheets. Stylesheets are loaded into named slots so that they can be\n * removed or changed later.\n */\nexport class StyleManagerService {\n    /**\n     * Set the stylesheet with the specified key.\n     */\n    setStyle(key, href) {\n        getLinkElementForKey(key).setAttribute('href', href);\n    }\n    /**\n     * Remove the stylesheet with the specified key.\n     */\n    removeStyle(key) {\n        const existingLinkElement = getExistingLinkElementByKey(key);\n        if (existingLinkElement) {\n            document.head.removeChild(existingLinkElement);\n        }\n    }\n}\nStyleManagerService.ngInjectableDef = i0.ɵɵdefineInjectable({ token: StyleManagerService, factory: function StyleManagerService_Factory(t) { return new (t || StyleManagerService)(); }, providedIn: ThemePickerServiceModule });\n/*@__PURE__*/ i0.ɵsetClassMetadata(StyleManagerService, [{\n        type: Injectable,\n        args: [{ providedIn: ThemePickerServiceModule }]\n    }], null, null);\nfunction getLinkElementForKey(key) {\n    return getExistingLinkElementByKey(key) || createLinkElementWithKey(key);\n}\nfunction getExistingLinkElementByKey(key) {\n    return document.head.querySelector(`link[rel=\"stylesheet\"].${getClassNameForKey(key)}`);\n}\nfunction createLinkElementWithKey(key) {\n    const linkEl = document.createElement('link');\n    linkEl.setAttribute('rel', 'stylesheet');\n    linkEl.classList.add(getClassNameForKey(key));\n    document.head.appendChild(linkEl);\n    return linkEl;\n}\nfunction getClassNameForKey(key) {\n    return `style-manager-${key}`;\n}\n","import * as tslib_1 from \"tslib\";\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, HostBinding } from '@angular/core';\nimport { StyleManagerService } from './style-manager.service';\nimport { Select, Store } from '@ngxs/store';\nimport { themes, PreferenceState, ChangeTheme } from '@ngx-starter-kit/core';\nimport { untilDestroy } from '@ngx-starter-kit/ngx-utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngxs/store\";\nimport * as i2 from \"./style-manager.service\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/tooltip\";\nimport * as i5 from \"@angular/material/menu\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/material/grid-list\";\nimport * as i8 from \"@angular/common\";\nconst _c0 = [\"mat-icon-button\", \"\", \"matTooltip\", \"Select a theme!\", \"tabindex\", \"-1\", 3, \"matMenuTriggerFor\"];\nconst _c1 = [\"x-position\", \"before\", 1, \"default-theme-picker-menu\"];\nconst _c2 = [\"themeMenu\", \"matMenu\"];\nconst _c3 = [\"cols\", \"2\"];\nconst _c4 = [4, \"ngFor\", \"ngForOf\"];\nconst _c5 = [\"mat-menu-item\", \"\", 3, \"click\"];\nconst _c6 = [1, \"default-theme-picker-swatch\"];\nconst _c7 = [\"class\", \"default-theme-chosen-icon\", 4, \"ngIf\"];\nconst _c8 = [1, \"default-theme-picker-primary\"];\nconst _c9 = [1, \"default-theme-chosen-icon\"];\nfunction ThemePickerComponent_mat_grid_tile_6_mat_icon_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", _c9);\n    i0.ɵɵtext(1, \"check_circle\");\n    i0.ɵɵelementEnd();\n} }\nfunction ThemePickerComponent_mat_grid_tile_6_Template(rf, ctx) { if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-grid-tile\");\n    i0.ɵɵelementStart(1, \"div\", _c5);\n    i0.ɵɵlistener(\"click\", function ThemePickerComponent_mat_grid_tile_6_Template_div_click_1_listener($event) { i0.ɵɵrestoreView(_r11); const item_r8 = ctx.$implicit; const ctx_r10 = i0.ɵɵnextContext(); return ctx_r10.changeTheme(item_r8.key); });\n    i0.ɵɵelementStart(2, \"div\", _c6);\n    i0.ɵɵtemplate(3, ThemePickerComponent_mat_grid_tile_6_mat_icon_3_Template, 2, 0, \"mat-icon\", _c7);\n    i0.ɵɵelementStart(4, \"div\", _c8);\n    i0.ɵɵstyling();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵselect(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.currentTheme === item_r8.key);\n    i0.ɵɵselect(4);\n    i0.ɵɵstyleSanitizer(i0.ɵɵdefaultStyleSanitizer);\n    i0.ɵɵstyleProp(\"background\", item_r8.value.primary);\n    i0.ɵɵstylingApply();\n} }\nexport class ThemePickerComponent {\n    constructor(store, styleManager) {\n        this.store = store;\n        this.styleManager = styleManager;\n        this.ariaHidden = true;\n        this.allThemes = themes;\n    }\n    changeTheme(themeName) {\n        this.store.dispatch(new ChangeTheme(themeName));\n    }\n    ngOnInit() {\n        // this.installTheme(this.store.selectSnapshot(PreferenceState.activeThemeName));\n        this.activeThemeName$.pipe(untilDestroy(this)).subscribe(themeName => {\n            this.installTheme(themeName);\n        });\n    }\n    ngOnDestroy() { }\n    installTheme(themeName) {\n        console.log(`installing ${themeName}`);\n        if (themeName) {\n            this.currentTheme = themeName;\n            const theme = this.allThemes.get(themeName);\n            if (theme.isDefault) {\n                this.styleManager.removeStyle('theme');\n            }\n            else {\n                this.styleManager.setStyle('theme', `assets/themes/${theme.href}`);\n            }\n        }\n    }\n}\nThemePickerComponent.ngComponentDef = i0.ɵɵdefineComponent({ type: ThemePickerComponent, selectors: [[\"theme-picker\"]], factory: function ThemePickerComponent_Factory(t) { return new (t || ThemePickerComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.StyleManagerService)); }, hostBindings: function ThemePickerComponent_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        i0.ɵɵallocHostVars(1);\n    } if (rf & 2) {\n        i0.ɵɵattribute(\"aria-hidden\", ctx.ariaHidden);\n    } }, consts: 8, vars: 4, template: function ThemePickerComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", _c0);\n        i0.ɵɵelementStart(1, \"mat-icon\");\n        i0.ɵɵtext(2, \"format_color_fill\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-menu\", _c1, _c2);\n        i0.ɵɵelementStart(5, \"mat-grid-list\", _c3);\n        i0.ɵɵtemplate(6, ThemePickerComponent_mat_grid_tile_6_Template, 5, 2, \"mat-grid-tile\", _c4);\n        i0.ɵɵpipe(7, \"keyvalue\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r6 = i0.ɵɵreference(4);\n        i0.ɵɵproperty(\"matMenuTriggerFor\", _r6);\n        i0.ɵɵselect(6);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(7, 2, ctx.allThemes));\n    } }, directives: [i3.MatButton, i4.MatTooltip, i5.MatMenuTrigger, i6.MatIcon, i5._MatMenu, i7.MatGridList, i8.NgForOf, i7.MatGridTile, i5.MatMenuItem, i8.NgIf], pipes: [i8.KeyValuePipe], styles: [\".default-theme-picker-menu .mat-menu-content{padding:8px}.default-theme-picker-menu [mat-menu-item]{flex:0 0 auto;padding:0;overflow:hidden}.default-theme-picker-menu .default-theme-picker-swatch{position:relative;width:36px;height:36px;margin:6px;border-radius:50%;overflow:hidden}.default-theme-picker-menu .default-theme-picker-swatch .default-theme-chosen-icon{color:#fff;position:absolute;left:50%;top:50%;transform:translate(-50%,-50%)}.default-theme-picker-menu .default-theme-picker-swatch::after{content:\\\"\\\";position:absolute;top:0;left:0;width:100%;height:100%;box-sizing:border-box;border:1px solid rgba(0,0,0,.2);border-radius:50%}.default-theme-picker-menu .default-theme-picker-primary{width:100%;height:100%}.default-theme-picker-menu .default-theme-picker-accent{position:absolute;bottom:6px;width:100%;height:6px}\"], encapsulation: 2, changeDetection: 0 });\ntslib_1.__decorate([\n    Select(PreferenceState.activeThemeName),\n    tslib_1.__metadata(\"design:type\", Object)\n], ThemePickerComponent.prototype, \"activeThemeName$\", void 0);\n/*@__PURE__*/ i0.ɵsetClassMetadata(ThemePickerComponent, [{\n        type: Component,\n        args: [{\n                selector: 'theme-picker',\n                templateUrl: './theme-picker.component.html',\n                styleUrls: ['./theme-picker.component.scss'],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n            }]\n    }], function () { return [{ type: i1.Store }, { type: i2.StyleManagerService }]; }, { ariaHidden: [{\n            type: HostBinding,\n            args: ['attr.aria-hidden']\n        }], activeThemeName$: [] });\n","<button mat-icon-button [matMenuTriggerFor]=\"themeMenu\" matTooltip=\"Select a theme!\" tabindex=\"-1\">\n  <mat-icon>format_color_fill</mat-icon>\n</button>\n\n<!-- TODO: replace use of `mat-menu` here with a custom overlay -->\n<mat-menu class=\"default-theme-picker-menu\" #themeMenu=\"matMenu\" x-position=\"before\">\n  <mat-grid-list cols=\"2\">\n    <mat-grid-tile *ngFor=\"let item of (allThemes | keyvalue)\">\n      <div mat-menu-item (click)=\"changeTheme(item.key)\">\n        <div class=\"default-theme-picker-swatch\">\n          <mat-icon class=\"default-theme-chosen-icon\" *ngIf=\"currentTheme === item.key\">check_circle</mat-icon>\n          <div class=\"default-theme-picker-primary\" [style.background]=\"item.value.primary\"></div>\n        </div>\n      </div>\n    </mat-grid-tile>\n  </mat-grid-list>\n</mat-menu>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, HostBinding, OnInit, OnDestroy } from '@angular/core';\nimport { StyleManagerService } from './style-manager.service';\nimport { Select, Store } from '@ngxs/store';\nimport { themes, PreferenceState, ThemeName, ChangeTheme } from '@ngx-starter-kit/core';\nimport { untilDestroy } from '@ngx-starter-kit/ngx-utils';\n\n@Component({\n  selector: 'theme-picker',\n  templateUrl: './theme-picker.component.html',\n  styleUrls: ['./theme-picker.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  // host: { 'aria-hidden': 'true' }\n})\nexport class ThemePickerComponent implements OnInit, OnDestroy {\n  @HostBinding('attr.aria-hidden') ariaHidden = true;\n  allThemes = themes;\n  @Select(PreferenceState.activeThemeName) activeThemeName$;\n  currentTheme: ThemeName;\n\n  constructor(private store: Store, public styleManager: StyleManagerService) {}\n\n  changeTheme(themeName: ThemeName) {\n    this.store.dispatch(new ChangeTheme(themeName));\n  }\n\n  ngOnInit(): void {\n    // this.installTheme(this.store.selectSnapshot(PreferenceState.activeThemeName));\n    this.activeThemeName$.pipe(untilDestroy(this)).subscribe(themeName => {\n      this.installTheme(themeName);\n    });\n  }\n\n  ngOnDestroy(): void {}\n\n  installTheme(themeName: ThemeName) {\n    console.log(`installing ${themeName}`);\n    if (themeName) {\n      this.currentTheme = themeName;\n      const theme = this.allThemes.get(themeName);\n      if (theme.isDefault) {\n        this.styleManager.removeStyle('theme');\n      } else {\n        this.styleManager.setStyle('theme', `assets/themes/${theme.href}`);\n      }\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval(period = 0, scheduler = async) {\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber, counter: 0, period }));\n        return subscriber;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, counter, period } = state;\n    subscriber.next(counter);\n    this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n//# sourceMappingURL=interval.js.map","import { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  imports: [FlexLayoutModule.withConfig({ useColumnBasisZero: false })],\n  exports: [FlexLayoutModule],\n})\nexport class SharedFlexLayoutModule {}\n","import { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/flex-layout\";\nexport class SharedFlexLayoutModule {\n}\nSharedFlexLayoutModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: SharedFlexLayoutModule });\nSharedFlexLayoutModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function SharedFlexLayoutModule_Factory(t) { return new (t || SharedFlexLayoutModule)(); }, imports: [[FlexLayoutModule.withConfig({ useColumnBasisZero: false })],\n        FlexLayoutModule] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(SharedFlexLayoutModule, { imports: [i1.FlexLayoutModule], exports: [FlexLayoutModule] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(SharedFlexLayoutModule, [{\n        type: NgModule,\n        args: [{\n                imports: [FlexLayoutModule.withConfig({ useColumnBasisZero: false })],\n                exports: [FlexLayoutModule],\n            }]\n    }], null, null);\n","import { NgModule } from '@angular/core';\nimport {\n  PERFECT_SCROLLBAR_CONFIG,\n  PerfectScrollbarConfigInterface,\n  PerfectScrollbarModule,\n} from 'ngx-perfect-scrollbar';\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true,\n  wheelPropagation: true,\n};\n\n@NgModule({\n  exports: [PerfectScrollbarModule],\n  providers: [{ provide: PERFECT_SCROLLBAR_CONFIG, useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG }],\n})\nexport class SharedPerfectScrollbarModule {}\n","import { NgModule } from '@angular/core';\nimport { PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarModule, } from 'ngx-perfect-scrollbar';\nimport * as i0 from \"@angular/core\";\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG = {\n    suppressScrollX: true,\n    wheelPropagation: true,\n};\nexport class SharedPerfectScrollbarModule {\n}\nSharedPerfectScrollbarModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: SharedPerfectScrollbarModule });\nSharedPerfectScrollbarModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function SharedPerfectScrollbarModule_Factory(t) { return new (t || SharedPerfectScrollbarModule)(); }, providers: [{ provide: PERFECT_SCROLLBAR_CONFIG, useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG }], imports: [PerfectScrollbarModule] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(SharedPerfectScrollbarModule, { exports: [PerfectScrollbarModule] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(SharedPerfectScrollbarModule, [{\n        type: NgModule,\n        args: [{\n                exports: [PerfectScrollbarModule],\n                providers: [{ provide: PERFECT_SCROLLBAR_CONFIG, useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG }],\n            }]\n    }], null, null);\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgLetModule, RouterLinkMatchModule } from '@ngx-starter-kit/ngx-utils';\nimport { SharedFlexLayoutModule } from './shared-flex-layout.module';\nimport { SharedPerfectScrollbarModule } from './shared-perfect-scrollbar.module';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [\n    CommonModule,\n    NgLetModule,\n    ReactiveFormsModule,\n    RouterLinkMatchModule,\n    SharedFlexLayoutModule,\n    SharedPerfectScrollbarModule,\n  ],\n})\nexport class SharedModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgLetModule, RouterLinkMatchModule } from '@ngx-starter-kit/ngx-utils';\nimport { SharedFlexLayoutModule } from './shared-flex-layout.module';\nimport { SharedPerfectScrollbarModule } from './shared-perfect-scrollbar.module';\nimport * as i0 from \"@angular/core\";\nexport class SharedModule {\n}\nSharedModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: SharedModule });\nSharedModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function SharedModule_Factory(t) { return new (t || SharedModule)(); }, imports: [[CommonModule],\n        CommonModule,\n        NgLetModule,\n        ReactiveFormsModule,\n        RouterLinkMatchModule,\n        SharedFlexLayoutModule,\n        SharedPerfectScrollbarModule] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(SharedModule, { imports: [CommonModule], exports: [CommonModule,\n        NgLetModule,\n        ReactiveFormsModule,\n        RouterLinkMatchModule,\n        SharedFlexLayoutModule,\n        SharedPerfectScrollbarModule] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(SharedModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [\n                    CommonModule,\n                    NgLetModule,\n                    ReactiveFormsModule,\n                    RouterLinkMatchModule,\n                    SharedFlexLayoutModule,\n                    SharedPerfectScrollbarModule,\n                ],\n            }]\n    }], null, null);\n","import { NgModule } from '@angular/core';\n\nimport { MAT_DATE_FORMATS, MAT_DATE_LOCALE, MatDateFormats, MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\n\nconst MODULE_EXPORTS = [MatDatepickerModule, MatNativeDateModule];\n\nconst DATE_FORMATS: MatDateFormats = {\n  parse: {\n    dateInput: 'LL',\n  },\n  display: {\n    dateInput: 'LL',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n@NgModule({\n  exports: MODULE_EXPORTS,\n  providers: [{ provide: MAT_DATE_FORMATS, useValue: DATE_FORMATS }, { provide: MAT_DATE_LOCALE, useValue: 'en-GB' }],\n})\nexport class SharedMaterialDateModule {}\n","import { NgModule } from '@angular/core';\nimport { MAT_DATE_FORMATS, MAT_DATE_LOCALE, MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport * as i0 from \"@angular/core\";\nconst MODULE_EXPORTS = [MatDatepickerModule, MatNativeDateModule];\nconst DATE_FORMATS = {\n    parse: {\n        dateInput: 'LL',\n    },\n    display: {\n        dateInput: 'LL',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\nexport class SharedMaterialDateModule {\n}\nSharedMaterialDateModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: SharedMaterialDateModule });\nSharedMaterialDateModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function SharedMaterialDateModule_Factory(t) { return new (t || SharedMaterialDateModule)(); }, providers: [{ provide: MAT_DATE_FORMATS, useValue: DATE_FORMATS }, { provide: MAT_DATE_LOCALE, useValue: 'en-GB' }], imports: [MatDatepickerModule, MatNativeDateModule] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(SharedMaterialDateModule, { exports: [MatDatepickerModule, MatNativeDateModule] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(SharedMaterialDateModule, [{\n        type: NgModule,\n        args: [{\n                exports: MODULE_EXPORTS,\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: DATE_FORMATS }, { provide: MAT_DATE_LOCALE, useValue: 'en-GB' }],\n            }]\n    }], null, null);\n","import { Inject, OnInit } from '@angular/core';\nimport { Entity } from './entity.model';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nexport abstract class EntityFormComponent<TEntity extends Entity> implements OnInit {\n  title: string;\n  entity: TEntity;\n  entityForm: FormGroup;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) protected data: { title: string; payload: TEntity },\n    protected dialogRef: MatDialogRef<EntityFormComponent<TEntity>>,\n  ) {\n    this.title = data.title;\n    this.entity = data.payload;\n  }\n\n  abstract buildForm(entity: TEntity);\n\n  ngOnInit() {\n    this.buildForm(this.entity);\n  }\n\n  submit() {\n    this.dialogRef.close(this.entityForm.value as Partial<TEntity>);\n  }\n}\n","import { ElementRef, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { concatMap, filter, map } from 'rxjs/operators';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { untilDestroy } from '@ngx-starter-kit/ngx-utils';\nimport { parseISO } from 'date-fns/esm';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"filter\"];\nexport class EntitiesComponent {\n    // TODO: make them optional abstract end\n    constructor(entityService) {\n        this.entityService = entityService;\n        this.dataSource = new MatTableDataSource([]);\n        this.selection = new SelectionModel(false, []);\n        this.title = null;\n        this.showToolbar = false;\n        this.showColumnFilter = false;\n        this.showActionColumn = false;\n        this.maxSelectable = 1;\n        this.actionColumn = 'Actions';\n        this.selectColumn = 'select';\n        this.loading$ = entityService.loading$;\n    }\n    ngOnInit() {\n        this.selection = new SelectionModel(this.maxSelectable > 1, []);\n        this.update().subscribe();\n        if (this.filterPredicate) {\n            this.dataSource.filterPredicate = this.filterPredicate;\n        }\n        // remove first selected entity if more then max selected.\n        if (this.maxSelectable > 1) {\n            // is multi select mode?\n            this.selection.changed\n                .pipe(\n            // tap(console.log),\n            filter((sc) => sc.added.length > 0), filter(_ => this.selection.selected.length > this.maxSelectable), untilDestroy(this))\n                .subscribe(_ => this.selection.deselect(this.selection.selected.shift()));\n        }\n        // fromEvent(this.filterRef.nativeElement, 'keyup')\n        //   .pipe(\n        //     debounceTime(150),\n        //     distinctUntilChanged()\n        //   ).subscribe(() => {\n        //   this.paginator.pageIndex = 0;\n        //   this.applyFilter(this.filterRef.nativeElement.value)\n        // });\n    }\n    ngOnDestroy() { }\n    ngAfterViewInit() {\n        // Needs to be set up after the view is initialized since the data source will look at the sort\n        // and paginator's initial values to know what data should be rendered.\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n    }\n    getById(id) {\n        return this.entityService.getById(id);\n    }\n    delete(item) {\n        return this.entityService.delete(item.id).pipe(concatMap(_ => this.update()));\n    }\n    updateOrCreate(entity, id) {\n        if (id) {\n            return this.entityService.put(id, entity).pipe(concatMap(_ => this.update()));\n        }\n        else {\n            return this.entityService.post(entity).pipe(concatMap(_ => this.update()));\n        }\n    }\n    /**\n     * Overwrite this method, to get the data your way.\n     */\n    getData() {\n        return this.entityService.getAll();\n    }\n    update() {\n        return this.getData().pipe(map(result => {\n            this.dataSource = new MatTableDataSource(result);\n            this.dataSource.sort = this.sort;\n            this.dataSource.paginator = this.paginator;\n            // return nothing as we don't need.\n            // return result\n        }));\n    }\n    /** Whether all filtered rows are selected. */\n    isAllFilteredRowsSelected() {\n        return this.dataSource.filteredData.every(data => this.selection.isSelected(data));\n    }\n    /** Whether the selection it totally matches the filtered rows. */\n    isMasterToggleChecked() {\n        return (this.selection.hasValue() &&\n            this.isAllFilteredRowsSelected() &&\n            this.selection.selected.length >= this.dataSource.filteredData.length);\n    }\n    /**\n     * Whether there is a selection that doesn't capture all the\n     * filtered rows there are no filtered rows displayed.\n     */\n    isMasterToggleIndeterminate() {\n        return this.selection.hasValue() && (!this.isAllFilteredRowsSelected() || !this.dataSource.filteredData.length);\n    }\n    /** Selects all filtered rows if they are not all selected; otherwise clear selection. */\n    masterToggle() {\n        if (this.isMasterToggleChecked()) {\n            this.selection.clear();\n        }\n        else {\n            this.dataSource.filteredData.forEach(data => this.selection.select(data));\n        }\n    }\n    applyFilter(filterValue) {\n        filterValue = filterValue.trim(); // Remove whitespace\n        filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n        this.dataSource.filter = filterValue;\n    }\n    get displayedColumns() {\n        // prettier-ignore\n        let displayedColumns = this.columns\n            .filter(column => column.visible)\n            .map(x => x.property);\n        if (this.maxSelectable > 0) {\n            displayedColumns.unshift(this.selectColumn);\n        }\n        if (this.showActionColumn) {\n            displayedColumns = displayedColumns.concat(this.actionColumn);\n        }\n        return displayedColumns;\n    }\n    selectRow(entity) {\n        if (this.maxSelectable > 0) {\n            this.selection.toggle(entity);\n            if (this.selection.isSelected(entity)) {\n                this.showDetails(entity);\n            }\n            else {\n                this.showDetails(undefined);\n            }\n        }\n    }\n    getRouteAnimation(outlet) {\n        return outlet.activatedRouteData.depth || 5;\n        // return outlet.isActivated ? outlet.activatedRoute : ''\n    }\n    /**\n     * will be called with entity or undefined\n     */\n    showDetails(entity) { }\n    toggleColumnVisibility(column, event) {\n        event.stopPropagation();\n        event.stopImmediatePropagation();\n        column.visible = !column.visible;\n    }\n    stringToDate(date) {\n        const isString = s => typeof s === 'string' || s instanceof String;\n        return isString(date) ? parseISO(date) : date;\n    }\n}\nEntitiesComponent.ngBaseDef = i0.ɵɵdefineBase({ viewQuery: function (rf, ctx) { if (rf & 1) {\n        i0.ɵɵstaticViewQuery(MatPaginator, true);\n        i0.ɵɵstaticViewQuery(MatSort, true);\n        i0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        i0.ɵɵqueryRefresh((_t = i0.ɵɵloadQuery())) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh((_t = i0.ɵɵloadQuery())) && (ctx.sort = _t.first);\n        i0.ɵɵqueryRefresh((_t = i0.ɵɵloadQuery())) && (ctx.filterRef = _t.first);\n    } } });\n","import { AfterViewInit, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { EntityService } from './entity.service';\nimport { Entity, EntityColumnDef } from './entity.model';\nimport { concatMap, filter, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { EntityFormComponent } from './entity-form.component';\nimport { ComponentType } from '@angular/cdk/portal/typings/portal';\nimport { SelectionChange, SelectionModel } from '@angular/cdk/collections';\nimport { untilDestroy } from '@ngx-starter-kit/ngx-utils';\nimport { parseISO } from 'date-fns/esm';\n\nexport abstract class EntitiesComponent<TEntity extends Entity, TService extends EntityService<TEntity>>\n  implements OnInit, OnDestroy, AfterViewInit {\n  dataSource = new MatTableDataSource<TEntity>([]);\n  selection = new SelectionModel<TEntity>(false, []);\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild('filter', { static: true }) filterRef: ElementRef;\n\n  readonly loading$;\n  readonly columns: Array<EntityColumnDef<TEntity>>;\n  readonly title?: string = null;\n  readonly showToolbar?: boolean = false;\n  readonly showColumnFilter?: boolean = false;\n  readonly showActionColumn?: boolean = false;\n  readonly maxSelectable?: number = 1;\n  readonly actionColumn?: string = 'Actions';\n  readonly selectColumn?: string = 'select';\n  // TODO: make them optional abstract\n  readonly formRef?: ComponentType<EntityFormComponent<TEntity>>;\n  getNewEntity?(): TEntity;\n  filterPredicate?(entity: TEntity, filter: string): boolean;\n  // TODO: make them optional abstract end\n\n  constructor(protected entityService: TService) {\n    this.loading$ = entityService.loading$;\n  }\n\n  ngOnInit() {\n    this.selection = new SelectionModel<TEntity>(this.maxSelectable > 1, []);\n\n    this.update().subscribe();\n    if (this.filterPredicate) {\n      this.dataSource.filterPredicate = this.filterPredicate;\n    }\n\n    // remove first selected entity if more then max selected.\n    if (this.maxSelectable > 1) {\n      // is multi select mode?\n      this.selection.changed\n        .pipe(\n          // tap(console.log),\n          filter((sc: SelectionChange<TEntity>) => sc.added.length > 0),\n          filter(_ => this.selection.selected.length > this.maxSelectable),\n          untilDestroy(this),\n        )\n        .subscribe(_ => this.selection.deselect(this.selection.selected.shift()));\n    }\n\n    // fromEvent(this.filterRef.nativeElement, 'keyup')\n    //   .pipe(\n    //     debounceTime(150),\n    //     distinctUntilChanged()\n    //   ).subscribe(() => {\n    //   this.paginator.pageIndex = 0;\n    //   this.applyFilter(this.filterRef.nativeElement.value)\n    // });\n  }\n\n  ngOnDestroy() {}\n\n  ngAfterViewInit() {\n    // Needs to be set up after the view is initialized since the data source will look at the sort\n    // and paginator's initial values to know what data should be rendered.\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  getById(id: number) {\n    return this.entityService.getById(id);\n  }\n\n  delete(item: TEntity) {\n    return this.entityService.delete(item.id).pipe(concatMap(_ => this.update()));\n  }\n\n  updateOrCreate(entity: TEntity, id: number) {\n    if (id) {\n      return this.entityService.put(id, entity).pipe(concatMap(_ => this.update()));\n    } else {\n      return this.entityService.post(entity).pipe(concatMap(_ => this.update()));\n    }\n  }\n\n  /**\n   * Overwrite this method, to get the data your way.\n   */\n  getData(): Observable<TEntity[]> {\n    return this.entityService.getAll();\n  }\n\n  protected update() {\n    return this.getData().pipe(\n      map(result => {\n        this.dataSource = new MatTableDataSource<TEntity>(result);\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n        // return nothing as we don't need.\n        // return result\n      }),\n    );\n  }\n\n  /** Whether all filtered rows are selected. */\n  isAllFilteredRowsSelected() {\n    return this.dataSource.filteredData.every(data => this.selection.isSelected(data));\n  }\n\n  /** Whether the selection it totally matches the filtered rows. */\n  isMasterToggleChecked() {\n    return (\n      this.selection.hasValue() &&\n      this.isAllFilteredRowsSelected() &&\n      this.selection.selected.length >= this.dataSource.filteredData.length\n    );\n  }\n\n  /**\n   * Whether there is a selection that doesn't capture all the\n   * filtered rows there are no filtered rows displayed.\n   */\n  isMasterToggleIndeterminate() {\n    return this.selection.hasValue() && (!this.isAllFilteredRowsSelected() || !this.dataSource.filteredData.length);\n  }\n\n  /** Selects all filtered rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isMasterToggleChecked()) {\n      this.selection.clear();\n    } else {\n      this.dataSource.filteredData.forEach(data => this.selection.select(data));\n    }\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  get displayedColumns(): string[] {\n    // prettier-ignore\n    let displayedColumns = this.columns\n      .filter(column => column.visible)\n      .map(x => x.property);\n\n    if (this.maxSelectable > 0) {\n      displayedColumns.unshift(this.selectColumn);\n    }\n    if (this.showActionColumn) {\n      displayedColumns = displayedColumns.concat(this.actionColumn);\n    }\n    return displayedColumns;\n  }\n\n  selectRow(entity: TEntity) {\n    if (this.maxSelectable > 0) {\n      this.selection.toggle(entity);\n      if (this.selection.isSelected(entity)) {\n        this.showDetails(entity);\n      } else {\n        this.showDetails(undefined);\n      }\n    }\n  }\n\n  getRouteAnimation(outlet) {\n    return outlet.activatedRouteData.depth || 5;\n    // return outlet.isActivated ? outlet.activatedRoute : ''\n  }\n\n  /**\n   * will be called with entity or undefined\n   */\n  showDetails(entity: TEntity) {}\n\n  toggleColumnVisibility(column, event) {\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    column.visible = !column.visible;\n  }\n\n  protected stringToDate(date: string | number | Date): number | Date {\n    const isString = s => typeof s === 'string' || s instanceof String;\n    return isString(date) ? parseISO(date) : date;\n  }\n}\n","import { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { environment } from '@env/environment';\nimport { Entity } from './entity.model';\nimport { catchError, finalize, retry } from 'rxjs/operators';\nimport { format } from 'date-fns/esm';\nimport { IPagination } from './pagination';\n\nexport interface Filter {\n  [name: string]: string | string[];\n}\n\nexport abstract class EntityService<T extends Entity> {\n  protected readonly baseUrl = environment.API_BASE_URL;\n  protected loadingSubject = new BehaviorSubject<boolean>(false);\n  public loading$ = this.loadingSubject.asObservable();\n\n  protected abstract entityPath: string;\n\n  constructor(protected httpClient: HttpClient) {}\n\n  getById(id: number | string) {\n    // this.loadingSubject.next(true);\n    return this.httpClient.get<T>(`${this.baseUrl}/${this.entityPath}/${id}`).pipe(\n      catchError(this.handleError),\n      // finalize(() => this.loadingSubject.next(false))\n    );\n  }\n\n  // findAll(filter: Filter, order = 'DESC', skip = 0, take = 100): Observable<IPagination<T>> | Observable<never> {\n  findAll(filter: Filter, order = 'DESC', skip = 0, take = 100): Observable<T[]> | Observable<never> {\n    this.loadingSubject.next(true);\n    return this.httpClient\n      .get<T[]>(`${this.baseUrl}/${this.entityPath}`, {\n        params: new HttpParams()\n          .set('filter', 'filter TODO')\n          .set('order', order)\n          .set('skip', skip.toString())\n          .set('take', take.toString()),\n      })\n      .pipe(\n        retry(3), // retry a failed request up to 3 times\n        catchError(this.handleError),\n        finalize(() => this.loadingSubject.next(false)),\n      );\n  }\n\n  // getAll(): Observable<IPagination<T>> {\n  getAll(): Observable<T[]> {\n    this.loadingSubject.next(true);\n    return this.httpClient.get<T[]>(`${this.baseUrl}/${this.entityPath}`).pipe(\n      retry(3), // retry a failed request up to 3 times\n      catchError(this.handleError),\n      finalize(() => this.loadingSubject.next(false)),\n    );\n  }\n\n  delete(id: number | string) {\n    this.loadingSubject.next(true);\n    return this.httpClient.delete(`${this.baseUrl}/${this.entityPath}/${id}`).pipe(\n      catchError(this.handleError),\n      finalize(() => this.loadingSubject.next(false)),\n    );\n  }\n\n  post(entity: T) {\n    this.loadingSubject.next(true);\n    return this.httpClient.post(`${this.baseUrl}/${this.entityPath}`, entity).pipe(\n      catchError(this.handleError),\n      finalize(() => this.loadingSubject.next(false)),\n    );\n  }\n\n  put(id: number | string, entity: T) {\n    console.log(entity);\n    this.loadingSubject.next(true);\n    return this.httpClient.put(`${this.baseUrl}/${this.entityPath}/${id}`, entity).pipe(\n      catchError(this.handleError),\n      finalize(() => this.loadingSubject.next(false)),\n    );\n  }\n\n  protected handleError(error: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage: string;\n    if (typeof error === 'string') {\n      errorMessage = error;\n    } else {\n      if (error.error instanceof ErrorEvent) {\n        // A client-side or network error occurred. Handle it accordingly.\n        errorMessage = `An error occurred: ${error.error.message}`;\n      } else {\n        // The backend returned an unsuccessful response code.\n        // The response body may contain clues as to what went wrong,\n        errorMessage = `Backend returned code ${error.status}, with body ${error.message}`;\n      }\n    }\n    console.error(error);\n    // return an ErrorObservable with a user-facing error message\n    return throwError(errorMessage);\n  }\n\n  protected convertToJson(body: any) {\n    const temporalFunctionToJson = Date.prototype.toJSON;\n    Date.prototype.toJSON = function() {\n      return format(this, 'YYYY-MM-DD');\n    };\n\n    const jsonBody = JSON.stringify(body);\n\n    Date.prototype.toJSON = temporalFunctionToJson;\n    return jsonBody;\n  }\n}\n","import { TemplateRef } from '@angular/core';\n\nexport abstract class Entity {\n  abstract get id(): number | string;\n  [key: string]: any;\n  constructor(init?: Partial<Entity>) {\n    Object.assign(this, init);\n  }\n}\n\nexport class EntityColumnDef<T> {\n  readonly property: string;\n  readonly header = this.property;\n  public visible = true;\n  readonly sticky?: 'start' | 'end';\n  readonly template?: TemplateRef<any>;\n  readonly displayFn = (entity: T) => entity[this.property];\n\n  public constructor(init?: Partial<EntityColumnDef<T>>) {\n    Object.assign(this, init);\n  }\n}\n","export * from './lib/shared.module';\nexport * from './lib/shared-flex-layout.module';\nexport * from './lib/shared-perfect-scrollbar.module';\nexport * from './lib/shared-material-date.module';\n\nexport * from './lib/containers/entity/entity-form.component';\nexport * from './lib/containers/entity/entity.component';\nexport * from './lib/containers/entity/entity.service';\nexport * from './lib/containers/entity/entity.model';\nexport * from './lib/containers/entity/pagination';\n","import { Subscriber } from '../Subscriber';\nexport function mapTo(value) {\n    return (source) => source.lift(new MapToOperator(value));\n}\nclass MapToOperator {\n    constructor(value) {\n        this.value = value;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    }\n}\nclass MapToSubscriber extends Subscriber {\n    constructor(destination, value) {\n        super(destination);\n        this.value = value;\n    }\n    _next(x) {\n        this.destination.next(this.value);\n    }\n}\n//# sourceMappingURL=mapTo.js.map","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * <ul>\n *   <li *ngFor=\"let object of myArray | groupBy:'color'\"></li>\n * </ul>\n */\n@Pipe({ name: 'groupBy' })\nexport class GroupByPipe<T> implements PipeTransform {\n  transform(collection: Array<T>, property: string): Array<{ key: string; value: [T] }> {\n    // prevents the application from breaking if the array of objects doesn't exist yet\n    if (!collection) {\n      return null;\n    }\n\n    const groupedCollection = collection.reduce((previous, current) => {\n      if (!previous[current[property]]) {\n        previous[current[property]] = [current];\n      } else {\n        previous[current[property]].push(current);\n      }\n\n      return previous;\n    }, {});\n\n    // this will return an array of objects, each object containing a group of objects\n    return Object.keys(groupedCollection).map(key => ({\n      key,\n      value: groupedCollection[key],\n    }));\n  }\n}\n","import { Pipe } from '@angular/core';\nimport * as i0 from \"@angular/core\";\n/**\n * <ul>\n *   <li *ngFor=\"let object of myArray | groupBy:'color'\"></li>\n * </ul>\n */\nexport class GroupByPipe {\n    transform(collection, property) {\n        // prevents the application from breaking if the array of objects doesn't exist yet\n        if (!collection) {\n            return null;\n        }\n        const groupedCollection = collection.reduce((previous, current) => {\n            if (!previous[current[property]]) {\n                previous[current[property]] = [current];\n            }\n            else {\n                previous[current[property]].push(current);\n            }\n            return previous;\n        }, {});\n        // this will return an array of objects, each object containing a group of objects\n        return Object.keys(groupedCollection).map(key => ({\n            key,\n            value: groupedCollection[key],\n        }));\n    }\n}\nGroupByPipe.ngPipeDef = i0.ɵɵdefinePipe({ name: \"groupBy\", type: GroupByPipe, factory: function GroupByPipe_Factory(t) { return new (t || GroupByPipe)(); }, pure: true });\n/*@__PURE__*/ i0.ɵsetClassMetadata(GroupByPipe, [{\n        type: Pipe,\n        args: [{ name: 'groupBy' }]\n    }], null, null);\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { animate, animateChild, query, state, style, transition, trigger } from '@angular/animations';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { A, DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, RIGHT_ARROW, SPACE, UP_ARROW, hasModifierKey } from '@angular/cdk/keycodes';\nimport { CdkConnectedOverlay, Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { Attribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, Directive, ElementRef, EventEmitter, Inject, InjectionToken, Input, isDevMode, NgZone, Optional, Output, Self, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { _countGroupLabelsBeforeOption, _getOptionScrollPosition, ErrorStateMatcher, MAT_OPTION_PARENT_COMPONENT, MatOptgroup, MatOption, mixinDisabled, mixinDisableRipple, mixinErrorState, mixinTabIndex, MatCommonModule, MatOptionModule } from '@angular/material/core';\nimport { MatFormField, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { defer, merge, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, startWith, switchMap, take, takeUntil } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/overlay';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nconst _c2 = [\"role\", \"listbox\", 1, \"mat-select\"];\nconst _c3 = [\"cdk-overlay-origin\", \"\", \"aria-hidden\", \"true\", 1, \"mat-select-trigger\", 3, \"click\"];\nconst _c4 = [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"];\nconst _c5 = [1, \"mat-select-value\", 3, \"ngSwitch\"];\nconst _c6 = [\"class\", \"mat-select-placeholder\", 4, \"ngSwitchCase\"];\nconst _c7 = [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"];\nconst _c8 = [1, \"mat-select-arrow-wrapper\"];\nconst _c9 = [1, \"mat-select-arrow\"];\nconst _c10 = [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"];\nconst _c11 = [1, \"mat-select-placeholder\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", _c11);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r74 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r74.placeholder || \"\\u00A0\");\n} }\nconst _c12 = [1, \"mat-select-value-text\", 3, \"ngSwitch\"];\nconst _c13 = [4, \"ngSwitchDefault\"];\nconst _c14 = [4, \"ngSwitchCase\"];\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r77 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r77.triggerValue || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", _c12);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", _c13);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_2_Template, 1, 0, undefined, _c14);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r75 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r75.customTrigger);\n    ɵngcc0.ɵɵselect(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nconst _c15 = [1, \"mat-select-panel-wrap\"];\nconst _c16 = [3, \"ngClass\", \"keydown\"];\nconst _c17 = [\"panel\", \"\"];\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r81 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", _c15);\n    ɵngcc0.ɵɵelementStart(1, \"div\", _c16, _c17);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r81); const ctx_r80 = ɵngcc0.ɵɵnextContext(); return ctx_r80._panelDoneAnimatingStream.next($event.toState); });\n    ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r81); const ctx_r82 = ɵngcc0.ɵɵnextContext(); return ctx_r82._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r76 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r76._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r76._transformOrigin);\n    ɵngcc0.ɵɵstyleProp(\"font-size\", ctx_r76._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r76.panelClass)(\"@transformPanel\", ctx_r76.multiple ? \"showing-multiple\" : \"showing\");\n} }\nconst _c18 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c19 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            // 32px = 2 * 16px padding\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            // 64px = 48px padding on the left + 16px padding on the right\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     * @deprecated Not used anymore. To be removed.\n     * \\@breaking-change 8.0.0\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst transformPanel = matSelectAnimations.transformPanel;\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst fadeInContent = matSelectAnimations.fadeInContent;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * The max height of the select's overlay panel\n * @type {?}\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis\n * @type {?}\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @type {?}\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @type {?}\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 20 = 44\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n * @type {?}\n */\nlet SELECT_MULTIPLE_PANEL_PADDING_X = 0;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n * @type {?}\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Injection token that determines the scroll handling while a select is open.\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nclass MatSelectChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// Boilerplate for applying mixins to MatSelect.\n/**\n * \\@docs-private\n */\nclass MatSelectBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\n/** @type {?} */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]], factory: function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger'\n            }]\n    }], null, null);\nclass MatSelect extends _MatSelectMixinBase {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _changeDetectorRef\n     * @param {?} _ngZone\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} elementRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _parentFormField\n     * @param {?} ngControl\n     * @param {?} tabIndex\n     * @param {?} scrollStrategyFactory\n     * @param {?=} _liveAnnouncer\n     */\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        this._panelOpen = false;\n        /**\n         * Whether filling out the select is required in the form.\n         */\n        this._required = false;\n        /**\n         * The scroll position of the overlay panel, calculated to center the selected option.\n         */\n        this._scrollTop = 0;\n        /**\n         * Whether the component is in multiple selection mode.\n         */\n        this._multiple = false;\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        /**\n         * Unique id for this input.\n         */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * The cached font-size of the trigger element.\n         */\n        this._triggerFontSize = 0;\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        this._optionIds = '';\n        /**\n         * The value of the select panel's transform-origin property.\n         */\n        this._transformOrigin = 'top';\n        /**\n         * Emits when the panel element is finished transforming in.\n         */\n        this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /**\n         * Whether the component is disabling centering of the active option over the trigger.\n         */\n        this._disableOptionCentering = false;\n        this._focused = false;\n        /**\n         * A name for this control that can be used by `mat-form-field`.\n         */\n        this.controlType = 'mat-select';\n        /**\n         * Aria label of the select. If not specified, the placeholder will be used as label.\n         */\n        this.ariaLabel = '';\n        /**\n         * Combined stream of all of the child options' change events.\n         */\n        this.optionSelectionChanges = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap((/**\n                 * @return {?}\n                 */\n                () => merge(...options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange))))));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelectionChanges)));\n        }))));\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        this._openedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        this._closedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the selected value has been changed by the user.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    /**\n     * Whether the select is focused.\n     * @return {?}\n     */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * \\@breaking-change 8.0.0\n     * @param {?} value\n     * @return {?}\n     */\n    set focused(value) {\n        this._focused = value;\n    }\n    /**\n     * Placeholder to be shown if no value has been selected.\n     * @return {?}\n     */\n    get placeholder() { return this._placeholder; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the component is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the user should be allowed to select multiple options.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        if (this._selectionModel) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to center the active option over the trigger.\n     * @return {?}\n     */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Value of the select control.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n    /**\n     * Unique id of the element.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n                this.openedChange.emit(true);\n            }\n            else {\n                this.openedChange.emit(false);\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.onChange.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.added.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.select()));\n            event.removed.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.deselect()));\n        }));\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._resetOptions();\n            this._initializeSelection();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                this.overlayDir.overlayRef.overlayElement) {\n                this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n            }\n        }));\n    }\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Whether or not the overlay panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /**\n     * The currently selected option.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The value displayed in the trigger.\n     * @return {?}\n     */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            /** @type {?} */\n            const selectedOptions = this._selectionModel.selected.map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.viewValue));\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /**\n     * Handles keyboard events while the select is closed.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClosedKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        /** @type {?} */\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        /** @type {?} */\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if ((isOpenKey && !hasModifierKey(event)) || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            /** @type {?} */\n            const previouslySelectedOption = this.selected;\n            if (keyCode === HOME || keyCode === END) {\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n            /** @type {?} */\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            // @breaking-change 8.0.0 remove null check for _liveAnnouncer.\n            if (this._liveAnnouncer && selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(((/** @type {?} */ (selectedOption))).viewValue, 10000);\n            }\n        }\n    }\n    /**\n     * Handles keyboard events when the selected is open.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleOpenKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        /** @type {?} */\n        const manager = this._keyManager;\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        }\n        else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            /** @type {?} */\n            const hasDeselectedOptions = this.options.some((/**\n             * @param {?} opt\n             * @return {?}\n             */\n            opt => !opt.disabled && !opt.selected));\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            }));\n        }\n        else {\n            /** @type {?} */\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._setPseudoCheckboxPaddingSize();\n            this._changeDetectorRef.detectChanges();\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        }));\n    }\n    /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    // TODO(josephperrott): Remove after 2018 spec updates are fully merged.\n    /**\n     * Sets the pseudo checkbox padding size based on the width of the pseudo checkbox.\n     * @private\n     * @return {?}\n     */\n    _setPseudoCheckboxPaddingSize() {\n        if (!SELECT_MULTIPLE_PANEL_PADDING_X && this.multiple) {\n            /** @type {?} */\n            const pseudoCheckbox = this.panel.nativeElement.querySelector('.mat-pseudo-checkbox');\n            if (pseudoCheckbox) {\n                SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + pseudoCheckbox.offsetWidth;\n            }\n        }\n    }\n    /**\n     * Whether the select has a value.\n     * @return {?}\n     */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            /** @type {?} */\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this.options.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        }));\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Restore focus to the trigger before closing. Ensures that the focus\n            // position won't be lost if the user got focus into the overlay.\n            this.focus();\n            this.close();\n        }));\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen && this.panel) {\n                this._scrollActiveOptionIntoView();\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        }));\n    }\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @private\n     * @return {?}\n     */\n    _resetOptions() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        }));\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._stateChanges)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n        this._setOptionIds();\n    }\n    /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _onSelect(option, isUserInput) {\n        /** @type {?} */\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            option.selected ? this._selectionModel.select(option) : this._selectionModel.deselect(option);\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this.multiple) {\n            /** @type {?} */\n            const options = this.options.toArray();\n            this._selectionModel.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = ((/** @type {?} */ (this.selected))).map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.value));\n        }\n        else {\n            valueToEmit = this.selected ? ((/** @type {?} */ (this.selected))).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    _setOptionIds() {\n        this._optionIds = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.id)).join(' ');\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    _scrollActiveOptionIntoView() {\n        /** @type {?} */\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /**\n     * Focuses the select element.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Gets the index of the provided option in the option list.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.reduce((/**\n         * @param {?} result\n         * @param {?} current\n         * @param {?} index\n         * @return {?}\n         */\n        (result, current, index) => {\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }), undefined);\n    }\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayPosition() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const items = this._getItemCount();\n        /** @type {?} */\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        /** @type {?} */\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        /** @type {?} */\n        let selectedOptionOffset = this.empty ? 0 : (/** @type {?} */ (this._getOptionIndex(this._selectionModel.selected[0])));\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /** @type {?} */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        /** @type {?} */\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        /** @type {?} */\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    /**\n     * Returns the aria-label of the select component.\n     * @return {?}\n     */\n    _getAriaLabel() {\n        // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n        // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n        return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n    }\n    /**\n     * Returns the aria-labelledby of the select component.\n     * @return {?}\n     */\n    _getAriaLabelledby() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n        // computed label. `this.ariaLabel` is only the user-specified label.\n        if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n            this._getAriaLabel()) {\n            return null;\n        }\n        return this._parentFormField._labelId || null;\n    }\n    /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayOffsetX() {\n        /** @type {?} */\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        /** @type {?} */\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            /** @type {?} */\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        /** @type {?} */\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        /** @type {?} */\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @private\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        /** @type {?} */\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            /** @type {?} */\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            /** @type {?} */\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            /** @type {?} */\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @private\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const panelHeightTop = Math.abs(this._offsetY);\n        /** @type {?} */\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @private\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @private\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @private\n     * @return {?}\n     */\n    _getOriginBasedOnOption() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @private\n     * @return {?}\n     */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    /**\n     * Calculates the height of the select's options.\n     * @private\n     * @return {?}\n     */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty;\n    }\n}\nMatSelect.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], factory: function MatSelect_Factory(t) { return new (t || MatSelect)(ɵngcc0.ɵɵdirectiveInject(ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Directionality, 8), ɵngcc0.ɵɵdirectiveInject(NgForm, 8), ɵngcc0.ɵɵdirectiveInject(FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(MatFormField, 8), ɵngcc0.ɵɵdirectiveInject(NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(LiveAnnouncer)); }, contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSelectTrigger, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatSelect_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, hostBindings: function MatSelect_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(15);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSelect_focus_HostBindingHandler($event) { return ctx._onFocus(); });\n        ɵngcc0.ɵɵlistener(\"blur\", function MatSelect_blur_HostBindingHandler($event) { return ctx._onBlur(); });\n        ɵngcc0.ɵɵelementHostAttrs(_c2);\n        ɵngcc0.ɵɵstyling();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-label\", ctx._getAriaLabel())(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-owns\", ctx.panelOpen ? ctx._optionIds : null)(\"aria-multiselectable\", ctx.multiple)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-select-invalid\", ctx.errorState);\n        ɵngcc0.ɵɵclassProp(\"mat-select-required\", ctx.required);\n        ɵngcc0.ɵɵclassProp(\"mat-select-empty\", ctx.empty);\n        ɵngcc0.ɵɵstylingApply();\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", disableOptionCentering: \"disableOptionCentering\", compareWith: \"compareWith\", value: \"value\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()], ngContentSelectors: _c19, consts: 9, vars: 9, template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c18);\n        ɵngcc0.ɵɵelementStart(0, \"div\", _c3, _c4);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener($event) { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", _c5);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", _c6);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", _c7);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", _c8);\n        ɵngcc0.ɵɵelement(7, \"div\", _c9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 7, \"ng-template\", _c10);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener($event) { return ctx.close(); });\n        ɵngcc0.ɵɵlistener(\"attach\", function MatSelect_Template_ng_template_attach_8_listener($event) { return ctx._onAttached(); });\n        ɵngcc0.ɵɵlistener(\"detach\", function MatSelect_Template_ng_template_detach_8_listener($event) { return ctx.close(); });\n    } if (rf & 2) {\n        const _r72 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵselect(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵselect(4);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵselect(5);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵselect(8);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r72)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc1.CdkOverlayOrigin, ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase, ɵngcc1.CdkConnectedOverlay, ɵngcc2.NgSwitchDefault, ɵngcc2.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:0}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform .4s cubic-bezier(.25,.8,.25,1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}@media (-ms-high-contrast:active){.mat-select-panel{outline:solid 1px}}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{ selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin class=\\\"mat-select-trigger\\\" aria-hidden=\\\"true\\\" (click)=\\\"toggle()\\\" #origin=\\\"cdkOverlayOrigin\\\" #trigger><div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\"><span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\u00A0'}}</span> <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\"><span *ngSwitchDefault>{{triggerValue || '\\u00A0'}}</span><ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content></span></div><div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div></div><ng-template cdk-connected-overlay cdkConnectedOverlayLockPosition cdkConnectedOverlayHasBackdrop cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\" [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\" [cdkConnectedOverlayOrigin]=\\\"origin\\\" [cdkConnectedOverlayOpen]=\\\"panelOpen\\\" [cdkConnectedOverlayPositions]=\\\"_positions\\\" [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\" [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\" (backdropClick)=\\\"close()\\\" (attach)=\\\"_onAttached()\\\" (detach)=\\\"close()\\\"><div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]><div #panel class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\" [ngClass]=\\\"panelClass\\\" [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\" (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\" [style.transformOrigin]=\\\"_transformOrigin\\\" [style.font-size.px]=\\\"_triggerFontSize\\\" (keydown)=\\\"_handleKeydown($event)\\\"><ng-content></ng-content></div></div></ng-template>\",\n                styles: [\".mat-select{display:inline-block;width:100%;outline:0}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform .4s cubic-bezier(.25,.8,.25,1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}@media (-ms-high-contrast:active){.mat-select-panel{outline:solid 1px}}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\"],\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    'class': 'mat-select',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ]\n            }]\n    }], function () { return [{ type: ViewportRuler }, { type: ChangeDetectorRef }, { type: NgZone }, { type: ErrorStateMatcher }, { type: ElementRef }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }, { type: NgForm, decorators: [{\n                type: Optional\n            }] }, { type: FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: MatFormField, decorators: [{\n                type: Optional\n            }] }, { type: NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: LiveAnnouncer }]; }, { constructor: [], _viewportRuler: [], _changeDetectorRef: [], _ngZone: [], _dir: [], _parentFormField: [], ngControl: [], _liveAnnouncer: [], _panelOpen: [], _required: [], _scrollTop: [], _multiple: [], _compareWith: [], _uid: [], _destroy: [], _triggerFontSize: [], _onChange: [], _onTouched: [], _optionIds: [], _transformOrigin: [], _panelDoneAnimatingStream: [], _offsetY: [], _positions: [], _disableOptionCentering: [], _focused: [], controlType: [], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], optionSelectionChanges: [], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], _scrollStrategyFactory: [], _scrollStrategy: [], tabIndex: [], id: [{\n            type: Input\n        }], id: [], focused: [], focused: [], placeholder: [{\n            type: Input\n        }], placeholder: [], _placeholder: [], required: [{\n            type: Input\n        }], required: [], multiple: [{\n            type: Input\n        }], multiple: [], disableOptionCentering: [{\n            type: Input\n        }], disableOptionCentering: [], compareWith: [{\n            type: Input\n        }], compareWith: [], value: [{\n            type: Input\n        }], value: [], _value: [], _id: [], ngOnInit: [], _selectionModel: [], _triggerRect: [], ngAfterContentInit: [], ngDoCheck: [], ngOnChanges: [], ngOnDestroy: [], toggle: [], open: [], close: [], writeValue: [], registerOnChange: [], registerOnTouched: [], setDisabledState: [], disabled: [], panelOpen: [], selected: [], triggerValue: [], _isRtl: [], _handleKeydown: [], _handleClosedKeydown: [], _handleOpenKeydown: [], _onFocus: [], _onBlur: [], _onAttached: [], _getPanelTheme: [], _setPseudoCheckboxPaddingSize: [], empty: [], _initializeSelection: [], _setSelectionByValue: [], _selectValue: [], _initKeyManager: [], _keyManager: [], _resetOptions: [], _onSelect: [], _sortValues: [], _propagateChanges: [], _setOptionIds: [], _highlightCorrectOption: [], _scrollActiveOptionIntoView: [], focus: [], _getOptionIndex: [], _calculateOverlayPosition: [], _calculateOverlayScroll: [], _getAriaLabel: [], _getAriaLabelledby: [], _getAriaActiveDescendant: [], _calculateOverlayOffsetX: [], _calculateOverlayOffsetY: [], _checkOverlayWithinViewport: [], _adjustPanelUp: [], _adjustPanelDown: [], _getOriginBasedOnOption: [], _getItemCount: [], _getItemHeight: [], setDescribedByIds: [], _ariaDescribedby: [], onContainerClick: [], shouldLabelFloat: [], trigger: [{\n            type: ViewChild,\n            args: ['trigger', { static: false }]\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel', { static: false }]\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay, { static: false }]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup]\n        }], panelClass: [{\n            type: Input\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MatSelectTrigger, { static: false }]\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] });\n/** @nocollapse */\nMatSelect.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer }\n];\nMatSelect.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger', { static: false },] }],\n    panel: [{ type: ViewChild, args: ['panel', { static: false },] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay, { static: false },] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup,] }],\n    panelClass: [{ type: Input }],\n    customTrigger: [{ type: ContentChild, args: [MatSelectTrigger, { static: false },] }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSelectModule {\n}\nMatSelectModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ],\n        MatFormFieldModule, MatOptionModule, MatCommonModule] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect,\n        MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule, MatCommonModule]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatSelectModule, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MatSelectChange, MatSelectTrigger, MatSelect, matSelectAnimations, transformPanel, fadeInContent };\n\n//# sourceMappingURL=select.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ChangeDetectionStrategy, Component, ContentChild, ContentChildren, Directive, ElementRef, Optional, ViewEncapsulation, ChangeDetectorRef, Attribute, EventEmitter, forwardRef, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { MatLine, setLines, mixinDisableRipple, MatCommonModule, MatLineModule, MatPseudoCheckboxModule, MatRippleModule } from '@angular/material/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { SPACE, ENTER, HOME, END, UP_ARROW, DOWN_ARROW, A, hasModifierKey } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatList.\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/core';\n\nconst _c0 = [\"role\", \"navigation\", 1, \"mat-nav-list\", \"mat-list-base\"];\nconst _c1 = [\"*\"];\nconst _c2 = [1, \"mat-list\", \"mat-list-base\"];\nconst _c3 = [1, \"mat-list-avatar\"];\nconst _c4 = [1, \"mat-list-icon\"];\nconst _c5 = [1, \"mat-subheader\"];\nconst _c6 = [1, \"mat-list-item\"];\nconst _c7 = [1, \"mat-list-item-content\"];\nconst _c8 = [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"];\nconst _c9 = [1, \"mat-list-text\"];\nconst _c10 = [[[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c11 = [\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c12 = [\"text\"];\nconst _c13 = [\"role\", \"option\", \"tabindex\", \"-1\", 1, \"mat-list-item\", \"mat-list-option\"];\nconst _c14 = [3, \"state\", \"disabled\"];\nconst _c15 = [\"text\", \"\"];\nconst _c16 = [\"*\", [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]]];\nconst _c17 = [\"*\", \"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"];\nconst _c18 = [\"role\", \"listbox\", \"aria-multiselectable\", \"true\", 1, \"mat-selection-list\", \"mat-list-base\"];\nclass MatListBase {\n}\n/** @type {?} */\nconst _MatListMixinBase = mixinDisableRipple(MatListBase);\n// Boilerplate for applying mixins to MatListItem.\n/**\n * \\@docs-private\n */\nclass MatListItemBase {\n}\n/** @type {?} */\nconst _MatListItemMixinBase = mixinDisableRipple(MatListItemBase);\nclass MatNavList extends _MatListMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatNavList.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatNavList, selectors: [[\"mat-nav-list\"]], factory: function MatNavList_Factory(t) { return ɵMatNavList_BaseFactory(t || MatNavList); }, hostBindings: function MatNavList_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c0);\n    } }, inputs: { disableRipple: \"disableRipple\" }, exportAs: [\"matNavList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()], ngContentSelectors: _c1, consts: 1, vars: 0, template: function MatNavList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\"], encapsulation: 2, changeDetection: 0 });\nconst ɵMatNavList_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatNavList);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatNavList, [{\n        type: Component,\n        args: [{ selector: 'mat-nav-list',\n                exportAs: 'matNavList',\n                host: {\n                    'role': 'navigation',\n                    'class': 'mat-nav-list mat-list-base'\n                },\n                template: \"<ng-content></ng-content>\",\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\"],\n                inputs: ['disableRipple'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], null, { constructor: [], _stateChanges: [], ngOnChanges: [], ngOnDestroy: [] });\nclass MatList extends _MatListMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n        if (this._getListType() === 'action-list') {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _getListType() {\n        /** @type {?} */\n        const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n        if (nodeName === 'mat-list') {\n            return 'list';\n        }\n        if (nodeName === 'mat-action-list') {\n            return 'action-list';\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatList.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatList, selectors: [[\"mat-list\"], [\"mat-action-list\"]], factory: function MatList_Factory(t) { return new (t || MatList)(ɵngcc0.ɵɵdirectiveInject(ElementRef)); }, hostBindings: function MatList_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c2);\n    } }, inputs: { disableRipple: \"disableRipple\" }, exportAs: [\"matList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()], ngContentSelectors: _c1, consts: 1, vars: 0, template: function MatList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatList, [{\n        type: Component,\n        args: [{ selector: 'mat-list, mat-action-list',\n                exportAs: 'matList',\n                template: \"<ng-content></ng-content>\",\n                host: {\n                    'class': 'mat-list mat-list-base'\n                },\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\"],\n                inputs: ['disableRipple'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ElementRef }]; }, { constructor: [], _elementRef: [], _stateChanges: [], _getListType: [], ngOnChanges: [], ngOnDestroy: [] });\n/** @nocollapse */\nMatList.ctorParameters = () => [\n    { type: ElementRef }\n];\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListAvatarCssMatStyler {\n}\nMatListAvatarCssMatStyler.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatListAvatarCssMatStyler, selectors: [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"matListAvatar\", \"\"]], factory: function MatListAvatarCssMatStyler_Factory(t) { return new (t || MatListAvatarCssMatStyler)(); }, hostBindings: function MatListAvatarCssMatStyler_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c3);\n    } } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatListAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-avatar], [matListAvatar]',\n                host: { 'class': 'mat-list-avatar' }\n            }]\n    }], null, null);\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListIconCssMatStyler {\n}\nMatListIconCssMatStyler.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatListIconCssMatStyler, selectors: [[\"\", \"mat-list-icon\", \"\"], [\"\", \"matListIcon\", \"\"]], factory: function MatListIconCssMatStyler_Factory(t) { return new (t || MatListIconCssMatStyler)(); }, hostBindings: function MatListIconCssMatStyler_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c4);\n    } } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatListIconCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-icon], [matListIcon]',\n                host: { 'class': 'mat-list-icon' }\n            }]\n    }], null, null);\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatListSubheaderCssMatStyler, selectors: [[\"\", \"mat-subheader\", \"\"], [\"\", \"matSubheader\", \"\"]], factory: function MatListSubheaderCssMatStyler_Factory(t) { return new (t || MatListSubheaderCssMatStyler)(); }, hostBindings: function MatListSubheaderCssMatStyler_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c5);\n    } } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatListSubheaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-subheader], [matSubheader]',\n                host: { 'class': 'mat-subheader' }\n            }]\n    }], null, null);\n/**\n * An item within a Material Design list.\n */\nclass MatListItem extends _MatListItemMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?=} navList\n     * @param {?=} list\n     */\n    constructor(_element, _changeDetectorRef, navList, list) {\n        super();\n        this._element = _element;\n        this._isInteractiveList = false;\n        this._destroyed = new Subject();\n        this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        this._list = navList || list;\n        // If no type attributed is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        if (this._list) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                _changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return !this._isInteractiveList || this.disableRipple ||\n            !!(this._list && this._list.disableRipple);\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nMatListItem.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatListItem, selectors: [[\"mat-list-item\"], [\"a\", \"mat-list-item\", \"\"], [\"button\", \"mat-list-item\", \"\"]], factory: function MatListItem_Factory(t) { return new (t || MatListItem)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatNavList, 8), ɵngcc0.ɵɵdirectiveInject(MatList, 8)); }, contentQueries: function MatListItem_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, hostBindings: function MatListItem_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(2);\n        ɵngcc0.ɵɵelementHostAttrs(_c6);\n        ɵngcc0.ɵɵstyling();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-avatar\", ctx._avatar || ctx._icon);\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon);\n        ɵngcc0.ɵɵstylingApply();\n    } }, inputs: { disableRipple: \"disableRipple\" }, exportAs: [\"matListItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c11, consts: 6, vars: 2, template: function MatListItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c10);\n        ɵngcc0.ɵɵelementStart(0, \"div\", _c7);\n        ɵngcc0.ɵɵelement(1, \"div\", _c8);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", _c9);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(5, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵselect(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n    } }, directives: [ɵngcc1.MatRipple], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatListItem, [{\n        type: Component,\n        args: [{ selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n                exportAs: 'matListItem',\n                host: {\n                    'class': 'mat-list-item',\n                    // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                    '[class.mat-list-item-avatar]': '_avatar || _icon',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon'\n                },\n                inputs: ['disableRipple'],\n                template: \"<div class=\\\"mat-list-item-content\\\"><div class=\\\"mat-list-item-ripple\\\" mat-ripple [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div><ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\"></ng-content><div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div><ng-content></ng-content></div>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ElementRef }, { type: ChangeDetectorRef }, { type: MatNavList, decorators: [{\n                type: Optional\n            }] }, { type: MatList, decorators: [{\n                type: Optional\n            }] }]; }, { constructor: [], _element: [], _isInteractiveList: [], _destroyed: [], _list: [], ngAfterContentInit: [], ngOnDestroy: [], _isRippleDisabled: [], _getHostElement: [], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler, { static: false }]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler, { static: false }]\n        }] });\n/** @nocollapse */\nMatListItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatNavList, decorators: [{ type: Optional }] },\n    { type: MatList, decorators: [{ type: Optional }] }\n];\nMatListItem.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler, { static: false },] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler, { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass MatSelectionListBase {\n}\n/** @type {?} */\nconst _MatSelectionListMixinBase = mixinDisableRipple(MatSelectionListBase);\n/**\n * \\@docs-private\n */\nclass MatListOptionBase {\n}\n/** @type {?} */\nconst _MatListOptionMixinBase = mixinDisableRipple(MatListOptionBase);\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSelectionList)),\n    multi: true\n};\n/**\n * Change event that is being fired whenever the selected state of an option changes.\n */\nclass MatSelectionListChange {\n    /**\n     * @param {?} source\n     * @param {?} option\n     */\n    constructor(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetector\n     * @param {?} selectionList\n     */\n    constructor(_element, _changeDetector, selectionList) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this.selectionList = selectionList;\n        this._selected = false;\n        this._disabled = false;\n        this._hasFocus = false;\n        /**\n         * Whether the label should appear before or after the checkbox. Defaults to 'after'\n         */\n        this.checkboxPosition = 'after';\n    }\n    /**\n     * Theme color of the list option. This sets the color of the checkbox.\n     * @return {?}\n     */\n    get color() { return this._color || this.selectionList.color; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set color(newValue) { this._color = newValue; }\n    /**\n     * Value of the option\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (this.selected && newValue !== this.value) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || (this.selectionList && this.selectionList.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Whether the option is selected.\n     * @return {?}\n     */\n    get selected() { return this.selectionList.selectedOptions.isSelected(this); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        /** @type {?} */\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            this.selectionList._reportValueChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const list = this.selectionList;\n        if (list._value && list._value.some((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => list.compareWith(value, this._value)))) {\n            this._setSelected(true);\n        }\n        /** @type {?} */\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetector.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this.selected = false;\n            }));\n        }\n        /** @type {?} */\n        const hadFocus = this._hasFocus;\n        /** @type {?} */\n        const newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    }\n    /**\n     * Toggles the selection state of the option.\n     * @return {?}\n     */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /**\n     * Allows for programmatic focusing of the option.\n     * @return {?}\n     */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * \\@docs-private\n     * @return {?}\n     */\n    getLabel() {\n        return this._text ? (this._text.nativeElement.textContent || '') : '';\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        if (!this.disabled) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent(this);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleFocus() {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    }\n    /**\n     * @return {?}\n     */\n    _handleBlur() {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * Sets the selected state of the option. Returns whether the value has changed.\n     * @param {?} selected\n     * @return {?}\n     */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this._changeDetector.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     * @return {?}\n     */\n    _markForCheck() {\n        this._changeDetector.markForCheck();\n    }\n}\nMatListOption.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatListOption, selectors: [[\"mat-list-option\"]], factory: function MatListOption_Factory(t) { return new (t || MatListOption)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                     * @return {?}\n                     */() => MatSelectionList)))); }, contentQueries: function MatListOption_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, viewQuery: function MatListOption_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c12, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._text = _t.first);\n    } }, hostBindings: function MatListOption_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(6);\n        ɵngcc0.ɵɵlistener(\"focus\", function MatListOption_focus_HostBindingHandler($event) { return ctx._handleFocus(); });\n        ɵngcc0.ɵɵlistener(\"blur\", function MatListOption_blur_HostBindingHandler($event) { return ctx._handleBlur(); });\n        ɵngcc0.ɵɵlistener(\"click\", function MatListOption_click_HostBindingHandler($event) { return ctx._handleClick(); });\n        ɵngcc0.ɵɵelementHostAttrs(_c13);\n        ɵngcc0.ɵɵstyling();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon);\n        ɵngcc0.ɵɵclassProp(\"mat-primary\", ctx.color === \"primary\");\n        ɵngcc0.ɵɵclassProp(\"mat-warn\", ctx.color === \"warn\");\n        ɵngcc0.ɵɵstylingApply();\n    } }, inputs: { disableRipple: \"disableRipple\", checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", selected: \"selected\", disabled: \"disabled\" }, exportAs: [\"matListOption\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c17, consts: 7, vars: 5, template: function MatListOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c16);\n        ɵngcc0.ɵɵelementStart(0, \"div\", _c7);\n        ɵngcc0.ɵɵstyling();\n        ɵngcc0.ɵɵelement(1, \"div\", _c8);\n        ɵngcc0.ɵɵelement(2, \"mat-pseudo-checkbox\", _c14);\n        ɵngcc0.ɵɵelementStart(3, \"div\", _c9, _c15);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-content-reverse\", ctx.checkboxPosition == \"after\");\n        ɵngcc0.ɵɵstylingApply();\n        ɵngcc0.ɵɵselect(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n        ɵngcc0.ɵɵselect(2);\n        ɵngcc0.ɵɵproperty(\"state\", ctx.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx.disabled);\n    } }, directives: [ɵngcc1.MatRipple, ɵngcc1.MatPseudoCheckbox], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatListOption, [{\n        type: Component,\n        args: [{ selector: 'mat-list-option',\n                exportAs: 'matListOption',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'option',\n                    'class': 'mat-list-item mat-list-option',\n                    '(focus)': '_handleFocus()',\n                    '(blur)': '_handleBlur()',\n                    '(click)': '_handleClick()',\n                    'tabindex': '-1',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                    // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                    // its theme. The accent theme palette is the default and doesn't need to be set.\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    '[attr.aria-selected]': 'selected',\n                    '[attr.aria-disabled]': 'disabled'\n                },\n                template: \"<div class=\\\"mat-list-item-content\\\" [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\"><div mat-ripple class=\\\"mat-list-item-ripple\\\" [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div><mat-pseudo-checkbox [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox><div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div><ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\"></ng-content></div>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ElementRef }, { type: ChangeDetectorRef }, { type: MatSelectionList, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatSelectionList))]\n            }] }]; }, { constructor: [], _element: [], _changeDetector: [], selectionList: [], _selected: [], _disabled: [], _hasFocus: [], checkboxPosition: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], color: [], _color: [], value: [{\n            type: Input\n        }], value: [], selected: [{\n            type: Input\n        }], selected: [], _value: [], disabled: [{\n            type: Input\n        }], disabled: [], ngOnInit: [], ngAfterContentInit: [], ngOnDestroy: [], toggle: [], focus: [], getLabel: [], _isRippleDisabled: [], _handleClick: [], _handleFocus: [], _handleBlur: [], _getHostElement: [], _setSelected: [], _markForCheck: [], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler, { static: false }]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler, { static: false }]\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine]\n        }], _text: [{\n            type: ViewChild,\n            args: ['text', { static: false }]\n        }] });\n/** @nocollapse */\nMatListOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatSelectionList, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSelectionList)),] }] }\n];\nMatListOption.propDecorators = {\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler, { static: false },] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler, { static: false },] }],\n    _lines: [{ type: ContentChildren, args: [MatLine,] }],\n    _text: [{ type: ViewChild, args: ['text', { static: false },] }],\n    checkboxPosition: [{ type: Input }],\n    color: [{ type: Input }],\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    selected: [{ type: Input }]\n};\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} tabIndex\n     */\n    constructor(_element, tabIndex) {\n        super();\n        this._element = _element;\n        /**\n         * Emits a change event whenever the selected state of an option changes.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Tabindex of the selection list.\n         */\n        this.tabIndex = 0;\n        /**\n         * Theme color of the selection list. This sets the checkbox color for all list options.\n         */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (/**\n         * @param {?} a1\n         * @param {?} a2\n         * @return {?}\n         */\n        (a1, a2) => a1 === a2);\n        this._disabled = false;\n        /**\n         * The currently selected options.\n         */\n        this.selectedOptions = new SelectionModel(true);\n        /**\n         * View to model callback that should be called whenever the selected options change.\n         */\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * Emits when the list has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * View to model callback that should be called if the list or its options lost focus.\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /**\n     * Whether the selection list is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n        // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n        // changed its state. Since we know that a change to `disabled` property of the list affects\n        // the state of the options, we manually mark each option for check.\n        this._markOptionsForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate((/**\n         * @return {?}\n         */\n        () => false))\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        // Sync external changes to the model back to the options.\n        this.selectedOptions.onChange.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event.added) {\n                for (let item of event.added) {\n                    item.selected = true;\n                }\n            }\n            if (event.removed) {\n                for (let item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const disableRippleChanges = changes['disableRipple'];\n        /** @type {?} */\n        const colorChanges = changes['color'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (colorChanges && !colorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /**\n     * Focuses the selection list.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /**\n     * Selects all of the options.\n     * @return {?}\n     */\n    selectAll() {\n        this._setAllOptionsSelected(true);\n    }\n    /**\n     * Deselects all of the options.\n     * @return {?}\n     */\n    deselectAll() {\n        this._setAllOptionsSelected(false);\n    }\n    /**\n     * Sets the focused option of the selection-list.\n     * @param {?} option\n     * @return {?}\n     */\n    _setFocusedOption(option) {\n        this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @param {?} option\n     * @return {?} Currently-active item.\n     */\n    _removeOptionFromList(option) {\n        /** @type {?} */\n        const optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    }\n    /**\n     * Passes relevant key presses to our key manager.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const previousFocusIndex = manager.activeItemIndex;\n        /** @type {?} */\n        const hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifier) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            case A:\n                if (hasModifierKey(event, 'ctrlKey')) {\n                    this.options.find((/**\n                     * @param {?} option\n                     * @return {?}\n                     */\n                    option => !option.selected)) ? this.selectAll() : this.deselectAll();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                manager.onKeydown(event);\n        }\n        if ((keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    }\n    /**\n     * Reports a value change to the ControlValueAccessor\n     * @return {?}\n     */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            /** @type {?} */\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /**\n     * Emits a change event if the selected state of an option changed.\n     * @param {?} option\n     * @return {?}\n     */\n    _emitChangeEvent(option) {\n        this.selectionChange.emit(new MatSelectionListChange(this, option));\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} values\n     * @return {?}\n     */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Sets the selected options based on the specified values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _setOptionsFromValues(values) {\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._setSelected(false)));\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            /** @type {?} */\n            const correspondingOption = this.options.find((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            }));\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        }));\n    }\n    /**\n     * Returns the values of the selected options.\n     * @private\n     * @return {?}\n     */\n    _getSelectedOptionValues() {\n        return this.options.filter((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.selected)).map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.value));\n    }\n    /**\n     * Toggles the state of the currently focused option if enabled.\n     * @private\n     * @return {?}\n     */\n    _toggleFocusedOption() {\n        /** @type {?} */\n        let focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            /** @type {?} */\n            let focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     * @private\n     * @param {?} isSelected\n     * @return {?}\n     */\n    _setAllOptionsSelected(isSelected) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        /** @type {?} */\n        let hasChanged = false;\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => {\n            if (option._setSelected(isSelected)) {\n                hasChanged = true;\n            }\n        }));\n        if (hasChanged) {\n            this._reportValueChange();\n        }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @private\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of options.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.options.length;\n    }\n    /**\n     * Returns the index of the specified list option.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.toArray().indexOf(option);\n    }\n    /**\n     * Marks all the options to be checked in the next change detection run.\n     * @private\n     * @return {?}\n     */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option._markForCheck()));\n        }\n    }\n}\nMatSelectionList.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatSelectionList, selectors: [[\"mat-selection-list\"]], factory: function MatSelectionList_Factory(t) { return new (t || MatSelectionList)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵinjectAttribute('tabindex')); }, contentQueries: function MatSelectionList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListOption, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostBindings: function MatSelectionList_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(2);\n        ɵngcc0.ɵɵlistener(\"blur\", function MatSelectionList_blur_HostBindingHandler($event) { return ctx._onTouched(); });\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelectionList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n        ɵngcc0.ɵɵelementHostAttrs(_c18);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled.toString());\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", color: \"color\", compareWith: \"compareWith\", disabled: \"disabled\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"matSelectionList\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SELECTION_LIST_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()], ngContentSelectors: _c1, consts: 1, vars: 0, template: function MatSelectionList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatSelectionList, [{\n        type: Component,\n        args: [{ selector: 'mat-selection-list',\n                exportAs: 'matSelectionList',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'listbox',\n                    '[tabIndex]': 'tabIndex',\n                    'class': 'mat-selection-list mat-list-base',\n                    '(blur)': '_onTouched()',\n                    '(keydown)': '_keydown($event)',\n                    'aria-multiselectable': 'true',\n                    '[attr.aria-disabled]': 'disabled.toString()'\n                },\n                template: '<ng-content></ng-content>',\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\"],\n                encapsulation: ViewEncapsulation.None,\n                providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { constructor: [], _element: [], selectionChange: [{\n            type: Output\n        }], tabIndex: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], _disabled: [], selectedOptions: [], _onChange: [], _destroyed: [], _onTouched: [], disabled: [{\n            type: Input\n        }], disabled: [], ngAfterContentInit: [], _keyManager: [], ngOnChanges: [], ngOnDestroy: [], _isDestroyed: [], focus: [], selectAll: [], deselectAll: [], _setFocusedOption: [], _removeOptionFromList: [], _keydown: [], _reportValueChange: [], _value: [], _emitChangeEvent: [], writeValue: [], setDisabledState: [], registerOnChange: [], registerOnTouched: [], _setOptionsFromValues: [], _getSelectedOptionValues: [], _toggleFocusedOption: [], _setAllOptionsSelected: [], _isValidIndex: [], _getOptionIndex: [], _markOptionsForCheck: [], options: [{\n            type: ContentChildren,\n            args: [MatListOption, { descendants: true }]\n        }] });\n/** @nocollapse */\nMatSelectionList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatSelectionList.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatListOption, { descendants: true },] }],\n    selectionChange: [{ type: Output }],\n    tabIndex: [{ type: Input }],\n    color: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatListModule {\n}\nMatListModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: MatListModule });\nMatListModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function MatListModule_Factory(t) { return new (t || MatListModule)(); }, imports: [[MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n        MatLineModule,\n        MatCommonModule,\n        MatPseudoCheckboxModule,\n        MatDividerModule] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(MatListModule, { declarations: function () { return [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatSelectionList,\n        MatListOption]; }, imports: function () { return [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule]; }, exports: function () { return [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatLineModule,\n        MatCommonModule,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatPseudoCheckboxModule,\n        MatSelectionList,\n        MatListOption,\n        MatDividerModule]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n                exports: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatPseudoCheckboxModule,\n                    MatSelectionList,\n                    MatListOption,\n                    MatDividerModule\n                ],\n                declarations: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatSelectionList,\n                    MatListOption\n                ]\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatListModule, MatNavList, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatListItem, MAT_SELECTION_LIST_VALUE_ACCESSOR, MatSelectionListChange, MatListOption, MatSelectionList };\n\n//# sourceMappingURL=list.js.map","import { NgModule } from '@angular/core';\n\n@NgModule({})\nexport class ThemePickerServiceModule {}\n","import { NgModule } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class ThemePickerServiceModule {\n}\nThemePickerServiceModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: ThemePickerServiceModule });\nThemePickerServiceModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function ThemePickerServiceModule_Factory(t) { return new (t || ThemePickerServiceModule)(); } });\n/*@__PURE__*/ i0.ɵsetClassMetadata(ThemePickerServiceModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null);\n","import toDate from '../toDate/index.js';\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * var result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import lightFormatters from '../lightFormatters/index.js';\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js';\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js';\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js';\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js';\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport addLeadingZeros from '../../addLeadingZeros/index.js';\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","import addLeadingZeros from '../../addLeadingZeros/index.js';\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from '../toInteger/index.js';\nimport getUTCWeekYear from '../getUTCWeekYear/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getUTCISOWeekYear from '../getUTCISOWeekYear/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from '../../toDate/index.js';\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token) {\n  if (token === 'YYYY') {\n    throw new RangeError('Use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'YY') {\n    throw new RangeError('Use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'D') {\n    throw new RangeError('Use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr');\n  } else if (token === 'DD') {\n    throw new RangeError('Use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr');\n  }\n}","import isValid from '../isValid/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/formatters/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js'; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'(.*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from '../toDate/index.js';\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `true`        |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ChangeDetectionStrategy, Component, Input, ViewEncapsulation, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"role\", \"separator\", 1, \"mat-divider\"];\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /**\n     * Whether the divider is vertically aligned.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) { this._vertical = coerceBooleanProperty(value); }\n    /**\n     * Whether the divider is an inset divider.\n     * @return {?}\n     */\n    get inset() { return this._inset; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set inset(value) { this._inset = coerceBooleanProperty(value); }\n}\nMatDivider.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatDivider, selectors: [[\"mat-divider\"]], factory: function MatDivider_Factory(t) { return new (t || MatDivider)(); }, hostBindings: function MatDivider_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(4);\n        ɵngcc0.ɵɵelementHostAttrs(_c0);\n        ɵngcc0.ɵɵstyling();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical);\n        ɵngcc0.ɵɵclassProp(\"mat-divider-horizontal\", !ctx.vertical);\n        ɵngcc0.ɵɵclassProp(\"mat-divider-inset\", ctx.inset);\n        ɵngcc0.ɵɵstylingApply();\n    } }, inputs: { vertical: \"vertical\", inset: \"inset\" }, consts: 0, vars: 0, template: function MatDivider_Template(rf, ctx) { }, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatDivider, [{\n        type: Component,\n        args: [{ selector: 'mat-divider',\n                host: {\n                    'role': 'separator',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-divider-vertical]': 'vertical',\n                    '[class.mat-divider-horizontal]': '!vertical',\n                    '[class.mat-divider-inset]': 'inset',\n                    'class': 'mat-divider'\n                },\n                template: '',\n                styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return []; }, { constructor: [], _vertical: [], _inset: [], vertical: [{\n            type: Input\n        }], vertical: [], inset: [{\n            type: Input\n        }], inset: [] });\nMatDivider.propDecorators = {\n    vertical: [{ type: Input }],\n    inset: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDividerModule {\n}\nMatDividerModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: MatDividerModule });\nMatDividerModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function MatDividerModule_Factory(t) { return new (t || MatDividerModule)(); }, imports: [[MatCommonModule, CommonModule],\n        MatCommonModule] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(MatDividerModule, { declarations: function () { return [MatDivider]; }, imports: function () { return [MatCommonModule, CommonModule]; }, exports: function () { return [MatDivider,\n        MatCommonModule]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatDividerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, CommonModule],\n                exports: [MatDivider, MatCommonModule],\n                declarations: [MatDivider]\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatDivider, MatDividerModule };\n\n//# sourceMappingURL=divider.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable, NgModule, ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, forwardRef, Inject, Input, Optional, Output, ViewChild, ViewEncapsulation, ElementRef, NgZone, InjectionToken, ViewContainerRef, Directive, Attribute, ContentChild, ɵɵdefineInjectable } from '@angular/core';\nimport { Subject, merge, Subscription, of } from 'rxjs';\nimport { take, filter } from 'rxjs/operators';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW, SPACE, ESCAPE } from '@angular/cdk/keycodes';\nimport { DateAdapter, MAT_DATE_FORMATS, mixinColor } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ComponentPortal, PortalModule } from '@angular/cdk/portal';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { MatFormField } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { A11yModule } from '@angular/cdk/a11y';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @param {?} provider\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/cdk/portal';\n\nconst _c0 = [\"role\", \"grid\", \"aria-readonly\", \"true\", 1, \"mat-calendar-body\"];\nconst _c1 = [\"mat-calendar-body\", \"\"];\nconst _c2 = [\"aria-hidden\", \"true\", 4, \"ngIf\"];\nconst _c3 = [\"role\", \"row\", 4, \"ngFor\", \"ngForOf\"];\nconst _c4 = [\"aria-hidden\", \"true\"];\nconst _c5 = [1, \"mat-calendar-body-label\"];\nfunction MatCalendarBody_tr_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", _c4);\n    ɵngcc0.ɵɵelementStart(1, \"td\", _c5);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r41 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r41._cellPadding);\n    ɵngcc0.ɵɵstyleProp(\"padding-bottom\", ctx_r41._cellPadding);\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r41.numCols);\n    ɵngcc0.ɵɵselect(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r41.label);\n} }\nconst _c6 = [\"role\", \"row\"];\nconst _c7 = [\"aria-hidden\", \"true\", \"class\", \"mat-calendar-body-label\", 3, \"paddingTop\", \"paddingBottom\", 4, \"ngIf\"];\nconst _c8 = [\"role\", \"gridcell\", \"class\", \"mat-calendar-body-cell\", \"role\", \"button\", 3, \"ngClass\", \"tabindex\", \"mat-calendar-body-disabled\", \"mat-calendar-body-active\", \"width\", \"paddingTop\", \"paddingBottom\", \"click\", 4, \"ngFor\", \"ngForOf\"];\nconst _c9 = [\"aria-hidden\", \"true\", 1, \"mat-calendar-body-label\"];\nfunction MatCalendarBody_tr_1_td_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", _c9);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r45 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r45._cellPadding);\n    ɵngcc0.ɵɵstyleProp(\"padding-bottom\", ctx_r45._cellPadding);\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r45._firstRowOffset);\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r45._firstRowOffset >= ctx_r45.labelMinRequiredCells ? ctx_r45.label : \"\");\n} }\nconst _c10 = [\"role\", \"gridcell\", \"role\", \"button\", 1, \"mat-calendar-body-cell\", 3, \"ngClass\", \"tabindex\", \"click\"];\nconst _c11 = [1, \"mat-calendar-body-cell-content\"];\nfunction MatCalendarBody_tr_1_td_2_Template(rf, ctx) { if (rf & 1) {\n    const _r50 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\", _c10);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵlistener(\"click\", function MatCalendarBody_tr_1_td_2_Template_td_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r50); const item_r47 = ctx.$implicit; const ctx_r49 = ɵngcc0.ɵɵnextContext(2); return ctx_r49._cellClicked(item_r47); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", _c11);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r47 = ctx.$implicit;\n    const colIndex_r48 = ctx.index;\n    const rowIndex_r44 = ɵngcc0.ɵɵnextContext().index;\n    const ctx_r46 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r46._cellWidth);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r46._cellPadding);\n    ɵngcc0.ɵɵstyleProp(\"padding-bottom\", ctx_r46._cellPadding);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-disabled\", !item_r47.enabled);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-active\", ctx_r46._isActiveCell(rowIndex_r44, colIndex_r48));\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵproperty(\"ngClass\", item_r47.cssClasses)(\"tabindex\", ctx_r46._isActiveCell(rowIndex_r44, colIndex_r48) ? 0 : 0 - 1);\n    ɵngcc0.ɵɵattribute(\"aria-label\", item_r47.ariaLabel)(\"aria-disabled\", !item_r47.enabled || null)(\"aria-selected\", ctx_r46.selectedValue === item_r47.value);\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-selected\", ctx_r46.selectedValue === item_r47.value);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-today\", ctx_r46.todayValue === item_r47.value);\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵselect(2);\n    ɵngcc0.ɵɵtextInterpolate(item_r47.displayValue);\n} }\nfunction MatCalendarBody_tr_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", _c6);\n    ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_td_1_Template, 2, 4, \"td\", _c7);\n    ɵngcc0.ɵɵtemplate(2, MatCalendarBody_tr_1_td_2_Template, 3, 13, \"td\", _c8);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r43 = ctx.$implicit;\n    const rowIndex_r44 = ctx.index;\n    const ctx_r42 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", rowIndex_r44 === 0 && ctx_r42._firstRowOffset);\n    ɵngcc0.ɵɵselect(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r43);\n} }\nconst _c12 = [\"role\", \"presentation\", 1, \"mat-calendar-table\"];\nconst _c13 = [1, \"mat-calendar-table-header\"];\nconst _c14 = [4, \"ngFor\", \"ngForOf\"];\nconst _c15 = [\"colspan\", \"7\", \"aria-hidden\", \"true\", 1, \"mat-calendar-table-header-divider\"];\nconst _c16 = [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"activeCell\", \"selectedValueChange\", \"keydown\"];\nfunction MatMonthView_th_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const day_r53 = ctx.$implicit;\n    ɵngcc0.ɵɵattribute(\"aria-label\", day_r53.long);\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵtextInterpolate(day_r53.narrow);\n} }\nconst _c17 = [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"];\nconst _c18 = [\"mat-calendar-body\", \"\", 3, \"rows\", \"todayValue\", \"selectedValue\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"];\nconst _c19 = [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"];\nconst _c20 = [1, \"mat-calendar-header\"];\nconst _c21 = [1, \"mat-calendar-controls\"];\nconst _c22 = [\"mat-button\", \"\", \"type\", \"button\", \"cdkAriaLive\", \"polite\", 1, \"mat-calendar-period-button\", 3, \"click\"];\nconst _c23 = [1, \"mat-calendar-arrow\"];\nconst _c24 = [1, \"mat-calendar-spacer\"];\nconst _c25 = [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-previous-button\", 3, \"disabled\", \"click\"];\nconst _c26 = [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-next-button\", 3, \"disabled\", \"click\"];\nconst _c27 = [\"*\"];\nconst _c28 = [1, \"mat-calendar\"];\nconst _c29 = [3, \"cdkPortalOutlet\"];\nconst _c30 = [\"cdkMonitorSubtreeFocus\", \"\", \"tabindex\", \"-1\", 1, \"mat-calendar-content\", 3, \"ngSwitch\"];\nconst _c31 = [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"selectedChange\", \"_userSelection\", 4, \"ngSwitchCase\"];\nconst _c32 = [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\", 4, \"ngSwitchCase\"];\nconst _c33 = [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\", 4, \"ngSwitchCase\"];\nfunction MatCalendar_ng_template_0_Template(rf, ctx) { }\nconst _c34 = [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"selectedChange\", \"_userSelection\"];\nfunction MatCalendar_mat_month_view_2_Template(rf, ctx) { if (rf & 1) {\n    const _r59 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-month-view\", _c34);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r59); const ctx_r58 = ɵngcc0.ɵɵnextContext(); return ctx_r58.activeDate = $event; });\n    ɵngcc0.ɵɵlistener(\"selectedChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r59); const ctx_r60 = ɵngcc0.ɵɵnextContext(); return ctx_r60._dateSelected($event); });\n    ɵngcc0.ɵɵlistener(\"_userSelection\", function MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r59); const ctx_r61 = ɵngcc0.ɵɵnextContext(); return ctx_r61._userSelected(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r55 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r55.activeDate)(\"selected\", ctx_r55.selected)(\"dateFilter\", ctx_r55.dateFilter)(\"maxDate\", ctx_r55.maxDate)(\"minDate\", ctx_r55.minDate)(\"dateClass\", ctx_r55.dateClass);\n} }\nconst _c35 = [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\"];\nfunction MatCalendar_mat_year_view_3_Template(rf, ctx) { if (rf & 1) {\n    const _r63 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-year-view\", _c35);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r63); const ctx_r62 = ɵngcc0.ɵɵnextContext(); return ctx_r62.activeDate = $event; });\n    ɵngcc0.ɵɵlistener(\"monthSelected\", function MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r63); const ctx_r64 = ɵngcc0.ɵɵnextContext(); return ctx_r64._monthSelectedInYearView($event); });\n    ɵngcc0.ɵɵlistener(\"selectedChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r63); const ctx_r65 = ɵngcc0.ɵɵnextContext(); return ctx_r65._goToDateInView($event, \"month\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r56 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r56.activeDate)(\"selected\", ctx_r56.selected)(\"dateFilter\", ctx_r56.dateFilter)(\"maxDate\", ctx_r56.maxDate)(\"minDate\", ctx_r56.minDate);\n} }\nconst _c36 = [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\"];\nfunction MatCalendar_mat_multi_year_view_4_Template(rf, ctx) { if (rf & 1) {\n    const _r67 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-multi-year-view\", _c36);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r67); const ctx_r66 = ɵngcc0.ɵɵnextContext(); return ctx_r66.activeDate = $event; });\n    ɵngcc0.ɵɵlistener(\"yearSelected\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r67); const ctx_r68 = ɵngcc0.ɵɵnextContext(); return ctx_r68._yearSelectedInMultiYearView($event); });\n    ɵngcc0.ɵɵlistener(\"selectedChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r67); const ctx_r69 = ɵngcc0.ɵɵnextContext(); return ctx_r69._goToDateInView($event, \"year\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r57 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r57.activeDate)(\"selected\", ctx_r57.selected)(\"dateFilter\", ctx_r57.dateFilter)(\"maxDate\", ctx_r57.maxDate)(\"minDate\", ctx_r57.minDate);\n} }\nconst _c37 = [1, \"mat-datepicker-content\"];\nconst _c38 = [\"cdkTrapFocus\", \"\", 3, \"id\", \"ngClass\", \"startAt\", \"startView\", \"minDate\", \"maxDate\", \"dateFilter\", \"headerComponent\", \"selected\", \"dateClass\", \"selectedChange\", \"yearSelected\", \"monthSelected\", \"_userSelection\"];\nconst _c39 = [\"aria-haspopup\", \"dialog\"];\nconst _c40 = [\"button\"];\nconst _c41 = [1, \"mat-datepicker-toggle\"];\nconst _c42 = [\"mat-icon-button\", \"\", \"type\", \"button\", \"aria-haspopup\", \"dialog\", 3, \"disabled\", \"disableRipple\", \"click\"];\nconst _c43 = [\"button\", \"\"];\nconst _c44 = [\"class\", \"mat-datepicker-toggle-default-icon\", \"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 4, \"ngIf\"];\nconst _c45 = [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 1, \"mat-datepicker-toggle-default-icon\"];\nconst _c46 = [\"d\", \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"];\nfunction MatDatepickerToggle__svg_svg_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", _c45);\n    ɵngcc0.ɵɵelement(1, \"path\", _c46);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c47 = [[[\"\", \"matDatepickerToggleIcon\", \"\"]]];\nconst _c48 = [\"[matDatepickerToggleIcon]\"];\nfunction createMissingDateImplError(provider) {\n    return Error(`MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Datepicker data that requires internationalization.\n */\nclass MatDatepickerIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * A label for the calendar popup (used by screen readers).\n         */\n        this.calendarLabel = 'Calendar';\n        /**\n         * A label for the button used to open the calendar popup (used by screen readers).\n         */\n        this.openCalendarLabel = 'Open calendar';\n        /**\n         * A label for the previous month button (used by screen readers).\n         */\n        this.prevMonthLabel = 'Previous month';\n        /**\n         * A label for the next month button (used by screen readers).\n         */\n        this.nextMonthLabel = 'Next month';\n        /**\n         * A label for the previous year button (used by screen readers).\n         */\n        this.prevYearLabel = 'Previous year';\n        /**\n         * A label for the next year button (used by screen readers).\n         */\n        this.nextYearLabel = 'Next year';\n        /**\n         * A label for the previous multi-year button (used by screen readers).\n         */\n        this.prevMultiYearLabel = 'Previous 20 years';\n        /**\n         * A label for the next multi-year button (used by screen readers).\n         */\n        this.nextMultiYearLabel = 'Next 20 years';\n        /**\n         * A label for the 'switch to month view' button (used by screen readers).\n         */\n        this.switchToMonthViewLabel = 'Choose date';\n        /**\n         * A label for the 'switch to year view' button (used by screen readers).\n         */\n        this.switchToMultiYearViewLabel = 'Choose month and year';\n    }\n}\nMatDatepickerIntl.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: MatDatepickerIntl, factory: function MatDatepickerIntl_Factory(t) { return new (t || MatDatepickerIntl)(); }, providedIn: 'root' });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatDatepickerIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, { constructor: [], changes: [], calendarLabel: [], openCalendarLabel: [], prevMonthLabel: [], nextMonthLabel: [], prevYearLabel: [], nextYearLabel: [], prevMultiYearLabel: [], nextMultiYearLabel: [], switchToMonthViewLabel: [], switchToMultiYearViewLabel: [] });\n/** @nocollapse */ MatDatepickerIntl.ngInjectableDef = ɵɵdefineInjectable({ factory: function MatDatepickerIntl_Factory() { return new MatDatepickerIntl(); }, token: MatDatepickerIntl, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * \\@docs-private\n */\nclass MatCalendarCell {\n    /**\n     * @param {?} value\n     * @param {?} displayValue\n     * @param {?} ariaLabel\n     * @param {?} enabled\n     * @param {?=} cssClasses\n     */\n    constructor(value, displayValue, ariaLabel, enabled, cssClasses) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n        this.cssClasses = cssClasses;\n    }\n}\n/**\n * An internal component used to display calendar data in a table.\n * \\@docs-private\n */\nclass MatCalendarBody {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _ngZone) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * The number of columns in the table.\n         */\n        this.numCols = 7;\n        /**\n         * The cell number of the active cell in the table.\n         */\n        this.activeCell = 0;\n        /**\n         * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n         * maintained even as the table resizes.\n         */\n        this.cellAspectRatio = 1;\n        /**\n         * Emits when a new value is selected.\n         */\n        this.selectedValueChange = new EventEmitter();\n    }\n    /**\n     * @param {?} cell\n     * @return {?}\n     */\n    _cellClicked(cell) {\n        if (cell.enabled) {\n            this.selectedValueChange.emit(cell.value);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const columnChanges = changes['numCols'];\n        const { rows, numCols } = this;\n        if (changes['rows'] || columnChanges) {\n            this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n        if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n            this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n        }\n        if (columnChanges || !this._cellWidth) {\n            this._cellWidth = `${100 / numCols}%`;\n        }\n    }\n    /**\n     * @param {?} rowIndex\n     * @param {?} colIndex\n     * @return {?}\n     */\n    _isActiveCell(rowIndex, colIndex) {\n        /** @type {?} */\n        let cellNumber = rowIndex * this.numCols + colIndex;\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n        return cellNumber == this.activeCell;\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n                if (activeCell) {\n                    activeCell.focus();\n                }\n            }));\n        }));\n    }\n}\nMatCalendarBody.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatCalendarBody, selectors: [[\"\", \"mat-calendar-body\", \"\"]], factory: function MatCalendarBody_Factory(t) { return new (t || MatCalendarBody)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(NgZone)); }, hostBindings: function MatCalendarBody_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c0);\n    } }, inputs: { numCols: \"numCols\", activeCell: \"activeCell\", cellAspectRatio: \"cellAspectRatio\", label: \"label\", rows: \"rows\", todayValue: \"todayValue\", selectedValue: \"selectedValue\", labelMinRequiredCells: \"labelMinRequiredCells\" }, outputs: { selectedValueChange: \"selectedValueChange\" }, exportAs: [\"matCalendarBody\"], features: [ɵngcc0.ɵɵNgOnChangesFeature()], attrs: _c1, consts: 2, vars: 2, template: function MatCalendarBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendarBody_tr_0_Template, 3, 4, \"tr\", _c2);\n        ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_Template, 3, 2, \"tr\", _c3);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._firstRowOffset < ctx.labelMinRequiredCells);\n        ɵngcc0.ɵɵselect(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.rows);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgClass], styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.71429%;padding-right:4.71429%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:0;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}@media (-ms-high-contrast:active){.mat-calendar-body-cell-content{border:none}}@media (-ms-high-contrast:active){.mat-calendar-body-selected,.mat-datepicker-popup:not(:empty){outline:solid 1px}.mat-calendar-body-today{outline:dotted 1px}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}}[dir=rtl] .mat-calendar-body-label{text-align:right}\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatCalendarBody, [{\n        type: Component,\n        args: [{ selector: '[mat-calendar-body]',\n                template: \"<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\"><td class=\\\"mat-calendar-body-label\\\" [attr.colspan]=\\\"numCols\\\" [style.paddingTop]=\\\"_cellPadding\\\" [style.paddingBottom]=\\\"_cellPadding\\\">{{label}}</td></tr><tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\"><td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\" aria-hidden=\\\"true\\\" class=\\\"mat-calendar-body-label\\\" [attr.colspan]=\\\"_firstRowOffset\\\" [style.paddingTop]=\\\"_cellPadding\\\" [style.paddingBottom]=\\\"_cellPadding\\\">{{_firstRowOffset >= labelMinRequiredCells ? label : ''}}</td><td *ngFor=\\\"let item of row; let colIndex = index\\\" role=\\\"gridcell\\\" class=\\\"mat-calendar-body-cell\\\" [ngClass]=\\\"item.cssClasses\\\" [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\" [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\" [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\" [attr.aria-label]=\\\"item.ariaLabel\\\" [attr.aria-disabled]=\\\"!item.enabled || null\\\" [attr.aria-selected]=\\\"selectedValue === item.value\\\" (click)=\\\"_cellClicked(item)\\\" [style.width]=\\\"_cellWidth\\\" [style.paddingTop]=\\\"_cellPadding\\\" role=\\\"button\\\" [style.paddingBottom]=\\\"_cellPadding\\\"><div class=\\\"mat-calendar-body-cell-content\\\" [class.mat-calendar-body-selected]=\\\"selectedValue === item.value\\\" [class.mat-calendar-body-today]=\\\"todayValue === item.value\\\">{{item.displayValue}}</div></td></tr>\",\n                styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.71429%;padding-right:4.71429%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:0;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}@media (-ms-high-contrast:active){.mat-calendar-body-cell-content{border:none}}@media (-ms-high-contrast:active){.mat-calendar-body-selected,.mat-datepicker-popup:not(:empty){outline:solid 1px}.mat-calendar-body-today{outline:dotted 1px}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}}[dir=rtl] .mat-calendar-body-label{text-align:right}\"],\n                host: {\n                    'class': 'mat-calendar-body',\n                    'role': 'grid',\n                    'aria-readonly': 'true'\n                },\n                exportAs: 'matCalendarBody',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ElementRef }, { type: NgZone }]; }, { constructor: [], _elementRef: [], _ngZone: [], numCols: [{\n            type: Input\n        }], activeCell: [{\n            type: Input\n        }], cellAspectRatio: [{\n            type: Input\n        }], selectedValueChange: [{\n            type: Output\n        }], _cellClicked: [], ngOnChanges: [], _firstRowOffset: [], _cellPadding: [], _cellWidth: [], _isActiveCell: [], _focusActiveCell: [], label: [{\n            type: Input\n        }], rows: [{\n            type: Input\n        }], todayValue: [{\n            type: Input\n        }], selectedValue: [{\n            type: Input\n        }], labelMinRequiredCells: [{\n            type: Input\n        }] });\n/** @nocollapse */\nMatCalendarBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nMatCalendarBody.propDecorators = {\n    label: [{ type: Input }],\n    rows: [{ type: Input }],\n    todayValue: [{ type: Input }],\n    selectedValue: [{ type: Input }],\n    labelMinRequiredCells: [{ type: Input }],\n    numCols: [{ type: Input }],\n    activeCell: [{ type: Input }],\n    cellAspectRatio: [{ type: Input }],\n    selectedValueChange: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatMonthView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateFormats\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        /**\n         * Emits when a new date is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedDate = this._getDateInCurrentMonth(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._init();\n    }\n    /**\n     * Handles when a new date is selected.\n     * @param {?} date\n     * @return {?}\n     */\n    _dateSelected(date) {\n        if (this._selectedDate != date) {\n            /** @type {?} */\n            const selectedYear = this._dateAdapter.getYear(this.activeDate);\n            /** @type {?} */\n            const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n            /** @type {?} */\n            const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n            this.selectedChange.emit(selectedDate);\n        }\n        this._userSelection.emit();\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in month view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                    this._dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this._dateSelected(this._dateAdapter.getDate(this._activeDate));\n                    this._userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * Initializes this month view.\n     * @return {?}\n     */\n    _init() {\n        this._selectedDate = this._getDateInCurrentMonth(this.selected);\n        this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n        this._monthLabel =\n            this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n                .toLocaleUpperCase();\n        /** @type {?} */\n        let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n        this._initWeekdays();\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Initializes the weekdays.\n     * @private\n     * @return {?}\n     */\n    _initWeekdays() {\n        /** @type {?} */\n        const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        /** @type {?} */\n        const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n        /** @type {?} */\n        const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        /** @type {?} */\n        let weekdays = longWeekdays.map((/**\n         * @param {?} long\n         * @param {?} i\n         * @return {?}\n         */\n        (long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        }));\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    }\n    /**\n     * Creates MatCalendarCells for the dates in this month.\n     * @private\n     * @return {?}\n     */\n    _createWeekCells() {\n        /** @type {?} */\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        /** @type {?} */\n        const dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell == DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            /** @type {?} */\n            const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n            /** @type {?} */\n            const enabled = this._shouldEnableDate(date);\n            /** @type {?} */\n            const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            /** @type {?} */\n            const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n            this._weeks[this._weeks.length - 1]\n                .push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n        }\n    }\n    /**\n     * Date filter for the month\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _shouldEnableDate(date) {\n        return !!date &&\n            (!this.dateFilter || this.dateFilter(date)) &&\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0);\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _getDateInCurrentMonth(date) {\n        return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n            this._dateAdapter.getDate(date) : null;\n    }\n    /**\n     * Checks whether the 2 dates are non-null and fall within the same month of the same year.\n     * @private\n     * @param {?} d1\n     * @param {?} d2\n     * @return {?}\n     */\n    _hasSameMonthAndYear(d1, d2) {\n        return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatMonthView.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatMonthView, selectors: [[\"mat-month-view\"]], factory: function MatMonthView_Factory(t) { return new (t || MatMonthView)(ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(Directionality, 8)); }, viewQuery: function MatMonthView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", _userSelection: \"_userSelection\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMonthView\"], consts: 7, vars: 7, template: function MatMonthView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", _c12);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", _c13);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵtemplate(3, MatMonthView_th_3_Template, 2, 2, \"th\", _c14);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tr\");\n        ɵngcc0.ɵɵelement(5, \"th\", _c15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"tbody\", _c16);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMonthView_Template_tbody_selectedValueChange_6_listener($event) { return ctx._dateSelected($event); });\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatMonthView_Template_tbody_keydown_6_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵselect(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._weekdays);\n        ɵngcc0.ɵɵselect(6);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._monthLabel)(\"rows\", ctx._weeks)(\"todayValue\", ctx._todayDate)(\"selectedValue\", ctx._selectedDate)(\"labelMinRequiredCells\", 3)(\"activeCell\", ctx._dateAdapter.getDate(ctx.activeDate) - 1);\n    } }, directives: [ɵngcc1.NgForOf, MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatMonthView, [{\n        type: Component,\n        args: [{ selector: 'mat-month-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">{{day.narrow}}</th></tr><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\" aria-hidden=\\\"true\\\"></th></tr></thead><tbody mat-calendar-body [label]=\\\"_monthLabel\\\" [rows]=\\\"_weeks\\\" [todayValue]=\\\"_todayDate\\\" [selectedValue]=\\\"_selectedDate\\\" [labelMinRequiredCells]=\\\"3\\\" [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\" (selectedValueChange)=\\\"_dateSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n                exportAs: 'matMonthView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { constructor: [], _changeDetectorRef: [], _dateFormats: [], _dateAdapter: [], _dir: [], selectedChange: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], _activeDate: [], activeDate: [{\n            type: Input\n        }], activeDate: [], selected: [{\n            type: Input\n        }], selected: [], _selected: [], _selectedDate: [], minDate: [{\n            type: Input\n        }], minDate: [], _minDate: [], maxDate: [{\n            type: Input\n        }], maxDate: [], _maxDate: [], ngAfterContentInit: [], _dateSelected: [], _handleCalendarBodyKeydown: [], _init: [], _todayDate: [], _monthLabel: [], _firstWeekOffset: [], _focusActiveCell: [], _initWeekdays: [], _weekdays: [], _createWeekCells: [], _weeks: [], _shouldEnableDate: [], _getDateInCurrentMonth: [], _hasSameMonthAndYear: [], _getValidDateOrNull: [], _isRtl: [], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody, { static: false }]\n        }] });\n/** @nocollapse */\nMatMonthView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMonthView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody, { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst yearsPerPage = 24;\n/** @type {?} */\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatMultiYearView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        /**\n         * Emits when a new year is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected year. This doesn't imply a change on the selected date\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this multi-year view (everything other than the year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        let oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._init();\n    }\n    /**\n     * Initializes this multi-year view.\n     * @return {?}\n     */\n    _init() {\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n        // We want a range years such that we maximize the number of\n        // enabled dates visible at once. This prevents issues where the minimum year\n        // is the last item of a page OR the maximum year is the first item of a page.\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view.\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this._activeDate);\n        /** @type {?} */\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n        this._years = [];\n        for (let i = 0, row = []; i < yearsPerPage; i++) {\n            row.push(minYearOfPage + i);\n            if (row.length == yearsPerRow) {\n                this._years.push(row.map((/**\n                 * @param {?} year\n                 * @return {?}\n                 */\n                year => this._createCellForYear(year))));\n                row = [];\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Handles when a new year is selected.\n     * @param {?} year\n     * @return {?}\n     */\n    _yearSelected(year) {\n        this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n        /** @type {?} */\n        let month = this._dateAdapter.getMonth(this.activeDate);\n        /** @type {?} */\n        let daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in multi-year view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this._yearSelected(this._dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * @return {?}\n     */\n    _getActiveCell() {\n        return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Creates an MatCalendarCell for the given year.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    _createCellForYear(year) {\n        /** @type {?} */\n        let yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\n        return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n    }\n    /**\n     * Whether the given year is enabled.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    _shouldEnableYear(year) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n        /** @type {?} */\n        const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatMultiYearView.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatMultiYearView, selectors: [[\"mat-multi-year-view\"]], factory: function MatMultiYearView_Factory(t) { return new (t || MatMultiYearView)(ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(Directionality, 8)); }, viewQuery: function MatMultiYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMultiYearView\"], consts: 5, vars: 6, template: function MatMultiYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", _c12);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", _c13);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", _c17);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", _c18);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMultiYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._yearSelected($event); });\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatMultiYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵselect(4);\n        ɵngcc0.ɵɵproperty(\"rows\", ctx._years)(\"todayValue\", ctx._todayYear)(\"selectedValue\", ctx._selectedYear)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._getActiveCell());\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatMultiYearView, [{\n        type: Component,\n        args: [{ selector: 'mat-multi-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr></thead><tbody mat-calendar-body [rows]=\\\"_years\\\" [todayValue]=\\\"_todayYear\\\" [selectedValue]=\\\"_selectedYear\\\" [numCols]=\\\"4\\\" [cellAspectRatio]=\\\"4 / 7\\\" [activeCell]=\\\"_getActiveCell()\\\" (selectedValueChange)=\\\"_yearSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n                exportAs: 'matMultiYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ChangeDetectorRef }, { type: DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { constructor: [], _changeDetectorRef: [], _dateAdapter: [], _dir: [], selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], _activeDate: [], activeDate: [{\n            type: Input\n        }], activeDate: [], selected: [{\n            type: Input\n        }], selected: [], _selected: [], _selectedYear: [], minDate: [{\n            type: Input\n        }], minDate: [], _minDate: [], maxDate: [{\n            type: Input\n        }], maxDate: [], _maxDate: [], ngAfterContentInit: [], _init: [], _todayYear: [], _years: [], _yearSelected: [], _handleCalendarBodyKeydown: [], _getActiveCell: [], _focusActiveCell: [], _createCellForYear: [], _shouldEnableYear: [], _getValidDateOrNull: [], _isRtl: [], dateFilter: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody, { static: false }]\n        }] });\n/** @nocollapse */\nMatMultiYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMultiYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody, { static: false },] }]\n};\n/**\n * @template D\n * @param {?} dateAdapter\n * @param {?} date1\n * @param {?} date2\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n    /** @type {?} */\n    const year1 = dateAdapter.getYear(date1);\n    /** @type {?} */\n    const year2 = dateAdapter.getYear(date2);\n    /** @type {?} */\n    const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n    return Math.floor((year1 - startingYear) / yearsPerPage) ===\n        Math.floor((year2 - startingYear) / yearsPerPage);\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n * @template D\n * @param {?} dateAdapter\n * @param {?} activeDate\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n    /** @type {?} */\n    const activeYear = dateAdapter.getYear(activeDate);\n    return euclideanModulo((activeYear - getStartingYear(dateAdapter, minDate, maxDate)), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n * @template D\n * @param {?} dateAdapter\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n    /** @type {?} */\n    let startingYear = 0;\n    if (maxDate) {\n        /** @type {?} */\n        const maxYear = dateAdapter.getYear(maxDate);\n        startingYear = maxYear - yearsPerPage + 1;\n    }\n    else if (minDate) {\n        startingYear = dateAdapter.getYear(minDate);\n    }\n    return startingYear;\n}\n/**\n * Gets remainder that is non-negative, even if first number is negative\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction euclideanModulo(a, b) {\n    return (a % b + b) % b;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An internal component used to display a single year in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatYearView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateFormats\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        /**\n         * Emits when a new month is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected month. This doesn't imply a change on the selected date\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this year view (everything other than the year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        let oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedMonth = this._getMonthInCurrentYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._init();\n    }\n    /**\n     * Handles when a new month is selected.\n     * @param {?} month\n     * @return {?}\n     */\n    _monthSelected(month) {\n        /** @type {?} */\n        const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        this.monthSelected.emit(normalizedDate);\n        /** @type {?} */\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n        this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in year view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this._monthSelected(this._dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * Initializes this year view.\n     * @return {?}\n     */\n    _init() {\n        this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n        /** @type {?} */\n        let monthNames = this._dateAdapter.getMonthNames('short');\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map((/**\n         * @param {?} row\n         * @return {?}\n         */\n        row => row.map((/**\n         * @param {?} month\n         * @return {?}\n         */\n        month => this._createCellForMonth(month, monthNames[month])))));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _getMonthInCurrentYear(date) {\n        return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n            this._dateAdapter.getMonth(date) : null;\n    }\n    /**\n     * Creates an MatCalendarCell for the given month.\n     * @private\n     * @param {?} month\n     * @param {?} monthName\n     * @return {?}\n     */\n    _createCellForMonth(month, monthName) {\n        /** @type {?} */\n        let ariaLabel = this._dateAdapter.format(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1), this._dateFormats.display.monthYearA11yLabel);\n        return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month));\n    }\n    /**\n     * Whether the given month is enabled.\n     * @private\n     * @param {?} month\n     * @return {?}\n     */\n    _shouldEnableMonth(month) {\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this.activeDate);\n        if (month === undefined || month === null ||\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n        if (!this.dateFilter) {\n            return true;\n        }\n        /** @type {?} */\n        const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    _isYearAndMonthAfterMaxDate(year, month) {\n        if (this.maxDate) {\n            /** @type {?} */\n            const maxYear = this._dateAdapter.getYear(this.maxDate);\n            /** @type {?} */\n            const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    _isYearAndMonthBeforeMinDate(year, month) {\n        if (this.minDate) {\n            /** @type {?} */\n            const minYear = this._dateAdapter.getYear(this.minDate);\n            /** @type {?} */\n            const minMonth = this._dateAdapter.getMonth(this.minDate);\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatYearView.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatYearView, selectors: [[\"mat-year-view\"]], factory: function MatYearView_Factory(t) { return new (t || MatYearView)(ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(Directionality, 8)); }, viewQuery: function MatYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\" }, outputs: { selectedChange: \"selectedChange\", monthSelected: \"monthSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matYearView\"], consts: 5, vars: 8, template: function MatYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", _c12);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", _c13);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", _c17);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", _c19);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._monthSelected($event); });\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵselect(4);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._yearLabel)(\"rows\", ctx._months)(\"todayValue\", ctx._todayMonth)(\"selectedValue\", ctx._selectedMonth)(\"labelMinRequiredCells\", 2)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._dateAdapter.getMonth(ctx.activeDate));\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatYearView, [{\n        type: Component,\n        args: [{ selector: 'mat-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr></thead><tbody mat-calendar-body [label]=\\\"_yearLabel\\\" [rows]=\\\"_months\\\" [todayValue]=\\\"_todayMonth\\\" [selectedValue]=\\\"_selectedMonth\\\" [labelMinRequiredCells]=\\\"2\\\" [numCols]=\\\"4\\\" [cellAspectRatio]=\\\"4 / 7\\\" [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\" (selectedValueChange)=\\\"_monthSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n                exportAs: 'matYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { constructor: [], _changeDetectorRef: [], _dateFormats: [], _dateAdapter: [], _dir: [], selectedChange: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], _activeDate: [], activeDate: [{\n            type: Input\n        }], activeDate: [], selected: [{\n            type: Input\n        }], selected: [], _selected: [], _selectedMonth: [], minDate: [{\n            type: Input\n        }], minDate: [], _minDate: [], maxDate: [{\n            type: Input\n        }], maxDate: [], _maxDate: [], ngAfterContentInit: [], _monthSelected: [], _handleCalendarBodyKeydown: [], _init: [], _todayMonth: [], _yearLabel: [], _months: [], _focusActiveCell: [], _getMonthInCurrentYear: [], _createCellForMonth: [], _shouldEnableMonth: [], _isYearAndMonthAfterMaxDate: [], _isYearAndMonthBeforeMinDate: [], _getValidDateOrNull: [], _isRtl: [], dateFilter: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody, { static: false }]\n        }] });\n/** @nocollapse */\nMatYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody, { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default header for MatCalendar\n * @template D\n */\nclass MatCalendarHeader {\n    /**\n     * @param {?} _intl\n     * @param {?} calendar\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} changeDetectorRef\n     */\n    constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n        this._intl = _intl;\n        this.calendar = calendar;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this.calendar.stateChanges.subscribe((/**\n         * @return {?}\n         */\n        () => changeDetectorRef.markForCheck()));\n    }\n    /**\n     * The label for the current calendar view.\n     * @return {?}\n     */\n    get periodButtonText() {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter\n                .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                .toLocaleUpperCase();\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYearName(this.calendar.activeDate);\n        }\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view, and the last year is\n        // just yearsPerPage - 1 away.\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n        /** @type {?} */\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n        /** @type {?} */\n        const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n        return `${minYearOfPage} \\u2013 ${maxYearOfPage}`;\n    }\n    /**\n     * @return {?}\n     */\n    get periodButtonLabel() {\n        return this.calendar.currentView == 'month' ?\n            this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n    }\n    /**\n     * The label for the previous button.\n     * @return {?}\n     */\n    get prevButtonLabel() {\n        return {\n            'month': this._intl.prevMonthLabel,\n            'year': this._intl.prevYearLabel,\n            'multi-year': this._intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /**\n     * The label for the next button.\n     * @return {?}\n     */\n    get nextButtonLabel() {\n        return {\n            'month': this._intl.nextMonthLabel,\n            'year': this._intl.nextYearLabel,\n            'multi-year': this._intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /**\n     * Handles user clicks on the period label.\n     * @return {?}\n     */\n    currentPeriodClicked() {\n        this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /**\n     * Handles user clicks on the previous button.\n     * @return {?}\n     */\n    previousClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /**\n     * Handles user clicks on the next button.\n     * @return {?}\n     */\n    nextClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /**\n     * Whether the previous period button is enabled.\n     * @return {?}\n     */\n    previousEnabled() {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n        return !this.calendar.minDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n    /**\n     * Whether the next period button is enabled.\n     * @return {?}\n     */\n    nextEnabled() {\n        return !this.calendar.maxDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n    /**\n     * Whether the two dates represent the same view in the current view mode (month or year).\n     * @private\n     * @param {?} date1\n     * @param {?} date2\n     * @return {?}\n     */\n    _isSameView(date1, date2) {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n        }\n        // Otherwise we are in 'multi-year' view.\n        return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n    }\n}\nMatCalendarHeader.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatCalendarHeader, selectors: [[\"mat-calendar-header\"]], factory: function MatCalendarHeader_Factory(t) { return new (t || MatCalendarHeader)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                     * @return {?}\n                     */() => MatCalendar))), ɵngcc0.ɵɵdirectiveInject(DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef)); }, exportAs: [\"matCalendarHeader\"], ngContentSelectors: _c27, consts: 9, vars: 7, template: function MatCalendarHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", _c20);\n        ɵngcc0.ɵɵelementStart(1, \"div\", _c21);\n        ɵngcc0.ɵɵelementStart(2, \"button\", _c22);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_2_listener($event) { return ctx.currentPeriodClicked(); });\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelementStart(4, \"div\", _c23);\n        ɵngcc0.ɵɵstyling();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(5, \"div\", _c24);\n        ɵngcc0.ɵɵprojection(6);\n        ɵngcc0.ɵɵelementStart(7, \"button\", _c25);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_7_listener($event) { return ctx.previousClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(8, \"button\", _c26);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_8_listener($event) { return ctx.nextClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵselect(2);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.periodButtonLabel);\n        ɵngcc0.ɵɵselect(3);\n        ɵngcc0.ɵɵtextInterpolate(ctx.periodButtonText);\n        ɵngcc0.ɵɵselect(4);\n        ɵngcc0.ɵɵclassProp(\"mat-calendar-invert\", ctx.calendar.currentView != \"month\");\n        ɵngcc0.ɵɵstylingApply();\n        ɵngcc0.ɵɵselect(7);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.previousEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.prevButtonLabel);\n        ɵngcc0.ɵɵselect(8);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.nextEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.nextButtonLabel);\n    } }, directives: [ɵngcc2.MatButton, ɵngcc3.CdkAriaLive], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatCalendarHeader, [{\n        type: Component,\n        args: [{ selector: 'mat-calendar-header',\n                template: \"<div class=\\\"mat-calendar-header\\\"><div class=\\\"mat-calendar-controls\\\"><button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\" (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\" cdkAriaLive=\\\"polite\\\">{{periodButtonText}}<div class=\\\"mat-calendar-arrow\\\" [class.mat-calendar-invert]=\\\"calendar.currentView != 'month'\\\"></div></button><div class=\\\"mat-calendar-spacer\\\"></div><ng-content></ng-content><button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\" [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\" [attr.aria-label]=\\\"prevButtonLabel\\\"></button> <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\" [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\" [attr.aria-label]=\\\"nextButtonLabel\\\"></button></div></div>\",\n                exportAs: 'matCalendarHeader',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: MatCalendar, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatCalendar))]\n            }] }, { type: DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ChangeDetectorRef }]; }, { constructor: [], _intl: [], calendar: [], _dateAdapter: [], _dateFormats: [], periodButtonText: [], periodButtonLabel: [], prevButtonLabel: [], nextButtonLabel: [], currentPeriodClicked: [], previousClicked: [], nextClicked: [], previousEnabled: [], nextEnabled: [], _isSameView: [] });\n/** @nocollapse */\nMatCalendarHeader.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: MatCalendar, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatCalendar)),] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\n/**\n * A calendar that is used as part of the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatCalendar {\n    /**\n     * @param {?} _intl\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Used for scheduling that focus should be moved to the active cell on the next tick.\n         * We need to schedule it, rather than do it immediately, because we have to wait\n         * for Angular to re-evaluate the view children.\n         */\n        this._moveFocusOnNextTick = false;\n        /**\n         * Whether the calendar should be started in month or year view.\n         */\n        this.startView = 'month';\n        /**\n         * Emits when the currently selected date changes.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the year chosen in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits the month chosen in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits whenever there is a state change that the header may need to respond to.\n         */\n        this.stateChanges = new Subject();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._intlChanges = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            _changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * A date representing the period (month or year) to start the calendar in.\n     * @return {?}\n     */\n    get startAt() { return this._startAt; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set startAt(value) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     * @return {?}\n     */\n    get activeDate() { return this._clampedActiveDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Whether the calendar is in month view.\n     * @return {?}\n     */\n    get currentView() { return this._currentView; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set currentView(value) {\n        this._currentView = value;\n        this._moveFocusOnNextTick = true;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n        this.activeDate = this.startAt || this._dateAdapter.today();\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        if (this._moveFocusOnNextTick) {\n            this._moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n        if (change && !change.firstChange) {\n            /** @type {?} */\n            const view = this._getCurrentViewComponent();\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n                this._changeDetectorRef.detectChanges();\n                view._init();\n            }\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    focusActiveCell() {\n        this._getCurrentViewComponent()._focusActiveCell();\n    }\n    /**\n     * Updates today's date after an update of the active date\n     * @return {?}\n     */\n    updateTodaysDate() {\n        /** @type {?} */\n        let view = this.currentView == 'month' ? this.monthView :\n            (this.currentView == 'year' ? this.yearView : this.multiYearView);\n        view.ngAfterContentInit();\n    }\n    /**\n     * Handles date selection in the month view.\n     * @param {?} date\n     * @return {?}\n     */\n    _dateSelected(date) {\n        if (!this._dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    }\n    /**\n     * Handles year selection in the multiyear view.\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    _yearSelectedInMultiYearView(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Handles month selection in the year view.\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    _monthSelectedInYearView(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * @return {?}\n     */\n    _userSelected() {\n        this._userSelection.emit();\n    }\n    /**\n     * Handles year/month selection in the multi-year/year views.\n     * @param {?} date\n     * @param {?} view\n     * @return {?}\n     */\n    _goToDateInView(date, view) {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Returns the component instance that corresponds to the current calendar view.\n     * @private\n     * @return {?}\n     */\n    _getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\nMatCalendar.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatCalendar, selectors: [[\"mat-calendar\"]], factory: function MatCalendar_Factory(t) { return new (t || MatCalendar)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef)); }, viewQuery: function MatCalendar_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatMonthView, true);\n        ɵngcc0.ɵɵviewQuery(MatYearView, true);\n        ɵngcc0.ɵɵviewQuery(MatMultiYearView, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiYearView = _t.first);\n    } }, hostBindings: function MatCalendar_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c28);\n    } }, inputs: { startView: \"startView\", startAt: \"startAt\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", headerComponent: \"headerComponent\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", _userSelection: \"_userSelection\" }, exportAs: [\"matCalendar\"], features: [ɵngcc0.ɵɵNgOnChangesFeature()], consts: 5, vars: 5, template: function MatCalendar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendar_ng_template_0_Template, 0, 0, \"ng-template\", _c29);\n        ɵngcc0.ɵɵelementStart(1, \"div\", _c30);\n        ɵngcc0.ɵɵtemplate(2, MatCalendar_mat_month_view_2_Template, 1, 6, \"mat-month-view\", _c31);\n        ɵngcc0.ɵɵtemplate(3, MatCalendar_mat_year_view_3_Template, 1, 5, \"mat-year-view\", _c32);\n        ɵngcc0.ɵɵtemplate(4, MatCalendar_mat_multi_year_view_4_Template, 1, 5, \"mat-multi-year-view\", _c33);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._calendarHeaderPortal);\n        ɵngcc0.ɵɵselect(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.currentView);\n        ɵngcc0.ɵɵselect(2);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"month\");\n        ɵngcc0.ɵɵselect(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"year\");\n        ɵngcc0.ɵɵselect(4);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"multi-year\");\n    } }, directives: [ɵngcc4.CdkPortalOutlet, ɵngcc3.CdkMonitorFocus, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, MatMonthView,\n        MatYearView,\n        MatMultiYearView], styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:0}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-next-button,.mat-calendar-previous-button{position:relative}.mat-calendar-next-button::after,.mat-calendar-previous-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:'';margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-next-button,[dir=rtl] .mat-calendar-previous-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:'';position:absolute;top:0;left:-8px;right:-8px;height:1px}\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatCalendar, [{\n        type: Component,\n        args: [{ selector: 'mat-calendar',\n                template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template><div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\"><mat-month-view *ngSwitchCase=\\\"'month'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" [dateClass]=\\\"dateClass\\\" (selectedChange)=\\\"_dateSelected($event)\\\" (_userSelection)=\\\"_userSelected()\\\"></mat-month-view><mat-year-view *ngSwitchCase=\\\"'year'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" (monthSelected)=\\\"_monthSelectedInYearView($event)\\\" (selectedChange)=\\\"_goToDateInView($event, 'month')\\\"></mat-year-view><mat-multi-year-view *ngSwitchCase=\\\"'multi-year'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\" (selectedChange)=\\\"_goToDateInView($event, 'year')\\\"></mat-multi-year-view></div>\",\n                styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:0}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-next-button,.mat-calendar-previous-button{position:relative}.mat-calendar-next-button::after,.mat-calendar-previous-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:'';margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-next-button,[dir=rtl] .mat-calendar-previous-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:'';position:absolute;top:0;left:-8px;right:-8px;height:1px}\"],\n                host: {\n                    'class': 'mat-calendar'\n                },\n                exportAs: 'matCalendar',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ChangeDetectorRef }]; }, { constructor: [], _dateAdapter: [], _dateFormats: [], _changeDetectorRef: [], _moveFocusOnNextTick: [], startView: [{\n            type: Input\n        }], selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], stateChanges: [], _intlChanges: [], startAt: [{\n            type: Input\n        }], startAt: [], _startAt: [], selected: [{\n            type: Input\n        }], selected: [], _selected: [], minDate: [{\n            type: Input\n        }], minDate: [], _minDate: [], maxDate: [{\n            type: Input\n        }], maxDate: [], _maxDate: [], activeDate: [], activeDate: [], _clampedActiveDate: [], currentView: [], currentView: [], _currentView: [], ngAfterContentInit: [], _calendarHeaderPortal: [], ngAfterViewChecked: [], ngOnDestroy: [], ngOnChanges: [], focusActiveCell: [], updateTodaysDate: [], _dateSelected: [], _yearSelectedInMultiYearView: [], _monthSelectedInYearView: [], _userSelected: [], _goToDateInView: [], _getValidDateOrNull: [], _getCurrentViewComponent: [], headerComponent: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], monthView: [{\n            type: ViewChild,\n            args: [MatMonthView, { static: false }]\n        }], yearView: [{\n            type: ViewChild,\n            args: [MatYearView, { static: false }]\n        }], multiYearView: [{\n            type: ViewChild,\n            args: [MatMultiYearView, { static: false }]\n        }] });\n/** @nocollapse */\nMatCalendar.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\nMatCalendar.propDecorators = {\n    headerComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    monthView: [{ type: ViewChild, args: [MatMonthView, { static: false },] }],\n    yearView: [{ type: ViewChild, args: [MatYearView, { static: false },] }],\n    multiYearView: [{ type: ViewChild, args: [MatMultiYearView, { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material datepicker.\n * \\@docs-private\n * @type {?}\n */\nconst matDatepickerAnimations = {\n    /**\n     * Transforms the height of the datepicker's calendar.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * Fades in the content of the calendar.\n     */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n        // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate a unique ID for each datepicker instance.\n * @type {?}\n */\nlet datepickerUid = 0;\n/**\n * Injection token that determines the scroll handling while the calendar is open.\n * @type {?}\n */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n// Boilerplate for applying mixins to MatDatepickerContent.\n/**\n * \\@docs-private\n */\nclass MatDatepickerContentBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/** @type {?} */\nconst _MatDatepickerContentMixinBase = mixinColor(MatDatepickerContentBase);\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * \\@docs-private\n * @template D\n */\nclass MatDatepickerContent extends _MatDatepickerContentMixinBase {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        super(elementRef);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._calendar.focusActiveCell();\n    }\n}\nMatDatepickerContent.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerContent, selectors: [[\"mat-datepicker-content\"]], factory: function MatDatepickerContent_Factory(t) { return new (t || MatDatepickerContent)(ɵngcc0.ɵɵdirectiveInject(ElementRef)); }, viewQuery: function MatDatepickerContent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendar, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._calendar = _t.first);\n    } }, hostBindings: function MatDatepickerContent_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(2);\n        ɵngcc0.ɵɵelementHostAttrs(_c37);\n        ɵngcc0.ɵɵstyling();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@transformPanel\", \"enter\");\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-content-touch\", ctx.datepicker.touchUi);\n        ɵngcc0.ɵɵstylingApply();\n    } }, inputs: { color: \"color\" }, exportAs: [\"matDatepickerContent\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], consts: 1, vars: 11, template: function MatDatepickerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-calendar\", _c38);\n        ɵngcc0.ɵɵlistener(\"selectedChange\", function MatDatepickerContent_Template_mat_calendar_selectedChange_0_listener($event) { return ctx.datepicker.select($event); });\n        ɵngcc0.ɵɵlistener(\"yearSelected\", function MatDatepickerContent_Template_mat_calendar_yearSelected_0_listener($event) { return ctx.datepicker._selectYear($event); });\n        ɵngcc0.ɵɵlistener(\"monthSelected\", function MatDatepickerContent_Template_mat_calendar_monthSelected_0_listener($event) { return ctx.datepicker._selectMonth($event); });\n        ɵngcc0.ɵɵlistener(\"_userSelection\", function MatDatepickerContent_Template_mat_calendar__userSelection_0_listener($event) { return ctx.datepicker.close(); });\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx.datepicker.id)(\"ngClass\", ctx.datepicker.panelClass)(\"startAt\", ctx.datepicker.startAt)(\"startView\", ctx.datepicker.startView)(\"minDate\", ctx.datepicker._minDate)(\"maxDate\", ctx.datepicker._maxDate)(\"dateFilter\", ctx.datepicker._dateFilter)(\"headerComponent\", ctx.datepicker.calendarHeaderComponent)(\"selected\", ctx.datepicker._selected)(\"dateClass\", ctx.datepicker.dateClass)(\"@fadeInCalendar\", \"enter\");\n    } }, directives: [MatCalendar, ɵngcc3.CdkTrapFocus, ɵngcc1.NgClass], styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation:landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation:portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\"], encapsulation: 2, data: { animation: [\n            matDatepickerAnimations.transformPanel,\n            matDatepickerAnimations.fadeInCalendar,\n        ] }, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatDatepickerContent, [{\n        type: Component,\n        args: [{ selector: 'mat-datepicker-content',\n                template: \"<mat-calendar cdkTrapFocus [id]=\\\"datepicker.id\\\" [ngClass]=\\\"datepicker.panelClass\\\" [startAt]=\\\"datepicker.startAt\\\" [startView]=\\\"datepicker.startView\\\" [minDate]=\\\"datepicker._minDate\\\" [maxDate]=\\\"datepicker._maxDate\\\" [dateFilter]=\\\"datepicker._dateFilter\\\" [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\" [selected]=\\\"datepicker._selected\\\" [dateClass]=\\\"datepicker.dateClass\\\" [@fadeInCalendar]=\\\"'enter'\\\" (selectedChange)=\\\"datepicker.select($event)\\\" (yearSelected)=\\\"datepicker._selectYear($event)\\\" (monthSelected)=\\\"datepicker._selectMonth($event)\\\" (_userSelection)=\\\"datepicker.close()\\\"></mat-calendar>\",\n                styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation:landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation:portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\"],\n                host: {\n                    'class': 'mat-datepicker-content',\n                    '[@transformPanel]': '\"enter\"',\n                    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi'\n                },\n                animations: [\n                    matDatepickerAnimations.transformPanel,\n                    matDatepickerAnimations.fadeInCalendar,\n                ],\n                exportAs: 'matDatepickerContent',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['color']\n            }]\n    }], function () { return [{ type: ElementRef }]; }, { constructor: [], ngAfterViewInit: [], _calendar: [{\n            type: ViewChild,\n            args: [MatCalendar, { static: false }]\n        }] });\n/** @nocollapse */\nMatDatepickerContent.ctorParameters = () => [\n    { type: ElementRef }\n];\nMatDatepickerContent.propDecorators = {\n    _calendar: [{ type: ViewChild, args: [MatCalendar, { static: false },] }]\n};\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/**\n * Component responsible for managing the datepicker popup/dialog.\n * @template D\n */\nclass MatDatepicker {\n    /**\n     * @param {?} _dialog\n     * @param {?} _overlay\n     * @param {?} _ngZone\n     * @param {?} _viewContainerRef\n     * @param {?} scrollStrategy\n     * @param {?} _dateAdapter\n     * @param {?} _dir\n     * @param {?} _document\n     */\n    constructor(_dialog, _overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _document) {\n        this._dialog = _dialog;\n        this._overlay = _overlay;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._document = _document;\n        /**\n         * The view that the calendar should start in.\n         */\n        this.startView = 'month';\n        this._touchUi = false;\n        /**\n         * Emits selected year in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the datepicker has been opened.\n         */\n        this.openedStream = new EventEmitter();\n        /**\n         * Emits when the datepicker has been closed.\n         */\n        this.closedStream = new EventEmitter();\n        this._opened = false;\n        /**\n         * The id for the datepicker calendar.\n         */\n        this.id = `mat-datepicker-${datepickerUid++}`;\n        this._validSelected = null;\n        /**\n         * The element that was focused before the datepicker was opened.\n         */\n        this._focusedElementBeforeOpen = null;\n        /**\n         * Subscription to value changes in the associated input element.\n         */\n        this._inputSubscription = Subscription.EMPTY;\n        /**\n         * Emits when the datepicker is disabled.\n         */\n        this._disabledChange = new Subject();\n        /**\n         * Emits new selected date when selected date changes.\n         */\n        this._selectedChanged = new Subject();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * The date to open the calendar to initially.\n     * @return {?}\n     */\n    get startAt() {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set startAt(value) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * Color palette to use on the datepicker's calendar.\n     * @return {?}\n     */\n    get color() {\n        return this._color ||\n            (this._datepickerInput ? this._datepickerInput._getThemePalette() : undefined);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set color(value) {\n        this._color = value;\n    }\n    /**\n     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n     * than a popup and elements have more padding to allow for bigger touch targets.\n     * @return {?}\n     */\n    get touchUi() { return this._touchUi; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set touchUi(value) {\n        this._touchUi = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the datepicker pop-up should be disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled === undefined && this._datepickerInput ?\n            this._datepickerInput.disabled : !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._disabledChange.next(newValue);\n        }\n    }\n    /**\n     * Whether the calendar is open.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { value ? this.open() : this.close(); }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get _selected() { return this._validSelected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _selected(value) { this._validSelected = value; }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get _minDate() {\n        return this._datepickerInput && this._datepickerInput.min;\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get _maxDate() {\n        return this._datepickerInput && this._datepickerInput.max;\n    }\n    /**\n     * @return {?}\n     */\n    get _dateFilter() {\n        return this._datepickerInput && this._datepickerInput._dateFilter;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.close();\n        this._inputSubscription.unsubscribe();\n        this._disabledChange.complete();\n        if (this._popupRef) {\n            this._popupRef.dispose();\n            this._popupComponentRef = null;\n        }\n    }\n    /**\n     * Selects the given date\n     * @param {?} date\n     * @return {?}\n     */\n    select(date) {\n        /** @type {?} */\n        let oldValue = this._selected;\n        this._selected = date;\n        if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n            this._selectedChanged.next(date);\n        }\n    }\n    /**\n     * Emits the selected year in multiyear view\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    _selectYear(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Emits selected month in year view\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    _selectMonth(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param {?} input The datepicker input to register with this datepicker.\n     * @return {?}\n     */\n    _registerInput(input) {\n        if (this._datepickerInput) {\n            throw Error('A MatDatepicker can only be associated with a single input.');\n        }\n        this._datepickerInput = input;\n        this._inputSubscription =\n            this._datepickerInput._valueChange.subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            (value) => this._selected = value));\n    }\n    /**\n     * Open the calendar.\n     * @return {?}\n     */\n    open() {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this._datepickerInput) {\n            throw Error('Attempted to open an MatDatepicker with no associated input.');\n        }\n        if (this._document) {\n            this._focusedElementBeforeOpen = this._document.activeElement;\n        }\n        this.touchUi ? this._openAsDialog() : this._openAsPopup();\n        this._opened = true;\n        this.openedStream.emit();\n    }\n    /**\n     * Close the calendar.\n     * @return {?}\n     */\n    close() {\n        if (!this._opened) {\n            return;\n        }\n        if (this._popupRef && this._popupRef.hasAttached()) {\n            this._popupRef.detach();\n        }\n        if (this._dialogRef) {\n            this._dialogRef.close();\n            this._dialogRef = null;\n        }\n        if (this._calendarPortal && this._calendarPortal.isAttached) {\n            this._calendarPortal.detach();\n        }\n        /** @type {?} */\n        const completeClose = (/**\n         * @return {?}\n         */\n        () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this._focusedElementBeforeOpen = null;\n            }\n        });\n        if (this._focusedElementBeforeOpen &&\n            typeof this._focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this._focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        }\n        else {\n            completeClose();\n        }\n    }\n    /**\n     * Open the calendar as a dialog.\n     * @private\n     * @return {?}\n     */\n    _openAsDialog() {\n        // Usually this would be handled by `open` which ensures that we can only have one overlay\n        // open at a time, however since we reset the variables in async handlers some overlays\n        // may slip through if the user opens and closes multiple times in quick succession (e.g.\n        // by holding down the enter key).\n        if (this._dialogRef) {\n            this._dialogRef.close();\n        }\n        this._dialogRef = this._dialog.open(MatDatepickerContent, {\n            direction: this._dir ? this._dir.value : 'ltr',\n            viewContainerRef: this._viewContainerRef,\n            panelClass: 'mat-datepicker-dialog',\n        });\n        this._dialogRef.afterClosed().subscribe((/**\n         * @return {?}\n         */\n        () => this.close()));\n        this._dialogRef.componentInstance.datepicker = this;\n        this._setColor();\n    }\n    /**\n     * Open the calendar as a popup.\n     * @private\n     * @return {?}\n     */\n    _openAsPopup() {\n        if (!this._calendarPortal) {\n            this._calendarPortal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n        }\n        if (!this._popupRef) {\n            this._createPopup();\n        }\n        if (!this._popupRef.hasAttached()) {\n            this._popupComponentRef = this._popupRef.attach(this._calendarPortal);\n            this._popupComponentRef.instance.datepicker = this;\n            this._setColor();\n            // Update the position once the calendar has rendered.\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._popupRef.updatePosition();\n            }));\n        }\n    }\n    /**\n     * Create the popup.\n     * @private\n     * @return {?}\n     */\n    _createPopup() {\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this._createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'mat-overlay-transparent-backdrop',\n            direction: this._dir,\n            scrollStrategy: this._scrollStrategy(),\n            panelClass: 'mat-datepicker-popup',\n        });\n        this._popupRef = this._overlay.create(overlayConfig);\n        this._popupRef.overlayElement.setAttribute('role', 'dialog');\n        merge(this._popupRef.backdropClick(), this._popupRef.detachments(), this._popupRef.keydownEvents().pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // Closing on alt + up is only valid when there's an input associated with the datepicker.\n            return event.keyCode === ESCAPE ||\n                (this._datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n        })))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event) {\n                event.preventDefault();\n            }\n            this.close();\n        }));\n    }\n    /**\n     * Create the popup PositionStrategy.\n     * @private\n     * @return {?}\n     */\n    _createPopupPositionStrategy() {\n        return this._overlay.position()\n            .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())\n            .withTransformOriginOn('.mat-datepicker-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition()\n            .withPositions([\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'top'\n            },\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'bottom'\n            },\n            {\n                originX: 'end',\n                originY: 'bottom',\n                overlayX: 'end',\n                overlayY: 'top'\n            },\n            {\n                originX: 'end',\n                originY: 'top',\n                overlayX: 'end',\n                overlayY: 'bottom'\n            }\n        ]);\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Passes the current theme color along to the calendar overlay.\n     * @private\n     * @return {?}\n     */\n    _setColor() {\n        /** @type {?} */\n        const color = this.color;\n        if (this._popupComponentRef) {\n            this._popupComponentRef.instance.color = color;\n        }\n        if (this._dialogRef) {\n            this._dialogRef.componentInstance.color = color;\n        }\n    }\n}\nMatDatepicker.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatDatepicker, selectors: [[\"mat-datepicker\"]], factory: function MatDatepicker_Factory(t) { return new (t || MatDatepicker)(ɵngcc0.ɵɵdirectiveInject(MatDialog), ɵngcc0.ɵɵdirectiveInject(Overlay), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATEPICKER_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); }, inputs: { startView: \"startView\", startAt: \"startAt\", color: \"color\", touchUi: \"touchUi\", disabled: \"disabled\", opened: \"opened\", calendarHeaderComponent: \"calendarHeaderComponent\", panelClass: \"panelClass\", dateClass: \"dateClass\" }, outputs: { yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", openedStream: \"opened\", closedStream: \"closed\" }, exportAs: [\"matDatepicker\"], consts: 0, vars: 0, template: function MatDatepicker_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatDatepicker, [{\n        type: Component,\n        args: [{ selector: 'mat-datepicker',\n                template: '',\n                exportAs: 'matDatepicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: MatDialog }, { type: Overlay }, { type: NgZone }, { type: ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n            }] }, { type: DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { constructor: [], _dialog: [], _overlay: [], _ngZone: [], _viewContainerRef: [], _dateAdapter: [], _dir: [], _document: [], startView: [{\n            type: Input\n        }], _touchUi: [], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], _opened: [], id: [], _validSelected: [], _focusedElementBeforeOpen: [], _inputSubscription: [], _disabledChange: [], _selectedChanged: [], _scrollStrategy: [], startAt: [{\n            type: Input\n        }], startAt: [], _startAt: [], color: [{\n            type: Input\n        }], color: [], _color: [], touchUi: [{\n            type: Input\n        }], touchUi: [], disabled: [{\n            type: Input\n        }], disabled: [], _disabled: [], opened: [{\n            type: Input\n        }], opened: [], _selected: [], _selected: [], _minDate: [], _maxDate: [], _dateFilter: [], ngOnDestroy: [], _popupComponentRef: [], select: [], _selectYear: [], _selectMonth: [], _registerInput: [], _datepickerInput: [], open: [], close: [], _dialogRef: [], _openAsDialog: [], _openAsPopup: [], _calendarPortal: [], _createPopup: [], _popupRef: [], _createPopupPositionStrategy: [], _getValidDateOrNull: [], _setColor: [], calendarHeaderComponent: [{\n            type: Input\n        }], panelClass: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }] });\n/** @nocollapse */\nMatDatepicker.ctorParameters = () => [\n    { type: MatDialog },\n    { type: Overlay },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATEPICKER_SCROLL_STRATEGY,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatDatepicker.propDecorators = {\n    calendarHeaderComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    color: [{ type: Input }],\n    touchUi: [{ type: Input }],\n    disabled: [{ type: Input }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    panelClass: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    openedStream: [{ type: Output, args: ['opened',] }],\n    closedStream: [{ type: Output, args: ['closed',] }],\n    opened: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatDatepickerInput)),\n    multi: true\n};\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatDatepickerInput)),\n    multi: true\n};\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n * @template D\n */\nclass MatDatepickerInputEvent {\n    /**\n     * @param {?} target\n     * @param {?} targetElement\n     */\n    constructor(target, targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n}\n/**\n * Directive used to connect an input to a MatDatepicker.\n * @template D\n */\nclass MatDatepickerInput {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} _formField\n     */\n    constructor(_elementRef, _dateAdapter, _dateFormats, _formField) {\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._formField = _formField;\n        /**\n         * Emits when a `change` event is fired on this `<input>`.\n         */\n        this.dateChange = new EventEmitter();\n        /**\n         * Emits when an `input` event is fired on this `<input>`.\n         */\n        this.dateInput = new EventEmitter();\n        /**\n         * Emits when the value changes (either due to user input or programmatic change).\n         */\n        this._valueChange = new EventEmitter();\n        /**\n         * Emits when the disabled state has changed\n         */\n        this._disabledChange = new EventEmitter();\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._cvaOnChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._validatorOnChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._datepickerSubscription = Subscription.EMPTY;\n        this._localeSubscription = Subscription.EMPTY;\n        /**\n         * The form control validator for whether the input parses.\n         */\n        this._parseValidator = (/**\n         * @return {?}\n         */\n        () => {\n            return this._lastValueValid ?\n                null : { 'matDatepickerParse': { 'text': this._elementRef.nativeElement.value } };\n        });\n        /**\n         * The form control validator for the min date.\n         */\n        this._minValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return (!this.min || !controlValue ||\n                this._dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n                null : { 'matDatepickerMin': { 'min': this.min, 'actual': controlValue } };\n        });\n        /**\n         * The form control validator for the max date.\n         */\n        this._maxValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return (!this.max || !controlValue ||\n                this._dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n                null : { 'matDatepickerMax': { 'max': this.max, 'actual': controlValue } };\n        });\n        /**\n         * The form control validator for the date filter.\n         */\n        this._filterValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return !this._dateFilter || !controlValue || this._dateFilter(controlValue) ?\n                null : { 'matDatepickerFilter': true };\n        });\n        /**\n         * The combined form control validator for this input.\n         */\n        this._validator = Validators.compose([this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\n        /**\n         * Whether the last value set on the input was valid.\n         */\n        this._lastValueValid = false;\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.value = this.value;\n        }));\n    }\n    /**\n     * The datepicker that this input is associated with.\n     * @param {?} value\n     * @return {?}\n     */\n    set matDatepicker(value) {\n        if (!value) {\n            return;\n        }\n        this._datepicker = value;\n        this._datepicker._registerInput(this);\n        this._datepickerSubscription.unsubscribe();\n        this._datepickerSubscription = this._datepicker._selectedChanged.subscribe((/**\n         * @param {?} selected\n         * @return {?}\n         */\n        (selected) => {\n            this.value = selected;\n            this._cvaOnChange(selected);\n            this._onTouched();\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n            this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }));\n    }\n    /**\n     * Function that can be used to filter out dates within the datepicker.\n     * @param {?} value\n     * @return {?}\n     */\n    set matDatepickerFilter(value) {\n        this._dateFilter = value;\n        this._validatorOnChange();\n    }\n    /**\n     * The value of the input.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        value = this._dateAdapter.deserialize(value);\n        this._lastValueValid = !value || this._dateAdapter.isValid(value);\n        value = this._getValidDateOrNull(value);\n        /** @type {?} */\n        const oldDate = this.value;\n        this._value = value;\n        this._formatValue(value);\n        if (!this._dateAdapter.sameDate(oldDate, value)) {\n            this._valueChange.emit(value);\n        }\n    }\n    /**\n     * The minimum valid date.\n     * @return {?}\n     */\n    get min() { return this._min; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set min(value) {\n        this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    /**\n     * The maximum valid date.\n     * @return {?}\n     */\n    get max() { return this._max; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set max(value) {\n        this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    /**\n     * Whether the datepicker-input is disabled.\n     * @return {?}\n     */\n    get disabled() { return !!this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this._disabledChange.emit(newValue);\n        }\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        if (newValue && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._datepickerSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this._valueChange.complete();\n        this._disabledChange.complete();\n    }\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return this._validator ? this._validator(c) : null;\n    }\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\n     * @return {?}\n     */\n    getPopupConnectionElementRef() {\n        return this.getConnectedOverlayOrigin();\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return {?} The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._cvaOnChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        /** @type {?} */\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n        if (this._datepicker && isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n            this._datepicker.open();\n            event.preventDefault();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    _onInput(value) {\n        /** @type {?} */\n        let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n        this._lastValueValid = !date || this._dateAdapter.isValid(date);\n        date = this._getValidDateOrNull(date);\n        if (!this._dateAdapter.sameDate(date, this._value)) {\n            this._value = date;\n            this._cvaOnChange(date);\n            this._valueChange.emit(date);\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n        else {\n            this._validatorOnChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onChange() {\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /**\n     * Returns the palette used by the input's form field, if any.\n     * @return {?}\n     */\n    _getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /**\n     * Handles blur events on the input.\n     * @return {?}\n     */\n    _onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this._formatValue(this.value);\n        }\n        this._onTouched();\n    }\n    /**\n     * Formats a value and sets it on the input element.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _formatValue(value) {\n        this._elementRef.nativeElement.value =\n            value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\nMatDatepickerInput.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerInput, selectors: [[\"input\", \"matDatepicker\", \"\"]], factory: function MatDatepickerInput_Factory(t) { return new (t || MatDatepickerInput)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(MatFormField, 8)); }, hostBindings: function MatDatepickerInput_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(4);\n        ɵngcc0.ɵɵlistener(\"input\", function MatDatepickerInput_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); });\n        ɵngcc0.ɵɵlistener(\"change\", function MatDatepickerInput_change_HostBindingHandler($event) { return ctx._onChange(); });\n        ɵngcc0.ɵɵlistener(\"blur\", function MatDatepickerInput_blur_HostBindingHandler($event) { return ctx._onBlur(); });\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatDatepickerInput_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); });\n        ɵngcc0.ɵɵelementHostAttrs(_c39);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"aria-owns\", (ctx._datepicker == null ? null : ctx._datepicker.opened) && ctx._datepicker.id || null)(\"min\", ctx.min ? ctx._dateAdapter.toIso8601(ctx.min) : null)(\"max\", ctx.max ? ctx._dateAdapter.toIso8601(ctx.max) : null);\n    } }, inputs: { value: \"value\", matDatepicker: \"matDatepicker\", matDatepickerFilter: \"matDatepickerFilter\", min: \"min\", max: \"max\", disabled: \"disabled\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, exportAs: [\"matDatepickerInput\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_DATEPICKER_VALUE_ACCESSOR,\n            MAT_DATEPICKER_VALIDATORS,\n            { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n        ])] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatDatepickerInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matDatepicker]',\n                providers: [\n                    MAT_DATEPICKER_VALUE_ACCESSOR,\n                    MAT_DATEPICKER_VALIDATORS,\n                    { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n                ],\n                host: {\n                    'aria-haspopup': 'dialog',\n                    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n                    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n                    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)'\n                },\n                exportAs: 'matDatepickerInput'\n            }]\n    }], function () { return [{ type: ElementRef }, { type: DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: MatFormField, decorators: [{\n                type: Optional\n            }] }]; }, { constructor: [], _elementRef: [], _dateAdapter: [], _dateFormats: [], _formField: [], dateChange: [{\n            type: Output\n        }], dateInput: [{\n            type: Output\n        }], _valueChange: [], _disabledChange: [], _onTouched: [], _cvaOnChange: [], _validatorOnChange: [], _datepickerSubscription: [], _localeSubscription: [], _parseValidator: [], _minValidator: [], _maxValidator: [], _filterValidator: [], _validator: [], _lastValueValid: [], value: [{\n            type: Input\n        }], value: [], matDatepicker: [{\n            type: Input\n        }], _datepicker: [], matDatepickerFilter: [{\n            type: Input\n        }], _dateFilter: [], _value: [], min: [{\n            type: Input\n        }], min: [], _min: [], max: [{\n            type: Input\n        }], max: [], _max: [], disabled: [{\n            type: Input\n        }], disabled: [], _disabled: [], ngOnDestroy: [], registerOnValidatorChange: [], validate: [], getPopupConnectionElementRef: [], getConnectedOverlayOrigin: [], writeValue: [], registerOnChange: [], registerOnTouched: [], setDisabledState: [], _onKeydown: [], _onInput: [], _onChange: [], _getThemePalette: [], _onBlur: [], _formatValue: [], _getValidDateOrNull: [] });\n/** @nocollapse */\nMatDatepickerInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: MatFormField, decorators: [{ type: Optional }] }\n];\nMatDatepickerInput.propDecorators = {\n    matDatepicker: [{ type: Input }],\n    matDatepickerFilter: [{ type: Input }],\n    value: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    disabled: [{ type: Input }],\n    dateChange: [{ type: Output }],\n    dateInput: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Can be used to override the icon of a `matDatepickerToggle`.\n */\nclass MatDatepickerToggleIcon {\n}\nMatDatepickerToggleIcon.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerToggleIcon, selectors: [[\"\", \"matDatepickerToggleIcon\", \"\"]], factory: function MatDatepickerToggleIcon_Factory(t) { return new (t || MatDatepickerToggleIcon)(); } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatDatepickerToggleIcon, [{\n        type: Directive,\n        args: [{\n                selector: '[matDatepickerToggleIcon]'\n            }]\n    }], null, null);\n/**\n * @template D\n */\nclass MatDatepickerToggle {\n    /**\n     * @param {?} _intl\n     * @param {?} _changeDetectorRef\n     * @param {?} defaultTabIndex\n     */\n    constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._stateChanges = Subscription.EMPTY;\n        /** @type {?} */\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n    /**\n     * Whether the toggle button is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        if (this._disabled === undefined && this.datepicker) {\n            return this.datepicker.disabled;\n        }\n        return !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['datepicker']) {\n            this._watchStateChanges();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.unsubscribe();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._watchStateChanges();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _open(event) {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _watchStateChanges() {\n        /** @type {?} */\n        const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : of();\n        /** @type {?} */\n        const inputDisabled = this.datepicker && this.datepicker._datepickerInput ?\n            this.datepicker._datepickerInput._disabledChange : of();\n        /** @type {?} */\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            of();\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerDisabled, inputDisabled, datepickerToggled).subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n}\nMatDatepickerToggle.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerToggle, selectors: [[\"mat-datepicker-toggle\"]], factory: function MatDatepickerToggle_Factory(t) { return new (t || MatDatepickerToggle)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex')); }, contentQueries: function MatDatepickerToggle_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDatepickerToggleIcon, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n    } }, viewQuery: function MatDatepickerToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c40, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._button = _t.first);\n    } }, hostBindings: function MatDatepickerToggle_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(4);\n        ɵngcc0.ɵɵlistener(\"focus\", function MatDatepickerToggle_focus_HostBindingHandler($event) { return ctx._button.focus(); });\n        ɵngcc0.ɵɵelementHostAttrs(_c41);\n        ɵngcc0.ɵɵstyling();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", 0 - 1);\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-toggle-active\", ctx.datepicker && ctx.datepicker.opened);\n        ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx.datepicker && ctx.datepicker.color === \"accent\");\n        ɵngcc0.ɵɵclassProp(\"mat-warn\", ctx.datepicker && ctx.datepicker.color === \"warn\");\n        ɵngcc0.ɵɵstylingApply();\n    } }, inputs: { tabIndex: \"tabIndex\", disabled: \"disabled\", datepicker: [\"for\", \"datepicker\"], disableRipple: \"disableRipple\" }, exportAs: [\"matDatepickerToggle\"], features: [ɵngcc0.ɵɵNgOnChangesFeature()], ngContentSelectors: _c48, consts: 4, vars: 5, template: function MatDatepickerToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c47);\n        ɵngcc0.ɵɵelementStart(0, \"button\", _c42, _c43);\n        ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerToggle_Template_button_click_0_listener($event) { return ctx._open($event); });\n        ɵngcc0.ɵɵtemplate(2, MatDatepickerToggle__svg_svg_2_Template, 2, 0, \"svg\", _c44);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"disableRipple\", ctx.disableRipple);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.openCalendarLabel)(\"tabindex\", ctx.disabled ? 0 - 1 : ctx.tabIndex);\n        ɵngcc0.ɵɵselect(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._customIcon);\n    } }, directives: [ɵngcc2.MatButton, ɵngcc1.NgIf], styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatDatepickerToggle, [{\n        type: Component,\n        args: [{ selector: 'mat-datepicker-toggle',\n                template: \"<button #button mat-icon-button type=\\\"button\\\" aria-haspopup=\\\"dialog\\\" [attr.aria-label]=\\\"_intl.openCalendarLabel\\\" [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\" [disabled]=\\\"disabled\\\" [disableRipple]=\\\"disableRipple\\\" (click)=\\\"_open($event)\\\"><svg *ngIf=\\\"!_customIcon\\\" class=\\\"mat-datepicker-toggle-default-icon\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" fill=\\\"currentColor\\\" focusable=\\\"false\\\"><path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/></svg><ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content></button>\",\n                styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\"],\n                host: {\n                    'class': 'mat-datepicker-toggle',\n                    // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n                    // consumer may have provided, while still being able to receive focus.\n                    '[attr.tabindex]': '-1',\n                    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n                    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n                    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n                    '(focus)': '_button.focus()'\n                },\n                exportAs: 'matDatepickerToggle',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { constructor: [], _intl: [], _changeDetectorRef: [], _stateChanges: [], tabIndex: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], disabled: [], _disabled: [], ngOnChanges: [], ngOnDestroy: [], ngAfterContentInit: [], _open: [], _watchStateChanges: [], datepicker: [{\n            type: Input,\n            args: ['for']\n        }], disableRipple: [{\n            type: Input\n        }], _customIcon: [{\n            type: ContentChild,\n            args: [MatDatepickerToggleIcon, { static: false }]\n        }], _button: [{\n            type: ViewChild,\n            args: ['button', { static: false }]\n        }] });\n/** @nocollapse */\nMatDatepickerToggle.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatDatepickerToggle.propDecorators = {\n    datepicker: [{ type: Input, args: ['for',] }],\n    tabIndex: [{ type: Input }],\n    disabled: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    _customIcon: [{ type: ContentChild, args: [MatDatepickerToggleIcon, { static: false },] }],\n    _button: [{ type: ViewChild, args: ['button', { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDatepickerModule {\n}\nMatDatepickerModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: MatDatepickerModule });\nMatDatepickerModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function MatDatepickerModule_Factory(t) { return new (t || MatDatepickerModule)(); }, providers: [\n        MatDatepickerIntl,\n        MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n    ], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatDialogModule,\n            OverlayModule,\n            A11yModule,\n            PortalModule,\n        ]] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(MatDatepickerModule, { declarations: function () { return [MatCalendar,\n        MatCalendarBody,\n        MatDatepicker,\n        MatDatepickerContent,\n        MatDatepickerInput,\n        MatDatepickerToggle,\n        MatDatepickerToggleIcon,\n        MatMonthView,\n        MatYearView,\n        MatMultiYearView,\n        MatCalendarHeader]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatDialogModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule]; }, exports: function () { return [MatCalendar,\n        MatCalendarBody,\n        MatDatepicker,\n        MatDatepickerContent,\n        MatDatepickerInput,\n        MatDatepickerToggle,\n        MatDatepickerToggleIcon,\n        MatMonthView,\n        MatYearView,\n        MatMultiYearView,\n        MatCalendarHeader]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatDatepickerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatDialogModule,\n                    OverlayModule,\n                    A11yModule,\n                    PortalModule,\n                ],\n                exports: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                ],\n                declarations: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                ],\n                providers: [\n                    MatDatepickerIntl,\n                    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n                ],\n                entryComponents: [\n                    MatDatepickerContent,\n                    MatCalendarHeader,\n                ]\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatMultiYearView, yearsPerPage, yearsPerRow, MatDatepickerModule, MatCalendarHeader, MatCalendar, MatCalendarCell, MatCalendarBody, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MatDatepickerContent, MatDatepicker, matDatepickerAnimations, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, MatDatepickerInputEvent, MatDatepickerInput, MatDatepickerIntl, MatDatepickerToggleIcon, MatDatepickerToggle, MatMonthView, MatYearView };\n\n//# sourceMappingURL=datepicker.js.map","export const MASK_FLAGS = ['C', '&', 'a', 'A', '?', 'L', '9', '0', '#'];\n\nexport const KEYS = {\n  Ctrl: 17,\n  Z: 90,\n  Y: 89,\n  X: 88,\n  BACKSPACE: 8,\n  DELETE: 46,\n};\n\nexport class MaskHelper {\n  private cursorPrivate;\n  public get cursor() {\n    return this.cursorPrivate;\n  }\n  public data: boolean;\n\n  public parseValueByMask(value, maskOptions, cursor): string {\n    let inputValue: string = value;\n    const mask: string = maskOptions.format;\n    const literals: Map<number, string> = this.getMaskLiterals(mask);\n    const literalKeys: number[] = Array.from(literals.keys());\n    const nonLiteralIndeces: number[] = this.getNonLiteralIndeces(mask, literalKeys);\n\n    if (inputValue.length < mask.length) {\n      // BACKSPACE, DELETE\n      if (inputValue === '' && cursor === -1) {\n        this.cursorPrivate = 0;\n        return this.parseValueByMaskOnInit(value, maskOptions);\n      } // workaround for IE 'x' button\n\n      if (nonLiteralIndeces.indexOf(cursor + 1) !== -1) {\n        inputValue = this.insertCharAt(inputValue, cursor + 1, maskOptions.promptChar);\n        this.cursorPrivate = cursor + 1;\n      } else {\n        inputValue = this.insertCharAt(inputValue, cursor + 1, mask[cursor + 1]);\n        this.cursorPrivate = cursor + 1;\n        for (let i = this.cursorPrivate; i < 0; i--) {\n          if (literalKeys.indexOf(this.cursorPrivate) !== -1) {\n            this.cursorPrivate--;\n          } else {\n            break;\n          }\n        }\n      }\n    } else {\n      const char = inputValue[cursor];\n      let isCharValid = this.validateCharOnPostion(char, cursor, mask);\n      if (nonLiteralIndeces.indexOf(cursor) !== -1) {\n        inputValue = this.replaceCharAt(inputValue, cursor, '');\n        if (isCharValid) {\n          inputValue = this.replaceCharAt(inputValue, cursor, char);\n          this.cursorPrivate = cursor + 1;\n        } else {\n          this.cursorPrivate = cursor;\n        }\n      } else {\n        inputValue = this.replaceCharAt(inputValue, cursor, '');\n        this.cursorPrivate = ++cursor;\n        for (let i = cursor; i < mask.length; i++) {\n          if (literalKeys.indexOf(this.cursorPrivate) !== -1) {\n            this.cursorPrivate = ++cursor;\n          } else {\n            isCharValid = this.validateCharOnPostion(char, cursor, mask);\n            if (isCharValid) {\n              inputValue = this.replaceCharAt(inputValue, cursor, char);\n              this.cursorPrivate = ++cursor;\n              break;\n            } else {\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    return inputValue;\n  }\n\n  public parseMask(maskOptions): string {\n    let outputVal = '';\n    const mask: string = maskOptions.format;\n    const literals: Map<number, string> = this.getMaskLiterals(mask);\n\n    for (const maskSym of mask) {\n      outputVal += maskOptions.promptChar;\n    }\n\n    literals.forEach((val: string, key: number) => {\n      outputVal = this.replaceCharAt(outputVal, key, val);\n    });\n\n    return outputVal;\n  }\n\n  public parseValueByMaskOnInit(inputVal, maskOptions): string {\n    let outputVal = '';\n    let value = '';\n    const mask: string = maskOptions.format;\n    const literals: Map<number, string> = this.getMaskLiterals(mask);\n    const literalKeys: number[] = Array.from(literals.keys());\n    const nonLiteralIndeces: number[] = this.getNonLiteralIndeces(mask, literalKeys);\n    const literalValues: string[] = Array.from(literals.values());\n\n    if (inputVal != null) {\n      value = inputVal.toString();\n    }\n\n    for (const maskSym of mask) {\n      outputVal += maskOptions.promptChar;\n    }\n\n    literals.forEach((val: string, key: number) => {\n      outputVal = this.replaceCharAt(outputVal, key, val);\n    });\n\n    if (!value) {\n      return outputVal;\n    }\n\n    const nonLiteralValues: string[] = this.getNonLiteralValues(value, literalValues);\n\n    for (let i = 0; i < nonLiteralValues.length; i++) {\n      const char = nonLiteralValues[i];\n      const isCharValid = this.validateCharOnPostion(char, nonLiteralIndeces[i], mask);\n\n      if (!isCharValid && char !== maskOptions.promptChar) {\n        nonLiteralValues[i] = maskOptions.promptChar;\n      }\n    }\n\n    if (nonLiteralValues.length > nonLiteralIndeces.length) {\n      nonLiteralValues.splice(nonLiteralIndeces.length);\n    }\n\n    let pos = 0;\n    for (const nonLiteralValue of nonLiteralValues) {\n      const char = nonLiteralValue;\n      outputVal = this.replaceCharAt(outputVal, nonLiteralIndeces[pos++], char);\n    }\n\n    return outputVal;\n  }\n\n  public restoreValueFromMask(value, maskOptions): string {\n    let outputVal = '';\n    const mask: string = maskOptions.format;\n    const literals: Map<number, string> = this.getMaskLiterals(mask);\n    const literalValues: string[] = Array.from(literals.values());\n\n    for (const val of value) {\n      if (literalValues.indexOf(val) === -1) {\n        if (val !== maskOptions.promptChar) {\n          outputVal += val;\n        }\n      }\n    }\n\n    return outputVal;\n  }\n\n  public parseValueByMaskUponSelection(value, maskOptions, cursor, selection): string {\n    let isCharValid: boolean;\n    let inputValue: string = value;\n    const char: string = inputValue[cursor];\n    const mask: string = maskOptions.format;\n    const literals: Map<number, string> = this.getMaskLiterals(mask);\n    const literalKeys: number[] = Array.from(literals.keys());\n    const nonLiteralIndeces: number[] = this.getNonLiteralIndeces(mask, literalKeys);\n\n    if (!this.data) {\n      this.cursorPrivate = cursor < 0 ? ++cursor : cursor;\n      if (nonLiteralIndeces.indexOf(this.cursorPrivate) !== -1) {\n        isCharValid = this.validateCharOnPostion(char, this.cursorPrivate, mask);\n        inputValue = isCharValid\n          ? this.replaceCharAt(inputValue, this.cursorPrivate++, char)\n          : (inputValue = this.replaceCharAt(inputValue, this.cursorPrivate++, maskOptions.promptChar));\n        selection--;\n        if (selection > 0) {\n          for (let i = 0; i < selection; i++) {\n            cursor++;\n            inputValue =\n              nonLiteralIndeces.indexOf(cursor) !== -1\n                ? this.insertCharAt(inputValue, cursor, maskOptions.promptChar)\n                : this.insertCharAt(inputValue, cursor, mask[cursor]);\n          }\n        }\n      } else {\n        inputValue = this.replaceCharAt(inputValue, this.cursorPrivate, mask[this.cursorPrivate]);\n        this.cursorPrivate++;\n        selection--;\n        let isMarked = false;\n        if (selection > 0) {\n          cursor = this.cursorPrivate;\n          for (let i = 0; i < selection; i++) {\n            if (nonLiteralIndeces.indexOf(cursor) !== -1) {\n              isCharValid = this.validateCharOnPostion(char, cursor, mask);\n              if (isCharValid && !isMarked) {\n                inputValue = this.insertCharAt(inputValue, cursor, char);\n                cursor++;\n                this.cursorPrivate++;\n                isMarked = true;\n              } else {\n                inputValue = this.insertCharAt(inputValue, cursor, maskOptions.promptChar);\n                cursor++;\n              }\n            } else {\n              inputValue = this.insertCharAt(inputValue, cursor, mask[cursor]);\n              if (cursor === this.cursorPrivate) {\n                this.cursorPrivate++;\n              }\n              cursor++;\n            }\n          }\n        }\n      }\n    } else {\n      if (inputValue === '' && cursor === -1) {\n        this.cursorPrivate = 0;\n        return this.parseValueByMaskOnInit(value, maskOptions);\n      } // workaround for IE 'x' button\n\n      if (this.cursorPrivate < 0) {\n        this.cursorPrivate++;\n        cursor++;\n      }\n      cursor++;\n      this.cursorPrivate = cursor;\n      for (let i = 0; i < selection; i++) {\n        if (nonLiteralIndeces.indexOf(cursor) !== -1) {\n          inputValue = this.insertCharAt(inputValue, cursor, maskOptions.promptChar);\n          cursor++;\n        } else {\n          inputValue = this.insertCharAt(inputValue, cursor, mask[cursor]);\n          cursor++;\n        }\n      }\n    }\n\n    return inputValue;\n  }\n\n  public parseValueByMaskUponCopyPaste(value, maskOptions, cursor, clipboardData, selection): string {\n    let inputValue: string = value;\n    const mask: string = maskOptions.format;\n    const literals: Map<number, string> = this.getMaskLiterals(mask);\n    const literalKeys: number[] = Array.from(literals.keys());\n    const nonLiteralIndeces: number[] = this.getNonLiteralIndeces(mask, literalKeys);\n\n    const selectionEnd = cursor + selection;\n\n    this.cursorPrivate = cursor;\n    for (const clipboardSym of clipboardData) {\n      const char = clipboardSym;\n\n      if (this.cursorPrivate > mask.length) {\n        return inputValue;\n      }\n\n      if (nonLiteralIndeces.indexOf(this.cursorPrivate) !== -1) {\n        const isCharValid = this.validateCharOnPostion(char, this.cursorPrivate, mask);\n        if (isCharValid) {\n          inputValue = this.replaceCharAt(inputValue, this.cursorPrivate++, char);\n        }\n      } else {\n        for (let i = cursor; i < mask.length; i++) {\n          if (literalKeys.indexOf(this.cursorPrivate) !== -1) {\n            this.cursorPrivate++;\n          } else {\n            const isCharValid = this.validateCharOnPostion(char, this.cursorPrivate, mask);\n            if (isCharValid) {\n              inputValue = this.replaceCharAt(inputValue, this.cursorPrivate++, char);\n            }\n            break;\n          }\n        }\n      }\n\n      selection--;\n    }\n\n    if (selection > 0) {\n      for (let i = this.cursorPrivate; i < selectionEnd; i++) {\n        if (literalKeys.indexOf(this.cursorPrivate) !== -1) {\n          this.cursorPrivate++;\n        } else {\n          inputValue = this.replaceCharAt(inputValue, this.cursorPrivate++, maskOptions.promptChar);\n        }\n      }\n    }\n\n    return inputValue;\n  }\n\n  private validateCharOnPostion(inputChar: string, position: number, mask: string): boolean {\n    let regex: RegExp;\n    let isValid: boolean;\n    const letterOrDigitRegEx = '[\\\\d\\\\u00C0-\\\\u1FFF\\\\u2C00-\\\\uD7FFa-zA-Z]';\n    const letterDigitOrSpaceRegEx = '[\\\\d\\\\u00C0-\\\\u1FFF\\\\u2C00-\\\\uD7FFa-zA-Z\\\\u0020]';\n    const letterRegEx = '[\\\\u00C0-\\\\u1FFF\\\\u2C00-\\\\uD7FFa-zA-Z]';\n    const letteSpaceRegEx = '[\\\\u00C0-\\\\u1FFF\\\\u2C00-\\\\uD7FFa-zA-Z\\\\u0020]';\n    const digitRegEx = '[\\\\d]';\n    const digitSpaceRegEx = '[\\\\d\\\\u0020]';\n    const digitSpecialRegEx = '[\\\\d-\\\\+]';\n\n    switch (mask.charAt(position)) {\n      case 'C':\n        isValid = inputChar !== '';\n        break;\n      case '&':\n        regex = new RegExp('[\\\\u0020]');\n        isValid = !regex.test(inputChar);\n        break;\n      case 'a':\n        regex = new RegExp(letterDigitOrSpaceRegEx);\n        isValid = regex.test(inputChar);\n        break;\n      case 'A':\n        regex = new RegExp(letterOrDigitRegEx);\n        isValid = regex.test(inputChar);\n        break;\n      case '?':\n        regex = new RegExp(letteSpaceRegEx);\n        isValid = regex.test(inputChar);\n        break;\n      case 'L':\n        regex = new RegExp(letterRegEx);\n        isValid = regex.test(inputChar);\n        break;\n      case '0':\n        regex = new RegExp(digitRegEx);\n        isValid = regex.test(inputChar);\n        break;\n      case '9':\n        regex = new RegExp(digitSpaceRegEx);\n        isValid = regex.test(inputChar);\n        break;\n      case '#':\n        regex = new RegExp(digitSpecialRegEx);\n        isValid = regex.test(inputChar);\n        break;\n      default: {\n        isValid = null;\n      }\n    }\n\n    return isValid;\n  }\n  private replaceCharAt(strValue: string, index: number, char: string): string {\n    if (strValue !== undefined) {\n      return strValue.substring(0, index) + char + strValue.substring(index + 1);\n    }\n  }\n  private insertCharAt(strValue: string, index: number, char: string): string {\n    if (strValue !== undefined) {\n      return strValue.substring(0, index) + char + strValue.substring(index);\n    }\n  }\n  private getMaskLiterals(mask: string): Map<number, string> {\n    const literals = new Map<number, string>();\n\n    for (let i = 0; i < mask.length; i++) {\n      const char = mask.charAt(i);\n      if (MASK_FLAGS.indexOf(char) === -1) {\n        literals.set(i, char);\n      }\n    }\n\n    return literals;\n  }\n  private getNonLiteralIndeces(mask: string, literalKeys: number[]): number[] {\n    const nonLiteralsIndeces: number[] = new Array();\n\n    for (let i = 0; i < mask.length; i++) {\n      if (literalKeys.indexOf(i) === -1) {\n        nonLiteralsIndeces.push(i);\n      }\n    }\n\n    return nonLiteralsIndeces;\n  }\n  private getNonLiteralValues(value: string, literalValues: string[]): string[] {\n    const nonLiteralValues: string[] = new Array();\n\n    for (const val of value) {\n      if (literalValues.indexOf(val) === -1) {\n        nonLiteralValues.push(val);\n      }\n    }\n\n    return nonLiteralValues;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  NgModule,\n  OnInit,\n  Output,\n  PipeTransform,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { KEYS, MaskHelper } from './mask-helper';\n\nexport function isIE(): boolean {\n  return navigator.appVersion.indexOf('Trident/') > 0;\n}\n\nconst noop = () => {};\n\n@Directive({\n  providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: MaskDirective, multi: true }],\n  selector: '[ngxMask]',\n})\nexport class MaskDirective implements OnInit, ControlValueAccessor {\n  @Input('ngxMask') public mask: string;\n  @Input() public promptChar: string;\n  @Input() public includeLiterals: boolean;\n  @Input() public placeholder: string;\n  @Input() public displayValuePipe: PipeTransform;\n  @Input() public focusedValuePipe: PipeTransform;\n  @Input() private dataValue: string;\n  @Output() public valueChange = new EventEmitter<IMaskEventArgs>();\n  private get value() {\n    return this.nativeElement.value;\n  }\n  private set value(val) {\n    this.nativeElement.value = val;\n  }\n  private get nativeElement() {\n    return this.elementRef.nativeElement;\n  }\n\n  private get selectionStart() {\n    return this.nativeElement.selectionStart;\n  }\n\n  private get selectionEnd() {\n    return this.nativeElement.selectionEnd;\n  }\n\n  private ctrlDown: boolean;\n\n  private paste: boolean;\n\n  private selection: number;\n\n  private maskOptions = {\n    format: '',\n    promptChar: '',\n  };\n\n  private key;\n\n  private cursorOnPaste;\n\n  private valOnPaste;\n\n  private stopPropagation: boolean;\n\n  private maskHelper: MaskHelper;\n\n  private onTouchedCallback: () => void = noop;\n\n  private onChangeCallback: (_: any) => void = noop;\n\n  constructor(private elementRef: ElementRef) {\n    this.maskHelper = new MaskHelper();\n  }\n\n  public ngOnInit(): void {\n    if (this.promptChar && this.promptChar.length > 1) {\n      this.maskOptions.promptChar = this.promptChar = this.promptChar.substring(0, 1);\n    }\n\n    this.maskOptions.format = this.mask ? this.mask : 'CCCCCCCCCC';\n    this.maskOptions.promptChar = this.promptChar ? this.promptChar : '_';\n    this.nativeElement.setAttribute('placeholder', this.placeholder ? this.placeholder : this.maskOptions.format);\n  }\n\n  @HostListener('keydown', ['$event'])\n  public onKeydown(event): void {\n    const key = event.keyCode || event.charCode;\n\n    if (isIE() && this.stopPropagation) {\n      this.stopPropagation = false;\n    }\n\n    if (key === KEYS.Ctrl) {\n      this.ctrlDown = true;\n    }\n\n    if ((this.ctrlDown && key === KEYS.Z) || (this.ctrlDown && key === KEYS.Y)) {\n      event.preventDefault();\n    }\n\n    this.key = key;\n    this.selection = Math.abs(this.selectionEnd - this.selectionStart);\n  }\n\n  @HostListener('keyup', ['$event'])\n  public onKeyup(event): void {\n    const key = event.keyCode || event.charCode;\n\n    if (key === KEYS.Ctrl) {\n      this.ctrlDown = false;\n    }\n  }\n\n  @HostListener('paste', ['$event'])\n  public onPaste(event): void {\n    this.paste = true;\n\n    this.valOnPaste = this.value;\n    this.cursorOnPaste = this.getCursorPosition();\n  }\n\n  @HostListener('input', ['$event'])\n  public onInputChanged(event): void {\n    if (isIE() && this.stopPropagation) {\n      this.stopPropagation = false;\n      return;\n    }\n\n    if (this.paste) {\n      this.paste = false;\n\n      const clipboardData = this.value.substring(this.cursorOnPaste, this.getCursorPosition());\n      this.value = this.maskHelper.parseValueByMaskUponCopyPaste(\n        this.valOnPaste,\n        this.maskOptions,\n        this.cursorOnPaste,\n        clipboardData,\n        this.selection,\n      );\n\n      this.setCursorPosition(this.maskHelper.cursor);\n    } else {\n      const currentCursorPos = this.getCursorPosition();\n\n      this.maskHelper.data = this.key === KEYS.BACKSPACE || this.key === KEYS.DELETE;\n\n      this.value =\n        this.selection && this.selection !== 0\n          ? this.maskHelper.parseValueByMaskUponSelection(\n              this.value,\n              this.maskOptions,\n              currentCursorPos - 1,\n              this.selection,\n            )\n          : this.maskHelper.parseValueByMask(this.value, this.maskOptions, currentCursorPos - 1);\n\n      this.setCursorPosition(this.maskHelper.cursor);\n    }\n\n    const rawVal = this.maskHelper.restoreValueFromMask(this.value, this.maskOptions);\n\n    this.dataValue = this.includeLiterals ? this.value : rawVal;\n    this.onChangeCallback(this.dataValue);\n\n    this.valueChange.emit({ rawValue: rawVal, formattedValue: this.value });\n  }\n\n  @HostListener('focus', ['$event.target.value'])\n  public onFocus(value) {\n    if (this.focusedValuePipe) {\n      if (isIE()) {\n        this.stopPropagation = true;\n      }\n      this.value = this.focusedValuePipe.transform(value);\n    } else {\n      this.value = this.maskHelper.parseValueByMaskOnInit(this.value, this.maskOptions);\n    }\n  }\n\n  @HostListener('blur', ['$event.target.value'])\n  public onBlur(value) {\n    if (this.displayValuePipe) {\n      this.value = this.displayValuePipe.transform(value);\n    } else if (value === this.maskHelper.parseMask(this.maskOptions)) {\n      this.value = '';\n    }\n  }\n\n  private getCursorPosition(): number {\n    return this.nativeElement.selectionStart;\n  }\n\n  private setCursorPosition(start: number, end: number = start): void {\n    this.nativeElement.setSelectionRange(start, end);\n  }\n\n  public writeValue(value) {\n    if (this.promptChar && this.promptChar.length > 1) {\n      this.maskOptions.promptChar = this.promptChar.substring(0, 1);\n    }\n\n    this.value = value ? this.maskHelper.parseValueByMaskOnInit(value, this.maskOptions) : '';\n    if (this.displayValuePipe) {\n      this.value = this.displayValuePipe.transform(this.value);\n    }\n\n    this.dataValue = this.includeLiterals ? this.value : value;\n    this.onChangeCallback(this.dataValue);\n\n    this.valueChange.emit({ rawValue: value, formattedValue: this.value });\n  }\n\n  public registerOnChange(fn: (_: any) => void) {\n    this.onChangeCallback = fn;\n  }\n\n  public registerOnTouched(fn: () => void) {\n    this.onTouchedCallback = fn;\n  }\n}\n\nexport interface IMaskEventArgs {\n  rawValue: string;\n  formattedValue: string;\n}\n","import { Directive, ElementRef, EventEmitter, HostListener, Input, Output, } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { KEYS, MaskHelper } from './mask-helper';\nimport * as i0 from \"@angular/core\";\nexport function isIE() {\n    return navigator.appVersion.indexOf('Trident/') > 0;\n}\nconst noop = () => { };\nexport class MaskDirective {\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        this.valueChange = new EventEmitter();\n        this.maskOptions = {\n            format: '',\n            promptChar: '',\n        };\n        this.onTouchedCallback = noop;\n        this.onChangeCallback = noop;\n        this.maskHelper = new MaskHelper();\n    }\n    get value() {\n        return this.nativeElement.value;\n    }\n    set value(val) {\n        this.nativeElement.value = val;\n    }\n    get nativeElement() {\n        return this.elementRef.nativeElement;\n    }\n    get selectionStart() {\n        return this.nativeElement.selectionStart;\n    }\n    get selectionEnd() {\n        return this.nativeElement.selectionEnd;\n    }\n    ngOnInit() {\n        if (this.promptChar && this.promptChar.length > 1) {\n            this.maskOptions.promptChar = this.promptChar = this.promptChar.substring(0, 1);\n        }\n        this.maskOptions.format = this.mask ? this.mask : 'CCCCCCCCCC';\n        this.maskOptions.promptChar = this.promptChar ? this.promptChar : '_';\n        this.nativeElement.setAttribute('placeholder', this.placeholder ? this.placeholder : this.maskOptions.format);\n    }\n    onKeydown(event) {\n        const key = event.keyCode || event.charCode;\n        if (isIE() && this.stopPropagation) {\n            this.stopPropagation = false;\n        }\n        if (key === KEYS.Ctrl) {\n            this.ctrlDown = true;\n        }\n        if ((this.ctrlDown && key === KEYS.Z) || (this.ctrlDown && key === KEYS.Y)) {\n            event.preventDefault();\n        }\n        this.key = key;\n        this.selection = Math.abs(this.selectionEnd - this.selectionStart);\n    }\n    onKeyup(event) {\n        const key = event.keyCode || event.charCode;\n        if (key === KEYS.Ctrl) {\n            this.ctrlDown = false;\n        }\n    }\n    onPaste(event) {\n        this.paste = true;\n        this.valOnPaste = this.value;\n        this.cursorOnPaste = this.getCursorPosition();\n    }\n    onInputChanged(event) {\n        if (isIE() && this.stopPropagation) {\n            this.stopPropagation = false;\n            return;\n        }\n        if (this.paste) {\n            this.paste = false;\n            const clipboardData = this.value.substring(this.cursorOnPaste, this.getCursorPosition());\n            this.value = this.maskHelper.parseValueByMaskUponCopyPaste(this.valOnPaste, this.maskOptions, this.cursorOnPaste, clipboardData, this.selection);\n            this.setCursorPosition(this.maskHelper.cursor);\n        }\n        else {\n            const currentCursorPos = this.getCursorPosition();\n            this.maskHelper.data = this.key === KEYS.BACKSPACE || this.key === KEYS.DELETE;\n            this.value =\n                this.selection && this.selection !== 0\n                    ? this.maskHelper.parseValueByMaskUponSelection(this.value, this.maskOptions, currentCursorPos - 1, this.selection)\n                    : this.maskHelper.parseValueByMask(this.value, this.maskOptions, currentCursorPos - 1);\n            this.setCursorPosition(this.maskHelper.cursor);\n        }\n        const rawVal = this.maskHelper.restoreValueFromMask(this.value, this.maskOptions);\n        this.dataValue = this.includeLiterals ? this.value : rawVal;\n        this.onChangeCallback(this.dataValue);\n        this.valueChange.emit({ rawValue: rawVal, formattedValue: this.value });\n    }\n    onFocus(value) {\n        if (this.focusedValuePipe) {\n            if (isIE()) {\n                this.stopPropagation = true;\n            }\n            this.value = this.focusedValuePipe.transform(value);\n        }\n        else {\n            this.value = this.maskHelper.parseValueByMaskOnInit(this.value, this.maskOptions);\n        }\n    }\n    onBlur(value) {\n        if (this.displayValuePipe) {\n            this.value = this.displayValuePipe.transform(value);\n        }\n        else if (value === this.maskHelper.parseMask(this.maskOptions)) {\n            this.value = '';\n        }\n    }\n    getCursorPosition() {\n        return this.nativeElement.selectionStart;\n    }\n    setCursorPosition(start, end = start) {\n        this.nativeElement.setSelectionRange(start, end);\n    }\n    writeValue(value) {\n        if (this.promptChar && this.promptChar.length > 1) {\n            this.maskOptions.promptChar = this.promptChar.substring(0, 1);\n        }\n        this.value = value ? this.maskHelper.parseValueByMaskOnInit(value, this.maskOptions) : '';\n        if (this.displayValuePipe) {\n            this.value = this.displayValuePipe.transform(this.value);\n        }\n        this.dataValue = this.includeLiterals ? this.value : value;\n        this.onChangeCallback(this.dataValue);\n        this.valueChange.emit({ rawValue: value, formattedValue: this.value });\n    }\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n}\nMaskDirective.ngDirectiveDef = i0.ɵɵdefineDirective({ type: MaskDirective, selectors: [[\"\", \"ngxMask\", \"\"]], factory: function MaskDirective_Factory(t) { return new (t || MaskDirective)(i0.ɵɵdirectiveInject(i0.ElementRef)); }, hostBindings: function MaskDirective_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function MaskDirective_keydown_HostBindingHandler($event) { return ctx.onKeydown($event); });\n        i0.ɵɵlistener(\"keyup\", function MaskDirective_keyup_HostBindingHandler($event) { return ctx.onKeyup($event); });\n        i0.ɵɵlistener(\"paste\", function MaskDirective_paste_HostBindingHandler($event) { return ctx.onPaste($event); });\n        i0.ɵɵlistener(\"input\", function MaskDirective_input_HostBindingHandler($event) { return ctx.onInputChanged($event); });\n        i0.ɵɵlistener(\"focus\", function MaskDirective_focus_HostBindingHandler($event) { return ctx.onFocus($event.target.value); });\n        i0.ɵɵlistener(\"blur\", function MaskDirective_blur_HostBindingHandler($event) { return ctx.onBlur($event.target.value); });\n    } }, inputs: { mask: [\"ngxMask\", \"mask\"], promptChar: \"promptChar\", includeLiterals: \"includeLiterals\", placeholder: \"placeholder\", displayValuePipe: \"displayValuePipe\", focusedValuePipe: \"focusedValuePipe\", dataValue: \"dataValue\" }, outputs: { valueChange: \"valueChange\" }, features: [i0.ɵɵProvidersFeature([{ provide: NG_VALUE_ACCESSOR, useExisting: MaskDirective, multi: true }])] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(MaskDirective, [{\n        type: Directive,\n        args: [{\n                providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: MaskDirective, multi: true }],\n                selector: '[ngxMask]',\n            }]\n    }], function () { return [{ type: i0.ElementRef }]; }, { mask: [{\n            type: Input,\n            args: ['ngxMask']\n        }], promptChar: [{\n            type: Input\n        }], includeLiterals: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], displayValuePipe: [{\n            type: Input\n        }], focusedValuePipe: [{\n            type: Input\n        }], dataValue: [{\n            type: Input\n        }], valueChange: [{\n            type: Output\n        }], onKeydown: [{\n            type: HostListener,\n            args: ['keydown', ['$event']]\n        }], onKeyup: [{\n            type: HostListener,\n            args: ['keyup', ['$event']]\n        }], onPaste: [{\n            type: HostListener,\n            args: ['paste', ['$event']]\n        }], onInputChanged: [{\n            type: HostListener,\n            args: ['input', ['$event']]\n        }], onFocus: [{\n            type: HostListener,\n            args: ['focus', ['$event.target.value']]\n        }], onBlur: [{\n            type: HostListener,\n            args: ['blur', ['$event.target.value']]\n        }] });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { trigger, state, style, animate, transition, query, group } from '@angular/animations';\nimport { Directive, TemplateRef, ComponentFactoryResolver, ApplicationRef, Injector, ViewContainerRef, Inject, InjectionToken, ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation, Optional, Input, HostListener, ContentChild, ContentChildren, EventEmitter, NgZone, Output, QueryList, ViewChild, Self, NgModule } from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Subject, merge, Subscription, asapScheduler, of } from 'rxjs';\nimport { FocusMonitor, FocusKeyManager, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { mixinDisabled, mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, LEFT_ARROW, RIGHT_ARROW, DOWN_ARROW, UP_ARROW, HOME, END, hasModifierKey } from '@angular/cdk/keycodes';\nimport { startWith, switchMap, take, delay, filter, takeUntil } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/core';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [1, \"mat-menu-item\"];\nconst _c1 = [\"mat-menu-item\", \"\"];\nconst _c2 = [\"matRipple\", \"\", 1, \"mat-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"];\nconst _c3 = [\"*\"];\nconst _c4 = [\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-menu-panel\", 3, \"ngClass\", \"keydown\", \"click\"];\nconst _c5 = [1, \"mat-menu-content\"];\nfunction _MatMenu_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    const _r36 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", _c4);\n    ɵngcc0.ɵɵlistener(\"keydown\", function _MatMenu_ng_template_0_Template_div_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r36); const ctx_r35 = ɵngcc0.ɵɵnextContext(); return ctx_r35._handleKeydown($event); });\n    ɵngcc0.ɵɵlistener(\"click\", function _MatMenu_ng_template_0_Template_div_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r36); const ctx_r37 = ɵngcc0.ɵɵnextContext(); return ctx_r37.closed.emit(\"click\"); });\n    ɵngcc0.ɵɵlistener(\"@transformMenu.start\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r36); const ctx_r38 = ɵngcc0.ɵɵnextContext(); return ctx_r38._onAnimationStart($event); });\n    ɵngcc0.ɵɵlistener(\"@transformMenu.done\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r36); const ctx_r39 = ɵngcc0.ɵɵnextContext(); return ctx_r39._onAnimationDone($event); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", _c5);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r34 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r34._classList)(\"@transformMenu\", ctx_r34._panelAnimationState);\n} }\nconst _c6 = [\"aria-haspopup\", \"true\"];\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mat-menu-content, .mat-mdc-menu-content', animate('100ms linear', style({\n                opacity: 1\n            }))),\n            animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'scale(1)' })),\n        ])),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nclass MatMenuContent {\n    /**\n     * @param {?} _template\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _injector\n     * @param {?} _viewContainerRef\n     * @param {?} _document\n     */\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        /**\n         * Emits when the menu content has been attached.\n         */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * \\@docs-private\n     * @param {?=} context\n     * @return {?}\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        /** @type {?} */\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        (/** @type {?} */ (element.parentNode)).insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * \\@docs-private\n     * @return {?}\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\nMatMenuContent.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatMenuContent, selectors: [[\"ng-template\", \"matMenuContent\", \"\"]], factory: function MatMenuContent_Factory(t) { return new (t || MatMenuContent)(ɵngcc0.ɵɵdirectiveInject(TemplateRef), ɵngcc0.ɵɵdirectiveInject(ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ApplicationRef), ɵngcc0.ɵɵdirectiveInject(Injector), ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatMenuContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matMenuContent]'\n            }]\n    }], function () { return [{ type: TemplateRef }, { type: ComponentFactoryResolver }, { type: ApplicationRef }, { type: Injector }, { type: ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { constructor: [], _template: [], _componentFactoryResolver: [], _appRef: [], _injector: [], _viewContainerRef: [], _document: [], _attached: [], attach: [], _portal: [], _outlet: [], detach: [], ngOnDestroy: [] });\n/** @nocollapse */\nMatMenuContent.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ComponentFactoryResolver },\n    { type: ApplicationRef },\n    { type: Injector },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuMissingError() {\n    throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatMenuItem.\n/**\n * \\@docs-private\n */\nclass MatMenuItemBase {\n}\n/** @type {?} */\nconst _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n/**\n * This directive is intended to be used inside an mat-menu tag.\n * It exists mostly to set the role attribute.\n */\nclass MatMenuItem extends _MatMenuItemMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?=} document\n     * @param {?=} _focusMonitor\n     * @param {?=} _parentMenu\n     */\n    constructor(_elementRef, document, _focusMonitor, _parentMenu) {\n        // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n        super();\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        /**\n         * ARIA role for the menu item.\n         */\n        this.role = 'menuitem';\n        /**\n         * Stream that emits when the menu item is hovered.\n         */\n        this._hovered = new Subject();\n        /**\n         * Whether the menu item is highlighted.\n         */\n        this._highlighted = false;\n        /**\n         * Whether the menu item acts as a trigger for a sub-menu.\n         */\n        this._triggersSubmenu = false;\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef, false);\n        }\n        if (_parentMenu && _parentMenu.addItem) {\n            _parentMenu.addItem(this);\n        }\n        this._document = document;\n    }\n    /**\n     * Focuses the menu item.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n    }\n    /**\n     * Used to set the `tabindex`.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Returns the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * Prevents the default element actions if it is disabled.\n     * @param {?} event\n     * @return {?}\n     */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritte.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * Emits to the hover stream.\n     * @return {?}\n     */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritte.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        /** @type {?} */\n        let output = '';\n        if (element.childNodes) {\n            /** @type {?} */\n            const length = element.childNodes.length;\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n        return output.trim();\n    }\n}\nMatMenuItem.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatMenuItem, selectors: [[\"\", \"mat-menu-item\", \"\"]], factory: function MatMenuItem_Factory(t) { return new (t || MatMenuItem)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8)); }, hostBindings: function MatMenuItem_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) { return ctx._checkDisabled($event); });\n        ɵngcc0.ɵɵlistener(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler($event) { return ctx._handleMouseEnter(); });\n        ɵngcc0.ɵɵelementHostAttrs(_c0);\n        ɵngcc0.ɵɵstyling();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled.toString())(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"mat-menu-item-highlighted\", ctx._highlighted);\n        ɵngcc0.ɵɵclassProp(\"mat-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n        ɵngcc0.ɵɵstylingApply();\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\" }, exportAs: [\"matMenuItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c1, ngContentSelectors: _c3, consts: 2, vars: 2, template: function MatMenuItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelement(1, \"div\", _c2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵselect(1);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc1.MatRipple], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatMenuItem, [{\n        type: Component,\n        args: [{ selector: '[mat-menu-item]',\n                exportAs: 'matMenuItem',\n                inputs: ['disabled', 'disableRipple'],\n                host: {\n                    '[attr.role]': 'role',\n                    'class': 'mat-menu-item',\n                    '[class.mat-menu-item-highlighted]': '_highlighted',\n                    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.disabled]': 'disabled || null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: \"<ng-content></ng-content><div class=\\\"mat-menu-ripple\\\" matRipple [matRippleDisabled]=\\\"disableRipple || disabled\\\" [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\"\n            }]\n    }], function () { return [{ type: ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_PANEL]\n            }, {\n                type: Optional\n            }] }]; }, { constructor: [], _elementRef: [], _focusMonitor: [], _parentMenu: [], role: [{\n            type: Input\n        }], _hovered: [], _highlighted: [], _triggersSubmenu: [], _document: [], focus: [], ngOnDestroy: [], _getTabIndex: [], _getHostElement: [], _checkDisabled: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }], _handleMouseEnter: [{\n            type: HostListener,\n            args: ['mouseenter']\n        }], getLabel: [] });\n/** @nocollapse */\nMatMenuItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_PANEL,] }, { type: Optional }] }\n];\nMatMenuItem.propDecorators = {\n    role: [{ type: Input }],\n    _checkDisabled: [{ type: HostListener, args: ['click', ['$event'],] }],\n    _handleMouseEnter: [{ type: HostListener, args: ['mouseenter',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token to be used to override the default options for `mat-menu`.\n * @type {?}\n */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\n/**\n * Start elevation for the menu panel.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_BASE_ELEVATION = 4;\n/**\n * Base class with all of the `MatMenu` functionality.\n */\n// tslint:disable-next-line:class-name\nclass _MatMenuBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _defaultOptions\n     */\n    constructor(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /**\n         * Only the direct descendant menu items.\n         */\n        this._directDescendantItems = new QueryList();\n        /**\n         * Subscription to tab events on the menu panel\n         */\n        this._tabSubscription = Subscription.EMPTY;\n        /**\n         * Config object to be passed into the menu's ngClass\n         */\n        this._classList = {};\n        /**\n         * Current state of the panel animation.\n         */\n        this._panelAnimationState = 'void';\n        /**\n         * Emits whenever an animation on the menu completes.\n         */\n        this._animationDone = new Subject();\n        /**\n         * Class to be added to the backdrop element.\n         */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /**\n         * Event emitted when the menu is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * \\@breaking-change 8.0.0\n         */\n        this.close = this.closed;\n    }\n    /**\n     * Position of the menu in the X axis.\n     * @return {?}\n     */\n    get xPosition() { return this._xPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set xPosition(value) {\n        if (value !== 'before' && value !== 'after') {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /**\n     * Position of the menu in the Y axis.\n     * @return {?}\n     */\n    get yPosition() { return this._yPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below') {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /**\n     * Whether the menu should overlap its trigger.\n     * @return {?}\n     */\n    get overlapTrigger() { return this._overlapTrigger; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the menu has a backdrop.\n     * @return {?}\n     */\n    get hasBackdrop() { return this._hasBackdrop; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param {?} classes list of class names\n     * @return {?}\n     */\n    set panelClass(classes) {\n        /** @type {?} */\n        const previousPanelClass = this._previousPanelClass;\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((/**\n             * @param {?} className\n             * @return {?}\n             */\n            (className) => {\n                this._classList[className] = false;\n            }));\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((/**\n             * @param {?} className\n             * @return {?}\n             */\n            (className) => {\n                this._classList[className] = true;\n            }));\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    get classList() { return this.panelClass; }\n    /**\n     * @param {?} classes\n     * @return {?}\n     */\n    set classList(classes) { this.panelClass = classes; }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe((/**\n         * @return {?}\n         */\n        () => this.closed.emit('tab')));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._directDescendantItems.destroy();\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /**\n     * Stream that emits whenever the hovered menu item changes.\n     * @return {?}\n     */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        /** @type {?} */\n        const itemChanges = (/** @type {?} */ (this._directDescendantItems.changes));\n        return itemChanges.pipe(startWith(this._directDescendantItems), switchMap((/**\n         * @param {?} items\n         * @return {?}\n         */\n        items => merge(...items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._hovered))))));\n    }\n    /*\n       * Registers a menu item with the menu.\n       * @docs-private\n       * @deprecated No longer being used. To be removed.\n       * @breaking-change 9.0.0\n       */\n    /**\n     * @param {?} _item\n     * @return {?}\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * \\@docs-private\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 9.0.0\n     * @param {?} _item\n     * @return {?}\n     */\n    removeItem(_item) { }\n    /**\n     * Handle a keyboard event from the menu, delegating to the appropriate action.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifierKey(event)) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n        }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param {?=} origin Action from which the focus originated. Used to set the correct styling.\n     * @return {?}\n     */\n    focusFirstItem(origin = 'program') {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._keyManager.setFocusOrigin(origin).setFirstItemActive()));\n        }\n        else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     * @return {?}\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param {?} depth Number of parent menus that come before the menu.\n     * @return {?}\n     */\n    setElevation(depth) {\n        // The elevation starts at the base and increases by one for each level.\n        /** @type {?} */\n        const newElevation = `mat-elevation-z${MAT_MENU_BASE_ELEVATION + depth}`;\n        /** @type {?} */\n        const customElevation = Object.keys(this._classList).find((/**\n         * @param {?} c\n         * @return {?}\n         */\n        c => c.startsWith('mat-elevation-z')));\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * \\@docs-private\n     * @param {?=} posX Position of the menu along the x axis.\n     * @param {?=} posY Position of the menu along the y axis.\n     * @return {?}\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        /** @type {?} */\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n    }\n    /**\n     * Starts the enter animation.\n     * @return {?}\n     */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /**\n     * Resets the panel animation to its initial state.\n     * @return {?}\n     */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /**\n     * Callback that is invoked when the panel animation completes.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationStart(event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     * @private\n     * @return {?}\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((/**\n         * @param {?} items\n         * @return {?}\n         */\n        (items) => {\n            this._directDescendantItems.reset(items.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            item => item._parentMenu === this)));\n            this._directDescendantItems.notifyOnChanges();\n        }));\n    }\n}\n_MatMenuBase.ngBaseDef = ɵngcc0.ɵɵdefineBase({ inputs: { backdropClass: \"backdropClass\", xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\" }, outputs: { closed: \"closed\", close: \"close\" }, viewQuery: function (rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    } }, contentQueries: function (rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, false);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allItems = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n    } } });\n/** @nocollapse */\n_MatMenuBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n_MatMenuBase.propDecorators = {\n    _allItems: [{ type: ContentChildren, args: [MatMenuItem, { descendants: true },] }],\n    backdropClass: [{ type: Input }],\n    xPosition: [{ type: Input }],\n    yPosition: [{ type: Input }],\n    templateRef: [{ type: ViewChild, args: [TemplateRef, { static: false },] }],\n    items: [{ type: ContentChildren, args: [MatMenuItem,] }],\n    lazyContent: [{ type: ContentChild, args: [MatMenuContent, { static: false },] }],\n    overlapTrigger: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    panelClass: [{ type: Input, args: ['class',] }],\n    classList: [{ type: Input }],\n    closed: [{ type: Output }],\n    close: [{ type: Output }]\n};\n/**\n * \\@docs-private We show the \"_MatMenu\" class as \"MatMenu\" in the docs.\n */\nclass MatMenu extends _MatMenuBase {\n}\n// Note on the weird inheritance setup: we need three classes, because the MDC-based menu has to\n// extend `MatMenu`, however keeping a reference to it will cause the inlined template and styles\n// to be retained as well. The MDC menu also has to provide itself as a `MatMenu` in order for\n// queries and DI to work correctly, while still not referencing the actual menu class.\n// Class responsibility is split up as follows:\n// * _MatMenuBase - provides all the functionality without any of the Angular metadata.\n// * MatMenu - keeps the same name symbol name as the current menu and\n// is used as a provider for DI and query purposes.\n// * _MatMenu - the actual menu component implementation with the Angular metadata that should\n// be tree shaken away for MDC.\n/**\n * \\@docs-public MatMenu\n */\n// tslint:disable-next-line:class-name\nclass _MatMenu extends MatMenu {\n    /**\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} defaultOptions\n     */\n    constructor(elementRef, ngZone, defaultOptions) {\n        super(elementRef, ngZone, defaultOptions);\n    }\n}\n_MatMenu.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: _MatMenu, selectors: [[\"mat-menu\"]], factory: function _MatMenu_Factory(t) { return new (t || _MatMenu)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); }, exportAs: [\"matMenu\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n            { provide: MatMenu, useExisting: _MatMenu }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c3, consts: 1, vars: 0, template: function _MatMenu_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, _MatMenu_ng_template_0_Template, 3, 2, \"ng-template\");\n    } }, directives: [ɵngcc2.NgClass], styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}@media (-ms-high-contrast:active){.mat-menu-panel{outline:solid 1px}}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}@media (-ms-high-contrast:active){.mat-menu-item-highlighted,.mat-menu-item.cdk-keyboard-focused,.mat-menu-item.cdk-program-focused{outline:dotted 1px}}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:'';display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"], encapsulation: 2, data: { animation: [\n            matMenuAnimations.transformMenu,\n            matMenuAnimations.fadeInItems\n        ] }, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(_MatMenu, [{\n        type: Component,\n        args: [{ selector: 'mat-menu',\n                template: \"<ng-template><div class=\\\"mat-menu-panel\\\" [ngClass]=\\\"_classList\\\" (keydown)=\\\"_handleKeydown($event)\\\" (click)=\\\"closed.emit('click')\\\" [@transformMenu]=\\\"_panelAnimationState\\\" (@transformMenu.start)=\\\"_onAnimationStart($event)\\\" (@transformMenu.done)=\\\"_onAnimationDone($event)\\\" tabindex=\\\"-1\\\" role=\\\"menu\\\"><div class=\\\"mat-menu-content\\\"><ng-content></ng-content></div></div></ng-template>\",\n                styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}@media (-ms-high-contrast:active){.mat-menu-panel{outline:solid 1px}}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}@media (-ms-high-contrast:active){.mat-menu-item-highlighted,.mat-menu-item.cdk-keyboard-focused,.mat-menu-item.cdk-program-focused{outline:dotted 1px}}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:'';display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matMenu',\n                animations: [\n                    matMenuAnimations.transformMenu,\n                    matMenuAnimations.fadeInItems\n                ],\n                providers: [\n                    { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n                    { provide: MatMenu, useExisting: _MatMenu }\n                ]\n            }]\n    }], function () { return [{ type: ElementRef }, { type: NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, { constructor: [] });\n/** @nocollapse */\n_MatMenu.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that determines the scroll handling while the menu is open.\n * @type {?}\n */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Default top padding of the menu panel.\n * @type {?}\n */\nconst MENU_PANEL_TOP_PADDING = 8;\n/**\n * Options for binding a passive event listener.\n * @type {?}\n */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n/**\n * This directive is intended to be used in conjunction with an mat-menu tag.  It is\n * responsible for toggling the display of the provided menu instance.\n */\nclass MatMenuTrigger {\n    /**\n     * @param {?} _overlay\n     * @param {?} _element\n     * @param {?} _viewContainerRef\n     * @param {?} scrollStrategy\n     * @param {?} _parentMenu\n     * @param {?} _menuItemInstance\n     * @param {?} _dir\n     * @param {?=} _focusMonitor\n     */\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, _parentMenu, _menuItemInstance, _dir, _focusMonitor) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._parentMenu = _parentMenu;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = (/**\n         * @return {?}\n         */\n        () => this._openedBy = 'touch');\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = null;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /**\n         * Event emitted when the associated menu is opened.\n         */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * \\@breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /**\n         * Event emitted when the associated menu is closed.\n         */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * \\@breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    get _deprecatedMatMenuTriggerFor() { return this.menu; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /**\n     * References the menu instance that the trigger is associated with.\n     * @return {?}\n     */\n    get menu() { return this._menu; }\n    /**\n     * @param {?} menu\n     * @return {?}\n     */\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            this._menuCloseSubscription = menu.close.asObservable().subscribe((/**\n             * @param {?} reason\n             * @return {?}\n             */\n            reason => {\n                this._destroyMenu();\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMenu) {\n                    this._parentMenu.closed.emit(reason);\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._checkMenu();\n        this._handleHover();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /**\n     * Whether the menu is open.\n     * @return {?}\n     */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the menu triggers a sub-menu or a top-level one.\n     * @return {?}\n     */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMenu);\n    }\n    /**\n     * Toggles the menu between the open and closed states.\n     * @return {?}\n     */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /**\n     * Opens the menu.\n     * @return {?}\n     */\n    openMenu() {\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        /** @type {?} */\n        const overlayRef = this._createOverlay();\n        /** @type {?} */\n        const overlayConfig = overlayRef.getConfig();\n        this._setPosition((/** @type {?} */ (overlayConfig.positionStrategy)));\n        overlayConfig.hasBackdrop = this.menu.hasBackdrop == null ? !this.triggersSubmenu() :\n            this.menu.hasBackdrop;\n        overlayRef.attach(this._getPortal());\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe((/**\n         * @return {?}\n         */\n        () => this.closeMenu()));\n        this._initMenu();\n        if (this.menu instanceof MatMenu) {\n            this.menu._startAnimation();\n        }\n    }\n    /**\n     * Closes the menu.\n     * @return {?}\n     */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param {?=} origin Source of the menu trigger's focus.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Closes the menu and does the necessary cleanup.\n     * @private\n     * @return {?}\n     */\n    _destroyMenu() {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        /** @type {?} */\n        const menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        if (menu instanceof MatMenu) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                event => event.toState === 'void')), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: (/**\n                     * @return {?}\n                     */\n                    () => (/** @type {?} */ (menu.lazyContent)).detach()),\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: (/**\n                     * @return {?}\n                     */\n                    () => this._resetMenu())\n                });\n            }\n            else {\n                this._resetMenu();\n            }\n        }\n        else {\n            this._resetMenu();\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     * @private\n     * @return {?}\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this._setIsMenuOpen(true);\n        this.menu.focusFirstItem(this._openedBy || 'program');\n    }\n    /**\n     * Updates the menu elevation based on the amount of parent menus that it has.\n     * @private\n     * @return {?}\n     */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            /** @type {?} */\n            let depth = 0;\n            /** @type {?} */\n            let parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    /**\n     * This method resets the menu when it's closed, most importantly restoring\n     * focus to the menu trigger if the menu was opened via the keyboard.\n     * @private\n     * @return {?}\n     */\n    _resetMenu() {\n        this._setIsMenuOpen(false);\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (this.restoreFocus) {\n            if (!this._openedBy) {\n                // Note that the focus style will show up both for `program` and\n                // `keyboard` so we don't have to specify which one it is.\n                this.focus();\n            }\n            else if (!this.triggersSubmenu()) {\n                this.focus(this._openedBy);\n            }\n        }\n        this._openedBy = null;\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    /**\n     * @private\n     * @param {?} isOpen\n     * @return {?}\n     */\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._highlighted = isOpen;\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     * @private\n     * @return {?}\n     */\n    _checkMenu() {\n        if (!this.menu) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            /** @type {?} */\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions((/** @type {?} */ (config.positionStrategy)));\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @private\n     * @return {?} OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     * @private\n     * @param {?} position\n     * @return {?}\n     */\n    _subscribeToPositions(position) {\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe((/**\n             * @param {?} change\n             * @return {?}\n             */\n            change => {\n                /** @type {?} */\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                /** @type {?} */\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                (/** @type {?} */ (this.menu.setPositionClasses))(posX, posY);\n            }));\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @private\n     * @param {?} positionStrategy Strategy whose position to update.\n     * @return {?}\n     */\n    _setPosition(positionStrategy) {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        /** @type {?} */\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n    /**\n     * Returns a stream that emits whenever an action that should close the menu occurs.\n     * @private\n     * @return {?}\n     */\n    _menuClosingActions() {\n        /** @type {?} */\n        const backdrop = (/** @type {?} */ (this._overlayRef)).backdropClick();\n        /** @type {?} */\n        const detachments = (/** @type {?} */ (this._overlayRef)).detachments();\n        /** @type {?} */\n        const parentClose = this._parentMenu ? this._parentMenu.closed : of();\n        /** @type {?} */\n        const hover = this._parentMenu ? this._parentMenu._hovered().pipe(filter((/**\n         * @param {?} active\n         * @return {?}\n         */\n        active => active !== this._menuItemInstance)), filter((/**\n         * @return {?}\n         */\n        () => this._menuOpen))) : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /**\n     * Handles mouse presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : null;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /**\n     * Handles key presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        if (this.triggersSubmenu() && ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this.openMenu();\n        }\n    }\n    /**\n     * Handles click events on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /**\n     * Handles the cases where the user hovers over the trigger.\n     * @private\n     * @return {?}\n     */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu()) {\n            return;\n        }\n        this._hoverSubscription = this._parentMenu._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter((/**\n         * @param {?} active\n         * @return {?}\n         */\n        active => active === this._menuItemInstance && !active.disabled)), delay(0, asapScheduler))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof MatMenu && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMenu._hovered()))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => this.openMenu()));\n            }\n            else {\n                this.openMenu();\n            }\n        }));\n    }\n    /**\n     * Gets the portal that should be attached to the overlay.\n     * @private\n     * @return {?}\n     */\n    _getPortal() {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n}\nMatMenuTrigger.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatMenuTrigger, selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]], factory: function MatMenuTrigger_Factory(t) { return new (t || MatMenuTrigger)(ɵngcc0.ɵɵdirectiveInject(Overlay), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(MatMenu, 8), ɵngcc0.ɵɵdirectiveInject(MatMenuItem, 10), ɵngcc0.ɵɵdirectiveInject(Directionality, 8), ɵngcc0.ɵɵdirectiveInject(FocusMonitor)); }, hostBindings: function MatMenuTrigger_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(1);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) { return ctx._handleMousedown($event); });\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵlistener(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n        ɵngcc0.ɵɵelementHostAttrs(_c6);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.menuOpen || null);\n    } }, inputs: { restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"], _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, exportAs: [\"matMenuTrigger\"] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatMenuTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                host: {\n                    'aria-haspopup': 'true',\n                    '[attr.aria-expanded]': 'menuOpen || null',\n                    '(mousedown)': '_handleMousedown($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(click)': '_handleClick($event)'\n                },\n                exportAs: 'matMenuTrigger'\n            }]\n    }], function () { return [{ type: Overlay }, { type: ElementRef }, { type: ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_SCROLL_STRATEGY]\n            }] }, { type: MatMenu, decorators: [{\n                type: Optional\n            }] }, { type: MatMenuItem, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }, { type: FocusMonitor }]; }, { constructor: [], _overlay: [], _element: [], _viewContainerRef: [], _parentMenu: [], _menuItemInstance: [], _dir: [], _focusMonitor: [], _overlayRef: [], _menuOpen: [], _closingActionsSubscription: [], _hoverSubscription: [], _menuCloseSubscription: [], _handleTouchStart: [], _openedBy: [], restoreFocus: [{\n            type: Input,\n            args: ['matMenuTriggerRestoreFocus']\n        }], menuOpened: [{\n            type: Output\n        }], onMenuOpen: [{\n            type: Output\n        }], menuClosed: [{\n            type: Output\n        }], onMenuClose: [{\n            type: Output\n        }], _scrollStrategy: [], _deprecatedMatMenuTriggerFor: [{\n            type: Input,\n            args: ['mat-menu-trigger-for']\n        }], _deprecatedMatMenuTriggerFor: [], menu: [{\n            type: Input,\n            args: ['matMenuTriggerFor']\n        }], menu: [], _menu: [], ngAfterContentInit: [], ngOnDestroy: [], menuOpen: [], dir: [], triggersSubmenu: [], toggleMenu: [], openMenu: [], closeMenu: [], focus: [], _destroyMenu: [], _initMenu: [], _setMenuElevation: [], _resetMenu: [], _setIsMenuOpen: [], _checkMenu: [], _createOverlay: [], _getOverlayConfig: [], _subscribeToPositions: [], _setPosition: [], _menuClosingActions: [], _handleMousedown: [], _handleKeydown: [], _handleClick: [], _handleHover: [], _getPortal: [], _portal: [], menuData: [{\n            type: Input,\n            args: ['matMenuTriggerData']\n        }] });\n/** @nocollapse */\nMatMenuTrigger.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_SCROLL_STRATEGY,] }] },\n    { type: MatMenu, decorators: [{ type: Optional }] },\n    { type: MatMenuItem, decorators: [{ type: Optional }, { type: Self }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: FocusMonitor }\n];\nMatMenuTrigger.propDecorators = {\n    _deprecatedMatMenuTriggerFor: [{ type: Input, args: ['mat-menu-trigger-for',] }],\n    menu: [{ type: Input, args: ['matMenuTriggerFor',] }],\n    menuData: [{ type: Input, args: ['matMenuTriggerData',] }],\n    restoreFocus: [{ type: Input, args: ['matMenuTriggerRestoreFocus',] }],\n    menuOpened: [{ type: Output }],\n    onMenuOpen: [{ type: Output }],\n    menuClosed: [{ type: Output }],\n    onMenuClose: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used by both the current `MatMenuModule` and the MDC `MatMenuModule`\n * to declare the menu-related directives.\n */\n// tslint:disable-next-line:class-name\nclass _MatMenuDirectivesModule {\n}\n_MatMenuDirectivesModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: _MatMenuDirectivesModule });\n_MatMenuDirectivesModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function _MatMenuDirectivesModule_Factory(t) { return new (t || _MatMenuDirectivesModule)(); }, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [MatCommonModule] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(_MatMenuDirectivesModule, { declarations: function () { return [MatMenuTrigger,\n        MatMenuContent]; }, exports: function () { return [MatMenuTrigger,\n        MatMenuContent,\n        MatCommonModule]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(_MatMenuDirectivesModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatMenuTrigger, MatMenuContent, MatCommonModule],\n                declarations: [MatMenuTrigger, MatMenuContent],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null);\nclass MatMenuModule {\n}\nMatMenuModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: MatMenuModule });\nMatMenuModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function MatMenuModule_Factory(t) { return new (t || MatMenuModule)(); }, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            CommonModule,\n            MatCommonModule,\n            MatRippleModule,\n            OverlayModule,\n            _MatMenuDirectivesModule,\n        ],\n        _MatMenuDirectivesModule] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(MatMenuModule, { declarations: function () { return [_MatMenu,\n        MatMenuItem]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        MatRippleModule,\n        OverlayModule,\n        _MatMenuDirectivesModule]; }, exports: function () { return [_MatMenu,\n        MatMenuItem,\n        _MatMenuDirectivesModule]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatMenuModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    MatRippleModule,\n                    OverlayModule,\n                    _MatMenuDirectivesModule,\n                ],\n                exports: [_MatMenu, MatMenuItem, _MatMenuDirectivesModule],\n                declarations: [_MatMenu, MatMenuItem],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatMenu, MAT_MENU_DEFAULT_OPTIONS, _MatMenu, _MatMenuBase, MatMenuItem, MatMenuTrigger, MAT_MENU_SCROLL_STRATEGY, MAT_MENU_PANEL, _MatMenuDirectivesModule, MatMenuModule, matMenuAnimations, fadeInItems, transformMenu, MatMenuContent, MAT_MENU_DEFAULT_OPTIONS_FACTORY as ɵa23, MAT_MENU_SCROLL_STRATEGY_FACTORY as ɵb23, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as ɵc23 };\n\n//# sourceMappingURL=menu.js.map","import toDate from '../toDate/index.js';\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * var result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import compareAsc from '../compareAsc/index.js';\nimport differenceInMonths from '../differenceInMonths/index.js';\nimport differenceInSeconds from '../differenceInSeconds/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport toDate from '../toDate/index.js';\nimport cloneObject from '../_lib/cloneObject/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * var result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (dirtyObject.hasOwnProperty(property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import assign from '../assign/index.js';\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * var result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarMonths from '../differenceInCalendarMonths/index.js';\nimport compareAsc from '../compareAsc/index.js';\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastMonthNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from '../toDate/index.js';\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\n\nexport default function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgLetDirective } from './ng-let.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgLetDirective],\n  exports: [NgLetDirective],\n})\nexport class NgLetModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgLetDirective } from './ng-let.directive';\nimport * as i0 from \"@angular/core\";\nexport class NgLetModule {\n}\nNgLetModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: NgLetModule });\nNgLetModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function NgLetModule_Factory(t) { return new (t || NgLetModule)(); }, imports: [[CommonModule]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(NgLetModule, { declarations: [NgLetDirective], imports: [CommonModule], exports: [NgLetDirective] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(NgLetModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [NgLetDirective],\n                exports: [NgLetDirective],\n            }]\n    }], null, null);\n","import { Directive, ElementRef, Input, OnChanges, OnDestroy, Renderer2, SimpleChanges } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { combineLatest, Subject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { untilDestroy } from '../../operators';\n\nexport interface MatchExp {\n  [classes: string]: string;\n}\n\n@Directive({\n  selector: '[routerLinkMatch]',\n})\nexport class RouterLinkMatchDirective implements OnDestroy, OnChanges {\n  private curRoute: string;\n  private matchExp: MatchExp;\n  private onChangesHook = new Subject<MatchExp>();\n\n  @Input('routerLinkMatch')\n  set routerLinkMatch(v: MatchExp) {\n    if (v && typeof v === 'object') {\n      this.matchExp = v;\n    } else {\n      throw new TypeError(\n        `Unexpected type '${typeof v}' of value for ` + `input of routerLinkMatch directive, expected 'object'`,\n      );\n    }\n  }\n\n  constructor(router: Router, private renderer: Renderer2, private ngEl: ElementRef) {\n    combineLatest([router.events, this.onChangesHook])\n      .pipe(\n        map(([e]) => e),\n        filter(e => e instanceof NavigationEnd),\n        untilDestroy(this),\n      )\n      .subscribe(e => {\n        this.curRoute = (e as NavigationEnd).urlAfterRedirects;\n\n        this._updateClass(this.matchExp);\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.routerLinkMatch) {\n      this.onChangesHook.next(changes.routerLinkMatch.currentValue);\n    }\n  }\n\n  private _updateClass(v: MatchExp): void {\n    Object.keys(v).forEach(cls => {\n      if (v[cls] && typeof v[cls] === 'string') {\n        const regexp = new RegExp(v[cls]);\n        if (this.curRoute.match(regexp)) {\n          this._toggleClass(cls, true);\n        } else {\n          this._toggleClass(cls, false);\n        }\n      } else {\n        throw new TypeError(\n          `Could not convert match value to Regular Expression. ` +\n            `Unexpected type '${typeof v[cls]}' for value of key '${cls}' ` +\n            `in routerLinkMatch directive match expression, expected 'non-empty string'`,\n        );\n      }\n    });\n  }\n\n  private _toggleClass(classes: string, enabled: boolean): void {\n    classes = classes.trim();\n\n    classes.split(/\\s+/g).forEach(cls => {\n      if (enabled) {\n        this.renderer.addClass(this.ngEl.nativeElement, cls);\n      } else {\n        this.renderer.removeClass(this.ngEl.nativeElement, cls);\n      }\n    });\n  }\n\n  ngOnDestroy() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterLinkMatchDirective } from './router-link-match.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [RouterLinkMatchDirective],\n  exports: [RouterLinkMatchDirective],\n})\nexport class RouterLinkMatchModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterLinkMatchDirective } from './router-link-match.directive';\nimport * as i0 from \"@angular/core\";\nexport class RouterLinkMatchModule {\n}\nRouterLinkMatchModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: RouterLinkMatchModule });\nRouterLinkMatchModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function RouterLinkMatchModule_Factory(t) { return new (t || RouterLinkMatchModule)(); }, imports: [[CommonModule]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(RouterLinkMatchModule, { declarations: [RouterLinkMatchDirective], imports: [CommonModule], exports: [RouterLinkMatchDirective] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(RouterLinkMatchModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [RouterLinkMatchDirective],\n                exports: [RouterLinkMatchDirective],\n            }]\n    }], null, null);\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InViewportDirective } from './in-viewport.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [InViewportDirective],\n  exports: [InViewportDirective],\n})\nexport class InViewportModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InViewportDirective } from './in-viewport.directive';\nimport * as i0 from \"@angular/core\";\nexport class InViewportModule {\n}\nInViewportModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: InViewportModule });\nInViewportModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function InViewportModule_Factory(t) { return new (t || InViewportModule)(); }, imports: [[CommonModule]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(InViewportModule, { declarations: [InViewportDirective], imports: [CommonModule], exports: [InViewportDirective] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(InViewportModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [InViewportDirective],\n                exports: [InViewportDirective],\n            }]\n    }], null, null);\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClickOutsideDirective } from './click-outside.directive';\n\n@NgModule({\n  declarations: [ClickOutsideDirective],\n  imports: [CommonModule],\n  exports: [ClickOutsideDirective],\n})\nexport class ClickOutsideModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClickOutsideDirective } from './click-outside.directive';\nimport * as i0 from \"@angular/core\";\nexport class ClickOutsideModule {\n}\nClickOutsideModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: ClickOutsideModule });\nClickOutsideModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function ClickOutsideModule_Factory(t) { return new (t || ClickOutsideModule)(); }, imports: [[CommonModule]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(ClickOutsideModule, { declarations: [ClickOutsideDirective], imports: [CommonModule], exports: [ClickOutsideDirective] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(ClickOutsideModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [ClickOutsideDirective],\n                imports: [CommonModule],\n                exports: [ClickOutsideDirective],\n            }]\n    }], null, null);\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaskDirective } from './mask.directive';\n\n@NgModule({\n  declarations: [MaskDirective],\n  imports: [CommonModule],\n  exports: [MaskDirective],\n})\nexport class MaskModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaskDirective } from './mask.directive';\nimport * as i0 from \"@angular/core\";\nexport class MaskModule {\n}\nMaskModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: MaskModule });\nMaskModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function MaskModule_Factory(t) { return new (t || MaskModule)(); }, imports: [[CommonModule]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(MaskModule, { declarations: [MaskDirective], imports: [CommonModule], exports: [MaskDirective] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(MaskModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MaskDirective],\n                imports: [CommonModule],\n                exports: [MaskDirective],\n            }]\n    }], null, null);\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({ name: 'safeHtml' })\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n  transform(value: any, args?: any) {\n    return this.sanitizer.bypassSecurityTrustHtml(value);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FilterPipe } from './filter.pipe';\nimport { GroupByPipe } from './group-by.pipe';\nimport { SafeHtmlPipe } from './safe-html.pipe';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [FilterPipe, GroupByPipe, SafeHtmlPipe],\n  exports: [FilterPipe, GroupByPipe, SafeHtmlPipe],\n})\nexport class HelperModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FilterPipe } from './filter.pipe';\nimport { GroupByPipe } from './group-by.pipe';\nimport { SafeHtmlPipe } from './safe-html.pipe';\nimport * as i0 from \"@angular/core\";\nexport class HelperModule {\n}\nHelperModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: HelperModule });\nHelperModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function HelperModule_Factory(t) { return new (t || HelperModule)(); }, imports: [[CommonModule]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(HelperModule, { declarations: [FilterPipe, GroupByPipe, SafeHtmlPipe], imports: [CommonModule], exports: [FilterPipe, GroupByPipe, SafeHtmlPipe] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(HelperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [FilterPipe, GroupByPipe, SafeHtmlPipe],\n                exports: [FilterPipe, GroupByPipe, SafeHtmlPipe],\n            }]\n    }], null, null);\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CharactersPipe } from './characters.pipe';\nimport { WordsPipe } from './words.pipe';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CharactersPipe, WordsPipe],\n  exports: [CharactersPipe, WordsPipe],\n})\nexport class TruncateModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CharactersPipe } from './characters.pipe';\nimport { WordsPipe } from './words.pipe';\nimport * as i0 from \"@angular/core\";\nexport class TruncateModule {\n}\nTruncateModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: TruncateModule });\nTruncateModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function TruncateModule_Factory(t) { return new (t || TruncateModule)(); }, imports: [[CommonModule]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(TruncateModule, { declarations: [CharactersPipe, WordsPipe], imports: [CommonModule], exports: [CharactersPipe, WordsPipe] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(TruncateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [CharactersPipe, WordsPipe],\n                exports: [CharactersPipe, WordsPipe],\n            }]\n    }], null, null);\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormatTimeInWordsPipe } from './format-time-in-words.pipe';\n\nconst PIPES = [FormatTimeInWordsPipe];\n\n@NgModule({\n  declarations: [PIPES],\n  imports: [CommonModule],\n  exports: [PIPES],\n})\nexport class DateFnsModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormatTimeInWordsPipe } from './format-time-in-words.pipe';\nimport * as i0 from \"@angular/core\";\nconst PIPES = [FormatTimeInWordsPipe];\nexport class DateFnsModule {\n}\nDateFnsModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: DateFnsModule });\nDateFnsModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function DateFnsModule_Factory(t) { return new (t || DateFnsModule)(); }, imports: [[CommonModule]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(DateFnsModule, { declarations: [FormatTimeInWordsPipe], imports: [CommonModule], exports: [FormatTimeInWordsPipe] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(DateFnsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [PIPES],\n                imports: [CommonModule],\n                exports: [PIPES],\n            }]\n    }], null, null);\n","// export * from './lib/decorators/index';\nexport * from './lib/directives/index';\nexport * from './lib/operators/index';\nexport * from './lib/pipes/index';\n","import { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function repeatWhen(notifier) {\n    return (source) => source.lift(new RepeatWhenOperator(notifier));\n}\nclass RepeatWhenOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n    }\n}\nclass RepeatWhenSubscriber extends OuterSubscriber {\n    constructor(destination, notifier, source) {\n        super(destination);\n        this.notifier = notifier;\n        this.source = source;\n        this.sourceIsBeingSubscribedTo = true;\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.sourceIsBeingSubscribedTo = true;\n        this.source.subscribe(this);\n    }\n    notifyComplete(innerSub) {\n        if (this.sourceIsBeingSubscribedTo === false) {\n            return super.complete();\n        }\n    }\n    complete() {\n        this.sourceIsBeingSubscribedTo = false;\n        if (!this.isStopped) {\n            if (!this.retries) {\n                this.subscribeToRetries();\n            }\n            if (!this.retriesSubscription || this.retriesSubscription.closed) {\n                return super.complete();\n            }\n            this._unsubscribeAndRecycle();\n            this.notifications.next();\n        }\n    }\n    _unsubscribe() {\n        const { notifications, retriesSubscription } = this;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    }\n    _unsubscribeAndRecycle() {\n        const { _unsubscribe } = this;\n        this._unsubscribe = null;\n        super._unsubscribeAndRecycle();\n        this._unsubscribe = _unsubscribe;\n        return this;\n    }\n    subscribeToRetries() {\n        this.notifications = new Subject();\n        let retries;\n        try {\n            const { notifier } = this;\n            retries = notifier(this.notifications);\n        }\n        catch (e) {\n            return super.complete();\n        }\n        this.retries = retries;\n        this.retriesSubscription = subscribeToResult(this, retries);\n    }\n}\n//# sourceMappingURL=repeatWhen.js.map","import { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return (source) => new SubscriptionDelayObservable(source, subscriptionDelay)\n            .lift(new DelayWhenOperator(delayDurationSelector));\n    }\n    return (source) => source.lift(new DelayWhenOperator(delayDurationSelector));\n}\nclass DelayWhenOperator {\n    constructor(delayDurationSelector) {\n        this.delayDurationSelector = delayDurationSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n    }\n}\nclass DelayWhenSubscriber extends OuterSubscriber {\n    constructor(destination, delayDurationSelector) {\n        super(destination);\n        this.delayDurationSelector = delayDurationSelector;\n        this.completed = false;\n        this.delayNotifierSubscriptions = [];\n        this.index = 0;\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(outerValue);\n        this.removeSubscription(innerSub);\n        this.tryComplete();\n    }\n    notifyError(error, innerSub) {\n        this._error(error);\n    }\n    notifyComplete(innerSub) {\n        const value = this.removeSubscription(innerSub);\n        if (value) {\n            this.destination.next(value);\n        }\n        this.tryComplete();\n    }\n    _next(value) {\n        const index = this.index++;\n        try {\n            const delayNotifier = this.delayDurationSelector(value, index);\n            if (delayNotifier) {\n                this.tryDelay(delayNotifier, value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n    _complete() {\n        this.completed = true;\n        this.tryComplete();\n        this.unsubscribe();\n    }\n    removeSubscription(subscription) {\n        subscription.unsubscribe();\n        const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n        if (subscriptionIdx !== -1) {\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n        }\n        return subscription.outerValue;\n    }\n    tryDelay(delayNotifier, value) {\n        const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n        if (notifierSubscription && !notifierSubscription.closed) {\n            const destination = this.destination;\n            destination.add(notifierSubscription);\n            this.delayNotifierSubscriptions.push(notifierSubscription);\n        }\n    }\n    tryComplete() {\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n            this.destination.complete();\n        }\n    }\n}\nclass SubscriptionDelayObservable extends Observable {\n    constructor(source, subscriptionDelay) {\n        super();\n        this.source = source;\n        this.subscriptionDelay = subscriptionDelay;\n    }\n    _subscribe(subscriber) {\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n    }\n}\nclass SubscriptionDelaySubscriber extends Subscriber {\n    constructor(parent, source) {\n        super();\n        this.parent = parent;\n        this.source = source;\n        this.sourceSubscribed = false;\n    }\n    _next(unused) {\n        this.subscribeToSource();\n    }\n    _error(err) {\n        this.unsubscribe();\n        this.parent.error(err);\n    }\n    _complete() {\n        this.unsubscribe();\n        this.subscribeToSource();\n    }\n    subscribeToSource() {\n        if (!this.sourceSubscribed) {\n            this.sourceSubscribed = true;\n            this.unsubscribe();\n            this.source.subscribe(this.parent);\n        }\n    }\n}\n//# sourceMappingURL=delayWhen.js.map","import { Subscriber } from '../Subscriber';\nexport function takeWhile(predicate, inclusive = false) {\n    return (source) => source.lift(new TakeWhileOperator(predicate, inclusive));\n}\nclass TakeWhileOperator {\n    constructor(predicate, inclusive) {\n        this.predicate = predicate;\n        this.inclusive = inclusive;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));\n    }\n}\nclass TakeWhileSubscriber extends Subscriber {\n    constructor(destination, predicate, inclusive) {\n        super(destination);\n        this.predicate = predicate;\n        this.inclusive = inclusive;\n        this.index = 0;\n    }\n    _next(value) {\n        const destination = this.destination;\n        let result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    }\n    nextOrComplete(value, predicateResult) {\n        const destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            if (this.inclusive) {\n                destination.next(value);\n            }\n            destination.complete();\n        }\n    }\n}\n//# sourceMappingURL=takeWhile.js.map","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the number of minutes between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of minutes\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * var result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n */\n\nexport default function differenceInMinutes(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import { ChangeDetectorRef, OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport { AsyncPipe } from '@angular/common';\nimport { interval, Observable, of } from 'rxjs';\nimport { delayWhen, map, repeatWhen, takeWhile, tap } from 'rxjs/operators';\n\nimport { differenceInMinutes, formatDistance } from 'date-fns/esm';\nimport { parseISO } from 'date-fns/esm';\n\nconst defaultConfig = { addSuffix: true };\n/**\n * impure pipe, which in general can lead to bad performance\n * but the backoff function limits the frequency the pipe checks for updates\n * so the performance is close to that of a pure pipe\n * the downside of this is that if you change the value of the input, the pipe might not notice for a while\n * so this pipe is intended for static data\n *\n * expected input is a time (number, string or Date)\n * output is a string expressing distance from that time to now, plus the suffix 'ago'\n * output refreshes at dynamic intervals, with refresh rate slowing down as the input time gets further away from now\n */\n@Pipe({ name: 'formatTimeInWords', pure: false })\nexport class FormatTimeInWordsPipe implements PipeTransform, OnDestroy {\n  static readonly NO_ARGS_ERROR = 'formatTimeInWords: missing required arguments';\n  private readonly async: AsyncPipe;\n\n  private isDestroyed = false;\n  private agoExpression: Observable<string>;\n\n  constructor(private cdr: ChangeDetectorRef) {\n    this.async = new AsyncPipe(this.cdr);\n  }\n\n  ngOnDestroy() {\n    this.isDestroyed = true; // pipe will stop executing after next iteration\n  }\n\n  transform(date: string | number | Date, options?): string {\n    if (date == null) {\n      throw new Error(FormatTimeInWordsPipe.NO_ARGS_ERROR);\n    }\n\n    // set the pipe to the Observable if not yet done, and return an async pipe\n    if (!this.agoExpression) {\n      this.agoExpression = this.timeAgo(date, { ...defaultConfig, ...options });\n    }\n    return this.async.transform(this.agoExpression);\n  }\n\n  private timeAgo(date: string | number | Date, options?): Observable<string> {\n    let nextBackoff = this.backoff(date);\n    return of(true).pipe(\n      // will not recheck input until delay completes\n      repeatWhen(notify => notify.pipe(delayWhen(() => interval(nextBackoff)))),\n      takeWhile(_ => !this.isDestroyed),\n      map(_ => formatDistance(this.stringToDate(date), new Date(), options)),\n      tap(_ => (nextBackoff = this.backoff(date))),\n    );\n  }\n\n  private backoff(date: string | number | Date): number {\n    const minutesElapsed = Math.abs(differenceInMinutes(new Date(), this.stringToDate(date))); // this will always be positive\n    let backoffAmountInSeconds: number;\n    if (minutesElapsed < 2) {\n      backoffAmountInSeconds = 5;\n    } else if (minutesElapsed >= 2 && minutesElapsed < 5) {\n      backoffAmountInSeconds = 15;\n    } else if (minutesElapsed >= 5 && minutesElapsed < 60) {\n      backoffAmountInSeconds = 30;\n    } else if (minutesElapsed >= 60) {\n      backoffAmountInSeconds = 300; // 5 minutes\n    }\n    return backoffAmountInSeconds * 1000; // return an amount of milliseconds\n  }\n\n  private stringToDate(date: string | number | Date): number | Date {\n    const isString = s => typeof s === 'string' || s instanceof String;\n    return isString(date) ? parseISO(date) : date;\n  }\n}\n","import { ChangeDetectorRef, Pipe } from '@angular/core';\nimport { AsyncPipe } from '@angular/common';\nimport { interval, of } from 'rxjs';\nimport { delayWhen, map, repeatWhen, takeWhile, tap } from 'rxjs/operators';\nimport { differenceInMinutes, formatDistance } from 'date-fns/esm';\nimport { parseISO } from 'date-fns/esm';\nimport * as i0 from \"@angular/core\";\nconst defaultConfig = { addSuffix: true };\n/**\n * impure pipe, which in general can lead to bad performance\n * but the backoff function limits the frequency the pipe checks for updates\n * so the performance is close to that of a pure pipe\n * the downside of this is that if you change the value of the input, the pipe might not notice for a while\n * so this pipe is intended for static data\n *\n * expected input is a time (number, string or Date)\n * output is a string expressing distance from that time to now, plus the suffix 'ago'\n * output refreshes at dynamic intervals, with refresh rate slowing down as the input time gets further away from now\n */\nexport class FormatTimeInWordsPipe {\n    constructor(cdr) {\n        this.cdr = cdr;\n        this.isDestroyed = false;\n        this.async = new AsyncPipe(this.cdr);\n    }\n    ngOnDestroy() {\n        this.isDestroyed = true; // pipe will stop executing after next iteration\n    }\n    transform(date, options) {\n        if (date == null) {\n            throw new Error(FormatTimeInWordsPipe.NO_ARGS_ERROR);\n        }\n        // set the pipe to the Observable if not yet done, and return an async pipe\n        if (!this.agoExpression) {\n            this.agoExpression = this.timeAgo(date, Object.assign({}, defaultConfig, options));\n        }\n        return this.async.transform(this.agoExpression);\n    }\n    timeAgo(date, options) {\n        let nextBackoff = this.backoff(date);\n        return of(true).pipe(\n        // will not recheck input until delay completes\n        repeatWhen(notify => notify.pipe(delayWhen(() => interval(nextBackoff)))), takeWhile(_ => !this.isDestroyed), map(_ => formatDistance(this.stringToDate(date), new Date(), options)), tap(_ => (nextBackoff = this.backoff(date))));\n    }\n    backoff(date) {\n        const minutesElapsed = Math.abs(differenceInMinutes(new Date(), this.stringToDate(date))); // this will always be positive\n        let backoffAmountInSeconds;\n        if (minutesElapsed < 2) {\n            backoffAmountInSeconds = 5;\n        }\n        else if (minutesElapsed >= 2 && minutesElapsed < 5) {\n            backoffAmountInSeconds = 15;\n        }\n        else if (minutesElapsed >= 5 && minutesElapsed < 60) {\n            backoffAmountInSeconds = 30;\n        }\n        else if (minutesElapsed >= 60) {\n            backoffAmountInSeconds = 300; // 5 minutes\n        }\n        return backoffAmountInSeconds * 1000; // return an amount of milliseconds\n    }\n    stringToDate(date) {\n        const isString = s => typeof s === 'string' || s instanceof String;\n        return isString(date) ? parseISO(date) : date;\n    }\n}\nFormatTimeInWordsPipe.NO_ARGS_ERROR = 'formatTimeInWords: missing required arguments';\nFormatTimeInWordsPipe.ngPipeDef = i0.ɵɵdefinePipe({ name: \"formatTimeInWords\", type: FormatTimeInWordsPipe, factory: function FormatTimeInWordsPipe_Factory(t) { return new (t || FormatTimeInWordsPipe)(i0.ɵɵinjectPipeChangeDetectorRef()); }, pure: false });\n/*@__PURE__*/ i0.ɵsetClassMetadata(FormatTimeInWordsPipe, [{\n        type: Pipe,\n        args: [{ name: 'formatTimeInWords', pure: false }]\n    }], function () { return [{ type: i0.ChangeDetectorRef }]; }, null);\n","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import { keyframes, style } from '@angular/animations';\n\nexport const wobble = [\n  style({\n    transform: 'translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg)',\n    offset: 0.15,\n  }),\n  style({\n    transform: 'translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg)',\n    offset: 0.3,\n  }),\n  style({\n    transform: 'translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg)',\n    offset: 0.45,\n  }),\n  style({\n    transform: 'translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg)',\n    offset: 0.6,\n  }),\n  style({\n    transform: 'translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg)',\n    offset: 0.75,\n  }),\n  style({ transform: 'none', offset: 1 }),\n];\n\nexport const jello = [\n  // style({transform: 'none', offset: .111}),\n  style({ transform: 'skewX(-12.5deg) skewY(-12.5deg)', offset: 0.111 }),\n  style({ transform: 'skewX(6.25deg) skewY(6.25deg)', offset: 0.222 }),\n  style({ transform: 'skewX(-3.125deg) skewY(-3.125deg)', offset: 0.333 }),\n  style({ transform: 'skewX(1.5625deg) skewY(1.5625deg)', offset: 0.444 }),\n  style({ transform: 'skewX(-0.78125deg) skewY(-0.78125deg)', offset: 0.555 }),\n  style({ transform: 'skewX(0.390625deg) skewY(0.390625deg)', offset: 0.666 }),\n  style({ transform: 'skewX(0.390625deg) skewY(0.390625deg)', offset: 0.777 }),\n  style({\n    transform: 'skewX(-0.1953125deg) skewY(-0.1953125deg)',\n    offset: 0.888,\n  }),\n  style({ transform: 'none', offset: 1 }),\n];\n\nexport const swing = [\n  style({ transform: 'rotate3d(0, 0, 1, 15deg)', offset: 0.2 }),\n  style({ transform: 'rotate3d(0, 0, 1, -10deg)', offset: 0.4 }),\n  style({ transform: 'rotate3d(0, 0, 1, 5deg)', offset: 0.6 }),\n  style({ transform: 'rotate3d(0, 0, 1, -5deg)', offset: 0.8 }),\n  style({ transform: 'none', offset: 1 }),\n];\n\nexport const slideOutLeft = [\n  style({ transform: 'translate3d(0, 0, 0)', offset: 0 }),\n  style({ transform: 'translate3d(-150%, 0, 0)', opacity: 0, offset: 1 }),\n];\n\nexport const zoomOutRight = [\n  style({\n    transform: 'scale3d(.475, .475, .475) translate3d(-42px, 0, 0)',\n    offset: 0.4,\n  }),\n  style({\n    transform: 'scale(.1) translate3d(2000px, 0, 0)',\n    'transform-origin': 'right center',\n    offset: 1,\n  }),\n];\n\nexport const rotateOutUpRight = [\n  style({\n    transform: 'rotate3d(0, 0, 0, 0deg)',\n    opacity: 1,\n    'transform-origin': 'right bottom',\n    offset: 0,\n  }),\n  style({\n    transform: 'rotate3d(0, 0, 1, 90deg)',\n    opacity: 0,\n    'transform-origin': 'right bottom',\n    offset: 1,\n  }),\n];\n\nexport const flipOutY = [\n  style({ transform: 'perspective(400px)', offset: 0 }),\n  style({\n    transform: 'perspective(400px) rotate3d(0, 1, 0, -15deg)',\n    opacity: 1,\n    offset: 0.33,\n  }),\n  style({\n    transform: 'perspective(400px) rotate3d(0, 1, 0, 90deg)',\n    opacity: 0,\n    offset: 1,\n  }),\n];\n","import { trigger, animate, transition, keyframes } from '@angular/animations';\n\nimport * as kf from './keyframes';\n\nexport const cardAnimation = trigger('cardAnimator', [\n  transition('* => wobble', animate(1000, keyframes(kf.wobble))),\n  transition('* => swing', animate(1000, keyframes(kf.swing))),\n  transition('* => jello', animate(1000, keyframes(kf.jello))),\n  transition('* => zoomOutRight', animate(1000, keyframes(kf.zoomOutRight))),\n  transition('* => slideOutLeft', animate(1000, keyframes(kf.slideOutLeft))),\n  transition('* => rotateOutUpRight', animate(1000, keyframes(kf.rotateOutUpRight))),\n  transition('* => flipOutY', animate(1000, keyframes(kf.flipOutY))),\n]);\n","import { trigger, animate, transition, style, state, query } from '@angular/animations';\n\nexport const fadeAnimation = trigger('fadeAnimation', [\n  transition('* => *', [\n    query(':enter', [style({ opacity: 0 })], { optional: true }),\n    query(':leave', [style({ opacity: 1 }), animate('0.3s', style({ opacity: 0 }))], { optional: true }),\n    query(':enter', [style({ opacity: 0 }), animate('0.3s', style({ opacity: 1 }))], { optional: true }),\n  ]),\n]);\n\nexport const fadeOutAnimation = trigger('fadeOutAnimation', [\n  state(\n    '*',\n    style({\n      position: 'absolute',\n      'min-width': '100%',\n      'min-height': '100%',\n      'max-width': '100%',\n      display: 'flex',\n      'flex-direction': 'column',\n      flex: '1',\n      height: '100%',\n    }),\n  ),\n  state(\n    'void',\n    style({\n      position: 'absolute',\n      'min-width': '100%',\n      'min-height': '100%',\n      'max-width': '100%',\n      display: 'flex',\n      'flex-direction': 'column',\n      flex: '1',\n      height: '100%',\n    }),\n  ),\n  transition('* => void', [\n    style({\n      opacity: 1,\n    }),\n    animate(\n      '150ms linear',\n      style({\n        opacity: 0,\n      }),\n    ),\n  ]),\n]);\n","import { trigger, animate, transition, style } from '@angular/animations';\n\nexport const expandAnimation = trigger('expandAnimation', [\n  transition(':enter', [style({ height: 0 }), animate('.4s ease', style({ height: '*' }))]),\n  transition(':leave', [animate('.4s ease', style({ height: 0 }))]),\n]);\n","import { animate, sequence, style, transition, trigger } from '@angular/animations';\n\nexport const listFadeAnimation = trigger('listFade', [\n  transition(':leave', [\n    style({ height: '*', opacity: '1', transform: 'translateX(0)' }),\n    sequence([\n      animate('250ms ease', style({ height: '*', opacity: 0, transform: 'translateX(50px)' })),\n      animate('100ms ease', style({ height: '0', opacity: 0, transform: 'translateX(50px)' })),\n    ]),\n  ]),\n  transition(':enter', [\n    style({ height: '0', opacity: '0', transform: 'translateX(50px)' }),\n    animate('350ms 350ms ease', style({ height: '*', opacity: 1, transform: 'translateX(0)' })),\n  ]),\n]);\n","import { trigger, transition, state, group, query, style, animate, animateChild } from '@angular/animations';\n\nexport const routeAnimation = trigger('routeAnimation', [\n  transition('* <=> *', [\n    // Initial state of new route\n    query(\n      ':enter',\n      style({\n        position: 'fixed',\n        width: '100%',\n        transform: 'translateX(-100%)',\n      }),\n      { optional: true },\n    ),\n    // move page off screen right on leave\n    query(\n      ':leave',\n      animate(\n        '500ms ease',\n        style({\n          position: 'fixed',\n          width: '100%',\n          transform: 'translateX(100%)',\n        }),\n      ),\n      {\n        optional: true,\n      },\n    ),\n    // move page in screen from left to right\n    query(':enter', animate('500ms ease', style({ opacity: 1, transform: 'translateX(0%)' })), { optional: true }),\n  ]),\n]);\n\nexport const hierarchicalRouteAnimation = trigger('routeAnimation', [\n  transition(':increment', [\n    style({ height: '!' }),\n    query(':enter', style({ transform: 'translateX(100%)' }), { optional: true }),\n    query(':enter, :leave', style({ position: 'absolute', top: 0, left: 0, right: 0 }), { optional: true }),\n    // animate the leave page away\n    group([\n      query(':leave', [animate('500ms ease-in-out', style({ transform: 'translateX(-100%)' }))], {\n        optional: true,\n      }),\n      // and now reveal the enter\n      query(':enter', animate('500ms ease-in-out', style({ transform: 'translateX(0)' })), {\n        optional: true,\n      }),\n      // query('@fadeAnimation', animateChild(), {optional: true}),\n    ]),\n  ]),\n  transition(':decrement', [\n    style({ height: '!' }),\n    query(':enter', style({ transform: 'translateX(-100%)' }), { optional: true }),\n    query(':enter, :leave', style({ position: 'absolute', top: 0, left: 0, right: 0 }), { optional: true }),\n    // animate the leave page away\n    group([\n      query(':leave', [animate('500ms ease-in-out', style({ transform: 'translateX(100%)' }))], {\n        optional: true,\n      }),\n      // and now reveal the enter\n      query(':enter', animate('500ms ease-in-out', style({ transform: 'translateX(0)' })), {\n        optional: true,\n      }),\n      // query('@fadeAnimation', animateChild() , {optional: true}),\n    ]),\n  ]),\n]);\n","import { trigger, animate, transition, style, state } from '@angular/animations';\n\nexport const rotateAnimation = trigger('rotateAnimation', [\n  state('initial', style({ transform: 'rotate(0deg)' })),\n  state('rotated', style({ transform: 'rotate(-180deg)' })),\n  transition('* => *', [animate('.4s ease')]),\n]);\n","import { trigger, animate, transition, style, state } from '@angular/animations';\n\nexport const scrollFabAnimation = trigger('scrollAnimation', [\n  state('show', style({ opacity: 1, transform: 'scale(1)' })),\n  state('hide', style({ opacity: 0, transform: 'scale(0)' })),\n  transition('show => hide', animate('500ms ease-out')),\n  transition('hide => show', animate('500ms ease-in')),\n]);\n","import { trigger, animate, transition, style, state } from '@angular/animations';\n\nexport const scrollAnimation = trigger('scrollAnimation', [\n  state('show', style({ opacity: 1, transform: 'translateX(0)' })),\n  state('hide', style({ opacity: 0, transform: 'translateX(-100%)' })),\n  transition('show => hide', animate('700ms ease-out')),\n  transition('hide => show', animate('700ms ease-in')),\n]);\n","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class AnimationsService {\n  constructor() {}\n\n  private static routeAnimationType: RouteAnimationType = 'ELEMENTS'; // 'NONE';\n\n  static isRouteAnimationsType(type: RouteAnimationType) {\n    return AnimationsService.routeAnimationType === type;\n  }\n\n  updateRouteAnimationType(pageAnimations: boolean, elementsAnimations: boolean) {\n    AnimationsService.routeAnimationType =\n      pageAnimations && elementsAnimations ? 'ALL' : pageAnimations ? 'PAGE' : elementsAnimations ? 'ELEMENTS' : 'NONE';\n  }\n}\n\nexport type RouteAnimationType = 'ALL' | 'PAGE' | 'ELEMENTS' | 'NONE';\n","import { Injectable } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class AnimationsService {\n    constructor() { }\n    static isRouteAnimationsType(type) {\n        return AnimationsService.routeAnimationType === type;\n    }\n    updateRouteAnimationType(pageAnimations, elementsAnimations) {\n        AnimationsService.routeAnimationType =\n            pageAnimations && elementsAnimations ? 'ALL' : pageAnimations ? 'PAGE' : elementsAnimations ? 'ELEMENTS' : 'NONE';\n    }\n}\nAnimationsService.routeAnimationType = 'ELEMENTS'; // 'NONE';\nAnimationsService.ngInjectableDef = i0.ɵɵdefineInjectable({ token: AnimationsService, factory: function AnimationsService_Factory(t) { return new (t || AnimationsService)(); }, providedIn: 'root' });\n/*@__PURE__*/ i0.ɵsetClassMetadata(AnimationsService, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null);\n","import { animate, query, style, transition, trigger, stagger, sequence } from '@angular/animations';\nimport { AnimationsService } from './animations.service';\n\nexport const ROUTE_ANIMATIONS_ELEMENTS = 'route-animations-elements';\n\nconst STEPS_ALL: any[] = [\n  query(':enter > *', style({ opacity: 0, position: 'fixed' }), {\n    optional: true,\n  }),\n  query(':enter .' + ROUTE_ANIMATIONS_ELEMENTS, style({ opacity: 0 }), {\n    optional: true,\n  }),\n  sequence([\n    query(\n      ':leave > *',\n      [\n        style({ transform: 'translateY(0%)', opacity: 1 }),\n        animate('0.2s ease-in-out', style({ transform: 'translateY(-3%)', opacity: 0 })),\n        style({ position: 'fixed' }),\n      ],\n      { optional: true },\n    ),\n    query(\n      ':enter > *',\n      [\n        style({\n          transform: 'translateY(-3%)',\n          opacity: 0,\n          position: 'static',\n        }),\n        animate('0.5s ease-in-out', style({ transform: 'translateY(0%)', opacity: 1 })),\n      ],\n      { optional: true },\n    ),\n  ]),\n  query(\n    ':enter .' + ROUTE_ANIMATIONS_ELEMENTS,\n    stagger(100, [\n      style({ transform: 'translateY(15%)', opacity: 0 }),\n      animate('0.5s ease-in-out', style({ transform: 'translateY(0%)', opacity: 1 })),\n    ]),\n    { optional: true },\n  ),\n];\nconst STEPS_NONE = [];\nconst STEPS_PAGE = [STEPS_ALL[0], STEPS_ALL[2]];\nconst STEPS_ELEMENTS = [STEPS_ALL[1], STEPS_ALL[3]];\n\nexport const routerTransition = trigger('routerTransition', [\n  transition(isRouteAnimationsAll, STEPS_ALL),\n  transition(isRouteAnimationsNone, STEPS_NONE),\n  transition(isRouteAnimationsPage, STEPS_PAGE),\n  transition(isRouteAnimationsElements, STEPS_ELEMENTS),\n]);\n\nexport function isRouteAnimationsAll() {\n  return AnimationsService.isRouteAnimationsType('ALL');\n}\n\nexport function isRouteAnimationsNone() {\n  return AnimationsService.isRouteAnimationsType('NONE');\n}\n\nexport function isRouteAnimationsPage() {\n  return AnimationsService.isRouteAnimationsType('PAGE');\n}\n\nexport function isRouteAnimationsElements() {\n  return AnimationsService.isRouteAnimationsType('ELEMENTS');\n}\n","import { trigger, animate, transition, style, state } from '@angular/animations';\nimport { SidenavState } from '@ngx-starter-kit/navigator';\n\nexport const sidenavAnimation = trigger('sidenavAnimation', [\n  state(SidenavState.Collapsed, style({ position: 'absolute', width: '66px' })),\n  state(SidenavState.CollapsedHover, style({ position: 'absolute', width: '270px' })),\n  state(SidenavState.Expanded, style({ position: 'relative', width: '270px' })),\n  state(\n    SidenavState.Mobile,\n    style({\n      position: 'absolute',\n      width: '270px',\n      transform: 'translate3d(-270px, 0, 0)',\n      visibility: 'hidden',\n    }),\n  ),\n  state(\n    SidenavState.MobileOpen,\n    style({\n      position: 'absolute',\n      width: '270px',\n      transform: 'translate3d(0, 0, 0)',\n      visibility: 'visible',\n    }),\n  ),\n  transition(`${SidenavState.Expanded} => ${SidenavState.CollapsedHover}`, [\n    style({ position: 'absolute' }),\n    animate('300ms cubic-bezier(.35, 0, .25, 1)'),\n  ]),\n  transition(`${SidenavState.Expanded} => ${SidenavState.Collapsed}`, [\n    style({ position: 'absolute' }),\n    animate('300ms cubic-bezier(.35, 0, .25, 1)'),\n  ]),\n  transition(`${SidenavState.CollapsedHover} => ${SidenavState.Collapsed}`, [\n    animate('300ms cubic-bezier(.35, 0, .25, 1)'),\n  ]),\n  transition(\n    `${SidenavState.Collapsed} => ${SidenavState.CollapsedHover}`,\n    animate('300ms cubic-bezier(.35, 0, .25, 1)'),\n  ),\n  transition(`${SidenavState.Mobile} => ${SidenavState.MobileOpen}`, animate('300ms cubic-bezier(.35, 0, .25, 1)')),\n  transition(`${SidenavState.MobileOpen} => ${SidenavState.Mobile}`, animate('300ms cubic-bezier(.35, 0, .25, 1)')),\n]);\n\nexport const dropdownAnimation = trigger('dropdownAnimation', [\n  state('collapsed', style({ height: 0 })),\n  state('expanded', style({ height: '*' })),\n  transition('collapsed <=> expanded', [animate('400ms cubic-bezier(.35, 0, .25, 1)')]),\n]);\n","export { Animations } from './lib/animations';\nexport * from './lib/card.animation';\nexport * from './lib/expand.animation';\nexport * from './lib/fade.animation';\nexport * from './lib/list.animation';\nexport * from './lib/rotate.animation';\nexport * from './lib/route.animation';\nexport * from './lib/scroll.animation';\nexport * from './lib/scroll-fab.animation';\nexport * from './lib/router.transition';\nexport * from './lib/sidenav.animation';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, Component, ViewEncapsulation, ElementRef, Input, Optional, ContentChildren, Directive, ChangeDetectionStrategy, Inject, NgModule } from '@angular/core';\nimport { MatLine, setLines, MatLineModule, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide a grid list to a tile and to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [1, \"mat-grid-tile\"];\nconst _c1 = [1, \"mat-figure\"];\nconst _c2 = [\"*\"];\nconst _c3 = [1, \"mat-grid-list-text\"];\nconst _c4 = [[[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c5 = [\"[mat-grid-avatar], [matGridAvatar]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c6 = [1, \"mat-grid-avatar\"];\nconst _c7 = [1, \"mat-grid-tile-header\"];\nconst _c8 = [1, \"mat-grid-tile-footer\"];\nconst _c9 = [1, \"mat-grid-list\"];\nconst MAT_GRID_LIST = new InjectionToken('MAT_GRID_LIST');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatGridTile {\n    /**\n     * @param {?} _element\n     * @param {?=} _gridList\n     */\n    constructor(_element, _gridList) {\n        this._element = _element;\n        this._gridList = _gridList;\n        this._rowspan = 1;\n        this._colspan = 1;\n    }\n    /**\n     * Amount of rows that the grid tile takes up.\n     * @return {?}\n     */\n    get rowspan() { return this._rowspan; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set rowspan(value) { this._rowspan = Math.round(coerceNumberProperty(value)); }\n    /**\n     * Amount of columns that the grid tile takes up.\n     * @return {?}\n     */\n    get colspan() { return this._colspan; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set colspan(value) { this._colspan = Math.round(coerceNumberProperty(value)); }\n    /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    _setStyle(property, value) {\n        ((/** @type {?} */ (this._element.nativeElement.style)))[property] = value;\n    }\n}\nMatGridTile.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatGridTile, selectors: [[\"mat-grid-tile\"]], factory: function MatGridTile_Factory(t) { return new (t || MatGridTile)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_GRID_LIST, 8)); }, hostBindings: function MatGridTile_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c0);\n    } }, inputs: { rowspan: \"rowspan\", colspan: \"colspan\" }, exportAs: [\"matGridTile\"], ngContentSelectors: _c2, consts: 2, vars: 0, template: function MatGridTile_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"figure\", _c1);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-footer,.mat-grid-tile .mat-grid-tile-header{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-footer>*,.mat-grid-tile .mat-grid-tile-header>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-tile-footer.mat-2-line,.mat-grid-tile .mat-grid-tile-header.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatGridTile, [{\n        type: Component,\n        args: [{ selector: 'mat-grid-tile',\n                exportAs: 'matGridTile',\n                host: {\n                    'class': 'mat-grid-tile'\n                },\n                template: \"<figure class=\\\"mat-figure\\\"><ng-content></ng-content></figure>\",\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-footer,.mat-grid-tile .mat-grid-tile-header{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-footer>*,.mat-grid-tile .mat-grid-tile-header>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-tile-footer.mat-2-line,.mat-grid-tile .mat-grid-tile-header.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_GRID_LIST]\n            }] }]; }, { constructor: [], _element: [], _gridList: [], _rowspan: [], _colspan: [], rowspan: [{\n            type: Input\n        }], rowspan: [], colspan: [{\n            type: Input\n        }], colspan: [], _setStyle: [] });\n/** @nocollapse */\nMatGridTile.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_GRID_LIST,] }] }\n];\nMatGridTile.propDecorators = {\n    rowspan: [{ type: Input }],\n    colspan: [{ type: Input }]\n};\nclass MatGridTileText {\n    /**\n     * @param {?} _element\n     */\n    constructor(_element) {\n        this._element = _element;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n}\nMatGridTileText.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatGridTileText, selectors: [[\"mat-grid-tile-header\"], [\"mat-grid-tile-footer\"]], factory: function MatGridTileText_Factory(t) { return new (t || MatGridTileText)(ɵngcc0.ɵɵdirectiveInject(ElementRef)); }, contentQueries: function MatGridTileText_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, ngContentSelectors: _c5, consts: 4, vars: 0, template: function MatGridTileText_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", _c3);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatGridTileText, [{\n        type: Component,\n        args: [{ selector: 'mat-grid-tile-header, mat-grid-tile-footer',\n                template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content><div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div><ng-content></ng-content>\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ElementRef }]; }, { constructor: [], _element: [], ngAfterContentInit: [], _lines: [{\n            type: ContentChildren,\n            args: [MatLine]\n        }] });\n/** @nocollapse */\nMatGridTileText.ctorParameters = () => [\n    { type: ElementRef }\n];\nMatGridTileText.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine,] }]\n};\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridAvatarCssMatStyler {\n}\nMatGridAvatarCssMatStyler.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatGridAvatarCssMatStyler, selectors: [[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], factory: function MatGridAvatarCssMatStyler_Factory(t) { return new (t || MatGridAvatarCssMatStyler)(); }, hostBindings: function MatGridAvatarCssMatStyler_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c6);\n    } } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatGridAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-grid-avatar], [matGridAvatar]',\n                host: { 'class': 'mat-grid-avatar' }\n            }]\n    }], null, null);\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridTileHeaderCssMatStyler {\n}\nMatGridTileHeaderCssMatStyler.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatGridTileHeaderCssMatStyler, selectors: [[\"mat-grid-tile-header\"]], factory: function MatGridTileHeaderCssMatStyler_Factory(t) { return new (t || MatGridTileHeaderCssMatStyler)(); }, hostBindings: function MatGridTileHeaderCssMatStyler_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c7);\n    } } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatGridTileHeaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-header',\n                host: { 'class': 'mat-grid-tile-header' }\n            }]\n    }], null, null);\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridTileFooterCssMatStyler {\n}\nMatGridTileFooterCssMatStyler.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatGridTileFooterCssMatStyler, selectors: [[\"mat-grid-tile-footer\"]], factory: function MatGridTileFooterCssMatStyler_Factory(t) { return new (t || MatGridTileFooterCssMatStyler)(); }, hostBindings: function MatGridTileFooterCssMatStyler_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c8);\n    } } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatGridTileFooterCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-footer',\n                host: { 'class': 'mat-grid-tile-footer' }\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * \\@docs-private\n */\nclass TileCoordinator {\n    constructor() {\n        /**\n         * Index at which the search for the next gap will start.\n         */\n        this.columnIndex = 0;\n        /**\n         * The current row index.\n         */\n        this.rowIndex = 0;\n    }\n    /**\n     * Gets the total number of rows occupied by tiles\n     * @return {?}\n     */\n    get rowCount() { return this.rowIndex + 1; }\n    /**\n     * Gets the total span of rows occupied by tiles.\n     * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n     * @return {?}\n     */\n    get rowspan() {\n        /** @type {?} */\n        const lastRowMax = Math.max(...this.tracker);\n        // if any of the tiles has a rowspan that pushes it beyond the total row count,\n        // add the difference to the rowcount\n        return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n    }\n    /**\n     * Updates the tile positions.\n     * @param {?} numColumns Amount of columns in the grid.\n     * @param {?} tiles\n     * @return {?}\n     */\n    update(numColumns, tiles) {\n        this.columnIndex = 0;\n        this.rowIndex = 0;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => this._trackTile(tile)));\n    }\n    /**\n     * Calculates the row and col position of a tile.\n     * @private\n     * @param {?} tile\n     * @return {?}\n     */\n    _trackTile(tile) {\n        // Find a gap large enough for this tile.\n        /** @type {?} */\n        const gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    }\n    /**\n     * Finds the next available space large enough to fit the tile.\n     * @private\n     * @param {?} tileCols\n     * @return {?}\n     */\n    _findMatchingGap(tileCols) {\n        if (tileCols > this.tracker.length) {\n            throw Error(`mat-grid-list: tile with colspan ${tileCols} is wider than ` +\n                `grid with cols=\"${this.tracker.length}\".`);\n        }\n        // Start index is inclusive, end index is exclusive.\n        /** @type {?} */\n        let gapStartIndex = -1;\n        /** @type {?} */\n        let gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n            // Continue iterating until we find a gap wide enough for this tile. Since gapEndIndex is\n            // exclusive, gapEndIndex is 0 means we didn't find a gap and should continue.\n        } while ((gapEndIndex - gapStartIndex < tileCols) || (gapEndIndex == 0));\n        // If we still didn't manage to find a gap, ensure that the index is\n        // at least zero so the tile doesn't get pulled out of the grid.\n        return Math.max(gapStartIndex, 0);\n    }\n    /**\n     * Move \"down\" to the next row.\n     * @private\n     * @return {?}\n     */\n    _nextRow() {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (let i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    }\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     * @private\n     * @param {?} gapStartIndex\n     * @return {?}\n     */\n    _findGapEndIndex(gapStartIndex) {\n        for (let i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    }\n    /**\n     * Update the tile tracker to account for the given tile in the given space.\n     * @private\n     * @param {?} start\n     * @param {?} tile\n     * @return {?}\n     */\n    _markTilePosition(start, tile) {\n        for (let i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    }\n}\n/**\n * Simple data structure for tile position (row, col).\n * \\@docs-private\n */\nclass TilePosition {\n    /**\n     * @param {?} row\n     * @param {?} col\n     */\n    constructor(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * RegExp that can be used to check whether a value will\n * be allowed inside a CSS `calc()` expression.\n * @type {?}\n */\nconst cssCalcAllowedValue = /^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$/;\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * \\@docs-private\n * @abstract\n */\nclass TileStyler {\n    constructor() {\n        this._rows = 0;\n        this._rowspan = 0;\n    }\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param {?} gutterSize Size of the grid's gutter.\n     * @param {?} tracker Instance of the TileCoordinator.\n     * @param {?} cols Amount of columns in the grid.\n     * @param {?} direction Layout direction of the grid.\n     * @return {?}\n     */\n    init(gutterSize, tracker, cols, direction) {\n        this._gutterSize = normalizeUnits(gutterSize);\n        this._rows = tracker.rowCount;\n        this._rowspan = tracker.rowspan;\n        this._cols = cols;\n        this._direction = direction;\n    }\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param {?} sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param {?} gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return {?} The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    getBaseTileSize(sizePercent, gutterFraction) {\n        // Take the base size percent (as would be if evenly dividing the size between cells),\n        // and then subtracting the size of one gutter. However, since there are no gutters on the\n        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n        // edge evenly among the cells).\n        return `(${sizePercent}% - (${this._gutterSize} * ${gutterFraction}))`;\n    }\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} offset Number of tiles that have already been rendered in the row/column.\n     * @return {?} Position of the tile as a CSS calc() expression.\n     */\n    getTilePosition(baseSize, offset) {\n        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n        // row/column (offset).\n        return offset === 0 ? '0' : calc(`(${baseSize} + ${this._gutterSize}) * ${offset}`);\n    }\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} span The tile's rowspan or colspan.\n     * @return {?} Size of the tile as a CSS calc() expression.\n     */\n    getTileSize(baseSize, span) {\n        return `(${baseSize} * ${span}) + (${span - 1} * ${this._gutterSize})`;\n    }\n    /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param {?} tile Tile to which to apply the styling.\n     * @param {?} rowIndex Index of the tile's row.\n     * @param {?} colIndex Index of the tile's column.\n     * @return {?}\n     */\n    setStyle(tile, rowIndex, colIndex) {\n        // Percent of the available horizontal space that one column takes up.\n        /** @type {?} */\n        let percentWidthPerTile = 100 / this._cols;\n        // Fraction of the vertical gutter size that each column takes up.\n        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n        /** @type {?} */\n        let gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    }\n    /**\n     * Sets the horizontal placement of the tile in the list.\n     * @param {?} tile\n     * @param {?} colIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    setColStyles(tile, colIndex, percentWidth, gutterWidth) {\n        // Base horizontal size of a column.\n        /** @type {?} */\n        let baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n        // The width and horizontal position of each tile is always calculated the same way, but the\n        // height and vertical position depends on the rowMode.\n        /** @type {?} */\n        let side = this._direction === 'rtl' ? 'right' : 'left';\n        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n    }\n    /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     * @return {?}\n     */\n    getGutterSpan() {\n        return `${this._gutterSize} * (${this._rowspan} - 1)`;\n    }\n    /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param {?} tileHeight Height of the tile.\n     * @return {?}\n     */\n    getTileSpan(tileHeight) {\n        return `${this._rowspan} * ${this.getTileSize(tileHeight, 1)}`;\n    }\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method can be implemented by each type of TileStyler.\n     * \\@docs-private\n     * @return {?}\n     */\n    getComputedHeight() { return null; }\n}\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example `<mat-grid-list cols=\"3\" rowHeight=\"100px\">`\n * \\@docs-private\n */\nclass FixedTileStyler extends TileStyler {\n    /**\n     * @param {?} fixedRowHeight\n     */\n    constructor(fixedRowHeight) {\n        super();\n        this.fixedRowHeight = fixedRowHeight;\n    }\n    /**\n     * @param {?} gutterSize\n     * @param {?} tracker\n     * @param {?} cols\n     * @param {?} direction\n     * @return {?}\n     */\n    init(gutterSize, tracker, cols, direction) {\n        super.init(gutterSize, tracker, cols, direction);\n        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n        if (!cssCalcAllowedValue.test(this.fixedRowHeight)) {\n            throw Error(`Invalid value \"${this.fixedRowHeight}\" set as rowHeight.`);\n        }\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex) {\n        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n    }\n    /**\n     * @return {?}\n     */\n    getComputedHeight() {\n        return [\n            'height', calc(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        list._setListStyle(['height', null]);\n        if (list._tiles) {\n            list._tiles.forEach((/**\n             * @param {?} tile\n             * @return {?}\n             */\n            tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            }));\n        }\n    }\n}\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example `<mat-grid-list cols=\"3\" rowHeight=\"3:1\">`\n * \\@docs-private\n */\nclass RatioTileStyler extends TileStyler {\n    /**\n     * @param {?} value\n     */\n    constructor(value) {\n        super();\n        this._parseRatio(value);\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex, percentWidth, gutterWidth) {\n        /** @type {?} */\n        let percentHeightPerTile = percentWidth / this.rowHeightRatio;\n        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n        // Use padding-top and margin-top to maintain the given aspect ratio, as\n        // a percentage-based value for these properties is applied versus the *width* of the\n        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n    }\n    /**\n     * @return {?}\n     */\n    getComputedHeight() {\n        return [\n            'paddingBottom', calc(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        list._setListStyle(['paddingBottom', null]);\n        list._tiles.forEach((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => {\n            tile._setStyle('marginTop', null);\n            tile._setStyle('paddingTop', null);\n        }));\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _parseRatio(value) {\n        /** @type {?} */\n        const ratioParts = value.split(':');\n        if (ratioParts.length !== 2) {\n            throw Error(`mat-grid-list: invalid ratio given for row-height: \"${value}\"`);\n        }\n        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n    }\n}\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example `<mat-grid-list cols=\"3\" rowHeight=\"fit\">`\n *\n * \\@docs-private\n */\nclass FitTileStyler extends TileStyler {\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex) {\n        // Percent of the available vertical space that one row takes up.\n        /** @type {?} */\n        let percentHeightPerTile = 100 / this._rowspan;\n        // Fraction of the horizontal gutter size that each column takes up.\n        /** @type {?} */\n        let gutterHeightPerTile = (this._rows - 1) / this._rows;\n        // Base vertical size of a column.\n        /** @type {?} */\n        let baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        if (list._tiles) {\n            list._tiles.forEach((/**\n             * @param {?} tile\n             * @return {?}\n             */\n            tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            }));\n        }\n    }\n}\n/**\n * Wraps a CSS string in a calc function\n * @param {?} exp\n * @return {?}\n */\nfunction calc(exp) {\n    return `calc(${exp})`;\n}\n/**\n * Appends pixels to a CSS string if no units are given.\n * @param {?} value\n * @return {?}\n */\nfunction normalizeUnits(value) {\n    return value.match(/([A-Za-z%]+)$/) ? value : `${value}px`;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\n/** @type {?} */\nconst MAT_FIT_MODE = 'fit';\nclass MatGridList {\n    /**\n     * @param {?} _element\n     * @param {?} _dir\n     */\n    constructor(_element, _dir) {\n        this._element = _element;\n        this._dir = _dir;\n        /**\n         * The amount of space between tiles. This will be something like '5px' or '2em'.\n         */\n        this._gutter = '1px';\n    }\n    /**\n     * Amount of columns in the grid list.\n     * @return {?}\n     */\n    get cols() { return this._cols; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set cols(value) {\n        this._cols = Math.max(1, Math.round(coerceNumberProperty(value)));\n    }\n    /**\n     * Size of the grid list's gutter in pixels.\n     * @return {?}\n     */\n    get gutterSize() { return this._gutter; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set gutterSize(value) { this._gutter = `${value == null ? '' : value}`; }\n    /**\n     * Set internal representation of row height from the user-provided value.\n     * @return {?}\n     */\n    get rowHeight() { return this._rowHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set rowHeight(value) {\n        /** @type {?} */\n        const newValue = `${value == null ? '' : value}`;\n        if (newValue !== this._rowHeight) {\n            this._rowHeight = newValue;\n            this._setTileStyler(this._rowHeight);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._checkCols();\n        this._checkRowHeight();\n    }\n    /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._layoutTiles();\n    }\n    /**\n     * Throw a friendly error if cols property is missing\n     * @private\n     * @return {?}\n     */\n    _checkCols() {\n        if (!this.cols) {\n            throw Error(`mat-grid-list: must pass in number of columns. ` +\n                `Example: <mat-grid-list cols=\"3\">`);\n        }\n    }\n    /**\n     * Default to equal width:height if rowHeight property is missing\n     * @private\n     * @return {?}\n     */\n    _checkRowHeight() {\n        if (!this._rowHeight) {\n            this._setTileStyler('1:1');\n        }\n    }\n    /**\n     * Creates correct Tile Styler subtype based on rowHeight passed in by user\n     * @private\n     * @param {?} rowHeight\n     * @return {?}\n     */\n    _setTileStyler(rowHeight) {\n        if (this._tileStyler) {\n            this._tileStyler.reset(this);\n        }\n        if (rowHeight === MAT_FIT_MODE) {\n            this._tileStyler = new FitTileStyler();\n        }\n        else if (rowHeight && rowHeight.indexOf(':') > -1) {\n            this._tileStyler = new RatioTileStyler(rowHeight);\n        }\n        else {\n            this._tileStyler = new FixedTileStyler(rowHeight);\n        }\n    }\n    /**\n     * Computes and applies the size and position for all children grid tiles.\n     * @private\n     * @return {?}\n     */\n    _layoutTiles() {\n        if (!this._tileCoordinator) {\n            this._tileCoordinator = new TileCoordinator();\n        }\n        /** @type {?} */\n        const tracker = this._tileCoordinator;\n        /** @type {?} */\n        const tiles = this._tiles.filter((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => !tile._gridList || tile._gridList === this));\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._tileCoordinator.update(this.cols, tiles);\n        this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n        tiles.forEach((/**\n         * @param {?} tile\n         * @param {?} index\n         * @return {?}\n         */\n        (tile, index) => {\n            /** @type {?} */\n            const pos = tracker.positions[index];\n            this._tileStyler.setStyle(tile, pos.row, pos.col);\n        }));\n        this._setListStyle(this._tileStyler.getComputedHeight());\n    }\n    /**\n     * Sets style on the main grid-list element, given the style name and value.\n     * @param {?} style\n     * @return {?}\n     */\n    _setListStyle(style) {\n        if (style) {\n            ((/** @type {?} */ (this._element.nativeElement.style)))[style[0]] = style[1];\n        }\n    }\n}\nMatGridList.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatGridList, selectors: [[\"mat-grid-list\"]], factory: function MatGridList_Factory(t) { return new (t || MatGridList)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Directionality, 8)); }, contentQueries: function MatGridList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatGridTile, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tiles = _t);\n    } }, hostBindings: function MatGridList_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c9);\n    } }, inputs: { cols: \"cols\", gutterSize: \"gutterSize\", rowHeight: \"rowHeight\" }, exportAs: [\"matGridList\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_GRID_LIST,\n                useExisting: MatGridList\n            }])], ngContentSelectors: _c2, consts: 2, vars: 0, template: function MatGridList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-footer,.mat-grid-tile .mat-grid-tile-header{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-footer>*,.mat-grid-tile .mat-grid-tile-header>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-tile-footer.mat-2-line,.mat-grid-tile .mat-grid-tile-header.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatGridList, [{\n        type: Component,\n        args: [{ selector: 'mat-grid-list',\n                exportAs: 'matGridList',\n                template: \"<div><ng-content></ng-content></div>\",\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-footer,.mat-grid-tile .mat-grid-tile-header{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-footer>*,.mat-grid-tile .mat-grid-tile-header>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-tile-footer.mat-2-line,.mat-grid-tile .mat-grid-tile-header.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\"],\n                host: {\n                    'class': 'mat-grid-list'\n                },\n                providers: [{\n                        provide: MAT_GRID_LIST,\n                        useExisting: MatGridList\n                    }],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ElementRef }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { constructor: [], _element: [], _dir: [], _gutter: [], cols: [{\n            type: Input\n        }], cols: [], _cols: [], gutterSize: [{\n            type: Input\n        }], gutterSize: [], rowHeight: [{\n            type: Input\n        }], rowHeight: [], _rowHeight: [], ngOnInit: [], ngAfterContentChecked: [], _checkCols: [], _checkRowHeight: [], _setTileStyler: [], _tileStyler: [], _layoutTiles: [], _tileCoordinator: [], _setListStyle: [], _tiles: [{\n            type: ContentChildren,\n            args: [MatGridTile, { descendants: true }]\n        }] });\n/** @nocollapse */\nMatGridList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatGridList.propDecorators = {\n    _tiles: [{ type: ContentChildren, args: [MatGridTile, { descendants: true },] }],\n    cols: [{ type: Input }],\n    gutterSize: [{ type: Input }],\n    rowHeight: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatGridListModule {\n}\nMatGridListModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: MatGridListModule });\nMatGridListModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function MatGridListModule_Factory(t) { return new (t || MatGridListModule)(); }, imports: [[MatLineModule, MatCommonModule],\n        MatLineModule,\n        MatCommonModule] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(MatGridListModule, { declarations: function () { return [MatGridList,\n        MatGridTile,\n        MatGridTileText,\n        MatGridTileHeaderCssMatStyler,\n        MatGridTileFooterCssMatStyler,\n        MatGridAvatarCssMatStyler]; }, imports: function () { return [MatLineModule, MatCommonModule]; }, exports: function () { return [MatGridList,\n        MatGridTile,\n        MatGridTileText,\n        MatLineModule,\n        MatCommonModule,\n        MatGridTileHeaderCssMatStyler,\n        MatGridTileFooterCssMatStyler,\n        MatGridAvatarCssMatStyler]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatGridListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatCommonModule],\n                exports: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ],\n                declarations: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ]\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatGridListModule, MatGridList, MatGridTile, MatGridTileText, MatGridAvatarCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileFooterCssMatStyler, MAT_GRID_LIST as ɵa11 };\n\n//# sourceMappingURL=grid-list.js.map","import { Directive, ElementRef, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n  selector: '[ngxClickOutside]',\n})\nexport class ClickOutsideDirective {\n  @Output()\n  public ngxClickOutside = new EventEmitter<MouseEvent>();\n\n  constructor(private elementRef: ElementRef) {}\n\n  @HostListener('document:click', ['$event', '$event.target'])\n  public onClick(event: MouseEvent, targetElement: HTMLElement): void {\n    if (!targetElement) {\n      return;\n    }\n\n    const clickedInside = this.elementRef.nativeElement.contains(targetElement);\n    if (!clickedInside) {\n      this.ngxClickOutside.emit(event);\n    }\n  }\n}\n","import { Directive, ElementRef, EventEmitter, HostListener, Output } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class ClickOutsideDirective {\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        this.ngxClickOutside = new EventEmitter();\n    }\n    onClick(event, targetElement) {\n        if (!targetElement) {\n            return;\n        }\n        const clickedInside = this.elementRef.nativeElement.contains(targetElement);\n        if (!clickedInside) {\n            this.ngxClickOutside.emit(event);\n        }\n    }\n}\nClickOutsideDirective.ngDirectiveDef = i0.ɵɵdefineDirective({ type: ClickOutsideDirective, selectors: [[\"\", \"ngxClickOutside\", \"\"]], factory: function ClickOutsideDirective_Factory(t) { return new (t || ClickOutsideDirective)(i0.ɵɵdirectiveInject(i0.ElementRef)); }, hostBindings: function ClickOutsideDirective_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function ClickOutsideDirective_click_HostBindingHandler($event) { return ctx.onClick($event, $event.target); }, false, i0.ɵɵresolveDocument);\n    } }, outputs: { ngxClickOutside: \"ngxClickOutside\" } });\n/*@__PURE__*/ i0.ɵsetClassMetadata(ClickOutsideDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngxClickOutside]',\n            }]\n    }], function () { return [{ type: i0.ElementRef }]; }, { ngxClickOutside: [{\n            type: Output\n        }], onClick: [{\n            type: HostListener,\n            args: ['document:click', ['$event', '$event.target']]\n        }] });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directive, EventEmitter, Input, isDevMode, Output, Injectable, SkipSelf, Optional, NgModule, ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation, Inject, ɵɵdefineInjectable } from '@angular/core';\nimport { mixinDisabled, mixinInitialized, AnimationCurves, AnimationDurations } from '@angular/material/core';\nimport { Subject, merge } from 'rxjs';\nimport { animate, state, style, transition, trigger, keyframes, query, animateChild } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @param {?} id\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"mat-sort-header\", \"\"];\nconst _c1 = [1, \"mat-sort-header-container\"];\nconst _c2 = [\"type\", \"button\", 1, \"mat-sort-header-button\", 3, \"focus\", \"blur\"];\nconst _c3 = [\"class\", \"mat-sort-header-arrow\", 4, \"ngIf\"];\nconst _c4 = [1, \"mat-sort-header-arrow\"];\nconst _c5 = [1, \"mat-sort-header-stem\"];\nconst _c6 = [1, \"mat-sort-header-indicator\"];\nconst _c7 = [1, \"mat-sort-header-pointer-left\"];\nconst _c8 = [1, \"mat-sort-header-pointer-right\"];\nconst _c9 = [1, \"mat-sort-header-pointer-middle\"];\nfunction MatSortHeader_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r98 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", _c4);\n    ɵngcc0.ɵɵlistener(\"@arrowPosition.start\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r98); const ctx_r97 = ɵngcc0.ɵɵnextContext(); return ctx_r97._disableViewStateAnimation = true; });\n    ɵngcc0.ɵɵlistener(\"@arrowPosition.done\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r98); const ctx_r99 = ɵngcc0.ɵɵnextContext(); return ctx_r99._disableViewStateAnimation = false; });\n    ɵngcc0.ɵɵelement(1, \"div\", _c5);\n    ɵngcc0.ɵɵelementStart(2, \"div\", _c6);\n    ɵngcc0.ɵɵelement(3, \"div\", _c7);\n    ɵngcc0.ɵɵelement(4, \"div\", _c8);\n    ɵngcc0.ɵɵelement(5, \"div\", _c9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r96 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@arrowOpacity\", ctx_r96._getArrowViewState())(\"@arrowPosition\", ctx_r96._getArrowViewState())(\"@allowChildren\", ctx_r96._getArrowDirectionState());\n    ɵngcc0.ɵɵselect(2);\n    ɵngcc0.ɵɵproperty(\"@indicator\", ctx_r96._getArrowDirectionState());\n    ɵngcc0.ɵɵselect(3);\n    ɵngcc0.ɵɵproperty(\"@leftPointer\", ctx_r96._getArrowDirectionState());\n    ɵngcc0.ɵɵselect(4);\n    ɵngcc0.ɵɵproperty(\"@rightPointer\", ctx_r96._getArrowDirectionState());\n} }\nconst _c10 = [\"*\"];\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/**\n * \\@docs-private\n * @param {?} direction\n * @return {?}\n */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatSort.\n/**\n * \\@docs-private\n */\nclass MatSortBase {\n}\n/** @type {?} */\nconst _MatSortMixinBase = mixinInitialized(mixinDisabled(MatSortBase));\n/**\n * Container for MatSortables to manage the sort state and provide default sort parameters.\n */\nclass MatSort extends _MatSortMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Collection of all registered sortables that this directive manages.\n         */\n        this.sortables = new Map();\n        /**\n         * Used to notify any child components listening to state changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overriden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /**\n         * Event emitted when the user changes either the active sort or sort direction.\n         */\n        this.sortChange = new EventEmitter();\n    }\n    /**\n     * The sort direction of the currently active MatSortable.\n     * @return {?}\n     */\n    get direction() { return this._direction; }\n    /**\n     * @param {?} direction\n     * @return {?}\n     */\n    set direction(direction) {\n        if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overriden by the MatSortable's disable clear input.\n     * @return {?}\n     */\n    get disableClear() { return this._disableClear; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    register(sortable) {\n        if (!sortable.id) {\n            throw getSortHeaderMissingIdError();\n        }\n        if (this.sortables.has(sortable.id)) {\n            throw getSortDuplicateSortableIdError(sortable.id);\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /**\n     * Sets the active sort id and determines the new sort direction.\n     * @param {?} sortable\n     * @return {?}\n     */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /**\n     * Returns the next sort direction of the active sortable, checking for potential overrides.\n     * @param {?} sortable\n     * @return {?}\n     */\n    getNextSortDirection(sortable) {\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        /** @type {?} */\n        const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n        /** @type {?} */\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        /** @type {?} */\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._markInitialized();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatSort.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatSort, selectors: [[\"\", \"matSort\", \"\"]], factory: function MatSort_Factory(t) { return ɵMatSort_BaseFactory(t || MatSort); }, inputs: { disabled: [\"matSortDisabled\", \"disabled\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"], active: [\"matSortActive\", \"active\"] }, outputs: { sortChange: \"matSortChange\" }, exportAs: [\"matSort\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()] });\nconst ɵMatSort_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSort);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatSort, [{\n        type: Directive,\n        args: [{\n                selector: '[matSort]',\n                exportAs: 'matSort',\n                inputs: ['disabled: matSortDisabled']\n            }]\n    }], null, { constructor: [], sortables: [], _stateChanges: [], start: [{\n            type: Input,\n            args: ['matSortStart']\n        }], _direction: [], sortChange: [{\n            type: Output,\n            args: ['matSortChange']\n        }], direction: [{\n            type: Input,\n            args: ['matSortDirection']\n        }], direction: [], disableClear: [{\n            type: Input,\n            args: ['matSortDisableClear']\n        }], disableClear: [], _disableClear: [], register: [], deregister: [], sort: [], active: [{\n            type: Input,\n            args: ['matSortActive']\n        }], getNextSortDirection: [], ngOnInit: [], ngOnChanges: [], ngOnDestroy: [] });\nMatSort.propDecorators = {\n    active: [{ type: Input, args: ['matSortActive',] }],\n    start: [{ type: Input, args: ['matSortStart',] }],\n    direction: [{ type: Input, args: ['matSortDirection',] }],\n    disableClear: [{ type: Input, args: ['matSortDisableClear',] }],\n    sortChange: [{ type: Output, args: ['matSortChange',] }]\n};\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear.\n * @param {?} start\n * @param {?} disableClear\n * @return {?}\n */\nfunction getSortDirectionCycle(start, disableClear) {\n    /** @type {?} */\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' +\n    AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * \\@docs-private\n * @type {?}\n */\nconst matSortAnimations = {\n    /**\n     * Animation that moves the sort indicator.\n     */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that rotates the left pointer of the indicator based on the sorting direction.\n     */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that rotates the right pointer of the indicator based on the sorting direction.\n     */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that controls the arrow opacity.\n     */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: .54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(-25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(25%)' })\n        ]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(-25%)' })\n        ]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /**\n     * Necessary trigger that calls animate on children animations.\n     */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [\n            query('@*', animateChild(), { optional: true })\n        ])\n    ]),\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * ARIA label for the sorting button.\n         */\n        this.sortButtonLabel = (/**\n         * @param {?} id\n         * @return {?}\n         */\n        (id) => {\n            return `Change sorting for ${id}`;\n        });\n    }\n}\nMatSortHeaderIntl.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: MatSortHeaderIntl, factory: function MatSortHeaderIntl_Factory(t) { return new (t || MatSortHeaderIntl)(); }, providedIn: 'root' });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatSortHeaderIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, { constructor: [], changes: [], sortButtonLabel: [] });\n/** @nocollapse */ MatSortHeaderIntl.ngInjectableDef = ɵɵdefineInjectable({ factory: function MatSortHeaderIntl_Factory() { return new MatSortHeaderIntl(); }, token: MatSortHeaderIntl, providedIn: \"root\" });\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to the sort header.\n/**\n * \\@docs-private\n */\nclass MatSortHeaderBase {\n}\n/** @type {?} */\nconst _MatSortHeaderMixinBase = mixinDisabled(MatSortHeaderBase);\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderMixinBase {\n    /**\n     * @param {?} _intl\n     * @param {?} changeDetectorRef\n     * @param {?} _sort\n     * @param {?} _columnDef\n     */\n    constructor(_intl, changeDetectorRef, _sort, _columnDef) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The direction the arrow should be facing according to the current state.\n         */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /**\n         * Sets the position of the arrow that displays when sorted.\n         */\n        this.arrowPosition = 'after';\n        if (!_sort) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        this._rerenderSubscription = merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * Overrides the disable clear value of the containing MatSort for this MatSortable.\n     * @return {?}\n     */\n    get disableClear() { return this._disableClear; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({ toState: this._isSorted() ? 'active' : this._arrowDirection });\n        this._sort.register(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     * @param {?} visible\n     * @return {?}\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     * @param {?} viewState\n     * @return {?}\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState;\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /**\n     * Triggers the sort on this sort header and removes the indicator hint.\n     * @return {?}\n     */\n    _handleClick() {\n        if (this._isDisabled()) {\n            return;\n        }\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n        // If the arrow is now sorted, animate the arrow into place. Otherwise, animate it away into\n        // the direction it is facing.\n        /** @type {?} */\n        const viewState = this._isSorted() ?\n            { fromState: this._arrowDirection, toState: 'active' } :\n            { fromState: 'active', toState: this._arrowDirection };\n        this._setAnimationTransitionState(viewState);\n        this._showIndicatorHint = false;\n    }\n    /**\n     * Whether this MatSortHeader is currently sorted in either ascending or descending order.\n     * @return {?}\n     */\n    _isSorted() {\n        return this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n    }\n    /**\n     * Returns the animation state for the arrow direction (indicator and pointers).\n     * @return {?}\n     */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /**\n     * Returns the arrow position state (opacity, translation).\n     * @return {?}\n     */\n    _getArrowViewState() {\n        /** @type {?} */\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     * @return {?}\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ?\n            this._sort.direction :\n            (this.start || this._sort.start);\n    }\n    /**\n     * @return {?}\n     */\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     * @return {?}\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return null;\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /**\n     * Whether the arrow inside the sort header should be rendered.\n     * @return {?}\n     */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n}\nMatSortHeader.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatSortHeader, selectors: [[\"\", \"mat-sort-header\", \"\"]], factory: function MatSortHeader_Factory(t) { return new (t || MatSortHeader)(ɵngcc0.ɵɵdirectiveInject(MatSortHeaderIntl), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatSort, 8), ɵngcc0.ɵɵdirectiveInject('MAT_SORT_HEADER_COLUMN_DEF', 8)); }, hostBindings: function MatSortHeader_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSortHeader_click_HostBindingHandler($event) { return ctx._handleClick(); });\n        ɵngcc0.ɵɵlistener(\"mouseenter\", function MatSortHeader_mouseenter_HostBindingHandler($event) { return ctx._setIndicatorHintVisible(true); });\n        ɵngcc0.ɵɵlistener(\"longpress\", function MatSortHeader_longpress_HostBindingHandler($event) { return ctx._setIndicatorHintVisible(true); });\n        ɵngcc0.ɵɵlistener(\"mouseleave\", function MatSortHeader_mouseleave_HostBindingHandler($event) { return ctx._setIndicatorHintVisible(false); });\n        ɵngcc0.ɵɵstyling();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-sort\", ctx._getAriaSortAttribute());\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-disabled\", ctx._isDisabled());\n        ɵngcc0.ɵɵstylingApply();\n    } }, inputs: { disabled: \"disabled\", arrowPosition: \"arrowPosition\", disableClear: \"disableClear\", id: [\"mat-sort-header\", \"id\"], start: \"start\" }, exportAs: [\"matSortHeader\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c10, consts: 4, vars: 5, template: function MatSortHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", _c1);\n        ɵngcc0.ɵɵstyling();\n        ɵngcc0.ɵɵelementStart(1, \"button\", _c2);\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSortHeader_Template_button_focus_1_listener($event) { return ctx._setIndicatorHintVisible(true); });\n        ɵngcc0.ɵɵlistener(\"blur\", function MatSortHeader_Template_button_blur_1_listener($event) { return ctx._setIndicatorHintVisible(false); });\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, MatSortHeader_div_3_Template, 6, 6, \"div\", _c3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-sorted\", ctx._isSorted());\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-position-before\", ctx.arrowPosition == \"before\");\n        ɵngcc0.ɵɵstylingApply();\n        ɵngcc0.ɵɵselect(1);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx._isDisabled() || null)(\"aria-label\", ctx._intl.sortButtonLabel(ctx.id));\n        ɵngcc0.ɵɵselect(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._renderArrow());\n    } }, directives: [ɵngcc1.NgIf], styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-button{border:none;background:0 0;display:flex;align-items:center;padding:0;cursor:inherit;outline:0;font:inherit;color:currentColor}.mat-sort-header-button::-moz-focus-inner{border:0}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}@media (-ms-high-contrast:active){.mat-sort-header-stem{width:0;border-left:solid 2px}}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}@media (-ms-high-contrast:active){.mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}@media (-ms-high-contrast:active){.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\"], encapsulation: 2, data: { animation: [\n            matSortAnimations.indicator,\n            matSortAnimations.leftPointer,\n            matSortAnimations.rightPointer,\n            matSortAnimations.arrowOpacity,\n            matSortAnimations.arrowPosition,\n            matSortAnimations.allowChildren,\n        ] }, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatSortHeader, [{\n        type: Component,\n        args: [{ selector: '[mat-sort-header]',\n                exportAs: 'matSortHeader',\n                template: \"<div class=\\\"mat-sort-header-container\\\" [class.mat-sort-header-sorted]=\\\"_isSorted()\\\" [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\"><button class=\\\"mat-sort-header-button\\\" type=\\\"button\\\" [attr.disabled]=\\\"_isDisabled() || null\\\" [attr.aria-label]=\\\"_intl.sortButtonLabel(id)\\\" (focus)=\\\"_setIndicatorHintVisible(true)\\\" (blur)=\\\"_setIndicatorHintVisible(false)\\\"><ng-content></ng-content></button><div class=\\\"mat-sort-header-arrow\\\" *ngIf=\\\"_renderArrow()\\\" [@arrowOpacity]=\\\"_getArrowViewState()\\\" [@arrowPosition]=\\\"_getArrowViewState()\\\" [@allowChildren]=\\\"_getArrowDirectionState()\\\" (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\" (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\"><div class=\\\"mat-sort-header-stem\\\"></div><div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\"><div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div><div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div><div class=\\\"mat-sort-header-pointer-middle\\\"></div></div></div></div>\",\n                styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-button{border:none;background:0 0;display:flex;align-items:center;padding:0;cursor:inherit;outline:0;font:inherit;color:currentColor}.mat-sort-header-button::-moz-focus-inner{border:0}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}@media (-ms-high-contrast:active){.mat-sort-header-stem{width:0;border-left:solid 2px}}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}@media (-ms-high-contrast:active){.mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}@media (-ms-high-contrast:active){.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\"],\n                host: {\n                    '(click)': '_handleClick()',\n                    '(mouseenter)': '_setIndicatorHintVisible(true)',\n                    '(longpress)': '_setIndicatorHintVisible(true)',\n                    '(mouseleave)': '_setIndicatorHintVisible(false)',\n                    '[attr.aria-sort]': '_getAriaSortAttribute()',\n                    '[class.mat-sort-header-disabled]': '_isDisabled()'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                animations: [\n                    matSortAnimations.indicator,\n                    matSortAnimations.leftPointer,\n                    matSortAnimations.rightPointer,\n                    matSortAnimations.arrowOpacity,\n                    matSortAnimations.arrowPosition,\n                    matSortAnimations.allowChildren,\n                ]\n            }]\n    }], function () { return [{ type: MatSortHeaderIntl }, { type: ChangeDetectorRef }, { type: MatSort, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: ['MAT_SORT_HEADER_COLUMN_DEF']\n            }, {\n                type: Optional\n            }] }]; }, { constructor: [], _intl: [], _sort: [], _columnDef: [], _showIndicatorHint: [], _arrowDirection: [], _disableViewStateAnimation: [], arrowPosition: [{\n            type: Input\n        }], _rerenderSubscription: [], disableClear: [{\n            type: Input\n        }], disableClear: [], _disableClear: [], ngOnInit: [], id: [{\n            type: Input,\n            args: ['mat-sort-header']\n        }], ngOnDestroy: [], _setIndicatorHintVisible: [], _setAnimationTransitionState: [], _viewState: [], _handleClick: [], _isSorted: [], _getArrowDirectionState: [], _getArrowViewState: [], _updateArrowDirection: [], _isDisabled: [], _getAriaSortAttribute: [], _renderArrow: [], start: [{\n            type: Input\n        }] });\n/** @nocollapse */\nMatSortHeader.ctorParameters = () => [\n    { type: MatSortHeaderIntl },\n    { type: ChangeDetectorRef },\n    { type: MatSort, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: ['MAT_SORT_HEADER_COLUMN_DEF',] }, { type: Optional }] }\n];\nMatSortHeader.propDecorators = {\n    id: [{ type: Input, args: ['mat-sort-header',] }],\n    arrowPosition: [{ type: Input }],\n    start: [{ type: Input }],\n    disableClear: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSortModule {\n}\nMatSortModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: MatSortModule });\nMatSortModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function MatSortModule_Factory(t) { return new (t || MatSortModule)(); }, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [[CommonModule]] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(MatSortModule, { declarations: function () { return [MatSort,\n        MatSortHeader]; }, imports: function () { return [CommonModule]; }, exports: function () { return [MatSort,\n        MatSortHeader]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatSortModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [MatSort, MatSortHeader],\n                declarations: [MatSort, MatSortHeader],\n                providers: [MAT_SORT_HEADER_INTL_PROVIDER]\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatSortModule, MatSortHeader, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSortHeaderIntl, MAT_SORT_HEADER_INTL_PROVIDER, MatSort, matSortAnimations };\n\n//# sourceMappingURL=sort.js.map","import { Subscriber } from '../Subscriber';\nexport function retry(count = -1) {\n    return (source) => source.lift(new RetryOperator(count, source));\n}\nclass RetryOperator {\n    constructor(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    }\n}\nclass RetrySubscriber extends Subscriber {\n    constructor(destination, count, source) {\n        super(destination);\n        this.count = count;\n        this.source = source;\n    }\n    error(err) {\n        if (!this.isStopped) {\n            const { source, count } = this;\n            if (count === 0) {\n                return super.error(err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    }\n}\n//# sourceMappingURL=retry.js.map","/*!\n * perfect-scrollbar v1.4.0\n * (c) 2018 Hyunje Jun\n * @license MIT\n */\nfunction get(element) {\n  return getComputedStyle(element);\n}\n\nfunction set(element, obj) {\n  for (var key in obj) {\n    var val = obj[key];\n    if (typeof val === 'number') {\n      val = val + \"px\";\n    }\n    element.style[key] = val;\n  }\n  return element;\n}\n\nfunction div(className) {\n  var div = document.createElement('div');\n  div.className = className;\n  return div;\n}\n\nvar elMatches =\n  typeof Element !== 'undefined' &&\n  (Element.prototype.matches ||\n    Element.prototype.webkitMatchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector);\n\nfunction matches(element, query) {\n  if (!elMatches) {\n    throw new Error('No element matching method supported');\n  }\n\n  return elMatches.call(element, query);\n}\n\nfunction remove(element) {\n  if (element.remove) {\n    element.remove();\n  } else {\n    if (element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  }\n}\n\nfunction queryChildren(element, selector) {\n  return Array.prototype.filter.call(element.children, function (child) { return matches(child, selector); }\n  );\n}\n\nvar cls = {\n  main: 'ps',\n  element: {\n    thumb: function (x) { return (\"ps__thumb-\" + x); },\n    rail: function (x) { return (\"ps__rail-\" + x); },\n    consuming: 'ps__child--consume',\n  },\n  state: {\n    focus: 'ps--focus',\n    clicking: 'ps--clicking',\n    active: function (x) { return (\"ps--active-\" + x); },\n    scrolling: function (x) { return (\"ps--scrolling-\" + x); },\n  },\n};\n\n/*\n * Helper methods\n */\nvar scrollingClassTimeout = { x: null, y: null };\n\nfunction addScrollingClass(i, x) {\n  var classList = i.element.classList;\n  var className = cls.state.scrolling(x);\n\n  if (classList.contains(className)) {\n    clearTimeout(scrollingClassTimeout[x]);\n  } else {\n    classList.add(className);\n  }\n}\n\nfunction removeScrollingClass(i, x) {\n  scrollingClassTimeout[x] = setTimeout(\n    function () { return i.isAlive && i.element.classList.remove(cls.state.scrolling(x)); },\n    i.settings.scrollingThreshold\n  );\n}\n\nfunction setScrollingClassInstantly(i, x) {\n  addScrollingClass(i, x);\n  removeScrollingClass(i, x);\n}\n\nvar EventElement = function EventElement(element) {\n  this.element = element;\n  this.handlers = {};\n};\n\nvar prototypeAccessors = { isEmpty: { configurable: true } };\n\nEventElement.prototype.bind = function bind (eventName, handler) {\n  if (typeof this.handlers[eventName] === 'undefined') {\n    this.handlers[eventName] = [];\n  }\n  this.handlers[eventName].push(handler);\n  this.element.addEventListener(eventName, handler, false);\n};\n\nEventElement.prototype.unbind = function unbind (eventName, target) {\n    var this$1 = this;\n\n  this.handlers[eventName] = this.handlers[eventName].filter(function (handler) {\n    if (target && handler !== target) {\n      return true;\n    }\n    this$1.element.removeEventListener(eventName, handler, false);\n    return false;\n  });\n};\n\nEventElement.prototype.unbindAll = function unbindAll () {\n    var this$1 = this;\n\n  for (var name in this$1.handlers) {\n    this$1.unbind(name);\n  }\n};\n\nprototypeAccessors.isEmpty.get = function () {\n    var this$1 = this;\n\n  return Object.keys(this.handlers).every(\n    function (key) { return this$1.handlers[key].length === 0; }\n  );\n};\n\nObject.defineProperties( EventElement.prototype, prototypeAccessors );\n\nvar EventManager = function EventManager() {\n  this.eventElements = [];\n};\n\nEventManager.prototype.eventElement = function eventElement (element) {\n  var ee = this.eventElements.filter(function (ee) { return ee.element === element; })[0];\n  if (!ee) {\n    ee = new EventElement(element);\n    this.eventElements.push(ee);\n  }\n  return ee;\n};\n\nEventManager.prototype.bind = function bind (element, eventName, handler) {\n  this.eventElement(element).bind(eventName, handler);\n};\n\nEventManager.prototype.unbind = function unbind (element, eventName, handler) {\n  var ee = this.eventElement(element);\n  ee.unbind(eventName, handler);\n\n  if (ee.isEmpty) {\n    // remove\n    this.eventElements.splice(this.eventElements.indexOf(ee), 1);\n  }\n};\n\nEventManager.prototype.unbindAll = function unbindAll () {\n  this.eventElements.forEach(function (e) { return e.unbindAll(); });\n  this.eventElements = [];\n};\n\nEventManager.prototype.once = function once (element, eventName, handler) {\n  var ee = this.eventElement(element);\n  var onceHandler = function (evt) {\n    ee.unbind(eventName, onceHandler);\n    handler(evt);\n  };\n  ee.bind(eventName, onceHandler);\n};\n\nfunction createEvent(name) {\n  if (typeof window.CustomEvent === 'function') {\n    return new CustomEvent(name);\n  } else {\n    var evt = document.createEvent('CustomEvent');\n    evt.initCustomEvent(name, false, false, undefined);\n    return evt;\n  }\n}\n\nvar processScrollDiff = function(\n  i,\n  axis,\n  diff,\n  useScrollingClass,\n  forceFireReachEvent\n) {\n  if ( useScrollingClass === void 0 ) useScrollingClass = true;\n  if ( forceFireReachEvent === void 0 ) forceFireReachEvent = false;\n\n  var fields;\n  if (axis === 'top') {\n    fields = [\n      'contentHeight',\n      'containerHeight',\n      'scrollTop',\n      'y',\n      'up',\n      'down' ];\n  } else if (axis === 'left') {\n    fields = [\n      'contentWidth',\n      'containerWidth',\n      'scrollLeft',\n      'x',\n      'left',\n      'right' ];\n  } else {\n    throw new Error('A proper axis should be provided');\n  }\n\n  processScrollDiff$1(i, diff, fields, useScrollingClass, forceFireReachEvent);\n};\n\nfunction processScrollDiff$1(\n  i,\n  diff,\n  ref,\n  useScrollingClass,\n  forceFireReachEvent\n) {\n  var contentHeight = ref[0];\n  var containerHeight = ref[1];\n  var scrollTop = ref[2];\n  var y = ref[3];\n  var up = ref[4];\n  var down = ref[5];\n  if ( useScrollingClass === void 0 ) useScrollingClass = true;\n  if ( forceFireReachEvent === void 0 ) forceFireReachEvent = false;\n\n  var element = i.element;\n\n  // reset reach\n  i.reach[y] = null;\n\n  // 1 for subpixel rounding\n  if (element[scrollTop] < 1) {\n    i.reach[y] = 'start';\n  }\n\n  // 1 for subpixel rounding\n  if (element[scrollTop] > i[contentHeight] - i[containerHeight] - 1) {\n    i.reach[y] = 'end';\n  }\n\n  if (diff) {\n    element.dispatchEvent(createEvent((\"ps-scroll-\" + y)));\n\n    if (diff < 0) {\n      element.dispatchEvent(createEvent((\"ps-scroll-\" + up)));\n    } else if (diff > 0) {\n      element.dispatchEvent(createEvent((\"ps-scroll-\" + down)));\n    }\n\n    if (useScrollingClass) {\n      setScrollingClassInstantly(i, y);\n    }\n  }\n\n  if (i.reach[y] && (diff || forceFireReachEvent)) {\n    element.dispatchEvent(createEvent((\"ps-\" + y + \"-reach-\" + (i.reach[y]))));\n  }\n}\n\nfunction toInt(x) {\n  return parseInt(x, 10) || 0;\n}\n\nfunction isEditable(el) {\n  return (\n    matches(el, 'input,[contenteditable]') ||\n    matches(el, 'select,[contenteditable]') ||\n    matches(el, 'textarea,[contenteditable]') ||\n    matches(el, 'button,[contenteditable]')\n  );\n}\n\nfunction outerWidth(element) {\n  var styles = get(element);\n  return (\n    toInt(styles.width) +\n    toInt(styles.paddingLeft) +\n    toInt(styles.paddingRight) +\n    toInt(styles.borderLeftWidth) +\n    toInt(styles.borderRightWidth)\n  );\n}\n\nvar env = {\n  isWebKit:\n    typeof document !== 'undefined' &&\n    'WebkitAppearance' in document.documentElement.style,\n  supportsTouch:\n    typeof window !== 'undefined' &&\n    ('ontouchstart' in window ||\n      (window.DocumentTouch && document instanceof window.DocumentTouch)),\n  supportsIePointer:\n    typeof navigator !== 'undefined' && navigator.msMaxTouchPoints,\n  isChrome:\n    typeof navigator !== 'undefined' &&\n    /Chrome/i.test(navigator && navigator.userAgent),\n};\n\nvar updateGeometry = function(i) {\n  var element = i.element;\n  var roundedScrollTop = Math.floor(element.scrollTop);\n\n  i.containerWidth = element.clientWidth;\n  i.containerHeight = element.clientHeight;\n  i.contentWidth = element.scrollWidth;\n  i.contentHeight = element.scrollHeight;\n\n  if (!element.contains(i.scrollbarXRail)) {\n    // clean up and append\n    queryChildren(element, cls.element.rail('x')).forEach(function (el) { return remove(el); }\n    );\n    element.appendChild(i.scrollbarXRail);\n  }\n  if (!element.contains(i.scrollbarYRail)) {\n    // clean up and append\n    queryChildren(element, cls.element.rail('y')).forEach(function (el) { return remove(el); }\n    );\n    element.appendChild(i.scrollbarYRail);\n  }\n\n  if (\n    !i.settings.suppressScrollX &&\n    i.containerWidth + i.settings.scrollXMarginOffset < i.contentWidth\n  ) {\n    i.scrollbarXActive = true;\n    i.railXWidth = i.containerWidth - i.railXMarginWidth;\n    i.railXRatio = i.containerWidth / i.railXWidth;\n    i.scrollbarXWidth = getThumbSize(\n      i,\n      toInt(i.railXWidth * i.containerWidth / i.contentWidth)\n    );\n    i.scrollbarXLeft = toInt(\n      (i.negativeScrollAdjustment + element.scrollLeft) *\n        (i.railXWidth - i.scrollbarXWidth) /\n        (i.contentWidth - i.containerWidth)\n    );\n  } else {\n    i.scrollbarXActive = false;\n  }\n\n  if (\n    !i.settings.suppressScrollY &&\n    i.containerHeight + i.settings.scrollYMarginOffset < i.contentHeight\n  ) {\n    i.scrollbarYActive = true;\n    i.railYHeight = i.containerHeight - i.railYMarginHeight;\n    i.railYRatio = i.containerHeight / i.railYHeight;\n    i.scrollbarYHeight = getThumbSize(\n      i,\n      toInt(i.railYHeight * i.containerHeight / i.contentHeight)\n    );\n    i.scrollbarYTop = toInt(\n      roundedScrollTop *\n        (i.railYHeight - i.scrollbarYHeight) /\n        (i.contentHeight - i.containerHeight)\n    );\n  } else {\n    i.scrollbarYActive = false;\n  }\n\n  if (i.scrollbarXLeft >= i.railXWidth - i.scrollbarXWidth) {\n    i.scrollbarXLeft = i.railXWidth - i.scrollbarXWidth;\n  }\n  if (i.scrollbarYTop >= i.railYHeight - i.scrollbarYHeight) {\n    i.scrollbarYTop = i.railYHeight - i.scrollbarYHeight;\n  }\n\n  updateCss(element, i);\n\n  if (i.scrollbarXActive) {\n    element.classList.add(cls.state.active('x'));\n  } else {\n    element.classList.remove(cls.state.active('x'));\n    i.scrollbarXWidth = 0;\n    i.scrollbarXLeft = 0;\n    element.scrollLeft = 0;\n  }\n  if (i.scrollbarYActive) {\n    element.classList.add(cls.state.active('y'));\n  } else {\n    element.classList.remove(cls.state.active('y'));\n    i.scrollbarYHeight = 0;\n    i.scrollbarYTop = 0;\n    element.scrollTop = 0;\n  }\n};\n\nfunction getThumbSize(i, thumbSize) {\n  if (i.settings.minScrollbarLength) {\n    thumbSize = Math.max(thumbSize, i.settings.minScrollbarLength);\n  }\n  if (i.settings.maxScrollbarLength) {\n    thumbSize = Math.min(thumbSize, i.settings.maxScrollbarLength);\n  }\n  return thumbSize;\n}\n\nfunction updateCss(element, i) {\n  var xRailOffset = { width: i.railXWidth };\n  var roundedScrollTop = Math.floor(element.scrollTop);\n\n  if (i.isRtl) {\n    xRailOffset.left =\n      i.negativeScrollAdjustment +\n      element.scrollLeft +\n      i.containerWidth -\n      i.contentWidth;\n  } else {\n    xRailOffset.left = element.scrollLeft;\n  }\n  if (i.isScrollbarXUsingBottom) {\n    xRailOffset.bottom = i.scrollbarXBottom - roundedScrollTop;\n  } else {\n    xRailOffset.top = i.scrollbarXTop + roundedScrollTop;\n  }\n  set(i.scrollbarXRail, xRailOffset);\n\n  var yRailOffset = { top: roundedScrollTop, height: i.railYHeight };\n  if (i.isScrollbarYUsingRight) {\n    if (i.isRtl) {\n      yRailOffset.right =\n        i.contentWidth -\n        (i.negativeScrollAdjustment + element.scrollLeft) -\n        i.scrollbarYRight -\n        i.scrollbarYOuterWidth;\n    } else {\n      yRailOffset.right = i.scrollbarYRight - element.scrollLeft;\n    }\n  } else {\n    if (i.isRtl) {\n      yRailOffset.left =\n        i.negativeScrollAdjustment +\n        element.scrollLeft +\n        i.containerWidth * 2 -\n        i.contentWidth -\n        i.scrollbarYLeft -\n        i.scrollbarYOuterWidth;\n    } else {\n      yRailOffset.left = i.scrollbarYLeft + element.scrollLeft;\n    }\n  }\n  set(i.scrollbarYRail, yRailOffset);\n\n  set(i.scrollbarX, {\n    left: i.scrollbarXLeft,\n    width: i.scrollbarXWidth - i.railBorderXWidth,\n  });\n  set(i.scrollbarY, {\n    top: i.scrollbarYTop,\n    height: i.scrollbarYHeight - i.railBorderYWidth,\n  });\n}\n\nvar clickRail = function(i) {\n  i.event.bind(i.scrollbarY, 'mousedown', function (e) { return e.stopPropagation(); });\n  i.event.bind(i.scrollbarYRail, 'mousedown', function (e) {\n    var positionTop =\n      e.pageY -\n      window.pageYOffset -\n      i.scrollbarYRail.getBoundingClientRect().top;\n    var direction = positionTop > i.scrollbarYTop ? 1 : -1;\n\n    i.element.scrollTop += direction * i.containerHeight;\n    updateGeometry(i);\n\n    e.stopPropagation();\n  });\n\n  i.event.bind(i.scrollbarX, 'mousedown', function (e) { return e.stopPropagation(); });\n  i.event.bind(i.scrollbarXRail, 'mousedown', function (e) {\n    var positionLeft =\n      e.pageX -\n      window.pageXOffset -\n      i.scrollbarXRail.getBoundingClientRect().left;\n    var direction = positionLeft > i.scrollbarXLeft ? 1 : -1;\n\n    i.element.scrollLeft += direction * i.containerWidth;\n    updateGeometry(i);\n\n    e.stopPropagation();\n  });\n};\n\nvar dragThumb = function(i) {\n  bindMouseScrollHandler(i, [\n    'containerWidth',\n    'contentWidth',\n    'pageX',\n    'railXWidth',\n    'scrollbarX',\n    'scrollbarXWidth',\n    'scrollLeft',\n    'x',\n    'scrollbarXRail' ]);\n  bindMouseScrollHandler(i, [\n    'containerHeight',\n    'contentHeight',\n    'pageY',\n    'railYHeight',\n    'scrollbarY',\n    'scrollbarYHeight',\n    'scrollTop',\n    'y',\n    'scrollbarYRail' ]);\n};\n\nfunction bindMouseScrollHandler(\n  i,\n  ref\n) {\n  var containerHeight = ref[0];\n  var contentHeight = ref[1];\n  var pageY = ref[2];\n  var railYHeight = ref[3];\n  var scrollbarY = ref[4];\n  var scrollbarYHeight = ref[5];\n  var scrollTop = ref[6];\n  var y = ref[7];\n  var scrollbarYRail = ref[8];\n\n  var element = i.element;\n\n  var startingScrollTop = null;\n  var startingMousePageY = null;\n  var scrollBy = null;\n\n  function mouseMoveHandler(e) {\n    element[scrollTop] =\n      startingScrollTop + scrollBy * (e[pageY] - startingMousePageY);\n    addScrollingClass(i, y);\n    updateGeometry(i);\n\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  function mouseUpHandler() {\n    removeScrollingClass(i, y);\n    i[scrollbarYRail].classList.remove(cls.state.clicking);\n    i.event.unbind(i.ownerDocument, 'mousemove', mouseMoveHandler);\n  }\n\n  i.event.bind(i[scrollbarY], 'mousedown', function (e) {\n    startingScrollTop = element[scrollTop];\n    startingMousePageY = e[pageY];\n    scrollBy =\n      (i[contentHeight] - i[containerHeight]) /\n      (i[railYHeight] - i[scrollbarYHeight]);\n\n    i.event.bind(i.ownerDocument, 'mousemove', mouseMoveHandler);\n    i.event.once(i.ownerDocument, 'mouseup', mouseUpHandler);\n\n    i[scrollbarYRail].classList.add(cls.state.clicking);\n\n    e.stopPropagation();\n    e.preventDefault();\n  });\n}\n\nvar keyboard = function(i) {\n  var element = i.element;\n\n  var elementHovered = function () { return matches(element, ':hover'); };\n  var scrollbarFocused = function () { return matches(i.scrollbarX, ':focus') || matches(i.scrollbarY, ':focus'); };\n\n  function shouldPreventDefault(deltaX, deltaY) {\n    var scrollTop = Math.floor(element.scrollTop);\n    if (deltaX === 0) {\n      if (!i.scrollbarYActive) {\n        return false;\n      }\n      if (\n        (scrollTop === 0 && deltaY > 0) ||\n        (scrollTop >= i.contentHeight - i.containerHeight && deltaY < 0)\n      ) {\n        return !i.settings.wheelPropagation;\n      }\n    }\n\n    var scrollLeft = element.scrollLeft;\n    if (deltaY === 0) {\n      if (!i.scrollbarXActive) {\n        return false;\n      }\n      if (\n        (scrollLeft === 0 && deltaX < 0) ||\n        (scrollLeft >= i.contentWidth - i.containerWidth && deltaX > 0)\n      ) {\n        return !i.settings.wheelPropagation;\n      }\n    }\n    return true;\n  }\n\n  i.event.bind(i.ownerDocument, 'keydown', function (e) {\n    if (\n      (e.isDefaultPrevented && e.isDefaultPrevented()) ||\n      e.defaultPrevented\n    ) {\n      return;\n    }\n\n    if (!elementHovered() && !scrollbarFocused()) {\n      return;\n    }\n\n    var activeElement = document.activeElement\n      ? document.activeElement\n      : i.ownerDocument.activeElement;\n    if (activeElement) {\n      if (activeElement.tagName === 'IFRAME') {\n        activeElement = activeElement.contentDocument.activeElement;\n      } else {\n        // go deeper if element is a webcomponent\n        while (activeElement.shadowRoot) {\n          activeElement = activeElement.shadowRoot.activeElement;\n        }\n      }\n      if (isEditable(activeElement)) {\n        return;\n      }\n    }\n\n    var deltaX = 0;\n    var deltaY = 0;\n\n    switch (e.which) {\n      case 37: // left\n        if (e.metaKey) {\n          deltaX = -i.contentWidth;\n        } else if (e.altKey) {\n          deltaX = -i.containerWidth;\n        } else {\n          deltaX = -30;\n        }\n        break;\n      case 38: // up\n        if (e.metaKey) {\n          deltaY = i.contentHeight;\n        } else if (e.altKey) {\n          deltaY = i.containerHeight;\n        } else {\n          deltaY = 30;\n        }\n        break;\n      case 39: // right\n        if (e.metaKey) {\n          deltaX = i.contentWidth;\n        } else if (e.altKey) {\n          deltaX = i.containerWidth;\n        } else {\n          deltaX = 30;\n        }\n        break;\n      case 40: // down\n        if (e.metaKey) {\n          deltaY = -i.contentHeight;\n        } else if (e.altKey) {\n          deltaY = -i.containerHeight;\n        } else {\n          deltaY = -30;\n        }\n        break;\n      case 32: // space bar\n        if (e.shiftKey) {\n          deltaY = i.containerHeight;\n        } else {\n          deltaY = -i.containerHeight;\n        }\n        break;\n      case 33: // page up\n        deltaY = i.containerHeight;\n        break;\n      case 34: // page down\n        deltaY = -i.containerHeight;\n        break;\n      case 36: // home\n        deltaY = i.contentHeight;\n        break;\n      case 35: // end\n        deltaY = -i.contentHeight;\n        break;\n      default:\n        return;\n    }\n\n    if (i.settings.suppressScrollX && deltaX !== 0) {\n      return;\n    }\n    if (i.settings.suppressScrollY && deltaY !== 0) {\n      return;\n    }\n\n    element.scrollTop -= deltaY;\n    element.scrollLeft += deltaX;\n    updateGeometry(i);\n\n    if (shouldPreventDefault(deltaX, deltaY)) {\n      e.preventDefault();\n    }\n  });\n};\n\nvar wheel = function(i) {\n  var element = i.element;\n\n  function shouldPreventDefault(deltaX, deltaY) {\n    var roundedScrollTop = Math.floor(element.scrollTop);\n    var isTop = element.scrollTop === 0;\n    var isBottom =\n      roundedScrollTop + element.offsetHeight === element.scrollHeight;\n    var isLeft = element.scrollLeft === 0;\n    var isRight =\n      element.scrollLeft + element.offsetWidth === element.scrollWidth;\n\n    var hitsBound;\n\n    // pick axis with primary direction\n    if (Math.abs(deltaY) > Math.abs(deltaX)) {\n      hitsBound = isTop || isBottom;\n    } else {\n      hitsBound = isLeft || isRight;\n    }\n\n    return hitsBound ? !i.settings.wheelPropagation : true;\n  }\n\n  function getDeltaFromEvent(e) {\n    var deltaX = e.deltaX;\n    var deltaY = -1 * e.deltaY;\n\n    if (typeof deltaX === 'undefined' || typeof deltaY === 'undefined') {\n      // OS X Safari\n      deltaX = -1 * e.wheelDeltaX / 6;\n      deltaY = e.wheelDeltaY / 6;\n    }\n\n    if (e.deltaMode && e.deltaMode === 1) {\n      // Firefox in deltaMode 1: Line scrolling\n      deltaX *= 10;\n      deltaY *= 10;\n    }\n\n    if (deltaX !== deltaX && deltaY !== deltaY /* NaN checks */) {\n      // IE in some mouse drivers\n      deltaX = 0;\n      deltaY = e.wheelDelta;\n    }\n\n    if (e.shiftKey) {\n      // reverse axis with shift key\n      return [-deltaY, -deltaX];\n    }\n    return [deltaX, deltaY];\n  }\n\n  function shouldBeConsumedByChild(target, deltaX, deltaY) {\n    // FIXME: this is a workaround for <select> issue in FF and IE #571\n    if (!env.isWebKit && element.querySelector('select:focus')) {\n      return true;\n    }\n\n    if (!element.contains(target)) {\n      return false;\n    }\n\n    var cursor = target;\n\n    while (cursor && cursor !== element) {\n      if (cursor.classList.contains(cls.element.consuming)) {\n        return true;\n      }\n\n      var style = get(cursor);\n      var overflow = [style.overflow, style.overflowX, style.overflowY].join(\n        ''\n      );\n\n      // if scrollable\n      if (overflow.match(/(scroll|auto)/)) {\n        var maxScrollTop = cursor.scrollHeight - cursor.clientHeight;\n        if (maxScrollTop > 0) {\n          if (\n            !(cursor.scrollTop === 0 && deltaY > 0) &&\n            !(cursor.scrollTop === maxScrollTop && deltaY < 0)\n          ) {\n            return true;\n          }\n        }\n        var maxScrollLeft = cursor.scrollWidth - cursor.clientWidth;\n        if (maxScrollLeft > 0) {\n          if (\n            !(cursor.scrollLeft === 0 && deltaX < 0) &&\n            !(cursor.scrollLeft === maxScrollLeft && deltaX > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n\n      cursor = cursor.parentNode;\n    }\n\n    return false;\n  }\n\n  function mousewheelHandler(e) {\n    var ref = getDeltaFromEvent(e);\n    var deltaX = ref[0];\n    var deltaY = ref[1];\n\n    if (shouldBeConsumedByChild(e.target, deltaX, deltaY)) {\n      return;\n    }\n\n    var shouldPrevent = false;\n    if (!i.settings.useBothWheelAxes) {\n      // deltaX will only be used for horizontal scrolling and deltaY will\n      // only be used for vertical scrolling - this is the default\n      element.scrollTop -= deltaY * i.settings.wheelSpeed;\n      element.scrollLeft += deltaX * i.settings.wheelSpeed;\n    } else if (i.scrollbarYActive && !i.scrollbarXActive) {\n      // only vertical scrollbar is active and useBothWheelAxes option is\n      // active, so let's scroll vertical bar using both mouse wheel axes\n      if (deltaY) {\n        element.scrollTop -= deltaY * i.settings.wheelSpeed;\n      } else {\n        element.scrollTop += deltaX * i.settings.wheelSpeed;\n      }\n      shouldPrevent = true;\n    } else if (i.scrollbarXActive && !i.scrollbarYActive) {\n      // useBothWheelAxes and only horizontal bar is active, so use both\n      // wheel axes for horizontal bar\n      if (deltaX) {\n        element.scrollLeft += deltaX * i.settings.wheelSpeed;\n      } else {\n        element.scrollLeft -= deltaY * i.settings.wheelSpeed;\n      }\n      shouldPrevent = true;\n    }\n\n    updateGeometry(i);\n\n    shouldPrevent = shouldPrevent || shouldPreventDefault(deltaX, deltaY);\n    if (shouldPrevent && !e.ctrlKey) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n\n  if (typeof window.onwheel !== 'undefined') {\n    i.event.bind(element, 'wheel', mousewheelHandler);\n  } else if (typeof window.onmousewheel !== 'undefined') {\n    i.event.bind(element, 'mousewheel', mousewheelHandler);\n  }\n};\n\nvar touch = function(i) {\n  if (!env.supportsTouch && !env.supportsIePointer) {\n    return;\n  }\n\n  var element = i.element;\n\n  function shouldPrevent(deltaX, deltaY) {\n    var scrollTop = Math.floor(element.scrollTop);\n    var scrollLeft = element.scrollLeft;\n    var magnitudeX = Math.abs(deltaX);\n    var magnitudeY = Math.abs(deltaY);\n\n    if (magnitudeY > magnitudeX) {\n      // user is perhaps trying to swipe up/down the page\n\n      if (\n        (deltaY < 0 && scrollTop === i.contentHeight - i.containerHeight) ||\n        (deltaY > 0 && scrollTop === 0)\n      ) {\n        // set prevent for mobile Chrome refresh\n        return window.scrollY === 0 && deltaY > 0 && env.isChrome;\n      }\n    } else if (magnitudeX > magnitudeY) {\n      // user is perhaps trying to swipe left/right across the page\n\n      if (\n        (deltaX < 0 && scrollLeft === i.contentWidth - i.containerWidth) ||\n        (deltaX > 0 && scrollLeft === 0)\n      ) {\n        return true;\n      }\n    }\n\n    return true;\n  }\n\n  function applyTouchMove(differenceX, differenceY) {\n    element.scrollTop -= differenceY;\n    element.scrollLeft -= differenceX;\n\n    updateGeometry(i);\n  }\n\n  var startOffset = {};\n  var startTime = 0;\n  var speed = {};\n  var easingLoop = null;\n\n  function getTouch(e) {\n    if (e.targetTouches) {\n      return e.targetTouches[0];\n    } else {\n      // Maybe IE pointer\n      return e;\n    }\n  }\n\n  function shouldHandle(e) {\n    if (e.pointerType && e.pointerType === 'pen' && e.buttons === 0) {\n      return false;\n    }\n    if (e.targetTouches && e.targetTouches.length === 1) {\n      return true;\n    }\n    if (\n      e.pointerType &&\n      e.pointerType !== 'mouse' &&\n      e.pointerType !== e.MSPOINTER_TYPE_MOUSE\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  function touchStart(e) {\n    if (!shouldHandle(e)) {\n      return;\n    }\n\n    var touch = getTouch(e);\n\n    startOffset.pageX = touch.pageX;\n    startOffset.pageY = touch.pageY;\n\n    startTime = new Date().getTime();\n\n    if (easingLoop !== null) {\n      clearInterval(easingLoop);\n    }\n  }\n\n  function shouldBeConsumedByChild(target, deltaX, deltaY) {\n    if (!element.contains(target)) {\n      return false;\n    }\n\n    var cursor = target;\n\n    while (cursor && cursor !== element) {\n      if (cursor.classList.contains(cls.element.consuming)) {\n        return true;\n      }\n\n      var style = get(cursor);\n      var overflow = [style.overflow, style.overflowX, style.overflowY].join(\n        ''\n      );\n\n      // if scrollable\n      if (overflow.match(/(scroll|auto)/)) {\n        var maxScrollTop = cursor.scrollHeight - cursor.clientHeight;\n        if (maxScrollTop > 0) {\n          if (\n            !(cursor.scrollTop === 0 && deltaY > 0) &&\n            !(cursor.scrollTop === maxScrollTop && deltaY < 0)\n          ) {\n            return true;\n          }\n        }\n        var maxScrollLeft = cursor.scrollLeft - cursor.clientWidth;\n        if (maxScrollLeft > 0) {\n          if (\n            !(cursor.scrollLeft === 0 && deltaX < 0) &&\n            !(cursor.scrollLeft === maxScrollLeft && deltaX > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n\n      cursor = cursor.parentNode;\n    }\n\n    return false;\n  }\n\n  function touchMove(e) {\n    if (shouldHandle(e)) {\n      var touch = getTouch(e);\n\n      var currentOffset = { pageX: touch.pageX, pageY: touch.pageY };\n\n      var differenceX = currentOffset.pageX - startOffset.pageX;\n      var differenceY = currentOffset.pageY - startOffset.pageY;\n\n      if (shouldBeConsumedByChild(e.target, differenceX, differenceY)) {\n        return;\n      }\n\n      applyTouchMove(differenceX, differenceY);\n      startOffset = currentOffset;\n\n      var currentTime = new Date().getTime();\n\n      var timeGap = currentTime - startTime;\n      if (timeGap > 0) {\n        speed.x = differenceX / timeGap;\n        speed.y = differenceY / timeGap;\n        startTime = currentTime;\n      }\n\n      if (shouldPrevent(differenceX, differenceY)) {\n        e.preventDefault();\n      }\n    }\n  }\n  function touchEnd() {\n    if (i.settings.swipeEasing) {\n      clearInterval(easingLoop);\n      easingLoop = setInterval(function() {\n        if (i.isInitialized) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        if (!speed.x && !speed.y) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        if (Math.abs(speed.x) < 0.01 && Math.abs(speed.y) < 0.01) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        applyTouchMove(speed.x * 30, speed.y * 30);\n\n        speed.x *= 0.8;\n        speed.y *= 0.8;\n      }, 10);\n    }\n  }\n\n  if (env.supportsTouch) {\n    i.event.bind(element, 'touchstart', touchStart);\n    i.event.bind(element, 'touchmove', touchMove);\n    i.event.bind(element, 'touchend', touchEnd);\n  } else if (env.supportsIePointer) {\n    if (window.PointerEvent) {\n      i.event.bind(element, 'pointerdown', touchStart);\n      i.event.bind(element, 'pointermove', touchMove);\n      i.event.bind(element, 'pointerup', touchEnd);\n    } else if (window.MSPointerEvent) {\n      i.event.bind(element, 'MSPointerDown', touchStart);\n      i.event.bind(element, 'MSPointerMove', touchMove);\n      i.event.bind(element, 'MSPointerUp', touchEnd);\n    }\n  }\n};\n\nvar defaultSettings = function () { return ({\n  handlers: ['click-rail', 'drag-thumb', 'keyboard', 'wheel', 'touch'],\n  maxScrollbarLength: null,\n  minScrollbarLength: null,\n  scrollingThreshold: 1000,\n  scrollXMarginOffset: 0,\n  scrollYMarginOffset: 0,\n  suppressScrollX: false,\n  suppressScrollY: false,\n  swipeEasing: true,\n  useBothWheelAxes: false,\n  wheelPropagation: true,\n  wheelSpeed: 1,\n}); };\n\nvar handlers = {\n  'click-rail': clickRail,\n  'drag-thumb': dragThumb,\n  keyboard: keyboard,\n  wheel: wheel,\n  touch: touch,\n};\n\nvar PerfectScrollbar = function PerfectScrollbar(element, userSettings) {\n  var this$1 = this;\n  if ( userSettings === void 0 ) userSettings = {};\n\n  if (typeof element === 'string') {\n    element = document.querySelector(element);\n  }\n\n  if (!element || !element.nodeName) {\n    throw new Error('no element is specified to initialize PerfectScrollbar');\n  }\n\n  this.element = element;\n\n  element.classList.add(cls.main);\n\n  this.settings = defaultSettings();\n  for (var key in userSettings) {\n    this$1.settings[key] = userSettings[key];\n  }\n\n  this.containerWidth = null;\n  this.containerHeight = null;\n  this.contentWidth = null;\n  this.contentHeight = null;\n\n  var focus = function () { return element.classList.add(cls.state.focus); };\n  var blur = function () { return element.classList.remove(cls.state.focus); };\n\n  this.isRtl = get(element).direction === 'rtl';\n  this.isNegativeScroll = (function () {\n    var originalScrollLeft = element.scrollLeft;\n    var result = null;\n    element.scrollLeft = -1;\n    result = element.scrollLeft < 0;\n    element.scrollLeft = originalScrollLeft;\n    return result;\n  })();\n  this.negativeScrollAdjustment = this.isNegativeScroll\n    ? element.scrollWidth - element.clientWidth\n    : 0;\n  this.event = new EventManager();\n  this.ownerDocument = element.ownerDocument || document;\n\n  this.scrollbarXRail = div(cls.element.rail('x'));\n  element.appendChild(this.scrollbarXRail);\n  this.scrollbarX = div(cls.element.thumb('x'));\n  this.scrollbarXRail.appendChild(this.scrollbarX);\n  this.scrollbarX.setAttribute('tabindex', 0);\n  this.event.bind(this.scrollbarX, 'focus', focus);\n  this.event.bind(this.scrollbarX, 'blur', blur);\n  this.scrollbarXActive = null;\n  this.scrollbarXWidth = null;\n  this.scrollbarXLeft = null;\n  var railXStyle = get(this.scrollbarXRail);\n  this.scrollbarXBottom = parseInt(railXStyle.bottom, 10);\n  if (isNaN(this.scrollbarXBottom)) {\n    this.isScrollbarXUsingBottom = false;\n    this.scrollbarXTop = toInt(railXStyle.top);\n  } else {\n    this.isScrollbarXUsingBottom = true;\n  }\n  this.railBorderXWidth =\n    toInt(railXStyle.borderLeftWidth) + toInt(railXStyle.borderRightWidth);\n  // Set rail to display:block to calculate margins\n  set(this.scrollbarXRail, { display: 'block' });\n  this.railXMarginWidth =\n    toInt(railXStyle.marginLeft) + toInt(railXStyle.marginRight);\n  set(this.scrollbarXRail, { display: '' });\n  this.railXWidth = null;\n  this.railXRatio = null;\n\n  this.scrollbarYRail = div(cls.element.rail('y'));\n  element.appendChild(this.scrollbarYRail);\n  this.scrollbarY = div(cls.element.thumb('y'));\n  this.scrollbarYRail.appendChild(this.scrollbarY);\n  this.scrollbarY.setAttribute('tabindex', 0);\n  this.event.bind(this.scrollbarY, 'focus', focus);\n  this.event.bind(this.scrollbarY, 'blur', blur);\n  this.scrollbarYActive = null;\n  this.scrollbarYHeight = null;\n  this.scrollbarYTop = null;\n  var railYStyle = get(this.scrollbarYRail);\n  this.scrollbarYRight = parseInt(railYStyle.right, 10);\n  if (isNaN(this.scrollbarYRight)) {\n    this.isScrollbarYUsingRight = false;\n    this.scrollbarYLeft = toInt(railYStyle.left);\n  } else {\n    this.isScrollbarYUsingRight = true;\n  }\n  this.scrollbarYOuterWidth = this.isRtl ? outerWidth(this.scrollbarY) : null;\n  this.railBorderYWidth =\n    toInt(railYStyle.borderTopWidth) + toInt(railYStyle.borderBottomWidth);\n  set(this.scrollbarYRail, { display: 'block' });\n  this.railYMarginHeight =\n    toInt(railYStyle.marginTop) + toInt(railYStyle.marginBottom);\n  set(this.scrollbarYRail, { display: '' });\n  this.railYHeight = null;\n  this.railYRatio = null;\n\n  this.reach = {\n    x:\n      element.scrollLeft <= 0\n        ? 'start'\n        : element.scrollLeft >= this.contentWidth - this.containerWidth\n          ? 'end'\n          : null,\n    y:\n      element.scrollTop <= 0\n        ? 'start'\n        : element.scrollTop >= this.contentHeight - this.containerHeight\n          ? 'end'\n          : null,\n  };\n\n  this.isAlive = true;\n\n  this.settings.handlers.forEach(function (handlerName) { return handlers[handlerName](this$1); });\n\n  this.lastScrollTop = Math.floor(element.scrollTop); // for onScroll only\n  this.lastScrollLeft = element.scrollLeft; // for onScroll only\n  this.event.bind(this.element, 'scroll', function (e) { return this$1.onScroll(e); });\n  updateGeometry(this);\n};\n\nPerfectScrollbar.prototype.update = function update () {\n  if (!this.isAlive) {\n    return;\n  }\n\n  // Recalcuate negative scrollLeft adjustment\n  this.negativeScrollAdjustment = this.isNegativeScroll\n    ? this.element.scrollWidth - this.element.clientWidth\n    : 0;\n\n  // Recalculate rail margins\n  set(this.scrollbarXRail, { display: 'block' });\n  set(this.scrollbarYRail, { display: 'block' });\n  this.railXMarginWidth =\n    toInt(get(this.scrollbarXRail).marginLeft) +\n    toInt(get(this.scrollbarXRail).marginRight);\n  this.railYMarginHeight =\n    toInt(get(this.scrollbarYRail).marginTop) +\n    toInt(get(this.scrollbarYRail).marginBottom);\n\n  // Hide scrollbars not to affect scrollWidth and scrollHeight\n  set(this.scrollbarXRail, { display: 'none' });\n  set(this.scrollbarYRail, { display: 'none' });\n\n  updateGeometry(this);\n\n  processScrollDiff(this, 'top', 0, false, true);\n  processScrollDiff(this, 'left', 0, false, true);\n\n  set(this.scrollbarXRail, { display: '' });\n  set(this.scrollbarYRail, { display: '' });\n};\n\nPerfectScrollbar.prototype.onScroll = function onScroll (e) {\n  if (!this.isAlive) {\n    return;\n  }\n\n  updateGeometry(this);\n  processScrollDiff(this, 'top', this.element.scrollTop - this.lastScrollTop);\n  processScrollDiff(\n    this,\n    'left',\n    this.element.scrollLeft - this.lastScrollLeft\n  );\n\n  this.lastScrollTop = Math.floor(this.element.scrollTop);\n  this.lastScrollLeft = this.element.scrollLeft;\n};\n\nPerfectScrollbar.prototype.destroy = function destroy () {\n  if (!this.isAlive) {\n    return;\n  }\n\n  this.event.unbindAll();\n  remove(this.scrollbarX);\n  remove(this.scrollbarY);\n  remove(this.scrollbarXRail);\n  remove(this.scrollbarYRail);\n  this.removePsClasses();\n\n  // unset elements\n  this.element = null;\n  this.scrollbarX = null;\n  this.scrollbarY = null;\n  this.scrollbarXRail = null;\n  this.scrollbarYRail = null;\n\n  this.isAlive = false;\n};\n\nPerfectScrollbar.prototype.removePsClasses = function removePsClasses () {\n  this.element.className = this.element.className\n    .split(' ')\n    .filter(function (name) { return !name.match(/^ps([-_].+|)$/); })\n    .join(' ');\n};\n\nexport default PerfectScrollbar;\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","import { fromEvent, Subject, merge } from 'rxjs';\nimport { auditTime, takeUntil, distinctUntilChanged, mapTo } from 'rxjs/operators';\nimport { InjectionToken, Directive, NgZone, KeyValueDiffers, ElementRef, Inject, PLATFORM_ID, Optional, Input, Output, EventEmitter, Component, ViewEncapsulation, ChangeDetectorRef, HostBinding, ViewChild, NgModule } from '@angular/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport ResizeObserver from 'resize-observer-polyfill';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [2, \"position\", \"static\", 3, \"perfectScrollbar\", \"disabled\"];\nconst _c1 = [1, \"ps-content\"];\nconst _c2 = [\"class\", \"ps-overlay\", 3, \"ps-at-top\", \"ps-at-left\", \"ps-at-right\", \"ps-at-bottom\", 4, \"ngIf\"];\nconst _c3 = [1, \"ps-overlay\"];\nconst _c4 = [1, \"ps-indicator-top\"];\nconst _c5 = [1, \"ps-indicator-left\"];\nconst _c6 = [1, \"ps-indicator-right\"];\nconst _c7 = [1, \"ps-indicator-bottom\"];\nfunction PerfectScrollbarComponent_div_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", _c3);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵelementStart(1, \"div\", _c4);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"div\", _c5);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"div\", _c6);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"div\", _c7);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r40 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"ps-at-top\", ctx_r40.states.top);\n    ɵngcc0.ɵɵclassProp(\"ps-at-left\", ctx_r40.states.left);\n    ɵngcc0.ɵɵclassProp(\"ps-at-right\", ctx_r40.states.right);\n    ɵngcc0.ɵɵclassProp(\"ps-at-bottom\", ctx_r40.states.bottom);\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵclassProp(\"ps-indicator-show\", ctx_r40.indicatorY && ctx_r40.interaction);\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵselect(2);\n    ɵngcc0.ɵɵclassProp(\"ps-indicator-show\", ctx_r40.indicatorX && ctx_r40.interaction);\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵselect(3);\n    ɵngcc0.ɵɵclassProp(\"ps-indicator-show\", ctx_r40.indicatorX && ctx_r40.interaction);\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵselect(4);\n    ɵngcc0.ɵɵclassProp(\"ps-indicator-show\", ctx_r40.indicatorY && ctx_r40.interaction);\n    ɵngcc0.ɵɵstylingApply();\n} }\nconst _c8 = [\"*\"];\nvar PERFECT_SCROLLBAR_CONFIG = new InjectionToken('PERFECT_SCROLLBAR_CONFIG');\nvar Geometry = /** @class */ (function () {\n    function Geometry(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n    return Geometry;\n}());\nvar Position = /** @class */ (function () {\n    function Position(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Position;\n}());\n/** @type {?} */\nvar PerfectScrollbarEvents = [\n    'psScrollY',\n    'psScrollX',\n    'psScrollUp',\n    'psScrollDown',\n    'psScrollLeft',\n    'psScrollRight',\n    'psYReachEnd',\n    'psYReachStart',\n    'psXReachEnd',\n    'psXReachStart'\n];\nvar PerfectScrollbarConfig = /** @class */ (function () {\n    function PerfectScrollbarConfig(config) {\n        if (config === void 0) { config = {}; }\n        this.assign(config);\n    }\n    /**\n     * @param {?=} config\n     * @return {?}\n     */\n    PerfectScrollbarConfig.prototype.assign = /**\n     * @param {?=} config\n     * @return {?}\n     */\n    function (config) {\n        if (config === void 0) { config = {}; }\n        for (var key in config) {\n            this[(/** @type {?} */ (key))] = config[(/** @type {?} */ (key))];\n        }\n    };\n    return PerfectScrollbarConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar PerfectScrollbarDirective = /** @class */ (function () {\n    function PerfectScrollbarDirective(zone, differs, elementRef, platformId, defaults) {\n        this.zone = zone;\n        this.differs = differs;\n        this.elementRef = elementRef;\n        this.platformId = platformId;\n        this.defaults = defaults;\n        this.instance = null;\n        this.ro = null;\n        this.timeout = null;\n        this.animation = null;\n        this.configDiff = null;\n        this.ngDestroy = new Subject();\n        this.disabled = false;\n        this.psScrollY = new EventEmitter();\n        this.psScrollX = new EventEmitter();\n        this.psScrollUp = new EventEmitter();\n        this.psScrollDown = new EventEmitter();\n        this.psScrollLeft = new EventEmitter();\n        this.psScrollRight = new EventEmitter();\n        this.psYReachEnd = new EventEmitter();\n        this.psYReachStart = new EventEmitter();\n        this.psXReachEnd = new EventEmitter();\n        this.psXReachStart = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.disabled && isPlatformBrowser(this.platformId)) {\n            /** @type {?} */\n            var config_1 = new PerfectScrollbarConfig(this.defaults);\n            config_1.assign(this.config); // Custom configuration\n            this.zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () {\n                _this.instance = new PerfectScrollbar(_this.elementRef.nativeElement, config_1);\n            }));\n            if (!this.configDiff) {\n                this.configDiff = this.differs.find(this.config || {}).create();\n                this.configDiff.diff(this.config || {});\n            }\n            this.zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () {\n                _this.ro = new ResizeObserver((/**\n                 * @return {?}\n                 */\n                function () {\n                    _this.update();\n                }));\n                if (_this.elementRef.nativeElement.children[0]) {\n                    _this.ro.observe(_this.elementRef.nativeElement.children[0]);\n                }\n                _this.ro.observe(_this.elementRef.nativeElement);\n            }));\n            this.zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () {\n                PerfectScrollbarEvents.forEach((/**\n                 * @param {?} eventName\n                 * @return {?}\n                 */\n                function (eventName) {\n                    /** @type {?} */\n                    var eventType = eventName.replace(/([A-Z])/g, (/**\n                     * @param {?} c\n                     * @return {?}\n                     */\n                    function (c) { return \"-\" + c.toLowerCase(); }));\n                    fromEvent(_this.elementRef.nativeElement, eventType)\n                        .pipe(auditTime(20), takeUntil(_this.ngDestroy))\n                        .subscribe((/**\n                     * @param {?} event\n                     * @return {?}\n                     */\n                    function (event) {\n                        _this[eventName].emit(event);\n                    }));\n                }));\n            }));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (isPlatformBrowser(this.platformId)) {\n            this.ngDestroy.next();\n            this.ngDestroy.complete();\n            if (this.ro) {\n                this.ro.disconnect();\n            }\n            if (this.timeout && typeof window !== 'undefined') {\n                window.clearTimeout(this.timeout);\n            }\n            this.zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () {\n                if (_this.instance) {\n                    _this.instance.destroy();\n                }\n            }));\n            this.instance = null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.disabled && this.configDiff && isPlatformBrowser(this.platformId)) {\n            /** @type {?} */\n            var changes = this.configDiff.diff(this.config || {});\n            if (changes) {\n                this.ngOnDestroy();\n                this.ngOnInit();\n            }\n        }\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes['disabled'] && !changes['disabled'].isFirstChange() && isPlatformBrowser(this.platformId)) {\n            if (changes['disabled'].currentValue !== changes['disabled'].previousValue) {\n                if (changes['disabled'].currentValue === true) {\n                    this.ngOnDestroy();\n                }\n                else if (changes['disabled'].currentValue === false) {\n                    this.ngOnInit();\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.ps = /**\n     * @return {?}\n     */\n    function () {\n        return this.instance;\n    };\n    /**\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.update = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (typeof window !== 'undefined') {\n            if (this.timeout) {\n                window.clearTimeout(this.timeout);\n            }\n            this.timeout = window.setTimeout((/**\n             * @return {?}\n             */\n            function () {\n                if (!_this.disabled && _this.configDiff) {\n                    try {\n                        _this.zone.runOutsideAngular((/**\n                         * @return {?}\n                         */\n                        function () {\n                            if (_this.instance) {\n                                _this.instance.update();\n                            }\n                        }));\n                    }\n                    catch (error) {\n                        // Update can be finished after destroy so catch errors\n                    }\n                }\n            }), 0);\n        }\n    };\n    /**\n     * @param {?=} prefix\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.geometry = /**\n     * @param {?=} prefix\n     * @return {?}\n     */\n    function (prefix) {\n        if (prefix === void 0) { prefix = 'scroll'; }\n        return new Geometry(this.elementRef.nativeElement[prefix + 'Left'], this.elementRef.nativeElement[prefix + 'Top'], this.elementRef.nativeElement[prefix + 'Width'], this.elementRef.nativeElement[prefix + 'Height']);\n    };\n    /**\n     * @param {?=} absolute\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.position = /**\n     * @param {?=} absolute\n     * @return {?}\n     */\n    function (absolute) {\n        if (absolute === void 0) { absolute = false; }\n        if (!absolute && this.instance) {\n            return new Position(this.instance.reach.x || 0, this.instance.reach.y || 0);\n        }\n        else {\n            return new Position(this.elementRef.nativeElement.scrollLeft, this.elementRef.nativeElement.scrollTop);\n        }\n    };\n    /**\n     * @param {?=} direction\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.scrollable = /**\n     * @param {?=} direction\n     * @return {?}\n     */\n    function (direction) {\n        if (direction === void 0) { direction = 'any'; }\n        /** @type {?} */\n        var element = this.elementRef.nativeElement;\n        if (direction === 'any') {\n            return element.classList.contains('ps--active-x') ||\n                element.classList.contains('ps--active-y');\n        }\n        else if (direction === 'both') {\n            return element.classList.contains('ps--active-x') &&\n                element.classList.contains('ps--active-y');\n        }\n        else {\n            return element.classList.contains('ps--active-' + direction);\n        }\n    };\n    /**\n     * @param {?} x\n     * @param {?=} y\n     * @param {?=} speed\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.scrollTo = /**\n     * @param {?} x\n     * @param {?=} y\n     * @param {?=} speed\n     * @return {?}\n     */\n    function (x, y, speed) {\n        if (!this.disabled) {\n            if (y == null && speed == null) {\n                this.animateScrolling('scrollTop', x, speed);\n            }\n            else {\n                if (x != null) {\n                    this.animateScrolling('scrollLeft', x, speed);\n                }\n                if (y != null) {\n                    this.animateScrolling('scrollTop', y, speed);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} x\n     * @param {?=} speed\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.scrollToX = /**\n     * @param {?} x\n     * @param {?=} speed\n     * @return {?}\n     */\n    function (x, speed) {\n        this.animateScrolling('scrollLeft', x, speed);\n    };\n    /**\n     * @param {?} y\n     * @param {?=} speed\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.scrollToY = /**\n     * @param {?} y\n     * @param {?=} speed\n     * @return {?}\n     */\n    function (y, speed) {\n        this.animateScrolling('scrollTop', y, speed);\n    };\n    /**\n     * @param {?=} offset\n     * @param {?=} speed\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.scrollToTop = /**\n     * @param {?=} offset\n     * @param {?=} speed\n     * @return {?}\n     */\n    function (offset, speed) {\n        this.animateScrolling('scrollTop', (offset || 0), speed);\n    };\n    /**\n     * @param {?=} offset\n     * @param {?=} speed\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.scrollToLeft = /**\n     * @param {?=} offset\n     * @param {?=} speed\n     * @return {?}\n     */\n    function (offset, speed) {\n        this.animateScrolling('scrollLeft', (offset || 0), speed);\n    };\n    /**\n     * @param {?=} offset\n     * @param {?=} speed\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.scrollToRight = /**\n     * @param {?=} offset\n     * @param {?=} speed\n     * @return {?}\n     */\n    function (offset, speed) {\n        /** @type {?} */\n        var left = this.elementRef.nativeElement.scrollWidth -\n            this.elementRef.nativeElement.clientWidth;\n        this.animateScrolling('scrollLeft', left - (offset || 0), speed);\n    };\n    /**\n     * @param {?=} offset\n     * @param {?=} speed\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.scrollToBottom = /**\n     * @param {?=} offset\n     * @param {?=} speed\n     * @return {?}\n     */\n    function (offset, speed) {\n        /** @type {?} */\n        var top = this.elementRef.nativeElement.scrollHeight -\n            this.elementRef.nativeElement.clientHeight;\n        this.animateScrolling('scrollTop', top - (offset || 0), speed);\n    };\n    /**\n     * @param {?} qs\n     * @param {?=} offset\n     * @param {?=} speed\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.scrollToElement = /**\n     * @param {?} qs\n     * @param {?=} offset\n     * @param {?=} speed\n     * @return {?}\n     */\n    function (qs, offset, speed) {\n        /** @type {?} */\n        var element = this.elementRef.nativeElement.querySelector(qs);\n        if (element) {\n            /** @type {?} */\n            var elementPos = element.getBoundingClientRect();\n            /** @type {?} */\n            var scrollerPos = this.elementRef.nativeElement.getBoundingClientRect();\n            if (this.elementRef.nativeElement.classList.contains('ps--active-x')) {\n                /** @type {?} */\n                var currentPos = this.elementRef.nativeElement['scrollLeft'];\n                /** @type {?} */\n                var position = elementPos.left - scrollerPos.left + currentPos;\n                this.animateScrolling('scrollLeft', position + (offset || 0), speed);\n            }\n            if (this.elementRef.nativeElement.classList.contains('ps--active-y')) {\n                /** @type {?} */\n                var currentPos = this.elementRef.nativeElement['scrollTop'];\n                /** @type {?} */\n                var position = elementPos.top - scrollerPos.top + currentPos;\n                this.animateScrolling('scrollTop', position + (offset || 0), speed);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {?} target\n     * @param {?} value\n     * @param {?=} speed\n     * @return {?}\n     */\n    PerfectScrollbarDirective.prototype.animateScrolling = /**\n     * @private\n     * @param {?} target\n     * @param {?} value\n     * @param {?=} speed\n     * @return {?}\n     */\n    function (target, value, speed) {\n        var _this = this;\n        if (this.animation) {\n            window.cancelAnimationFrame(this.animation);\n            this.animation = null;\n        }\n        if (!speed || typeof window === 'undefined') {\n            this.elementRef.nativeElement[target] = value;\n        }\n        else if (value !== this.elementRef.nativeElement[target]) {\n            /** @type {?} */\n            var newValue_1 = 0;\n            /** @type {?} */\n            var scrollCount_1 = 0;\n            /** @type {?} */\n            var oldTimestamp_1 = performance.now();\n            /** @type {?} */\n            var oldValue_1 = this.elementRef.nativeElement[target];\n            /** @type {?} */\n            var cosParameter_1 = (oldValue_1 - value) / 2;\n            /** @type {?} */\n            var step_1 = (/**\n             * @param {?} newTimestamp\n             * @return {?}\n             */\n            function (newTimestamp) {\n                scrollCount_1 += Math.PI / (speed / (newTimestamp - oldTimestamp_1));\n                newValue_1 = Math.round(value + cosParameter_1 + cosParameter_1 * Math.cos(scrollCount_1));\n                // Only continue animation if scroll position has not changed\n                if (_this.elementRef.nativeElement[target] === oldValue_1) {\n                    if (scrollCount_1 >= Math.PI) {\n                        _this.animateScrolling(target, value, 0);\n                    }\n                    else {\n                        _this.elementRef.nativeElement[target] = newValue_1;\n                        // On a zoomed out page the resulting offset may differ\n                        oldValue_1 = _this.elementRef.nativeElement[target];\n                        oldTimestamp_1 = newTimestamp;\n                        _this.animation = window.requestAnimationFrame(step_1);\n                    }\n                }\n            });\n            window.requestAnimationFrame(step_1);\n        }\n    };\n    /** @nocollapse */\n    PerfectScrollbarDirective.ctorParameters = function () { return [\n        { type: NgZone },\n        { type: KeyValueDiffers },\n        { type: ElementRef },\n        { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [PERFECT_SCROLLBAR_CONFIG,] }] }\n    ]; };\n    PerfectScrollbarDirective.propDecorators = {\n        disabled: [{ type: Input }],\n        config: [{ type: Input, args: ['perfectScrollbar',] }],\n        psScrollY: [{ type: Output }],\n        psScrollX: [{ type: Output }],\n        psScrollUp: [{ type: Output }],\n        psScrollDown: [{ type: Output }],\n        psScrollLeft: [{ type: Output }],\n        psScrollRight: [{ type: Output }],\n        psYReachEnd: [{ type: Output }],\n        psYReachStart: [{ type: Output }],\n        psXReachEnd: [{ type: Output }],\n        psXReachStart: [{ type: Output }]\n    };\nPerfectScrollbarDirective.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: PerfectScrollbarDirective, selectors: [[\"\", \"perfectScrollbar\", \"\"]], factory: function PerfectScrollbarDirective_Factory(t) { return new (t || PerfectScrollbarDirective)(ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(KeyValueDiffers), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(PERFECT_SCROLLBAR_CONFIG, 8)); }, inputs: { disabled: \"disabled\", config: [\"perfectScrollbar\", \"config\"] }, outputs: { psScrollY: \"psScrollY\", psScrollX: \"psScrollX\", psScrollUp: \"psScrollUp\", psScrollDown: \"psScrollDown\", psScrollLeft: \"psScrollLeft\", psScrollRight: \"psScrollRight\", psYReachEnd: \"psYReachEnd\", psYReachStart: \"psYReachStart\", psXReachEnd: \"psXReachEnd\", psXReachStart: \"psXReachStart\" }, exportAs: [\"ngxPerfectScrollbar\"], features: [ɵngcc0.ɵɵNgOnChangesFeature()] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(PerfectScrollbarDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[perfectScrollbar]',\n                exportAs: 'ngxPerfectScrollbar'\n            }]\n    }], function () { return [{ type: NgZone }, { type: KeyValueDiffers }, { type: ElementRef }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [PERFECT_SCROLLBAR_CONFIG]\n            }] }]; }, { zone: [], differs: [], elementRef: [], platformId: [], defaults: [], instance: [], ro: [], timeout: [], animation: [], configDiff: [], ngDestroy: [], disabled: [{\n            type: Input\n        }], psScrollY: [{\n            type: Output\n        }], psScrollX: [{\n            type: Output\n        }], psScrollUp: [{\n            type: Output\n        }], psScrollDown: [{\n            type: Output\n        }], psScrollLeft: [{\n            type: Output\n        }], psScrollRight: [{\n            type: Output\n        }], psYReachEnd: [{\n            type: Output\n        }], psYReachStart: [{\n            type: Output\n        }], psXReachEnd: [{\n            type: Output\n        }], psXReachStart: [{\n            type: Output\n        }], ngOnInit: [], ngOnDestroy: [], ngDoCheck: [], ngOnChanges: [], ps: [], update: [], geometry: [], position: [], scrollable: [], scrollTo: [], scrollToX: [], scrollToY: [], scrollToTop: [], scrollToLeft: [], scrollToRight: [], scrollToBottom: [], scrollToElement: [], animateScrolling: [], config: [{\n            type: Input,\n            args: ['perfectScrollbar']\n        }] });\n    return PerfectScrollbarDirective;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar PerfectScrollbarComponent = /** @class */ (function () {\n    function PerfectScrollbarComponent(zone, cdRef, platformId) {\n        this.zone = zone;\n        this.cdRef = cdRef;\n        this.platformId = platformId;\n        this.states = {};\n        this.indicatorX = false;\n        this.indicatorY = false;\n        this.interaction = false;\n        this.scrollPositionX = 0;\n        this.scrollPositionY = 0;\n        this.scrollDirectionX = 0;\n        this.scrollDirectionY = 0;\n        this.usePropagationX = false;\n        this.usePropagationY = false;\n        this.allowPropagationX = false;\n        this.allowPropagationY = false;\n        this.stateTimeout = null;\n        this.ngDestroy = new Subject();\n        this.stateUpdate = new Subject();\n        this.disabled = false;\n        this.usePSClass = true;\n        this.autoPropagation = false;\n        this.scrollIndicators = false;\n        this.psScrollY = new EventEmitter();\n        this.psScrollX = new EventEmitter();\n        this.psScrollUp = new EventEmitter();\n        this.psScrollDown = new EventEmitter();\n        this.psScrollLeft = new EventEmitter();\n        this.psScrollRight = new EventEmitter();\n        this.psYReachEnd = new EventEmitter();\n        this.psYReachStart = new EventEmitter();\n        this.psXReachEnd = new EventEmitter();\n        this.psXReachStart = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    PerfectScrollbarComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (isPlatformBrowser(this.platformId)) {\n            this.stateUpdate\n                .pipe(takeUntil(this.ngDestroy), distinctUntilChanged((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            function (a, b) { return (a === b && !_this.stateTimeout); })))\n                .subscribe((/**\n             * @param {?} state\n             * @return {?}\n             */\n            function (state) {\n                if (_this.stateTimeout && typeof window !== 'undefined') {\n                    window.clearTimeout(_this.stateTimeout);\n                    _this.stateTimeout = null;\n                }\n                if (state === 'x' || state === 'y') {\n                    _this.interaction = false;\n                    if (state === 'x') {\n                        _this.indicatorX = false;\n                        _this.states.left = false;\n                        _this.states.right = false;\n                        if (_this.autoPropagation && _this.usePropagationX) {\n                            _this.allowPropagationX = false;\n                        }\n                    }\n                    else if (state === 'y') {\n                        _this.indicatorY = false;\n                        _this.states.top = false;\n                        _this.states.bottom = false;\n                        if (_this.autoPropagation && _this.usePropagationY) {\n                            _this.allowPropagationY = false;\n                        }\n                    }\n                }\n                else {\n                    if (state === 'left' || state === 'right') {\n                        _this.states.left = false;\n                        _this.states.right = false;\n                        _this.states[state] = true;\n                        if (_this.autoPropagation && _this.usePropagationX) {\n                            _this.indicatorX = true;\n                        }\n                    }\n                    else if (state === 'top' || state === 'bottom') {\n                        _this.states.top = false;\n                        _this.states.bottom = false;\n                        _this.states[state] = true;\n                        if (_this.autoPropagation && _this.usePropagationY) {\n                            _this.indicatorY = true;\n                        }\n                    }\n                    if (_this.autoPropagation && typeof window !== 'undefined') {\n                        _this.stateTimeout = window.setTimeout((/**\n                         * @return {?}\n                         */\n                        function () {\n                            _this.indicatorX = false;\n                            _this.indicatorY = false;\n                            _this.stateTimeout = null;\n                            if (_this.interaction && (_this.states.left || _this.states.right)) {\n                                _this.allowPropagationX = true;\n                            }\n                            if (_this.interaction && (_this.states.top || _this.states.bottom)) {\n                                _this.allowPropagationY = true;\n                            }\n                            _this.cdRef.markForCheck();\n                        }), 500);\n                    }\n                }\n                _this.cdRef.markForCheck();\n                _this.cdRef.detectChanges();\n            }));\n            this.zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () {\n                if (_this.directiveRef) {\n                    /** @type {?} */\n                    var element = _this.directiveRef.elementRef.nativeElement;\n                    fromEvent(element, 'wheel')\n                        .pipe(takeUntil(_this.ngDestroy))\n                        .subscribe((/**\n                     * @param {?} event\n                     * @return {?}\n                     */\n                    function (event) {\n                        if (!_this.disabled && _this.autoPropagation) {\n                            /** @type {?} */\n                            var scrollDeltaX = event.deltaX;\n                            /** @type {?} */\n                            var scrollDeltaY = event.deltaY;\n                            _this.checkPropagation(event, scrollDeltaX, scrollDeltaY);\n                        }\n                    }));\n                    fromEvent(element, 'touchmove')\n                        .pipe(takeUntil(_this.ngDestroy))\n                        .subscribe((/**\n                     * @param {?} event\n                     * @return {?}\n                     */\n                    function (event) {\n                        if (!_this.disabled && _this.autoPropagation) {\n                            /** @type {?} */\n                            var scrollPositionX = event.touches[0].clientX;\n                            /** @type {?} */\n                            var scrollPositionY = event.touches[0].clientY;\n                            /** @type {?} */\n                            var scrollDeltaX = scrollPositionX - _this.scrollPositionX;\n                            /** @type {?} */\n                            var scrollDeltaY = scrollPositionY - _this.scrollPositionY;\n                            _this.checkPropagation(event, scrollDeltaX, scrollDeltaY);\n                            _this.scrollPositionX = scrollPositionX;\n                            _this.scrollPositionY = scrollPositionY;\n                        }\n                    }));\n                    merge(fromEvent(element, 'ps-scroll-x')\n                        .pipe(mapTo('x')), fromEvent(element, 'ps-scroll-y')\n                        .pipe(mapTo('y')), fromEvent(element, 'ps-x-reach-end')\n                        .pipe(mapTo('right')), fromEvent(element, 'ps-y-reach-end')\n                        .pipe(mapTo('bottom')), fromEvent(element, 'ps-x-reach-start')\n                        .pipe(mapTo('left')), fromEvent(element, 'ps-y-reach-start')\n                        .pipe(mapTo('top')))\n                        .pipe(takeUntil(_this.ngDestroy))\n                        .subscribe((/**\n                     * @param {?} state\n                     * @return {?}\n                     */\n                    function (state) {\n                        if (!_this.disabled && (_this.autoPropagation || _this.scrollIndicators)) {\n                            _this.stateUpdate.next(state);\n                        }\n                    }));\n                }\n            }));\n            window.setTimeout((/**\n             * @return {?}\n             */\n            function () {\n                PerfectScrollbarEvents.forEach((/**\n                 * @param {?} eventName\n                 * @return {?}\n                 */\n                function (eventName) {\n                    if (_this.directiveRef) {\n                        _this.directiveRef[eventName] = _this[eventName];\n                    }\n                }));\n            }), 0);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PerfectScrollbarComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (isPlatformBrowser(this.platformId)) {\n            this.ngDestroy.next();\n            this.ngDestroy.unsubscribe();\n            if (this.stateTimeout && typeof window !== 'undefined') {\n                window.clearTimeout(this.stateTimeout);\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PerfectScrollbarComponent.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (isPlatformBrowser(this.platformId)) {\n            if (!this.disabled && this.autoPropagation && this.directiveRef) {\n                /** @type {?} */\n                var element = this.directiveRef.elementRef.nativeElement;\n                this.usePropagationX = element.classList.contains('ps--active-x');\n                this.usePropagationY = element.classList.contains('ps--active-y');\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {?} event\n     * @param {?} deltaX\n     * @param {?} deltaY\n     * @return {?}\n     */\n    PerfectScrollbarComponent.prototype.checkPropagation = /**\n     * @private\n     * @param {?} event\n     * @param {?} deltaX\n     * @param {?} deltaY\n     * @return {?}\n     */\n    function (event, deltaX, deltaY) {\n        this.interaction = true;\n        /** @type {?} */\n        var scrollDirectionX = (deltaX < 0) ? -1 : 1;\n        /** @type {?} */\n        var scrollDirectionY = (deltaY < 0) ? -1 : 1;\n        if ((this.usePropagationX && this.usePropagationY) ||\n            (this.usePropagationX && (!this.allowPropagationX ||\n                (this.scrollDirectionX !== scrollDirectionX))) ||\n            (this.usePropagationY && (!this.allowPropagationY ||\n                (this.scrollDirectionY !== scrollDirectionY)))) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        if (!!deltaX) {\n            this.scrollDirectionX = scrollDirectionX;\n        }\n        if (!!deltaY) {\n            this.scrollDirectionY = scrollDirectionY;\n        }\n        this.stateUpdate.next('interaction');\n        this.cdRef.detectChanges();\n    };\n    /** @nocollapse */\n    PerfectScrollbarComponent.ctorParameters = function () { return [\n        { type: NgZone },\n        { type: ChangeDetectorRef },\n        { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n    ]; };\n    PerfectScrollbarComponent.propDecorators = {\n        disabled: [{ type: Input }],\n        usePSClass: [{ type: Input }],\n        autoPropagation: [{ type: HostBinding, args: ['class.ps-show-limits',] }, { type: Input }],\n        scrollIndicators: [{ type: HostBinding, args: ['class.ps-show-active',] }, { type: Input }],\n        config: [{ type: Input }],\n        psScrollY: [{ type: Output }],\n        psScrollX: [{ type: Output }],\n        psScrollUp: [{ type: Output }],\n        psScrollDown: [{ type: Output }],\n        psScrollLeft: [{ type: Output }],\n        psScrollRight: [{ type: Output }],\n        psYReachEnd: [{ type: Output }],\n        psYReachStart: [{ type: Output }],\n        psXReachEnd: [{ type: Output }],\n        psXReachStart: [{ type: Output }],\n        directiveRef: [{ type: ViewChild, args: [PerfectScrollbarDirective, { static: true },] }]\n    };\nPerfectScrollbarComponent.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: PerfectScrollbarComponent, selectors: [[\"perfect-scrollbar\"]], factory: function PerfectScrollbarComponent_Factory(t) { return new (t || PerfectScrollbarComponent)(ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); }, viewQuery: function PerfectScrollbarComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(PerfectScrollbarDirective, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.directiveRef = _t.first);\n    } }, hostBindings: function PerfectScrollbarComponent_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(2);\n        ɵngcc0.ɵɵstyling();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ps-show-limits\", ctx.autoPropagation);\n        ɵngcc0.ɵɵclassProp(\"ps-show-active\", ctx.scrollIndicators);\n        ɵngcc0.ɵɵstylingApply();\n    } }, inputs: { disabled: \"disabled\", usePSClass: \"usePSClass\", autoPropagation: \"autoPropagation\", scrollIndicators: \"scrollIndicators\", config: \"config\" }, outputs: { psScrollY: \"psScrollY\", psScrollX: \"psScrollX\", psScrollUp: \"psScrollUp\", psScrollDown: \"psScrollDown\", psScrollLeft: \"psScrollLeft\", psScrollRight: \"psScrollRight\", psYReachEnd: \"psYReachEnd\", psYReachStart: \"psYReachStart\", psXReachEnd: \"psXReachEnd\", psXReachStart: \"psXReachStart\" }, exportAs: [\"ngxPerfectScrollbar\"], ngContentSelectors: _c8, consts: 4, vars: 4, template: function PerfectScrollbarComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", _c0);\n        ɵngcc0.ɵɵstyling();\n        ɵngcc0.ɵɵelementStart(1, \"div\", _c1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, PerfectScrollbarComponent_div_3_Template, 5, 8, \"div\", _c2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ps\", ctx.usePSClass);\n        ɵngcc0.ɵɵstylingApply();\n        ɵngcc0.ɵɵproperty(\"perfectScrollbar\", ctx.config)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵselect(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.scrollIndicators);\n    } }, directives: [PerfectScrollbarDirective, ɵngcc1.NgIf], styles: [\"/*\\n  TODO: Remove important flags after this bug if fixed:\\n  https://github.com/angular/flex-layout/issues/381\\n*/\\n\\nperfect-scrollbar {\\n  position: relative;\\n\\n  display: block;\\n  overflow: hidden;\\n  width: 100%;\\n  height: 100%;\\n  max-width: 100%;\\n  max-height: 100%;\\n}\\n\\nperfect-scrollbar[hidden] {\\n  display: none;\\n}\\n\\nperfect-scrollbar[fxflex] {\\n  display: flex;\\n  flex-direction: column;\\n  height: auto;\\n  min-width: 0;\\n  min-height: 0;\\n\\n  -webkit-box-direction: column;\\n  -webkit-box-orient: column;\\n}\\n\\nperfect-scrollbar[fxflex] > .ps {\\n  -ms-flex: 1 1 auto;\\n\\n  flex: 1 1 auto;\\n  width: auto;\\n  height: auto;\\n  min-width: 0;\\n  min-height: 0;\\n\\n  -webkit-box-flex: 1;\\n}\\n\\nperfect-scrollbar[fxlayout] > .ps,\\nperfect-scrollbar[fxlayout] > .ps > .ps-content {\\n  display: flex;\\n\\n  -ms-flex: 1 1 auto;\\n\\n  flex: 1 1 auto;\\n  flex-direction: inherit;\\n  align-items: inherit;\\n  align-content: inherit;\\n  justify-content: inherit;\\n  width: 100%;\\n  height: 100%;\\n\\n  -webkit-box-align: inherit;\\n  -webkit-box-direction: inherit;\\n  -webkit-box-flex: 1;\\n  -webkit-box-orient: inherit;\\n  -webkit-box-pack: inherit;\\n}\\n\\nperfect-scrollbar[fxlayout='row'] > .ps,\\nperfect-scrollbar[fxlayout='row'] > .ps > .ps-content, {\\n  flex-direction: row !important;\\n\\n  -webkit-box-direction: row !important;\\n  -webkit-box-orient: row !important;\\n}\\n\\nperfect-scrollbar[fxlayout='column'] > .ps,\\nperfect-scrollbar[fxlayout='column'] > .ps > .ps-content {\\n  flex-direction: column !important;\\n\\n  -webkit-box-direction: column !important;\\n  -webkit-box-orient: column !important;\\n}\\n\\nperfect-scrollbar > .ps {\\n  position: static;\\n\\n  display: block;\\n  width: inherit;\\n  height: inherit;\\n  max-width: inherit;\\n  max-height: inherit;\\n}\\n\\nperfect-scrollbar > .ps textarea {\\n  -ms-overflow-style: scrollbar;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n\\n  display: block;\\n  overflow: hidden;\\n\\n  pointer-events: none;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-top,\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-left,\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-right,\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-bottom {\\n  position: absolute;\\n\\n  opacity: 0;\\n\\n  transition: opacity 300ms ease-in-out;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-top,\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-bottom {\\n  left: 0;\\n\\n  min-width: 100%;\\n  min-height: 24px;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-left,\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-right {\\n  top: 0;\\n\\n  min-width: 24px;\\n  min-height: 100%;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-top {\\n  top: 0;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-left {\\n  left: 0;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-right {\\n  right: 0;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-bottom {\\n  bottom: 0;\\n}\\n\\nperfect-scrollbar > .ps.ps--active-y > .ps__rail-y {\\n  top: 0 !important;\\n  right: 0 !important;\\n  left: auto !important;\\n\\n  width: 10px;\\n\\n  cursor: default;\\n\\n  transition:\\n    width 200ms linear,\\n    opacity 200ms linear,\\n    background-color 200ms linear;\\n}\\n\\nperfect-scrollbar > .ps.ps--active-y > .ps__rail-y:hover,\\nperfect-scrollbar > .ps.ps--active-y > .ps__rail-y.ps--clicking {\\n  width: 15px;\\n}\\n\\nperfect-scrollbar > .ps.ps--active-x > .ps__rail-x {\\n  top: auto !important;\\n  bottom: 0 !important;\\n  left: 0 !important;\\n\\n  height: 10px;\\n\\n  cursor: default;\\n\\n  transition:\\n    height 200ms linear,\\n    opacity 200ms linear,\\n    background-color 200ms linear;\\n}\\n\\nperfect-scrollbar > .ps.ps--active-x > .ps__rail-x:hover,\\nperfect-scrollbar > .ps.ps--active-x > .ps__rail-x.ps--clicking {\\n  height: 15px;\\n}\\n\\nperfect-scrollbar > .ps.ps--active-x.ps--active-y > .ps__rail-y {\\n  margin: 0 0 10px;\\n}\\n\\nperfect-scrollbar > .ps.ps--active-x.ps--active-y > .ps__rail-x {\\n  margin: 0 10px 0 0;\\n}\\n\\nperfect-scrollbar > .ps.ps--scrolling-y > .ps__rail-y,\\nperfect-scrollbar > .ps.ps--scrolling-x > .ps__rail-x {\\n  opacity: 0.9;\\n\\n  background-color: #eee;\\n}\\n\\nperfect-scrollbar.ps-show-always > .ps.ps--active-y > .ps__rail-y,\\nperfect-scrollbar.ps-show-always > .ps.ps--active-x > .ps__rail-x {\\n  opacity: 0.6;\\n}\\n\\nperfect-scrollbar.ps-show-active > .ps.ps--active-y > .ps-overlay:not(.ps-at-top) .ps-indicator-top {\\n  opacity: 1;\\n\\n  background: linear-gradient(to bottom, rgba(255, 255, 255, 0.5) 0%, rgba(255, 255, 255, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active > .ps.ps--active-y > .ps-overlay:not(.ps-at-bottom) .ps-indicator-bottom {\\n  opacity: 1;\\n\\n  background: linear-gradient(to top, rgba(255, 255, 255, 0.5) 0%, rgba(255, 255, 255, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active > .ps.ps--active-x > .ps-overlay:not(.ps-at-left) .ps-indicator-left {\\n  opacity: 1;\\n\\n  background: linear-gradient(to right, rgba(255, 255, 255, 0.5) 0%, rgba(255, 255, 255, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active > .ps.ps--active-x > .ps-overlay:not(.ps-at-right) .ps-indicator-right {\\n  opacity: 1;\\n\\n  background: linear-gradient(to left, rgba(255, 255, 255, 0.5) 0%, rgba(255, 255, 255, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-y > .ps-overlay.ps-at-top .ps-indicator-top {\\n  background: linear-gradient(to bottom, rgba(170, 170, 170, 0.5) 0%, rgba(170, 170, 170, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-y > .ps-overlay.ps-at-bottom .ps-indicator-bottom {\\n  background: linear-gradient(to top, rgba(170, 170, 170, 0.5) 0%, rgba(170, 170, 170, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-x > .ps-overlay.ps-at-left .ps-indicator-left {\\n  background: linear-gradient(to right, rgba(170, 170, 170, 0.5) 0%, rgba(170, 170, 170, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-x > .ps-overlay.ps-at-right .ps-indicator-right {\\n  background: linear-gradient(to left, rgba(170, 170, 170, 0.5) 0%, rgba(170, 170, 170, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-y > .ps-overlay.ps-at-top .ps-indicator-top.ps-indicator-show,\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-y > .ps-overlay.ps-at-bottom .ps-indicator-bottom.ps-indicator-show,\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-x > .ps-overlay.ps-at-left .ps-indicator-left.ps-indicator-show,\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-x > .ps-overlay.ps-at-right .ps-indicator-right.ps-indicator-show {\\n  opacity: 1;\\n}\\n\", \"/*\\n * Container style\\n */\\n.ps {\\n  overflow: hidden !important;\\n  overflow-anchor: none;\\n  -ms-overflow-style: none;\\n  touch-action: auto;\\n  -ms-touch-action: auto;\\n}\\n\\n/*\\n * Scrollbar rail styles\\n */\\n.ps__rail-x {\\n  display: none;\\n  opacity: 0;\\n  transition: background-color .2s linear, opacity .2s linear;\\n  -webkit-transition: background-color .2s linear, opacity .2s linear;\\n  height: 15px;\\n  /* there must be 'bottom' or 'top' for ps__rail-x */\\n  bottom: 0px;\\n  /* please don't change 'position' */\\n  position: absolute;\\n}\\n\\n.ps__rail-y {\\n  display: none;\\n  opacity: 0;\\n  transition: background-color .2s linear, opacity .2s linear;\\n  -webkit-transition: background-color .2s linear, opacity .2s linear;\\n  width: 15px;\\n  /* there must be 'right' or 'left' for ps__rail-y */\\n  right: 0;\\n  /* please don't change 'position' */\\n  position: absolute;\\n}\\n\\n.ps--active-x > .ps__rail-x,\\n.ps--active-y > .ps__rail-y {\\n  display: block;\\n  background-color: transparent;\\n}\\n\\n.ps:hover > .ps__rail-x,\\n.ps:hover > .ps__rail-y,\\n.ps--focus > .ps__rail-x,\\n.ps--focus > .ps__rail-y,\\n.ps--scrolling-x > .ps__rail-x,\\n.ps--scrolling-y > .ps__rail-y {\\n  opacity: 0.6;\\n}\\n\\n.ps .ps__rail-x:hover,\\n.ps .ps__rail-y:hover,\\n.ps .ps__rail-x:focus,\\n.ps .ps__rail-y:focus,\\n.ps .ps__rail-x.ps--clicking,\\n.ps .ps__rail-y.ps--clicking {\\n  background-color: #eee;\\n  opacity: 0.9;\\n}\\n\\n/*\\n * Scrollbar thumb styles\\n */\\n.ps__thumb-x {\\n  background-color: #aaa;\\n  border-radius: 6px;\\n  transition: background-color .2s linear, height .2s ease-in-out;\\n  -webkit-transition: background-color .2s linear, height .2s ease-in-out;\\n  height: 6px;\\n  /* there must be 'bottom' for ps__thumb-x */\\n  bottom: 2px;\\n  /* please don't change 'position' */\\n  position: absolute;\\n}\\n\\n.ps__thumb-y {\\n  background-color: #aaa;\\n  border-radius: 6px;\\n  transition: background-color .2s linear, width .2s ease-in-out;\\n  -webkit-transition: background-color .2s linear, width .2s ease-in-out;\\n  width: 6px;\\n  /* there must be 'right' for ps__thumb-y */\\n  right: 2px;\\n  /* please don't change 'position' */\\n  position: absolute;\\n}\\n\\n.ps__rail-x:hover > .ps__thumb-x,\\n.ps__rail-x:focus > .ps__thumb-x,\\n.ps__rail-x.ps--clicking .ps__thumb-x {\\n  background-color: #999;\\n  height: 11px;\\n}\\n\\n.ps__rail-y:hover > .ps__thumb-y,\\n.ps__rail-y:focus > .ps__thumb-y,\\n.ps__rail-y.ps--clicking .ps__thumb-y {\\n  background-color: #999;\\n  width: 11px;\\n}\\n\\n/* MS supports */\\n@supports (-ms-overflow-style: none) {\\n  .ps {\\n    overflow: auto !important;\\n  }\\n}\\n\\n@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {\\n  .ps {\\n    overflow: auto !important;\\n  }\\n}\\n\"], encapsulation: 2 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(PerfectScrollbarComponent, [{\n        type: Component,\n        args: [{\n                selector: 'perfect-scrollbar',\n                exportAs: 'ngxPerfectScrollbar',\n                template: \"<div style=\\\"position: static;\\\" [class.ps]=\\\"usePSClass\\\" [perfectScrollbar]=\\\"config\\\" [disabled]=\\\"disabled\\\">\\n  <div class=\\\"ps-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <div *ngIf=\\\"scrollIndicators\\\" class=\\\"ps-overlay\\\" [class.ps-at-top]=\\\"states.top\\\" [class.ps-at-left]=\\\"states.left\\\" [class.ps-at-right]=\\\"states.right\\\" [class.ps-at-bottom]=\\\"states.bottom\\\">\\n    <div class=\\\"ps-indicator-top\\\" [class.ps-indicator-show]=\\\"indicatorY && interaction\\\"></div>\\n    <div class=\\\"ps-indicator-left\\\" [class.ps-indicator-show]=\\\"indicatorX && interaction\\\"></div>\\n    <div class=\\\"ps-indicator-right\\\" [class.ps-indicator-show]=\\\"indicatorX && interaction\\\"></div>\\n    <div class=\\\"ps-indicator-bottom\\\" [class.ps-indicator-show]=\\\"indicatorY && interaction\\\"></div>\\n  </div>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                styles: [\"/*\\n  TODO: Remove important flags after this bug if fixed:\\n  https://github.com/angular/flex-layout/issues/381\\n*/\\n\\nperfect-scrollbar {\\n  position: relative;\\n\\n  display: block;\\n  overflow: hidden;\\n  width: 100%;\\n  height: 100%;\\n  max-width: 100%;\\n  max-height: 100%;\\n}\\n\\nperfect-scrollbar[hidden] {\\n  display: none;\\n}\\n\\nperfect-scrollbar[fxflex] {\\n  display: flex;\\n  flex-direction: column;\\n  height: auto;\\n  min-width: 0;\\n  min-height: 0;\\n\\n  -webkit-box-direction: column;\\n  -webkit-box-orient: column;\\n}\\n\\nperfect-scrollbar[fxflex] > .ps {\\n  -ms-flex: 1 1 auto;\\n\\n  flex: 1 1 auto;\\n  width: auto;\\n  height: auto;\\n  min-width: 0;\\n  min-height: 0;\\n\\n  -webkit-box-flex: 1;\\n}\\n\\nperfect-scrollbar[fxlayout] > .ps,\\nperfect-scrollbar[fxlayout] > .ps > .ps-content {\\n  display: flex;\\n\\n  -ms-flex: 1 1 auto;\\n\\n  flex: 1 1 auto;\\n  flex-direction: inherit;\\n  align-items: inherit;\\n  align-content: inherit;\\n  justify-content: inherit;\\n  width: 100%;\\n  height: 100%;\\n\\n  -webkit-box-align: inherit;\\n  -webkit-box-direction: inherit;\\n  -webkit-box-flex: 1;\\n  -webkit-box-orient: inherit;\\n  -webkit-box-pack: inherit;\\n}\\n\\nperfect-scrollbar[fxlayout='row'] > .ps,\\nperfect-scrollbar[fxlayout='row'] > .ps > .ps-content, {\\n  flex-direction: row !important;\\n\\n  -webkit-box-direction: row !important;\\n  -webkit-box-orient: row !important;\\n}\\n\\nperfect-scrollbar[fxlayout='column'] > .ps,\\nperfect-scrollbar[fxlayout='column'] > .ps > .ps-content {\\n  flex-direction: column !important;\\n\\n  -webkit-box-direction: column !important;\\n  -webkit-box-orient: column !important;\\n}\\n\\nperfect-scrollbar > .ps {\\n  position: static;\\n\\n  display: block;\\n  width: inherit;\\n  height: inherit;\\n  max-width: inherit;\\n  max-height: inherit;\\n}\\n\\nperfect-scrollbar > .ps textarea {\\n  -ms-overflow-style: scrollbar;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n\\n  display: block;\\n  overflow: hidden;\\n\\n  pointer-events: none;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-top,\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-left,\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-right,\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-bottom {\\n  position: absolute;\\n\\n  opacity: 0;\\n\\n  transition: opacity 300ms ease-in-out;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-top,\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-bottom {\\n  left: 0;\\n\\n  min-width: 100%;\\n  min-height: 24px;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-left,\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-right {\\n  top: 0;\\n\\n  min-width: 24px;\\n  min-height: 100%;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-top {\\n  top: 0;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-left {\\n  left: 0;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-right {\\n  right: 0;\\n}\\n\\nperfect-scrollbar > .ps > .ps-overlay .ps-indicator-bottom {\\n  bottom: 0;\\n}\\n\\nperfect-scrollbar > .ps.ps--active-y > .ps__rail-y {\\n  top: 0 !important;\\n  right: 0 !important;\\n  left: auto !important;\\n\\n  width: 10px;\\n\\n  cursor: default;\\n\\n  transition:\\n    width 200ms linear,\\n    opacity 200ms linear,\\n    background-color 200ms linear;\\n}\\n\\nperfect-scrollbar > .ps.ps--active-y > .ps__rail-y:hover,\\nperfect-scrollbar > .ps.ps--active-y > .ps__rail-y.ps--clicking {\\n  width: 15px;\\n}\\n\\nperfect-scrollbar > .ps.ps--active-x > .ps__rail-x {\\n  top: auto !important;\\n  bottom: 0 !important;\\n  left: 0 !important;\\n\\n  height: 10px;\\n\\n  cursor: default;\\n\\n  transition:\\n    height 200ms linear,\\n    opacity 200ms linear,\\n    background-color 200ms linear;\\n}\\n\\nperfect-scrollbar > .ps.ps--active-x > .ps__rail-x:hover,\\nperfect-scrollbar > .ps.ps--active-x > .ps__rail-x.ps--clicking {\\n  height: 15px;\\n}\\n\\nperfect-scrollbar > .ps.ps--active-x.ps--active-y > .ps__rail-y {\\n  margin: 0 0 10px;\\n}\\n\\nperfect-scrollbar > .ps.ps--active-x.ps--active-y > .ps__rail-x {\\n  margin: 0 10px 0 0;\\n}\\n\\nperfect-scrollbar > .ps.ps--scrolling-y > .ps__rail-y,\\nperfect-scrollbar > .ps.ps--scrolling-x > .ps__rail-x {\\n  opacity: 0.9;\\n\\n  background-color: #eee;\\n}\\n\\nperfect-scrollbar.ps-show-always > .ps.ps--active-y > .ps__rail-y,\\nperfect-scrollbar.ps-show-always > .ps.ps--active-x > .ps__rail-x {\\n  opacity: 0.6;\\n}\\n\\nperfect-scrollbar.ps-show-active > .ps.ps--active-y > .ps-overlay:not(.ps-at-top) .ps-indicator-top {\\n  opacity: 1;\\n\\n  background: linear-gradient(to bottom, rgba(255, 255, 255, 0.5) 0%, rgba(255, 255, 255, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active > .ps.ps--active-y > .ps-overlay:not(.ps-at-bottom) .ps-indicator-bottom {\\n  opacity: 1;\\n\\n  background: linear-gradient(to top, rgba(255, 255, 255, 0.5) 0%, rgba(255, 255, 255, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active > .ps.ps--active-x > .ps-overlay:not(.ps-at-left) .ps-indicator-left {\\n  opacity: 1;\\n\\n  background: linear-gradient(to right, rgba(255, 255, 255, 0.5) 0%, rgba(255, 255, 255, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active > .ps.ps--active-x > .ps-overlay:not(.ps-at-right) .ps-indicator-right {\\n  opacity: 1;\\n\\n  background: linear-gradient(to left, rgba(255, 255, 255, 0.5) 0%, rgba(255, 255, 255, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-y > .ps-overlay.ps-at-top .ps-indicator-top {\\n  background: linear-gradient(to bottom, rgba(170, 170, 170, 0.5) 0%, rgba(170, 170, 170, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-y > .ps-overlay.ps-at-bottom .ps-indicator-bottom {\\n  background: linear-gradient(to top, rgba(170, 170, 170, 0.5) 0%, rgba(170, 170, 170, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-x > .ps-overlay.ps-at-left .ps-indicator-left {\\n  background: linear-gradient(to right, rgba(170, 170, 170, 0.5) 0%, rgba(170, 170, 170, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-x > .ps-overlay.ps-at-right .ps-indicator-right {\\n  background: linear-gradient(to left, rgba(170, 170, 170, 0.5) 0%, rgba(170, 170, 170, 0) 100%);\\n}\\n\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-y > .ps-overlay.ps-at-top .ps-indicator-top.ps-indicator-show,\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-y > .ps-overlay.ps-at-bottom .ps-indicator-bottom.ps-indicator-show,\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-x > .ps-overlay.ps-at-left .ps-indicator-left.ps-indicator-show,\\nperfect-scrollbar.ps-show-active.ps-show-limits > .ps.ps--active-x > .ps-overlay.ps-at-right .ps-indicator-right.ps-indicator-show {\\n  opacity: 1;\\n}\\n\", \"/*\\n * Container style\\n */\\n.ps {\\n  overflow: hidden !important;\\n  overflow-anchor: none;\\n  -ms-overflow-style: none;\\n  touch-action: auto;\\n  -ms-touch-action: auto;\\n}\\n\\n/*\\n * Scrollbar rail styles\\n */\\n.ps__rail-x {\\n  display: none;\\n  opacity: 0;\\n  transition: background-color .2s linear, opacity .2s linear;\\n  -webkit-transition: background-color .2s linear, opacity .2s linear;\\n  height: 15px;\\n  /* there must be 'bottom' or 'top' for ps__rail-x */\\n  bottom: 0px;\\n  /* please don't change 'position' */\\n  position: absolute;\\n}\\n\\n.ps__rail-y {\\n  display: none;\\n  opacity: 0;\\n  transition: background-color .2s linear, opacity .2s linear;\\n  -webkit-transition: background-color .2s linear, opacity .2s linear;\\n  width: 15px;\\n  /* there must be 'right' or 'left' for ps__rail-y */\\n  right: 0;\\n  /* please don't change 'position' */\\n  position: absolute;\\n}\\n\\n.ps--active-x > .ps__rail-x,\\n.ps--active-y > .ps__rail-y {\\n  display: block;\\n  background-color: transparent;\\n}\\n\\n.ps:hover > .ps__rail-x,\\n.ps:hover > .ps__rail-y,\\n.ps--focus > .ps__rail-x,\\n.ps--focus > .ps__rail-y,\\n.ps--scrolling-x > .ps__rail-x,\\n.ps--scrolling-y > .ps__rail-y {\\n  opacity: 0.6;\\n}\\n\\n.ps .ps__rail-x:hover,\\n.ps .ps__rail-y:hover,\\n.ps .ps__rail-x:focus,\\n.ps .ps__rail-y:focus,\\n.ps .ps__rail-x.ps--clicking,\\n.ps .ps__rail-y.ps--clicking {\\n  background-color: #eee;\\n  opacity: 0.9;\\n}\\n\\n/*\\n * Scrollbar thumb styles\\n */\\n.ps__thumb-x {\\n  background-color: #aaa;\\n  border-radius: 6px;\\n  transition: background-color .2s linear, height .2s ease-in-out;\\n  -webkit-transition: background-color .2s linear, height .2s ease-in-out;\\n  height: 6px;\\n  /* there must be 'bottom' for ps__thumb-x */\\n  bottom: 2px;\\n  /* please don't change 'position' */\\n  position: absolute;\\n}\\n\\n.ps__thumb-y {\\n  background-color: #aaa;\\n  border-radius: 6px;\\n  transition: background-color .2s linear, width .2s ease-in-out;\\n  -webkit-transition: background-color .2s linear, width .2s ease-in-out;\\n  width: 6px;\\n  /* there must be 'right' for ps__thumb-y */\\n  right: 2px;\\n  /* please don't change 'position' */\\n  position: absolute;\\n}\\n\\n.ps__rail-x:hover > .ps__thumb-x,\\n.ps__rail-x:focus > .ps__thumb-x,\\n.ps__rail-x.ps--clicking .ps__thumb-x {\\n  background-color: #999;\\n  height: 11px;\\n}\\n\\n.ps__rail-y:hover > .ps__thumb-y,\\n.ps__rail-y:focus > .ps__thumb-y,\\n.ps__rail-y.ps--clicking .ps__thumb-y {\\n  background-color: #999;\\n  width: 11px;\\n}\\n\\n/* MS supports */\\n@supports (-ms-overflow-style: none) {\\n  .ps {\\n    overflow: auto !important;\\n  }\\n}\\n\\n@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {\\n  .ps {\\n    overflow: auto !important;\\n  }\\n}\\n\"]\n            }]\n    }], function () { return [{ type: NgZone }, { type: ChangeDetectorRef }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, { zone: [], cdRef: [], platformId: [], states: [], indicatorX: [], indicatorY: [], interaction: [], scrollPositionX: [], scrollPositionY: [], scrollDirectionX: [], scrollDirectionY: [], usePropagationX: [], usePropagationY: [], allowPropagationX: [], allowPropagationY: [], stateTimeout: [], ngDestroy: [], stateUpdate: [], disabled: [{\n            type: Input\n        }], usePSClass: [{\n            type: Input\n        }], autoPropagation: [{\n            type: HostBinding,\n            args: ['class.ps-show-limits']\n        }, {\n            type: Input\n        }], scrollIndicators: [{\n            type: HostBinding,\n            args: ['class.ps-show-active']\n        }, {\n            type: Input\n        }], psScrollY: [{\n            type: Output\n        }], psScrollX: [{\n            type: Output\n        }], psScrollUp: [{\n            type: Output\n        }], psScrollDown: [{\n            type: Output\n        }], psScrollLeft: [{\n            type: Output\n        }], psScrollRight: [{\n            type: Output\n        }], psYReachEnd: [{\n            type: Output\n        }], psYReachStart: [{\n            type: Output\n        }], psXReachEnd: [{\n            type: Output\n        }], psXReachStart: [{\n            type: Output\n        }], ngOnInit: [], ngOnDestroy: [], ngDoCheck: [], checkPropagation: [], config: [{\n            type: Input\n        }], directiveRef: [{\n            type: ViewChild,\n            args: [PerfectScrollbarDirective, { static: true }]\n        }] });\n    return PerfectScrollbarComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar PerfectScrollbarModule = /** @class */ (function () {\n    function PerfectScrollbarModule() {\n    }\nPerfectScrollbarModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: PerfectScrollbarModule });\nPerfectScrollbarModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function PerfectScrollbarModule_Factory(t) { return new (t || PerfectScrollbarModule)(); }, imports: [[CommonModule],\n        CommonModule] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(PerfectScrollbarModule, { declarations: function () { return [PerfectScrollbarComponent,\n        PerfectScrollbarDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [CommonModule,\n        PerfectScrollbarComponent,\n        PerfectScrollbarDirective]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(PerfectScrollbarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [PerfectScrollbarComponent, PerfectScrollbarDirective],\n                exports: [CommonModule, PerfectScrollbarComponent, PerfectScrollbarDirective]\n            }]\n    }], function () { return []; }, null);\n    return PerfectScrollbarModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Geometry, PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarComponent, PerfectScrollbarConfig, PerfectScrollbarDirective, PerfectScrollbarModule, Position };\n\n//# sourceMappingURL=ngx-perfect-scrollbar.es5.js.map","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js';\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","export default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","export default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = parsePatterns.findIndex(function (pattern) {\n        return pattern.test(string);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(string);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}","import formatDistance from './_lib/formatDistance/index.js';\nimport formatLong from './_lib/formatLong/index.js';\nimport formatRelative from './_lib/formatRelative/index.js';\nimport localize from './_lib/localize/index.js';\nimport match from './_lib/match/index.js';\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js';\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js';\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js';\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ContentChild, Directive, ElementRef, Input, TemplateRef, ChangeDetectionStrategy, Component, IterableDiffers, ViewContainerRef, ViewEncapsulation, Attribute, ChangeDetectorRef, ContentChildren, Inject, isDevMode, Optional, ViewChild, InjectionToken, NgModule } from '@angular/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { isDataSource } from '@angular/cdk/collections';\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"role\", \"columnheader\", 1, \"cdk-header-cell\"];\nconst _c1 = [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"];\nconst _c2 = [\"role\", \"gridcell\", 1, \"cdk-cell\"];\nconst _c3 = [\"role\", \"row\", 1, \"cdk-header-row\"];\nconst _c4 = [\"cdkCellOutlet\", \"\"];\nconst _c5 = [\"role\", \"row\", 1, \"cdk-footer-row\"];\nconst _c6 = [\"role\", \"row\", 1, \"cdk-row\"];\nconst _c7 = [1, \"cdk-table\"];\nconst _c8 = [\"headerRowOutlet\", \"\"];\nconst _c9 = [\"rowOutlet\", \"\"];\nconst _c10 = [\"footerRowOutlet\", \"\"];\nconst _c11 = [[[\"caption\"]]];\nconst _c12 = [\"caption\"];\nconst _c13 = [\"cdkColumnDef\", \"\"];\nconst _c14 = [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"];\nconst _c15 = [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"];\nconst _c16 = [\"cdk-header-cell\", \"\"];\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", _c16);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r100 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r100.justify);\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r100.headerText, \" \");\n} }\nconst _c17 = [\"cdk-cell\", \"\"];\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", _c17);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r102 = ctx.$implicit;\n    const ctx_r101 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r101.justify);\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r101.dataAccessor(data_r102, ctx_r101.name), \" \");\n} }\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /**\n             * Whether the sticky input has changed since it was last checked.\n             */\n            this._hasStickyChanged = false;\n        }\n        /**\n         * Whether sticky positioning should be applied.\n         * @return {?}\n         */\n        get sticky() { return this._sticky; }\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set sticky(v) {\n            /** @type {?} */\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /**\n         * Whether the sticky value has changed since this was last called.\n         * @return {?}\n         */\n        hasStickyChanged() {\n            /** @type {?} */\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /**\n         * Resets the dirty check for cases where the sticky state has been used without checking.\n         * @return {?}\n         */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]], factory: function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellDef]' }]\n    }], function () { return [{ type: TemplateRef }]; }, { constructor: [], template: [] });\n/** @nocollapse */\nCdkCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]], factory: function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkHeaderCellDef]' }]\n    }], function () { return [{ type: TemplateRef }]; }, { constructor: [], template: [] });\n/** @nocollapse */\nCdkHeaderCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]], factory: function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkFooterCellDef]' }]\n    }], function () { return [{ type: TemplateRef }]; }, { constructor: [], template: [] });\n/** @nocollapse */\nCdkFooterCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n// Boilerplate for applying mixins to CdkColumnDef.\n/**\n * \\@docs-private\n */\nclass CdkColumnDefBase {\n}\n/** @type {?} */\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    constructor() {\n        super(...arguments);\n        this._stickyEnd = false;\n    }\n    /**\n     * Unique name for this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        // If the directive is set without a name (updated programatically), then this setter will\n        // trigger with an empty string and should not overwrite the programatically set value.\n        if (!name) {\n            return;\n        }\n        this._name = name;\n        this.cssClassFriendlyName = name.replace(/[^a-z0-9_-]/ig, '-');\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     * @return {?}\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set stickyEnd(v) {\n        /** @type {?} */\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n}\nCdkColumnDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], factory: function CdkColumnDef_Factory(t) { return ɵCdkColumnDef_BaseFactory(t || CdkColumnDef); }, contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵCdkColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(CdkColumnDef);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkColumnDef]',\n                inputs: ['sticky'],\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\n            }]\n    }], null, { constructor: [], _stickyEnd: [], name: [{\n            type: Input,\n            args: ['cdkColumnDef']\n        }], name: [], _name: [], cssClassFriendlyName: [], stickyEnd: [{\n            type: Input,\n            args: ['stickyEnd']\n        }], stickyEnd: [], _hasStickyChanged: [], cell: [{\n            type: ContentChild,\n            args: [CdkCellDef, { static: false }]\n        }], headerCell: [{\n            type: ContentChild,\n            args: [CdkHeaderCellDef, { static: false }]\n        }], footerCell: [{\n            type: ContentChild,\n            args: [CdkFooterCellDef, { static: false }]\n        }] });\nCdkColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\n    cell: [{ type: ContentChild, args: [CdkCellDef, { static: false },] }],\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef, { static: false },] }],\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef, { static: false },] }]\n};\n/**\n * Base class for the cells. Adds a CSS classname that identifies the column it renders in.\n */\nclass BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        /** @type {?} */\n        const columnClassName = `cdk-column-${columnDef.cssClassFriendlyName}`;\n        elementRef.nativeElement.classList.add(columnClassName);\n    }\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass CdkHeaderCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], factory: function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ElementRef)); }, hostBindings: function CdkHeaderCell_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c0);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\n                host: {\n                    'class': 'cdk-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ElementRef }]; }, { constructor: [] });\n/** @nocollapse */\nCdkHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass CdkFooterCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkFooterCell.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], factory: function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ElementRef)); }, hostBindings: function CdkFooterCell_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c1);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                host: {\n                    'class': 'cdk-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ElementRef }]; }, { constructor: [] });\n/** @nocollapse */\nCdkFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/**\n * Cell template container that adds the right classes and role.\n */\nclass CdkCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkCell.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], factory: function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ElementRef)); }, hostBindings: function CdkCell_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c2);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-cell, td[cdk-cell]',\n                host: {\n                    'class': 'cdk-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ElementRef }]; }, { constructor: [] });\n/** @nocollapse */\nCdkCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @type {?}\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n * @abstract\n */\nclass BaseRowDef {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            /** @type {?} */\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     * @return {?}\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /**\n     * Gets this row def's relevant cell template from the provided column def.\n     * @param {?} column\n     * @return {?}\n     */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/**\n * \\@docs-private\n */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        super(template, _differs);\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], factory: function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(TemplateRef), ɵngcc0.ɵɵdirectiveInject(IterableDiffers)); }, inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkHeaderRowDef]',\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\n            }]\n    }], function () { return [{ type: TemplateRef }, { type: IterableDiffers }]; }, { constructor: [], ngOnChanges: [] });\n/** @nocollapse */\nCdkHeaderRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/**\n * \\@docs-private\n */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        super(template, _differs);\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], factory: function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(TemplateRef), ɵngcc0.ɵɵdirectiveInject(IterableDiffers)); }, inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkFooterRowDef]',\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\n            }]\n    }], function () { return [{ type: TemplateRef }, { type: IterableDiffers }]; }, { constructor: [], ngOnChanges: [] });\n/** @nocollapse */\nCdkFooterRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        super(template, _differs);\n    }\n}\nCdkRowDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], factory: function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(TemplateRef), ɵngcc0.ɵɵdirectiveInject(IterableDiffers)); }, inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkRowDef]',\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\n            }]\n    }], function () { return [{ type: TemplateRef }, { type: IterableDiffers }]; }, { constructor: [] });\n/** @nocollapse */\nCdkRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n/**\n * Outlet for rendering cells inside of a row or header row.\n * \\@docs-private\n */\nclass CdkCellOutlet {\n    /**\n     * @param {?} _viewContainer\n     */\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\nCdkCellOutlet.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]], factory: function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ViewContainerRef)); } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellOutlet]' }]\n    }], function () { return [{ type: ViewContainerRef }]; }, { constructor: [], _viewContainer: [], ngOnDestroy: [] });\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\n/** @nocollapse */\nCdkCellOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], factory: function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); }, hostBindings: function CdkHeaderRow_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c3);\n    } }, consts: 1, vars: 0, template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, _c4);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\n        type: Component,\n        args: [{ selector: 'cdk-header-row, tr[cdk-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null);\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkFooterRow {\n}\nCdkFooterRow.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], factory: function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); }, hostBindings: function CdkFooterRow_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c5);\n    } }, consts: 1, vars: 0, template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, _c4);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\n        type: Component,\n        args: [{ selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null);\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkRow {\n}\nCdkRow.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], factory: function CdkRow_Factory(t) { return new (t || CdkRow)(); }, hostBindings: function CdkRow_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c6);\n    } }, consts: 1, vars: 0, template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, _c4);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkRow, [{\n        type: Component,\n        args: [{ selector: 'cdk-row, tr[cdk-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * List of all possible directions that can be used for sticky positioning.\n * \\@docs-private\n * @type {?}\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * \\@docs-private\n */\nclass StickyStyler {\n    /**\n     * @param {?} _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param {?} _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param {?} direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param {?=} _isBrowser Whether the table is currently being rendered on the server or the client.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _isBrowser = true) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._isBrowser = _isBrowser;\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param {?} rows The list of rows that should be cleared from sticking in the provided directions\n     * @param {?} stickyDirections The directions that should no longer be set as sticky on the rows.\n     * @return {?}\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            this._removeStickyStyle(row, stickyDirections);\n            for (let i = 0; i < row.children.length; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                this._removeStickyStyle(cell, stickyDirections);\n            }\n        }\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param {?} rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param {?} stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param {?} stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @return {?}\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates) {\n        /** @type {?} */\n        const hasStickyColumns = stickyStartStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state)) || stickyEndStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state));\n        if (!rows.length || !hasStickyColumns || !this._isBrowser) {\n            return;\n        }\n        /** @type {?} */\n        const firstRow = rows[0];\n        /** @type {?} */\n        const numCells = firstRow.children.length;\n        /** @type {?} */\n        const cellWidths = this._getCellWidths(firstRow);\n        /** @type {?} */\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        /** @type {?} */\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        /** @type {?} */\n        const isRtl = this.direction === 'rtl';\n        for (const row of rows) {\n            for (let i = 0; i < numCells; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                if (stickyStartStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'right' : 'left', startPositions[i]);\n                }\n                if (stickyEndStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'left' : 'right', endPositions[i]);\n                }\n            }\n        }\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param {?} rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param {?} stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param {?} position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     * @return {?}\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on.\n        /** @type {?} */\n        const rows = position === 'bottom' ? rowsToStick.reverse() : rowsToStick;\n        /** @type {?} */\n        let stickyHeight = 0;\n        for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n            if (!stickyStates[rowIndex]) {\n                continue;\n            }\n            /** @type {?} */\n            const row = rows[rowIndex];\n            if (this._isNativeHtmlTable) {\n                for (let j = 0; j < row.children.length; j++) {\n                    /** @type {?} */\n                    const cell = (/** @type {?} */ (row.children[j]));\n                    this._addStickyStyle(cell, position, stickyHeight);\n                }\n            }\n            else {\n                // Flex does not respect the stick positioning on the cells, needs to be applied to the row.\n                // If this is applied on a native table, Safari causes the header to fly in wrong direction.\n                this._addStickyStyle(row, position, stickyHeight);\n            }\n            if (rowIndex === rows.length - 1) {\n                // prevent unnecessary reflow from getBoundingClientRect()\n                return;\n            }\n            stickyHeight += row.getBoundingClientRect().height;\n        }\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     * @param {?} tableElement\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        /** @type {?} */\n        const tfoot = (/** @type {?} */ (tableElement.querySelector('tfoot')));\n        if (stickyStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => !state))) {\n            this._removeStickyStyle(tfoot, ['bottom']);\n        }\n        else {\n            this._addStickyStyle(tfoot, 'bottom', 0);\n        }\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     * @param {?} element\n     * @param {?} stickyDirections\n     * @return {?}\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n        }\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        /** @type {?} */\n        const hasDirection = STICKY_DIRECTIONS.some((/**\n         * @param {?} dir\n         * @return {?}\n         */\n        dir => !!element.style[dir]));\n        if (!hasDirection) {\n            element.style.position = '';\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     * @param {?} element\n     * @param {?} dir\n     * @param {?} dirValue\n     * @return {?}\n     */\n    _addStickyStyle(element, dir, dirValue) {\n        element.classList.add(this._stickCellCss);\n        element.style[dir] = `${dirValue}px`;\n        element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        element.style.zIndex = this._getCalculatedZIndex(element);\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     * @param {?} element\n     * @return {?}\n     */\n    _getCalculatedZIndex(element) {\n        /** @type {?} */\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        /** @type {?} */\n        let zIndex = 0;\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /**\n     * Gets the widths for each cell in the provided row.\n     * @param {?} row\n     * @return {?}\n     */\n    _getCellWidths(row) {\n        /** @type {?} */\n        const cellWidths = [];\n        /** @type {?} */\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            /** @type {?} */\n            let cell = (/** @type {?} */ (firstRowCells[i]));\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * \\@docs-private\n * @param {?} id Id whose lookup failed.\n * @return {?}\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * \\@docs-private\n * @param {?} name\n * @return {?}\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * \\@docs-private\n * @param {?} data\n * @return {?}\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * \\@docs-private\n */\nclass DataRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]], factory: function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ElementRef)); } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[rowOutlet]' }]\n    }], function () { return [{ type: ViewContainerRef }, { type: ElementRef }]; }, { constructor: [], viewContainer: [], elementRef: [] });\n/** @nocollapse */\nDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * \\@docs-private\n */\nclass HeaderRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]], factory: function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ElementRef)); } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[headerRowOutlet]' }]\n    }], function () { return [{ type: ViewContainerRef }, { type: ElementRef }]; }, { constructor: [], viewContainer: [], elementRef: [] });\n/** @nocollapse */\nHeaderRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * \\@docs-private\n */\nclass FooterRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]], factory: function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ElementRef)); } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[footerRowOutlet]' }]\n    }], function () { return [{ type: ViewContainerRef }, { type: ElementRef }]; }, { constructor: [], viewContainer: [], elementRef: [] });\n/** @nocollapse */\nFooterRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n * @template T\n */\nclass CdkTable {\n    /**\n     * @param {?} _differs\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} role\n     * @param {?} _dir\n     * @param {?} _document\n     * @param {?} _platform\n     */\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *it's* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *it's* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *it's* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *it's* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        this._multiTemplateDataRows = false;\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * \\@docs-private\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     * @return {?}\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set trackBy(fn) {\n        if (isDevMode() && fn != null && typeof fn !== 'function' && (/** @type {?} */ (console)) &&\n            (/** @type {?} */ (console.warn))) {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     * @return {?}\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    /**\n     * @param {?} dataSource\n     * @return {?}\n     */\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     * @return {?}\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((/**\n         * @param {?} _i\n         * @param {?} dataRow\n         * @return {?}\n         */\n        (_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        this._renderUpdatedColumns();\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        this._checkStickyStates();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     * @return {?}\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        /** @type {?} */\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            return;\n        }\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} prevIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, prevIndex, currentIndex) => {\n            if (record.previousIndex == null) {\n                this._insertRow(record.item, (/** @type {?} */ (currentIndex)));\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove((/** @type {?} */ (prevIndex)));\n            }\n            else {\n                /** @type {?} */\n                const view = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (prevIndex)))));\n                viewContainer.move((/** @type {?} */ (view)), currentIndex);\n            }\n        }));\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const rowView = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (record.currentIndex)))));\n            rowView.context.$implicit = record.item.data;\n        }));\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Sets the header row definition to be used. Overrides the header row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the header row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addHeaderRowDef` and `removeHeaderRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    setHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs = new Set([headerRowDef]);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Sets the footer row definition to be used. Overrides the footer row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the footer row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addFooterRowDef` and `removeFooterRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    setFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs = new Set([footerRowDef]);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Adds a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /**\n     * Removes a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /**\n     * Adds a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /**\n     * Removes a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /**\n     * Adds a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Removes a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Adds a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Removes a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyHeaderRowStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._headerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyFooterRowStyles() {\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._footerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     * @return {?}\n     */\n    updateStickyColumnStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // Clear the left and right positioning from all columns in the table across all rows since\n        // sticky columns span across all table sections (header, data, footer)\n        this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((/**\n         * @param {?} headerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        }));\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            // Collect all the rows rendered with this row definition.\n            /** @type {?} */\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        }));\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((/**\n         * @param {?} footerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        }));\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     * @private\n     * @return {?}\n     */\n    _getAllRenderRows() {\n        /** @type {?} */\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        /** @type {?} */\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            /** @type {?} */\n            let data = this._data[i];\n            /** @type {?} */\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                /** @type {?} */\n                let renderRow = renderRowsForData[j];\n                /** @type {?} */\n                const cache = (/** @type {?} */ (this._cachedRenderRowsMap.get(renderRow.data)));\n                if (cache.has(renderRow.rowDef)) {\n                    (/** @type {?} */ (cache.get(renderRow.rowDef))).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     * @private\n     * @param {?} data\n     * @param {?} dataIndex\n     * @param {?=} cache\n     * @return {?}\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        /** @type {?} */\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            /** @type {?} */\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? (/** @type {?} */ (cache.get(rowDef))) : [];\n            if (cachedRenderRows.length) {\n                /** @type {?} */\n                const dataRow = (/** @type {?} */ (cachedRenderRows.shift()));\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        }));\n    }\n    /**\n     * Update the map containing the content's column definitions.\n     * @private\n     * @return {?}\n     */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        /** @type {?} */\n        const columnDefs = mergeQueryListAndSet(this._contentColumnDefs, this._customColumnDefs);\n        columnDefs.forEach((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => {\n            if (this._columnDefsByName.has(columnDef.name)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        }));\n    }\n    /**\n     * Update the list of all available row definitions that can be used.\n     * @private\n     * @return {?}\n     */\n    _cacheRowDefs() {\n        this._headerRowDefs =\n            mergeQueryListAndSet(this._contentHeaderRowDefs, this._customHeaderRowDefs);\n        this._footerRowDefs =\n            mergeQueryListAndSet(this._contentFooterRowDefs, this._customFooterRowDefs);\n        this._rowDefs = mergeQueryListAndSet(this._contentRowDefs, this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        /** @type {?} */\n        const defaultRowDefs = this._rowDefs.filter((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => !def.when));\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     * @private\n     * @return {?}\n     */\n    _renderUpdatedColumns() {\n        /** @type {?} */\n        const columnsDiffReducer = (/**\n         * @param {?} acc\n         * @param {?} def\n         * @return {?}\n         */\n        (acc, def) => acc || !!def.getColumnsDiff());\n        // Force re-render data rows if the list of column definitions have changed.\n        if (this._rowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed..\n        if (this._headerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderHeaderRows();\n        }\n        if (this._footerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderFooterRows();\n        }\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     * @private\n     * @param {?} dataSource\n     * @return {?}\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /**\n     * Set up a subscription for the data provided by the data source.\n     * @private\n     * @return {?}\n     */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        /** @type {?} */\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (this.dataSource instanceof Observable) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy)).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data || [];\n            this.renderRows();\n        }));\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._headerRowOutlet, def, i)));\n        this.updateStickyHeaderRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._footerRowOutlet, def, i)));\n        this.updateStickyFooterRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Adds the sticky column styles for the rows according to the columns' stick states.\n     * @private\n     * @param {?} rows\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _addStickyColumnStyles(rows, rowDef) {\n        /** @type {?} */\n        const columnDefs = Array.from(rowDef.columns || []).map((/**\n         * @param {?} columnName\n         * @return {?}\n         */\n        columnName => {\n            /** @type {?} */\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return (/** @type {?} */ (columnDef));\n        }));\n        /** @type {?} */\n        const stickyStartStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.sticky));\n        /** @type {?} */\n        const stickyEndStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.stickyEnd));\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates);\n    }\n    /**\n     * Gets the list of rows that have been rendered in the row outlet.\n     * @param {?} rowOutlet\n     * @return {?}\n     */\n    _getRenderedRows(rowOutlet) {\n        /** @type {?} */\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            /** @type {?} */\n            const viewRef = ((/** @type {?} */ ((/** @type {?} */ (rowOutlet.viewContainer.get(i))))));\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     * @param {?} data\n     * @param {?} dataIndex\n     * @return {?}\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        /** @type {?} */\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => !def.when || def.when(dataIndex, data)));\n        }\n        else {\n            /** @type {?} */\n            let rowDef = this._rowDefs.find((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => def.when && def.when(dataIndex, data))) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    /**\n     * Create the embedded view for the data row template and place it in the correct index location\n     * within the data row view container.\n     * @private\n     * @param {?} renderRow\n     * @param {?} renderIndex\n     * @return {?}\n     */\n    _insertRow(renderRow, renderIndex) {\n        /** @type {?} */\n        const rowDef = renderRow.rowDef;\n        /** @type {?} */\n        const context = { $implicit: renderRow.data };\n        this._renderRow(this._rowOutlet, rowDef, renderIndex, context);\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     * @private\n     * @param {?} outlet\n     * @param {?} rowDef\n     * @param {?} index\n     * @param {?=} context\n     * @return {?}\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     * @private\n     * @return {?}\n     */\n    _updateRowIndexContext() {\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            /** @type {?} */\n            const viewRef = (/** @type {?} */ (viewContainer.get(renderIndex)));\n            /** @type {?} */\n            const context = (/** @type {?} */ (viewRef.context));\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /**\n     * Gets the column definitions for the provided row def.\n     * @private\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, (/**\n         * @param {?} columnId\n         * @return {?}\n         */\n        columnId => {\n            /** @type {?} */\n            const column = this._columnDefsByName.get(columnId);\n            if (!column) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        }));\n    }\n    /**\n     * Adds native table sections (e.g. tbody) and moves the row outlets into them.\n     * @private\n     * @return {?}\n     */\n    _applyNativeTableSections() {\n        /** @type {?} */\n        const documentFragment = this._document.createDocumentFragment();\n        /** @type {?} */\n        const sections = [\n            { tag: 'thead', outlet: this._headerRowOutlet },\n            { tag: 'tbody', outlet: this._rowOutlet },\n            { tag: 'tfoot', outlet: this._footerRowOutlet },\n        ];\n        for (const section of sections) {\n            /** @type {?} */\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            element.appendChild(section.outlet.elementRef.nativeElement);\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     * @private\n     * @return {?}\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     * @private\n     * @return {?}\n     */\n    _checkStickyStates() {\n        /** @type {?} */\n        const stickyCheckReducer = (/**\n         * @param {?} acc\n         * @param {?} d\n         * @return {?}\n         */\n        (acc, d) => {\n            return acc || d.hasStickyChanged();\n        });\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     * @private\n     * @return {?}\n     */\n    _setupStickyStyler() {\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._platform.isBrowser);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        }));\n    }\n}\nCdkTable.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], factory: function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(Platform)); }, contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, false);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, false);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, false);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(DataRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(HeaderRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(FooterRowOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\n    } }, hostBindings: function CdkTable_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c7);\n    } }, inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\" }, exportAs: [\"cdkTable\"], ngContentSelectors: _c12, consts: 4, vars: 0, template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c11);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, _c8);\n        ɵngcc0.ɵɵelementContainer(2, _c9);\n        ɵngcc0.ɵɵelementContainer(3, _c10);\n    } }, directives: [HeaderRowOutlet,\n        DataRowOutlet,\n        FooterRowOutlet], encapsulation: 2 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkTable, [{\n        type: Component,\n        args: [{ selector: 'cdk-table, table[cdk-table]',\n                exportAs: 'cdkTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'cdk-table'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\n                // The view for `MatTable` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: IterableDiffers }, { type: ChangeDetectorRef }, { type: ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['role']\n            }] }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: Platform }]; }, { constructor: [], _differs: [], _changeDetectorRef: [], _elementRef: [], _dir: [], _platform: [], _onDestroy: [], _columnDefsByName: [], _customColumnDefs: [], _customRowDefs: [], _customHeaderRowDefs: [], _customFooterRowDefs: [], _headerRowDefChanged: [], _footerRowDefChanged: [], _cachedRenderRowsMap: [], stickyCssClass: [], _multiTemplateDataRows: [], viewChange: [], _document: [], _isNativeHtmlTable: [], trackBy: [{\n            type: Input\n        }], trackBy: [], _trackByFn: [], dataSource: [{\n            type: Input\n        }], dataSource: [], multiTemplateDataRows: [{\n            type: Input\n        }], multiTemplateDataRows: [], ngOnInit: [], _dataDiffer: [], ngAfterContentChecked: [], ngOnDestroy: [], renderRows: [], _renderRows: [], setHeaderRowDef: [], setFooterRowDef: [], addColumnDef: [], removeColumnDef: [], addRowDef: [], removeRowDef: [], addHeaderRowDef: [], removeHeaderRowDef: [], addFooterRowDef: [], removeFooterRowDef: [], updateStickyHeaderRowStyles: [], updateStickyFooterRowStyles: [], updateStickyColumnStyles: [], _getAllRenderRows: [], _getRenderRowsForData: [], _cacheColumnDefs: [], _cacheRowDefs: [], _headerRowDefs: [], _footerRowDefs: [], _rowDefs: [], _defaultRowDef: [], _renderUpdatedColumns: [], _switchDataSource: [], _data: [], _renderChangeSubscription: [], _dataSource: [], _observeRenderChanges: [], _forceRenderHeaderRows: [], _forceRenderFooterRows: [], _addStickyColumnStyles: [], _getRenderedRows: [], _getRowDefs: [], _insertRow: [], _renderRow: [], _updateRowIndexContext: [], _getCellTemplates: [], _applyNativeTableSections: [], _forceRenderDataRows: [], _checkStickyStates: [], _setupStickyStyler: [], _stickyStyler: [], _rowOutlet: [{\n            type: ViewChild,\n            args: [DataRowOutlet, { static: true }]\n        }], _headerRowOutlet: [{\n            type: ViewChild,\n            args: [HeaderRowOutlet, { static: true }]\n        }], _footerRowOutlet: [{\n            type: ViewChild,\n            args: [FooterRowOutlet, { static: true }]\n        }], _contentColumnDefs: [{\n            type: ContentChildren,\n            args: [CdkColumnDef]\n        }], _contentRowDefs: [{\n            type: ContentChildren,\n            args: [CdkRowDef]\n        }], _contentHeaderRowDefs: [{\n            type: ContentChildren,\n            args: [CdkHeaderRowDef]\n        }], _contentFooterRowDefs: [{\n            type: ContentChildren,\n            args: [CdkFooterRowDef]\n        }] });\n/** @nocollapse */\nCdkTable.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\nCdkTable.propDecorators = {\n    trackBy: [{ type: Input }],\n    dataSource: [{ type: Input }],\n    multiTemplateDataRows: [{ type: Input }],\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef,] }],\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef,] }],\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef,] }],\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef,] }]\n};\n/**\n * Utility function that gets a merged list of the entries in a QueryList and values of a Set.\n * @template T\n * @param {?} queryList\n * @param {?} set\n * @return {?}\n */\nfunction mergeQueryListAndSet(queryList, set) {\n    return queryList.toArray().concat(Array.from(set));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to specify the text column options.\n * @type {?}\n */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass CdkTextColumn {\n    /**\n     * @param {?} _table\n     * @param {?} _options\n     */\n    constructor(_table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /**\n         * Alignment of the cell values.\n         */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /**\n     * Column name that should be used to reference this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((/**\n                 * @param {?} data\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (data, name) => ((/** @type {?} */ (data)))[name]));\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     * @return {?}\n     */\n    _createDefaultHeaderText() {\n        /** @type {?} */\n        const name = this.name;\n        if (isDevMode() && !name) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /**\n     * Synchronizes the column definition name with the text column name.\n     * @private\n     * @return {?}\n     */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], factory: function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); }, viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkColumnDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkCellDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkHeaderCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, consts: 3, vars: 0, template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, _c13);\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 2, \"th\", _c14);\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 2, \"td\", _c15);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [CdkColumnDef,\n        CdkHeaderCellDef,\n        CdkCellDef,\n        CdkHeaderCell,\n        CdkCell], encapsulation: 2 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\n        type: Component,\n        args: [{ selector: 'cdk-text-column',\n                template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: CdkTable, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [TEXT_COLUMN_OPTIONS]\n            }] }]; }, { constructor: [], _table: [], _options: [], justify: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], name: [], _name: [], ngOnInit: [], headerText: [{\n            type: Input\n        }], dataAccessor: [{\n            type: Input\n        }], ngOnDestroy: [], _createDefaultHeaderText: [], _syncColumnDefName: [], columnDef: [{\n            type: ViewChild,\n            args: [CdkColumnDef, { static: true }]\n        }], cell: [{\n            type: ViewChild,\n            args: [CdkCellDef, { static: true }]\n        }], headerCell: [{\n            type: ViewChild,\n            args: [CdkHeaderCellDef, { static: true }]\n        }] });\n/** @nocollapse */\nCdkTextColumn.ctorParameters = () => [\n    { type: CdkTable, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\n];\nCdkTextColumn.propDecorators = {\n    name: [{ type: Input }],\n    headerText: [{ type: Input }],\n    dataAccessor: [{ type: Input }],\n    justify: [{ type: Input }],\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\nCdkTableModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); }, imports: [[CommonModule]] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: function () { return [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn]; }, imports: function () { return [CommonModule]; }, exports: function () { return [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CDK_TABLE_TEMPLATE, CdkTable, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, BaseCdkCell, CdkHeaderCell, CdkFooterCell, CdkCell, CDK_ROW_TEMPLATE, BaseRowDef, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkCellOutlet, CdkHeaderRow, CdkFooterRow, CdkRow, CdkTableModule, STICKY_DIRECTIONS, StickyStyler, mixinHasStickyInput, TEXT_COLUMN_OPTIONS, CdkTextColumn };\n\n//# sourceMappingURL=table.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CDK_TABLE_TEMPLATE, CdkTable, CdkCell, CdkCellDef, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkHeaderCell, CdkHeaderCellDef, CDK_ROW_TEMPLATE, CdkFooterRow, CdkFooterRowDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation, Directive, ElementRef, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, combineLatest, merge, of, Subscription, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/table';\n\nconst _c0 = [1, \"mat-table\"];\nconst _c1 = [\"headerRowOutlet\", \"\"];\nconst _c2 = [\"rowOutlet\", \"\"];\nconst _c3 = [\"footerRowOutlet\", \"\"];\nconst _c4 = [[[\"caption\"]]];\nconst _c5 = [\"caption\"];\nconst _c6 = [\"role\", \"columnheader\", 1, \"mat-header-cell\"];\nconst _c7 = [\"role\", \"gridcell\", 1, \"mat-footer-cell\"];\nconst _c8 = [\"role\", \"gridcell\", 1, \"mat-cell\"];\nconst _c9 = [\"role\", \"row\", 1, \"mat-header-row\"];\nconst _c10 = [\"cdkCellOutlet\", \"\"];\nconst _c11 = [\"role\", \"row\", 1, \"mat-footer-row\"];\nconst _c12 = [\"role\", \"row\", 1, \"mat-row\"];\nconst _c13 = [\"matColumnDef\", \"\"];\nconst _c14 = [\"mat-header-cell\", \"\", 3, \"text-align\", 4, \"matHeaderCellDef\"];\nconst _c15 = [\"mat-cell\", \"\", 3, \"text-align\", 4, \"matCellDef\"];\nconst _c16 = [\"mat-header-cell\", \"\"];\nfunction MatTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", _c16);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r103 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r103.justify);\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r103.headerText, \" \");\n} }\nconst _c17 = [\"mat-cell\", \"\"];\nfunction MatTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", _c17);\n    ɵngcc0.ɵɵstyling();\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r105 = ctx.$implicit;\n    const ctx_r104 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r104.justify);\n    ɵngcc0.ɵɵstylingApply();\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r104.dataAccessor(data_r105, ctx_r104.name), \" \");\n} }\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /**\n         * Overrides the sticky CSS class set by the `CdkTable`.\n         */\n        this.stickyCssClass = 'mat-table-sticky';\n    }\n}\nMatTable.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatTable, selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]], factory: function MatTable_Factory(t) { return ɵMatTable_BaseFactory(t || MatTable); }, hostBindings: function MatTable_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c0);\n    } }, exportAs: [\"matTable\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTable, useExisting: MatTable }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, consts: 4, vars: 0, template: function MatTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, _c1);\n        ɵngcc0.ɵɵelementContainer(2, _c2);\n        ɵngcc0.ɵɵelementContainer(3, _c3);\n    } }, directives: [ɵngcc1.HeaderRowOutlet, ɵngcc1.DataRowOutlet, ɵngcc1.FooterRowOutlet], styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-footer-row,mat-row{min-height:48px}mat-footer-row,mat-header-row,mat-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-footer-row::after,mat-header-row::after,mat-row::after{display:inline-block;min-height:inherit;content:''}mat-cell:first-of-type,mat-footer-cell:first-of-type,mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-footer-cell:last-of-type,mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-footer-cell,mat-header-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-footer-row,tr.mat-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}td.mat-cell,td.mat-footer-cell,th.mat-header-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type,th.mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type,[dir=rtl] th.mat-header-cell:first-of-type{padding-left:0;padding-right:24px}td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type,th.mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type,[dir=rtl] th.mat-header-cell:last-of-type{padding-right:0;padding-left:24px}\"], encapsulation: 2 });\nconst ɵMatTable_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTable);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatTable, [{\n        type: Component,\n        args: [{ selector: 'mat-table, table[mat-table]',\n                exportAs: 'matTable',\n                template: CDK_TABLE_TEMPLATE,\n                styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-footer-row,mat-row{min-height:48px}mat-footer-row,mat-header-row,mat-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-footer-row::after,mat-header-row::after,mat-row::after{display:inline-block;min-height:inherit;content:''}mat-cell:first-of-type,mat-footer-cell:first-of-type,mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-footer-cell:last-of-type,mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-footer-cell,mat-header-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-footer-row,tr.mat-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}td.mat-cell,td.mat-footer-cell,th.mat-header-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type,th.mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type,[dir=rtl] th.mat-header-cell:first-of-type{padding-left:0;padding-right:24px}td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type,th.mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type,[dir=rtl] th.mat-header-cell:last-of-type{padding-right:0;padding-left:24px}\"],\n                host: {\n                    'class': 'mat-table'\n                },\n                providers: [{ provide: CdkTable, useExisting: MatTable }],\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], null, { constructor: [], stickyCssClass: [] });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatCellDef, selectors: [[\"\", \"matCellDef\", \"\"]], factory: function MatCellDef_Factory(t) { return ɵMatCellDef_BaseFactory(t || MatCellDef); }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkCellDef, useExisting: MatCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCellDef);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matCellDef]',\n                providers: [{ provide: CdkCellDef, useExisting: MatCellDef }]\n            }]\n    }], null, null);\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCellDef, selectors: [[\"\", \"matHeaderCellDef\", \"\"]], factory: function MatHeaderCellDef_Factory(t) { return ɵMatHeaderCellDef_BaseFactory(t || MatHeaderCellDef); }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCellDef);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatHeaderCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderCellDef]',\n                providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]\n            }]\n    }], null, null);\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCellDef, selectors: [[\"\", \"matFooterCellDef\", \"\"]], factory: function MatFooterCellDef_Factory(t) { return ɵMatFooterCellDef_BaseFactory(t || MatFooterCellDef); }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCellDef);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatFooterCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterCellDef]',\n                providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]\n            }]\n    }], null, null);\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n}\nMatColumnDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatColumnDef, selectors: [[\"\", \"matColumnDef\", \"\"]], factory: function MatColumnDef_Factory(t) { return ɵMatColumnDef_BaseFactory(t || MatColumnDef); }, inputs: { name: [\"matColumnDef\", \"name\"], sticky: \"sticky\", stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkColumnDef, useExisting: MatColumnDef },\n            { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatColumnDef);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matColumnDef]',\n                providers: [\n                    { provide: CdkColumnDef, useExisting: MatColumnDef },\n                    { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n                ]\n            }]\n    }], null, { name: [{\n            type: Input,\n            args: ['matColumnDef']\n        }], sticky: [{\n            type: Input\n        }], stickyEnd: [{\n            type: Input\n        }] });\nMatColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['matColumnDef',] }],\n    sticky: [{ type: Input }],\n    stickyEnd: [{ type: Input }]\n};\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass MatHeaderCell extends CdkHeaderCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatHeaderCell.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCell, selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]], factory: function MatHeaderCell_Factory(t) { return new (t || MatHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ElementRef)); }, hostBindings: function MatHeaderCell_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c6);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-header-cell, th[mat-header-cell]',\n                host: {\n                    'class': 'mat-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ElementRef }]; }, { constructor: [] });\n/** @nocollapse */\nMatHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass MatFooterCell extends CdkFooterCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatFooterCell.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCell, selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]], factory: function MatFooterCell_Factory(t) { return new (t || MatFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ElementRef)); }, hostBindings: function MatFooterCell_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c7);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-footer-cell, td[mat-footer-cell]',\n                host: {\n                    'class': 'mat-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ElementRef }]; }, { constructor: [] });\n/** @nocollapse */\nMatFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/**\n * Cell template container that adds the right classes and role.\n */\nclass MatCell extends CdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatCell.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatCell, selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]], factory: function MatCell_Factory(t) { return new (t || MatCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ElementRef)); }, hostBindings: function MatCell_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c8);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-cell, td[mat-cell]',\n                host: {\n                    'class': 'mat-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ElementRef }]; }, { constructor: [] });\n/** @nocollapse */\nMatCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderRowDef, selectors: [[\"\", \"matHeaderRowDef\", \"\"]], factory: function MatHeaderRowDef_Factory(t) { return ɵMatHeaderRowDef_BaseFactory(t || MatHeaderRowDef); }, inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRowDef);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderRowDef]',\n                providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky']\n            }]\n    }], null, null);\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatFooterRowDef, selectors: [[\"\", \"matFooterRowDef\", \"\"]], factory: function MatFooterRowDef_Factory(t) { return ɵMatFooterRowDef_BaseFactory(t || MatFooterRowDef); }, inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRowDef);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterRowDef]',\n                providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky']\n            }]\n    }], null, null);\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: MatRowDef, selectors: [[\"\", \"matRowDef\", \"\"]], factory: function MatRowDef_Factory(t) { return ɵMatRowDef_BaseFactory(t || MatRowDef); }, inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRowDef, useExisting: MatRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRowDef);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matRowDef]',\n                providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen']\n            }]\n    }], null, null);\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatHeaderRow, selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]], factory: function MatHeaderRow_Factory(t) { return ɵMatHeaderRow_BaseFactory(t || MatHeaderRow); }, hostBindings: function MatHeaderRow_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c9);\n    } }, exportAs: [\"matHeaderRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], consts: 1, vars: 0, template: function MatHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, _c10);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatHeaderRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRow);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatHeaderRow, [{\n        type: Component,\n        args: [{ selector: 'mat-header-row, tr[mat-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matHeaderRow',\n                providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]\n            }]\n    }], null, null);\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatFooterRow, selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]], factory: function MatFooterRow_Factory(t) { return ɵMatFooterRow_BaseFactory(t || MatFooterRow); }, hostBindings: function MatFooterRow_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c11);\n    } }, exportAs: [\"matFooterRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRow, useExisting: MatFooterRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], consts: 1, vars: 0, template: function MatFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, _c10);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatFooterRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRow);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatFooterRow, [{\n        type: Component,\n        args: [{ selector: 'mat-footer-row, tr[mat-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matFooterRow',\n                providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }]\n            }]\n    }], null, null);\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatRow extends CdkRow {\n}\nMatRow.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatRow, selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]], factory: function MatRow_Factory(t) { return ɵMatRow_BaseFactory(t || MatRow); }, hostBindings: function MatRow_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c12);\n    } }, exportAs: [\"matRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRow, useExisting: MatRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], consts: 1, vars: 0, template: function MatRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, _c10);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRow);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatRow, [{\n        type: Component,\n        args: [{ selector: 'mat-row, tr[mat-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRow',\n                providers: [{ provide: CdkRow, useExisting: MatRow }]\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: MatTextColumn, selectors: [[\"mat-text-column\"]], factory: function MatTextColumn_Factory(t) { return ɵMatTextColumn_BaseFactory(t || MatTextColumn); }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], consts: 3, vars: 0, template: function MatTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, _c13);\n        ɵngcc0.ɵɵtemplate(1, MatTextColumn_th_1_Template, 2, 2, \"th\", _c14);\n        ɵngcc0.ɵɵtemplate(2, MatTextColumn_td_2_Template, 2, 2, \"td\", _c15);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [MatColumnDef,\n        MatHeaderCellDef,\n        MatCellDef,\n        MatHeaderCell,\n        MatCell], encapsulation: 2 });\nconst ɵMatTextColumn_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextColumn);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatTextColumn, [{\n        type: Component,\n        args: [{ selector: 'mat-text-column',\n                template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: MatTableModule });\nMatTableModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function MatTableModule_Factory(t) { return new (t || MatTableModule)(); }, imports: [[\n            CdkTableModule,\n            CommonModule,\n            MatCommonModule,\n        ]] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(MatTableModule, { declarations: function () { return [MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; }, imports: function () { return [CdkTableModule,\n        CommonModule,\n        MatCommonModule]; }, exports: function () { return [MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CdkTableModule,\n                    CommonModule,\n                    MatCommonModule,\n                ],\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n * @type {?}\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n * @template T\n */\nclass MatTableDataSource extends DataSource {\n    /**\n     * @param {?=} initialData\n     */\n    constructor(initialData = []) {\n        super();\n        /**\n         * Stream emitting render data to the table (depends on ordered data changes).\n         */\n        this._renderData = new BehaviorSubject([]);\n        /**\n         * Stream that emits when a new filter string is set on the data source.\n         */\n        this._filter = new BehaviorSubject('');\n        /**\n         * Used to react to internal changes of the paginator that are made by the data source itself.\n         */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = Subscription.EMPTY;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (/**\n         * @param {?} data\n         * @param {?} sortHeaderId\n         * @return {?}\n         */\n        (data, sortHeaderId) => {\n            /** @type {?} */\n            const value = ((/** @type {?} */ (data)))[sortHeaderId];\n            if (_isNumberValue(value)) {\n                /** @type {?} */\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        });\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (/**\n         * @param {?} data\n         * @param {?} sort\n         * @return {?}\n         */\n        (data, sort) => {\n            /** @type {?} */\n            const active = sort.active;\n            /** @type {?} */\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                /** @type {?} */\n                let valueA = this.sortingDataAccessor(a, active);\n                /** @type {?} */\n                let valueB = this.sortingDataAccessor(b, active);\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come first.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                /** @type {?} */\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            }));\n        });\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @return Whether the filter matches against the data\n         */\n        this.filterPredicate = (/**\n         * @param {?} data\n         * @param {?} filter\n         * @return {?}\n         */\n        (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            /** @type {?} */\n            const dataStr = Object.keys(data).reduce((/**\n             * @param {?} currentTerm\n             * @param {?} key\n             * @return {?}\n             */\n            (currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + ((/** @type {?} */ (data)))[key] + '◬';\n            }), '').toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            /** @type {?} */\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        });\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /**\n     * Array of data that should be rendered by the table, where each object represents one row.\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    set data(data) { this._data.next(data); }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     * @return {?}\n     */\n    get filter() { return this._filter.value; }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    set filter(filter) { this._filter.next(filter); }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     * @return {?}\n     */\n    get sort() { return this._sort; }\n    /**\n     * @param {?} sort\n     * @return {?}\n     */\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     * @return {?}\n     */\n    get paginator() { return this._paginator; }\n    /**\n     * @param {?} paginator\n     * @return {?}\n     */\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     * @return {?}\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        /** @type {?} */\n        const sortChange = this._sort ?\n            (/** @type {?} */ (merge(this._sort.sortChange, this._sort.initialized))) :\n            of(null);\n        /** @type {?} */\n        const pageChange = this._paginator ?\n            (/** @type {?} */ (merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized))) :\n            of(null);\n        /** @type {?} */\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        /** @type {?} */\n        const filteredData = combineLatest(dataStream, this._filter)\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._filterData(data))));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        /** @type {?} */\n        const orderedData = combineLatest(filteredData, sortChange)\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._orderData(data))));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        /** @type {?} */\n        const paginatedData = combineLatest(orderedData, pageChange)\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._pageData(data))));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => this._renderData.next(data)));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            !this.filter ? data : data.filter((/**\n             * @param {?} obj\n             * @return {?}\n             */\n            obj => this.filterPredicate(obj, this.filter)));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     * @param {?} data\n     * @return {?}\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        /** @type {?} */\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     * @param {?} filteredDataLength\n     * @return {?}\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                /** @type {?} */\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                /** @type {?} */\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        }));\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * \\@docs-private\n     * @return {?}\n     */\n    connect() { return this._renderData; }\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * \\@docs-private\n     * @return {?}\n     */\n    disconnect() { }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatTableModule, MatCellDef, MatHeaderCellDef, MatFooterCellDef, MatColumnDef, MatHeaderCell, MatFooterCell, MatCell, MatTable, MatHeaderRowDef, MatFooterRowDef, MatRowDef, MatHeaderRow, MatFooterRow, MatRow, MatTableDataSource, MatTextColumn };\n\n//# sourceMappingURL=table.js.map","import { NgModule, Directive, Input, TemplateRef, ViewContainerRef, OnInit } from '@angular/core';\n\nexport class NgLetContext {\n  $implicit: any = null;\n  ngLet: any = null;\n}\n\n@Directive({\n  selector: '[ngLet]',\n})\nexport class NgLetDirective implements OnInit {\n  private context = new NgLetContext();\n\n  @Input()\n  set ngLet(value: any) {\n    this.context.$implicit = this.context.ngLet = value;\n  }\n\n  constructor(private vcr: ViewContainerRef, private templateRef: TemplateRef<NgLetContext>) {}\n\n  ngOnInit() {\n    this.vcr.createEmbeddedView(this.templateRef, this.context);\n  }\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class NgLetContext {\n    constructor() {\n        this.$implicit = null;\n        this.ngLet = null;\n    }\n}\nexport class NgLetDirective {\n    constructor(vcr, templateRef) {\n        this.vcr = vcr;\n        this.templateRef = templateRef;\n        this.context = new NgLetContext();\n    }\n    set ngLet(value) {\n        this.context.$implicit = this.context.ngLet = value;\n    }\n    ngOnInit() {\n        this.vcr.createEmbeddedView(this.templateRef, this.context);\n    }\n}\nNgLetDirective.ngDirectiveDef = i0.ɵɵdefineDirective({ type: NgLetDirective, selectors: [[\"\", \"ngLet\", \"\"]], factory: function NgLetDirective_Factory(t) { return new (t || NgLetDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.TemplateRef)); }, inputs: { ngLet: \"ngLet\" } });\n/*@__PURE__*/ i0.ɵsetClassMetadata(NgLetDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngLet]',\n            }]\n    }], function () { return [{ type: i0.ViewContainerRef }, { type: i0.TemplateRef }]; }, { ngLet: [{\n            type: Input\n        }] });\n","var MILLISECONDS_IN_MINUTE = 60000;\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\nexport default function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = date.getTimezoneOffset();\n  date.setSeconds(0, 0);\n  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE;\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar DEFAULT_ADDITIONAL_DIGITS = 2;\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * var result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (isNaN(date) || !date) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time) || time === null) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var fullTime = timestamp + time;\n    var fullTimeDate = new Date(fullTime);\n    offset = getTimezoneOffsetInMilliseconds(fullTimeDate); // Adjust time when it's coming from DST\n\n    var fullTimeDateNextDay = new Date(fullTime);\n    fullTimeDateNextDay.setDate(fullTimeDate.getDate() + 1);\n    var offsetDiff = getTimezoneOffsetInMilliseconds(fullTimeDateNextDay) - offset;\n\n    if (offsetDiff > 0) {\n      offset += offsetDiff;\n    }\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString;\n\n  if (/:/.test(array[0])) {\n    dateStrings.date = null;\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: null\n  };\n  var year = captures[1] && parseInt(captures[1]);\n  var century = captures[2] && parseInt(captures[2]);\n  return {\n    year: century == null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return null;\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return null;\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return null; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}"]}